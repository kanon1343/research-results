2023-08-09 17:57:55 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-09 17:57:55 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-09 17:57:55 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-09 17:57:55 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/fse/Downloads/kGenProg/example/math46/kgenprog-46.toml (set by command line)
rootDir = /Users/fse/Downloads/kGenProg/example/math46 (set in config file)
productPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/main] (set in config file)
testPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.complex.ComplexTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 4 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/fse/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-09 17:58:20 [main] [INFO]  KGenProgMain - initial failed tests (2/116)
org.apache.commons.math.complex.ComplexTest.testDivideZero: expected:<(Infinity, Infinity)> but was:<(NaN, NaN)>
org.apache.commons.math.complex.ComplexTest.testAtanI: null

2023-08-09 17:58:21 [main] [INFO]  KGenProgMain - GA started
2023-08-09 17:58:21 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-09 17:58:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, build-succeeded 7, build-failed 58, syntax-invalid 3, redundant 32
Fitness: max 0.991(2), min 0.966(4), ave 0.975
Test execution time: sum 7853 ms, max 1542 ms, min 720 ms
----------------------------------------------------------------

2023-08-09 17:58:38 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-09 17:58:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 100, build-succeeded 9, build-failed 54, syntax-invalid 3, redundant 34
Fitness: max 0.991(4), min 0.966(5), ave 0.977
Test execution time: sum 5327 ms, max 709 ms, min 480 ms
----------------------------------------------------------------

2023-08-09 17:58:49 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-09 17:59:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 seconds
Variants: generated 200, build-succeeded 29, build-failed 58, syntax-invalid 7, redundant 106
Fitness: max 1(1), min 0.966(13), ave 0.978
Test execution time: sum 15045 ms, max 668 ms, min 451 ms
----------------------------------------------------------------

2023-08-09 17:59:12 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-09 17:59:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 20 seconds
Variants: generated 200, build-succeeded 36, build-failed 68, syntax-invalid 15, redundant 81
Fitness: max 0.991(12), min 0.914(1), ave 0.973
Test execution time: sum 20264 ms, max 921 ms, min 432 ms
----------------------------------------------------------------

2023-08-09 17:59:42 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-09 18:00:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 46 seconds
Variants: generated 200, build-succeeded 38, build-failed 57, syntax-invalid 28, redundant 77
Fitness: max 1(1), min 0.931(1), ave 0.977
Test execution time: sum 17665 ms, max 652 ms, min 403 ms
----------------------------------------------------------------

2023-08-09 18:00:08 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-09 18:00:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 16 seconds
Variants: generated 200, build-succeeded 46, build-failed 55, syntax-invalid 35, redundant 64
Fitness: max 0.991(31), min 0.931(2), ave 0.984
Test execution time: sum 21350 ms, max 581 ms, min 411 ms
----------------------------------------------------------------

2023-08-09 18:00:37 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-09 18:01:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 47 seconds
Variants: generated 200, build-succeeded 47, build-failed 58, syntax-invalid 30, redundant 65
Fitness: max 1(3), min 0.966(8), ave 0.986
Test execution time: sum 22878 ms, max 862 ms, min 399 ms
----------------------------------------------------------------

2023-08-09 18:01:08 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-09 18:01:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 16 seconds
Variants: generated 200, build-succeeded 47, build-failed 45, syntax-invalid 41, redundant 67
Fitness: max 1(2), min 0.922(1), ave 0.983
Test execution time: sum 22232 ms, max 823 ms, min 416 ms
----------------------------------------------------------------

2023-08-09 18:01:38 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-09 18:02:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 48 seconds
Variants: generated 200, build-succeeded 50, build-failed 50, syntax-invalid 31, redundant 69
Fitness: max 1(1), min 0.966(9), ave 0.985
Test execution time: sum 23915 ms, max 715 ms, min 406 ms
----------------------------------------------------------------

2023-08-09 18:02:09 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-09 18:02:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 15 seconds
Variants: generated 200, build-succeeded 42, build-failed 51, syntax-invalid 48, redundant 59
Fitness: max 1(1), min 0.957(2), ave 0.984
Test execution time: sum 19913 ms, max 619 ms, min 392 ms
----------------------------------------------------------------

2023-08-09 18:02:37 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-09 18:03:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 46 seconds
Variants: generated 200, build-succeeded 40, build-failed 55, syntax-invalid 49, redundant 56
Fitness: max 1(1), min 0.966(9), ave 0.986
Test execution time: sum 22810 ms, max 946 ms, min 409 ms
----------------------------------------------------------------

2023-08-09 18:03:08 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-09 18:03:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 24 seconds
Variants: generated 200, build-succeeded 52, build-failed 45, syntax-invalid 51, redundant 52
Fitness: max 1(4), min 0.957(2), ave 0.988
Test execution time: sum 29139 ms, max 915 ms, min 400 ms
----------------------------------------------------------------

2023-08-09 18:03:45 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-09 18:04:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 53 seconds
Variants: generated 200, build-succeeded 36, build-failed 43, syntax-invalid 72, redundant 49
Fitness: max 1(2), min 0.966(4), ave 0.987
Test execution time: sum 21386 ms, max 950 ms, min 416 ms
----------------------------------------------------------------

2023-08-09 18:04:14 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-09 18:04:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 31 seconds
Variants: generated 200, build-succeeded 48, build-failed 54, syntax-invalid 53, redundant 45
Fitness: max 0.991(32), min 0.966(7), ave 0.985
Test execution time: sum 29194 ms, max 875 ms, min 427 ms
----------------------------------------------------------------

2023-08-09 18:04:53 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-09 18:05:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 17 seconds
Variants: generated 200, build-succeeded 51, build-failed 59, syntax-invalid 43, redundant 47
Fitness: max 1(1), min 0.957(1), ave 0.985
Test execution time: sum 34954 ms, max 927 ms, min 429 ms
----------------------------------------------------------------

2023-08-09 18:05:39 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-09 18:06:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 10 seconds
Variants: generated 200, build-succeeded 59, build-failed 54, syntax-invalid 47, redundant 40
Fitness: max 1(3), min 0.931(1), ave 0.986
Test execution time: sum 41665 ms, max 977 ms, min 446 ms
----------------------------------------------------------------

2023-08-09 18:06:32 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-09 18:07:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 54 seconds
Variants: generated 200, build-succeeded 59, build-failed 46, syntax-invalid 54, redundant 41
Fitness: max 1(2), min 0.957(1), ave 0.989
Test execution time: sum 34658 ms, max 937 ms, min 425 ms
----------------------------------------------------------------

2023-08-09 18:07:16 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-09 18:08:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 46 seconds
Variants: generated 200, build-succeeded 56, build-failed 63, syntax-invalid 54, redundant 27
Fitness: max 1(1), min 0.957(1), ave 0.988
Test execution time: sum 38507 ms, max 1078 ms, min 422 ms
----------------------------------------------------------------

2023-08-09 18:08:07 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-09 18:08:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 38 seconds
Variants: generated 200, build-succeeded 62, build-failed 52, syntax-invalid 49, redundant 37
Fitness: max 0.991(49), min 0.948(1), ave 0.988
Test execution time: sum 40168 ms, max 974 ms, min 417 ms
----------------------------------------------------------------

2023-08-09 18:08:59 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-09 18:09:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 37 seconds
Variants: generated 200, build-succeeded 67, build-failed 48, syntax-invalid 51, redundant 34
Fitness: max 0.991(55), min 0.966(2), ave 0.989
Test execution time: sum 46653 ms, max 958 ms, min 436 ms
----------------------------------------------------------------

2023-08-09 18:09:58 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-09 18:10:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 20 seconds
Variants: generated 200, build-succeeded 50, build-failed 49, syntax-invalid 65, redundant 36
Fitness: max 0.991(38), min 0.957(2), ave 0.988
Test execution time: sum 31602 ms, max 913 ms, min 422 ms
----------------------------------------------------------------

2023-08-09 18:10:42 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-09 18:11:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 4 seconds
Variants: generated 200, build-succeeded 49, build-failed 55, syntax-invalid 67, redundant 29
Fitness: max 1(2), min 0.966(2), ave 0.99
Test execution time: sum 31671 ms, max 1071 ms, min 442 ms
----------------------------------------------------------------

2023-08-09 18:11:25 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-09 18:12:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 47 seconds
Variants: generated 200, build-succeeded 44, build-failed 53, syntax-invalid 72, redundant 31
Fitness: max 1(1), min 0.836(1), ave 0.983
Test execution time: sum 30402 ms, max 892 ms, min 453 ms
----------------------------------------------------------------

2023-08-09 18:12:08 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-09 18:13:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 38 seconds
Variants: generated 200, build-succeeded 57, build-failed 51, syntax-invalid 60, redundant 32
Fitness: max 0.991(47), min 0.94(1), ave 0.988
Test execution time: sum 39305 ms, max 943 ms, min 454 ms
----------------------------------------------------------------

2023-08-09 18:13:00 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-09 18:13:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 21 seconds
Variants: generated 200, build-succeeded 45, build-failed 54, syntax-invalid 67, redundant 34
Fitness: max 1(1), min 0.922(1), ave 0.985
Test execution time: sum 32222 ms, max 974 ms, min 529 ms
----------------------------------------------------------------

2023-08-09 18:13:43 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-09 18:14:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 0 seconds
Variants: generated 200, build-succeeded 42, build-failed 46, syntax-invalid 76, redundant 36
Fitness: max 1(2), min 0.966(1), ave 0.991
Test execution time: sum 28425 ms, max 892 ms, min 441 ms
----------------------------------------------------------------

2023-08-09 18:14:22 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-09 18:15:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 48 seconds
Variants: generated 200, build-succeeded 52, build-failed 56, syntax-invalid 67, redundant 25
Fitness: max 0.991(43), min 0.966(3), ave 0.989
Test execution time: sum 36968 ms, max 919 ms, min 467 ms
----------------------------------------------------------------

2023-08-09 18:15:10 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-09 18:15:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 29 seconds
Variants: generated 200, build-succeeded 41, build-failed 57, syntax-invalid 77, redundant 25
Fitness: max 1(2), min 0.914(1), ave 0.987
Test execution time: sum 29233 ms, max 949 ms, min 436 ms
----------------------------------------------------------------

2023-08-09 18:15:51 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-09 18:16:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 8 seconds
Variants: generated 200, build-succeeded 47, build-failed 55, syntax-invalid 74, redundant 24
Fitness: max 1(2), min 0.983(3), ave 0.991
Test execution time: sum 29342 ms, max 859 ms, min 416 ms
----------------------------------------------------------------

2023-08-09 18:16:30 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-09 18:17:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 55 seconds
Variants: generated 200, build-succeeded 55, build-failed 48, syntax-invalid 65, redundant 32
Fitness: max 1(1), min 0.983(4), ave 0.991
Test execution time: sum 35841 ms, max 932 ms, min 416 ms
----------------------------------------------------------------

2023-08-09 18:17:17 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-09 18:18:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 44 seconds
Variants: generated 200, build-succeeded 54, build-failed 55, syntax-invalid 61, redundant 30
Fitness: max 1(1), min 0.957(1), ave 0.99
Test execution time: sum 37770 ms, max 890 ms, min 432 ms
----------------------------------------------------------------

2023-08-09 18:18:06 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-09 18:18:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 28 seconds
Variants: generated 200, build-succeeded 46, build-failed 60, syntax-invalid 66, redundant 28
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 32193 ms, max 915 ms, min 459 ms
----------------------------------------------------------------

2023-08-09 18:18:50 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-09 18:19:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 12 seconds
Variants: generated 200, build-succeeded 47, build-failed 48, syntax-invalid 73, redundant 32
Fitness: max 0.991(41), min 0.845(1), ave 0.986
Test execution time: sum 31419 ms, max 943 ms, min 423 ms
----------------------------------------------------------------

2023-08-09 18:19:33 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-09 18:20:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 45 seconds
Variants: generated 200, build-succeeded 32, build-failed 55, syntax-invalid 83, redundant 30
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 23752 ms, max 1248 ms, min 455 ms
----------------------------------------------------------------

2023-08-09 18:20:07 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-09 18:20:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 28 seconds
Variants: generated 200, build-succeeded 45, build-failed 57, syntax-invalid 65, redundant 33
Fitness: max 1(4), min 0.966(1), ave 0.991
Test execution time: sum 30935 ms, max 918 ms, min 471 ms
----------------------------------------------------------------

2023-08-09 18:20:49 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-09 18:21:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 11 seconds
Variants: generated 200, build-succeeded 45, build-failed 63, syntax-invalid 65, redundant 27
Fitness: max 1(3), min 0.914(1), ave 0.989
Test execution time: sum 31046 ms, max 947 ms, min 451 ms
----------------------------------------------------------------

2023-08-09 18:21:33 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-09 18:22:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 0 seconds
Variants: generated 200, build-succeeded 53, build-failed 58, syntax-invalid 54, redundant 35
Fitness: max 0.991(51), min 0.974(1), ave 0.991
Test execution time: sum 37896 ms, max 969 ms, min 454 ms
----------------------------------------------------------------

2023-08-09 18:22:22 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-09 18:23:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 43 seconds
Variants: generated 200, build-succeeded 47, build-failed 53, syntax-invalid 71, redundant 29
Fitness: max 1(3), min 0.966(2), ave 0.991
Test execution time: sum 30635 ms, max 944 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 18:23:05 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-09 18:23:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 22 seconds
Variants: generated 200, build-succeeded 40, build-failed 68, syntax-invalid 71, redundant 21
Fitness: max 0.991(38), min 0.957(1), ave 0.99
Test execution time: sum 26189 ms, max 864 ms, min 427 ms
----------------------------------------------------------------

2023-08-09 18:23:44 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-09 18:24:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 2 seconds
Variants: generated 200, build-succeeded 42, build-failed 69, syntax-invalid 69, redundant 20
Fitness: max 1(2), min 0.966(2), ave 0.99
Test execution time: sum 28135 ms, max 992 ms, min 406 ms
----------------------------------------------------------------

2023-08-09 18:24:24 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-09 18:25:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 43 seconds
Variants: generated 200, build-succeeded 42, build-failed 55, syntax-invalid 69, redundant 34
Fitness: max 1(1), min 0.922(1), ave 0.989
Test execution time: sum 29213 ms, max 889 ms, min 452 ms
----------------------------------------------------------------

2023-08-09 18:25:04 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-09 18:25:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 32 seconds
Variants: generated 200, build-succeeded 53, build-failed 64, syntax-invalid 58, redundant 25
Fitness: max 1(1), min 0.931(1), ave 0.988
Test execution time: sum 35427 ms, max 981 ms, min 428 ms
----------------------------------------------------------------

2023-08-09 18:25:54 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-09 18:26:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 17 seconds
Variants: generated 200, build-succeeded 47, build-failed 64, syntax-invalid 65, redundant 24
Fitness: max 1(2), min 0.897(1), ave 0.988
Test execution time: sum 32918 ms, max 921 ms, min 429 ms
----------------------------------------------------------------

2023-08-09 18:26:38 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-09 18:27:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 59 seconds
Variants: generated 200, build-succeeded 41, build-failed 57, syntax-invalid 66, redundant 36
Fitness: max 1(2), min 0.966(1), ave 0.991
Test execution time: sum 28732 ms, max 926 ms, min 425 ms
----------------------------------------------------------------

2023-08-09 18:27:20 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-09 18:28:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 43 seconds
Variants: generated 200, build-succeeded 46, build-failed 60, syntax-invalid 66, redundant 28
Fitness: max 0.991(42), min 0.931(1), ave 0.989
Test execution time: sum 31929 ms, max 911 ms, min 437 ms
----------------------------------------------------------------

2023-08-09 18:28:05 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-09 18:28:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 26 seconds
Variants: generated 200, build-succeeded 43, build-failed 69, syntax-invalid 67, redundant 21
Fitness: max 1(1), min 0.974(2), ave 0.99
Test execution time: sum 29981 ms, max 939 ms, min 439 ms
----------------------------------------------------------------

2023-08-09 18:28:48 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-09 18:29:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 5 seconds
Variants: generated 200, build-succeeded 33, build-failed 65, syntax-invalid 77, redundant 25
Fitness: max 0.991(26), min 0.966(1), ave 0.989
Test execution time: sum 25312 ms, max 1104 ms, min 439 ms
----------------------------------------------------------------

2023-08-09 18:29:26 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-09 18:30:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 41 seconds
Variants: generated 200, build-succeeded 33, build-failed 65, syntax-invalid 77, redundant 25
Fitness: max 1(3), min 0.966(1), ave 0.991
Test execution time: sum 23401 ms, max 1070 ms, min 476 ms
----------------------------------------------------------------

2023-08-09 18:30:02 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-09 18:30:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 27 seconds
Variants: generated 200, build-succeeded 47, build-failed 60, syntax-invalid 73, redundant 20
Fitness: max 0.991(40), min 0.948(1), ave 0.988
Test execution time: sum 33791 ms, max 951 ms, min 452 ms
----------------------------------------------------------------

2023-08-09 18:30:48 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-09 18:31:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 7 seconds
Variants: generated 200, build-succeeded 39, build-failed 66, syntax-invalid 70, redundant 25
Fitness: max 0.991(35), min 0.966(1), ave 0.99
Test execution time: sum 27332 ms, max 962 ms, min 471 ms
----------------------------------------------------------------

2023-08-09 18:31:28 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-09 18:32:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 41 seconds
Variants: generated 200, build-succeeded 31, build-failed 58, syntax-invalid 86, redundant 25
Fitness: max 0.991(26), min 0.957(1), ave 0.989
Test execution time: sum 21300 ms, max 872 ms, min 405 ms
----------------------------------------------------------------

2023-08-09 18:32:02 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-09 18:32:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 25 seconds
Variants: generated 200, build-succeeded 39, build-failed 72, syntax-invalid 69, redundant 20
Fitness: max 1(1), min 0.966(2), ave 0.99
Test execution time: sum 29851 ms, max 1159 ms, min 427 ms
----------------------------------------------------------------

2023-08-09 18:32:46 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-09 18:33:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 5 seconds
Variants: generated 200, build-succeeded 43, build-failed 51, syntax-invalid 81, redundant 25
Fitness: max 1(1), min 0.845(1), ave 0.985
Test execution time: sum 27295 ms, max 867 ms, min 435 ms
----------------------------------------------------------------

2023-08-09 18:33:26 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-09 18:34:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 41 seconds
Variants: generated 200, build-succeeded 35, build-failed 48, syntax-invalid 88, redundant 29
Fitness: max 1(1), min 0.966(3), ave 0.988
Test execution time: sum 23988 ms, max 865 ms, min 415 ms
----------------------------------------------------------------

2023-08-09 18:34:03 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-09 18:34:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 22 seconds
Variants: generated 200, build-succeeded 41, build-failed 60, syntax-invalid 76, redundant 23
Fitness: max 1(1), min 0.966(2), ave 0.99
Test execution time: sum 28062 ms, max 899 ms, min 442 ms
----------------------------------------------------------------

2023-08-09 18:34:43 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-09 18:35:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 4 seconds
Variants: generated 200, build-succeeded 42, build-failed 59, syntax-invalid 80, redundant 19
Fitness: max 0.991(35), min 0.966(2), ave 0.989
Test execution time: sum 28127 ms, max 865 ms, min 454 ms
----------------------------------------------------------------

2023-08-09 18:35:26 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-09 18:36:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 41 seconds
Variants: generated 200, build-succeeded 37, build-failed 50, syntax-invalid 86, redundant 27
Fitness: max 1(1), min 0.966(4), ave 0.987
Test execution time: sum 25115 ms, max 949 ms, min 446 ms
----------------------------------------------------------------

2023-08-09 18:36:03 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-09 18:36:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 15 seconds
Variants: generated 200, build-succeeded 29, build-failed 53, syntax-invalid 101, redundant 17
Fitness: max 1(1), min 0.845(1), ave 0.984
Test execution time: sum 20092 ms, max 889 ms, min 435 ms
----------------------------------------------------------------

2023-08-09 18:36:37 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-09 18:37:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 50 seconds
Variants: generated 200, build-succeeded 32, build-failed 54, syntax-invalid 87, redundant 27
Fitness: max 1(2), min 0.966(1), ave 0.99
Test execution time: sum 22383 ms, max 909 ms, min 461 ms
----------------------------------------------------------------

2023-08-09 18:37:12 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-09 18:37:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 30 seconds
Variants: generated 200, build-succeeded 41, build-failed 50, syntax-invalid 84, redundant 25
Fitness: max 0.991(34), min 0.897(1), ave 0.987
Test execution time: sum 27559 ms, max 919 ms, min 418 ms
----------------------------------------------------------------

2023-08-09 18:37:52 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-09 18:38:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 9 seconds
Variants: generated 200, build-succeeded 38, build-failed 51, syntax-invalid 85, redundant 26
Fitness: max 1(2), min 0.948(1), ave 0.989
Test execution time: sum 25992 ms, max 897 ms, min 453 ms
----------------------------------------------------------------

2023-08-09 18:38:30 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-09 18:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 41 seconds
Variants: generated 200, build-succeeded 30, build-failed 64, syntax-invalid 90, redundant 16
Fitness: max 0.991(28), min 0.974(1), ave 0.991
Test execution time: sum 19503 ms, max 858 ms, min 431 ms
----------------------------------------------------------------

2023-08-09 18:39:03 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-09 18:39:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 26 seconds
Variants: generated 200, build-succeeded 46, build-failed 54, syntax-invalid 84, redundant 16
Fitness: max 1(1), min 0.759(1), ave 0.984
Test execution time: sum 31142 ms, max 864 ms, min 419 ms
----------------------------------------------------------------

2023-08-09 18:39:47 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-09 18:40:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 4 seconds
Variants: generated 200, build-succeeded 36, build-failed 54, syntax-invalid 87, redundant 23
Fitness: max 1(1), min 0.845(1), ave 0.987
Test execution time: sum 24507 ms, max 913 ms, min 438 ms
----------------------------------------------------------------

2023-08-09 18:40:26 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-09 18:41:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 47 seconds
Variants: generated 200, build-succeeded 38, build-failed 61, syntax-invalid 83, redundant 18
Fitness: max 1(1), min 0.966(4), ave 0.988
Test execution time: sum 27108 ms, max 925 ms, min 567 ms
----------------------------------------------------------------

2023-08-09 18:41:08 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-09 18:41:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 37 seconds
Variants: generated 200, build-succeeded 51, build-failed 59, syntax-invalid 77, redundant 13
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 35431 ms, max 1112 ms, min 414 ms
----------------------------------------------------------------

2023-08-09 18:41:58 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-09 18:42:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 17 seconds
Variants: generated 200, build-succeeded 38, build-failed 57, syntax-invalid 89, redundant 16
Fitness: max 1(1), min 0.914(1), ave 0.988
Test execution time: sum 26551 ms, max 965 ms, min 433 ms
----------------------------------------------------------------

2023-08-09 18:42:39 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-09 18:43:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 57 seconds
Variants: generated 200, build-succeeded 40, build-failed 58, syntax-invalid 73, redundant 29
Fitness: max 1(2), min 0.931(1), ave 0.988
Test execution time: sum 26812 ms, max 831 ms, min 443 ms
----------------------------------------------------------------

2023-08-09 18:43:19 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-09 18:44:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 40 seconds
Variants: generated 200, build-succeeded 40, build-failed 57, syntax-invalid 80, redundant 23
Fitness: max 0.991(35), min 0.957(1), ave 0.989
Test execution time: sum 27830 ms, max 890 ms, min 459 ms
----------------------------------------------------------------

2023-08-09 18:44:01 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-09 18:44:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 24 seconds
Variants: generated 200, build-succeeded 44, build-failed 70, syntax-invalid 68, redundant 18
Fitness: max 1(2), min 0.966(3), ave 0.989
Test execution time: sum 29338 ms, max 913 ms, min 438 ms
----------------------------------------------------------------

2023-08-09 18:44:46 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-09 18:45:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 23 seconds
Variants: generated 200, build-succeeded 54, build-failed 60, syntax-invalid 65, redundant 21
Fitness: max 0.991(48), min 0.966(1), ave 0.99
Test execution time: sum 40109 ms, max 1226 ms, min 512 ms
----------------------------------------------------------------

2023-08-09 18:45:44 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-09 18:46:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 11 seconds
Variants: generated 200, build-succeeded 49, build-failed 64, syntax-invalid 76, redundant 11
Fitness: max 1(2), min 0.966(1), ave 0.99
Test execution time: sum 33002 ms, max 1003 ms, min 418 ms
----------------------------------------------------------------

2023-08-09 18:46:33 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-09 18:47:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 59 seconds
Variants: generated 200, build-succeeded 45, build-failed 70, syntax-invalid 67, redundant 18
Fitness: max 0.991(39), min 0.845(1), ave 0.984
Test execution time: sum 30879 ms, max 800 ms, min 476 ms
----------------------------------------------------------------

2023-08-09 18:47:21 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-09 18:48:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 45 seconds
Variants: generated 200, build-succeeded 44, build-failed 77, syntax-invalid 61, redundant 18
Fitness: max 1(1), min 0.845(1), ave 0.987
Test execution time: sum 30199 ms, max 889 ms, min 428 ms
----------------------------------------------------------------

2023-08-09 18:48:07 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-09 18:48:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 37 seconds
Variants: generated 200, build-succeeded 47, build-failed 65, syntax-invalid 73, redundant 15
Fitness: max 1(3), min 0.966(1), ave 0.99
Test execution time: sum 34916 ms, max 1333 ms, min 468 ms
----------------------------------------------------------------

2023-08-09 18:48:59 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-09 18:49:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 24 seconds
Variants: generated 200, build-succeeded 47, build-failed 52, syntax-invalid 76, redundant 25
Fitness: max 1(2), min 0.983(3), ave 0.991
Test execution time: sum 31835 ms, max 858 ms, min 436 ms
----------------------------------------------------------------

2023-08-09 18:49:46 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-09 18:50:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 4 seconds
Variants: generated 200, build-succeeded 37, build-failed 71, syntax-invalid 72, redundant 20
Fitness: max 1(2), min 0.974(1), ave 0.991
Test execution time: sum 24971 ms, max 877 ms, min 440 ms
----------------------------------------------------------------

2023-08-09 18:50:25 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-09 18:51:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 45 seconds
Variants: generated 200, build-succeeded 38, build-failed 67, syntax-invalid 74, redundant 21
Fitness: max 1(2), min 0.931(2), ave 0.986
Test execution time: sum 26670 ms, max 923 ms, min 430 ms
----------------------------------------------------------------

2023-08-09 18:51:06 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-09 18:52:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 39 seconds
Variants: generated 200, build-succeeded 55, build-failed 62, syntax-invalid 67, redundant 16
Fitness: max 1(2), min 0.974(2), ave 0.99
Test execution time: sum 39804 ms, max 1073 ms, min 467 ms
----------------------------------------------------------------

2023-08-09 18:52:01 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-09 18:52:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 17 seconds
Variants: generated 200, build-succeeded 33, build-failed 69, syntax-invalid 80, redundant 18
Fitness: max 1(1), min 0.983(5), ave 0.99
Test execution time: sum 23168 ms, max 929 ms, min 454 ms
----------------------------------------------------------------

2023-08-09 18:52:39 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-09 18:53:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 54 seconds
Variants: generated 200, build-succeeded 34, build-failed 67, syntax-invalid 83, redundant 16
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 22979 ms, max 894 ms, min 438 ms
----------------------------------------------------------------

2023-08-09 18:53:15 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-09 18:53:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 23 seconds
Variants: generated 200, build-succeeded 26, build-failed 68, syntax-invalid 83, redundant 23
Fitness: max 0.991(23), min 0.957(1), ave 0.989
Test execution time: sum 16698 ms, max 944 ms, min 405 ms
----------------------------------------------------------------

2023-08-09 18:53:45 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-09 18:54:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 0 seconds
Variants: generated 200, build-succeeded 33, build-failed 66, syntax-invalid 70, redundant 31
Fitness: max 1(2), min 0.983(1), ave 0.992
Test execution time: sum 22135 ms, max 864 ms, min 437 ms
----------------------------------------------------------------

2023-08-09 18:54:21 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-09 18:54:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 24 seconds
Variants: generated 80, build-succeeded 22, build-failed 33, syntax-invalid 4, redundant 21
Fitness: max 1(4), min 0.983(1), ave 0.993
Test execution time: sum 15131 ms, max 1037 ms, min 448 ms
----------------------------------------------------------------

2023-08-09 18:54:45 [main] [INFO]  KGenProgMain - GA stopped
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v269)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v269)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v269)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v269)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v269)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v269)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v676)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v676)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v676)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v676)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v676)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v676)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1038)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1038)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1038)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1038)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1038)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1038)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1043)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1043)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1043)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1043)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1043)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1043)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1043)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1242)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1242)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1242)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1242)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1242)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1242)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1242)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1289)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1465)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1465)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1465)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1465)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1465)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1465)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1682)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1682)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1682)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1682)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1682)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1682)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1839)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1839)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1839)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1839)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1839)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:54 [main] [INFO]  PatchLogExporter - patch (v1839)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2017)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2017)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2017)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2017)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2017)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2017)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2017)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2061)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2061)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2061)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2061)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2061)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2061)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2073)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2073)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2073)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2073)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2073)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2073)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2073)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2278)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2278)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2278)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2278)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2278)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2278)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2278)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2335)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2335)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2335)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2335)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2335)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2335)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2859)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2859)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2859)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2859)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2859)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2859)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2859)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2877)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2877)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2877)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2877)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2877)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2877)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2953)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2953)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2953)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2953)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2953)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v2953)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3262)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3262)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3262)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3262)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3262)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3262)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v3262)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v4002)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v4002)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v4002)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v4002)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v4002)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v4002)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:55 [main] [INFO]  PatchLogExporter - patch (v4002)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4032)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4032)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4032)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4032)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4032)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4032)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4032)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4277)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4277)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4277)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4277)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4277)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4277)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4619)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4619)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4619)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4619)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4619)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4619)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4619)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4882)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4882)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4882)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4882)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4882)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4882)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v4882)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5221)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5221)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5221)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5221)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5221)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5221)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5284)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5284)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5284)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5284)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5284)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5284)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5284)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5460)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5460)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5460)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5460)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5460)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5460)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5460)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5711)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5711)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5711)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5711)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5711)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5711)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5995)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5995)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5995)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5995)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5995)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v5995)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6070)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6070)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6070)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6070)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6070)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6070)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6483)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6483)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6483)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6483)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6483)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6483)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6483)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6694)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6694)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6694)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6694)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6694)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +290,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6694)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6745)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6745)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6745)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6745)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6745)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6745)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6870)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6870)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6870)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6870)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6870)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6870)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6870)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6975)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6975)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6975)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6975)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6975)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6975)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v6975)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v7219)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v7219)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v7219)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v7219)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v7219)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v7219)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:56 [main] [INFO]  PatchLogExporter - patch (v7219)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7297)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7297)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7297)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7297)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7297)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7297)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7297)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(real, -imaginary);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,13 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +289,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8029)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8029)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8029)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8029)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8029)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8029)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8029)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8029)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8211)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8211)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8211)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8211)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8211)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8211)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8211)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8211)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8273)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8273)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8273)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8273)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8273)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8273)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8273)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8407)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8407)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8407)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8407)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8407)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8407)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,13 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			StringBuffer imAppendTo = new StringBuffer();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +293,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8407)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8449)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8449)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8449)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8449)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8449)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8449)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +290,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9227)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9227)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9227)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9227)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9227)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9227)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,11 +289,9 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
-        if (Double.isInfinite(divisor)) {
+        if (divisor == 0d)
+			return NaN;
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9227)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9270)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9270)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9270)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9270)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9270)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(real, -imaginary);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,11 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v9270)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10032)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10032)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10032)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10032)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10032)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double expReal = FastMath.exp(real);
+			return createComplex(real, -imaginary);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10032)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10229)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10229)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10229)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10229)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10229)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10229)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10229)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10229)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10405)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10405)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10405)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10405)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10405)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10405)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10405)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +293,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v11003)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v11003)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v11003)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v11003)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v11003)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:57 [main] [INFO]  PatchLogExporter - patch (v11003)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -274,6 +272,7 @@
                 (imaginary * q - real) / denominator);
         } else {
             double q = d / c;
+			int sign = 0;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -289,14 +288,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,11 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11463)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11463)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11463)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11463)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11463)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -274,6 +271,7 @@
                 (imaginary * q - real) / denominator);
         } else {
             double q = d / c;
+			int sign = 0;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -293,10 +291,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11463)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11463)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +286,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11885)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11885)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11885)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11885)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11885)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11885)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +290,11 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11885)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v11885)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12280)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12280)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12280)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12280)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12280)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			StringBuffer imAppendTo = new StringBuffer();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -274,6 +273,7 @@
                 (imaginary * q - real) / denominator);
         } else {
             double q = d / c;
+			int sign = 0;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -293,10 +293,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12280)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12280)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12631)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12631)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12631)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12631)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12631)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12631)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12631)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12631)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12820)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12820)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12820)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12820)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12820)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -274,6 +271,7 @@
                 (imaginary * q - real) / denominator);
         } else {
             double q = d / c;
+			int sign = 0;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -289,14 +287,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12820)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v12820)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13087)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13087)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13087)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13087)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13087)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -274,6 +272,7 @@
                 (imaginary * q - real) / denominator);
         } else {
             double q = d / c;
+			int sign = 0;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13087)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13087)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13087)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13259)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13259)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13259)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13259)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13259)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13259)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13259)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13274)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13274)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13274)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13274)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13274)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,13 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,11 +292,9 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
-        if (Double.isInfinite(divisor)) {
+        if (divisor == 0d)
+			return NaN;
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13274)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13274)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13274)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13641)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13641)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13641)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13641)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13641)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13641)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,14 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +293,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:58 [main] [INFO]  PatchLogExporter - patch (v13641)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v13659)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v13659)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v13659)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v13659)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v13659)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -274,6 +272,7 @@
                 (imaginary * q - real) / denominator);
         } else {
             double q = d / c;
+			int sign = 0;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v13659)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v13659)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14003)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14003)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14003)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14003)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14003)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14003)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14059)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14059)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14059)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14059)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14059)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -274,6 +271,7 @@
                 (imaginary * q - real) / denominator);
         } else {
             double q = d / c;
+			int sign = 0;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14059)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14059)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14480)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14480)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14480)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14480)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14480)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14480)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14480)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14480)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14480)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14629)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14629)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14629)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14629)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14629)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14629)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14629)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14629)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14653)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14653)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14653)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14653)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14653)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -274,6 +273,7 @@
                 (imaginary * q - real) / denominator);
         } else {
             double q = d / c;
+			int sign = 0;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -293,13 +293,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14653)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14664)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14664)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14664)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14664)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14664)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14664)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14664)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14853)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14853)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14853)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14853)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14853)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14853)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14853)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v14853)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15025)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15025)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15025)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15025)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15025)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -274,6 +272,7 @@
                 (imaginary * q - real) / denominator);
         } else {
             double q = d / c;
+			int sign = 0;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -289,14 +288,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15025)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15030)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15030)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15030)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15030)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15030)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15030)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15030)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15255)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15255)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15255)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15255)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15255)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15255)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15255)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15255)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15299)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15299)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15299)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15299)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15299)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15299)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
-        if (divisor == 0d) {
+        if (isNaN) {
             // return isZero ? NaN : INF; // See MATH-657
             return isZero ? NaN : INF;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15299)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15299)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15420)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15420)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15420)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15420)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15420)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15420)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:54:59 [main] [INFO]  PatchLogExporter - patch (v15420)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15475)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15475)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15475)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15475)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15475)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15475)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15475)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15475)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15475)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15655)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15655)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15655)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15655)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15655)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15655)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15655)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15833)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15833)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15833)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15833)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15833)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15833)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15833)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v15833)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16203)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16203)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16203)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16203)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16203)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16203)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16203)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16225)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16225)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16225)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16225)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16225)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16225)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16225)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16225)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16225)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16404)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16404)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16404)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16404)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16404)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16404)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -274,6 +274,7 @@
                 (imaginary * q - real) / denominator);
         } else {
             double q = d / c;
+			int sign = 0;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -293,13 +294,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16404)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16404)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16423)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16423)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16423)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16423)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16423)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16423)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -273,7 +272,8 @@
             return createComplex((real * q + imaginary) / denominator,
                 (imaginary * q - real) / denominator);
         } else {
-            double q = d / c;
+            double real2 = 2.0 * real;
+			double q = d / c;
             double denominator = d * q + c;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
@@ -289,17 +289,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16423)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16423)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16455)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16455)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16455)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16455)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16455)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16455)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16455)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16455)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final List<Object> list=new ArrayList<Object>();
+		return getMessage(Locale.US);
     }
 
     /**
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -815,7 +815,8 @@
         z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
-        z = z * epsilon + -3.940510424527919E-20;
+        final double ys[] = new double[2];
+		z = z * epsilon + -3.940510424527919E-20;
 
         /* Compute (intPartA+intPartB) * (fracPartA+fracPartB) by binomial
        expansion.
2023-08-09 18:55:00 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 18:55:00 [main] [INFO]  KGenProgMain - Summary
Reached generation = 84
Generated variants = 16480
Syntax valid variants = 11055
Build succeeded variants = 3573
Time elapsed = 56 minutes 38 seconds
Exit status = SUCCESS
