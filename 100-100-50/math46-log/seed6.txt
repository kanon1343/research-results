2023-08-09 19:53:51 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-09 19:53:51 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-09 19:53:51 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-09 19:53:52 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/fse/Downloads/kGenProg/example/math46/kgenprog-46.toml (set by command line)
rootDir = /Users/fse/Downloads/kGenProg/example/math46 (set in config file)
productPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/main] (set in config file)
testPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.complex.ComplexTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 6 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/fse/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-09 19:54:14 [main] [INFO]  KGenProgMain - initial failed tests (2/116)
org.apache.commons.math.complex.ComplexTest.testDivideZero: expected:<(Infinity, Infinity)> but was:<(NaN, NaN)>
org.apache.commons.math.complex.ComplexTest.testAtanI: null

2023-08-09 19:54:15 [main] [INFO]  KGenProgMain - GA started
2023-08-09 19:54:15 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-09 19:54:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, build-succeeded 3, build-failed 60, syntax-invalid 1, redundant 36
Fitness: max 0.991(2), min 0.983(1), ave 0.989
Test execution time: sum 3176 ms, max 1345 ms, min 753 ms
----------------------------------------------------------------

2023-08-09 19:54:25 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-09 19:54:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 100, build-succeeded 9, build-failed 45, syntax-invalid 5, redundant 41
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 5913 ms, max 1123 ms, min 494 ms
----------------------------------------------------------------

2023-08-09 19:54:36 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-09 19:54:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 seconds
Variants: generated 200, build-succeeded 22, build-failed 52, syntax-invalid 3, redundant 123
Fitness: max 1(2), min 0.966(3), ave 0.987
Test execution time: sum 12042 ms, max 767 ms, min 426 ms
----------------------------------------------------------------

2023-08-09 19:54:55 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-09 19:55:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 7 seconds
Variants: generated 200, build-succeeded 37, build-failed 51, syntax-invalid 19, redundant 93
Fitness: max 1(3), min 0.966(8), ave 0.983
Test execution time: sum 18340 ms, max 602 ms, min 443 ms
----------------------------------------------------------------

2023-08-09 19:55:22 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-09 19:55:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 38 seconds
Variants: generated 200, build-succeeded 43, build-failed 49, syntax-invalid 25, redundant 83
Fitness: max 1(2), min 0.957(4), ave 0.982
Test execution time: sum 22179 ms, max 878 ms, min 417 ms
----------------------------------------------------------------

2023-08-09 19:55:53 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-09 19:56:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 8 seconds
Variants: generated 200, build-succeeded 45, build-failed 56, syntax-invalid 27, redundant 72
Fitness: max 1(4), min 0.957(2), ave 0.985
Test execution time: sum 20726 ms, max 542 ms, min 407 ms
----------------------------------------------------------------

2023-08-09 19:56:23 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-09 19:56:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 39 seconds
Variants: generated 200, build-succeeded 48, build-failed 45, syntax-invalid 23, redundant 84
Fitness: max 1(6), min 0.966(8), ave 0.987
Test execution time: sum 23245 ms, max 886 ms, min 418 ms
----------------------------------------------------------------

2023-08-09 19:56:54 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-09 19:57:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 11 seconds
Variants: generated 200, build-succeeded 52, build-failed 59, syntax-invalid 24, redundant 65
Fitness: max 1(2), min 0.966(9), ave 0.986
Test execution time: sum 23986 ms, max 595 ms, min 399 ms
----------------------------------------------------------------

2023-08-09 19:57:27 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-09 19:58:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 47 seconds
Variants: generated 200, build-succeeded 50, build-failed 55, syntax-invalid 32, redundant 63
Fitness: max 1(5), min 0.966(6), ave 0.988
Test execution time: sum 26326 ms, max 876 ms, min 399 ms
----------------------------------------------------------------

2023-08-09 19:58:02 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-09 19:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 26 seconds
Variants: generated 200, build-succeeded 49, build-failed 56, syntax-invalid 48, redundant 47
Fitness: max 1(4), min 0.966(8), ave 0.987
Test execution time: sum 27731 ms, max 887 ms, min 405 ms
----------------------------------------------------------------

2023-08-09 19:58:41 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-09 19:59:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 20 seconds
Variants: generated 200, build-succeeded 70, build-failed 58, syntax-invalid 52, redundant 20
Fitness: max 1(7), min 0.957(2), ave 0.987
Test execution time: sum 41846 ms, max 907 ms, min 412 ms
----------------------------------------------------------------

2023-08-09 19:59:35 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-09 20:00:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 17 seconds
Variants: generated 200, build-succeeded 70, build-failed 56, syntax-invalid 38, redundant 36
Fitness: max 1(4), min 0.966(4), ave 0.989
Test execution time: sum 44244 ms, max 949 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 20:00:33 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-09 20:01:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 17 seconds
Variants: generated 200, build-succeeded 63, build-failed 64, syntax-invalid 43, redundant 30
Fitness: max 1(2), min 0.966(3), ave 0.989
Test execution time: sum 44326 ms, max 1127 ms, min 451 ms
----------------------------------------------------------------

2023-08-09 20:01:32 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-09 20:02:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 24 seconds
Variants: generated 200, build-succeeded 75, build-failed 51, syntax-invalid 39, redundant 35
Fitness: max 1(6), min 0.888(1), ave 0.988
Test execution time: sum 51188 ms, max 2264 ms, min 407 ms
----------------------------------------------------------------

2023-08-09 20:02:39 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-09 20:03:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 13 seconds
Variants: generated 200, build-succeeded 69, build-failed 61, syntax-invalid 41, redundant 29
Fitness: max 1(5), min 0.966(3), ave 0.989
Test execution time: sum 35870 ms, max 906 ms, min 395 ms
----------------------------------------------------------------

2023-08-09 20:03:28 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-09 20:04:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 59 seconds
Variants: generated 200, build-succeeded 63, build-failed 52, syntax-invalid 53, redundant 32
Fitness: max 1(4), min 0.966(2), ave 0.989
Test execution time: sum 34271 ms, max 876 ms, min 398 ms
----------------------------------------------------------------

2023-08-09 20:04:14 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-09 20:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 48 seconds
Variants: generated 200, build-succeeded 66, build-failed 67, syntax-invalid 45, redundant 22
Fitness: max 1(3), min 0.957(1), ave 0.987
Test execution time: sum 36537 ms, max 1006 ms, min 396 ms
----------------------------------------------------------------

2023-08-09 20:05:04 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-09 20:05:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 36 seconds
Variants: generated 200, build-succeeded 61, build-failed 51, syntax-invalid 58, redundant 30
Fitness: max 1(6), min 0.931(1), ave 0.99
Test execution time: sum 35139 ms, max 842 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 20:05:51 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-09 20:06:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 23 seconds
Variants: generated 200, build-succeeded 59, build-failed 57, syntax-invalid 62, redundant 22
Fitness: max 1(1), min 0.897(1), ave 0.987
Test execution time: sum 34624 ms, max 916 ms, min 394 ms
----------------------------------------------------------------

2023-08-09 20:06:38 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-09 20:07:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 6 seconds
Variants: generated 200, build-succeeded 49, build-failed 57, syntax-invalid 67, redundant 27
Fitness: max 1(1), min 0.966(2), ave 0.989
Test execution time: sum 29680 ms, max 903 ms, min 376 ms
----------------------------------------------------------------

2023-08-09 20:07:21 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-09 20:08:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 2 seconds
Variants: generated 200, build-succeeded 58, build-failed 66, syntax-invalid 49, redundant 27
Fitness: max 1(3), min 0.957(1), ave 0.988
Test execution time: sum 39248 ms, max 965 ms, min 425 ms
----------------------------------------------------------------

2023-08-09 20:08:17 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-09 20:09:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 53 seconds
Variants: generated 200, build-succeeded 51, build-failed 57, syntax-invalid 64, redundant 28
Fitness: max 1(1), min 0.922(1), ave 0.988
Test execution time: sum 35908 ms, max 923 ms, min 417 ms
----------------------------------------------------------------

2023-08-09 20:09:08 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-09 20:10:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 2 seconds
Variants: generated 200, build-succeeded 73, build-failed 50, syntax-invalid 52, redundant 25
Fitness: max 1(4), min 0.966(1), ave 0.991
Test execution time: sum 51120 ms, max 2807 ms, min 415 ms
----------------------------------------------------------------

2023-08-09 20:10:17 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-09 20:11:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 48 seconds
Variants: generated 200, build-succeeded 54, build-failed 66, syntax-invalid 57, redundant 23
Fitness: max 1(2), min 0.966(1), ave 0.991
Test execution time: sum 30712 ms, max 1031 ms, min 393 ms
----------------------------------------------------------------

2023-08-09 20:11:03 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-09 20:11:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 35 seconds
Variants: generated 200, build-succeeded 61, build-failed 55, syntax-invalid 56, redundant 28
Fitness: max 1(3), min 0.966(1), ave 0.991
Test execution time: sum 33084 ms, max 972 ms, min 390 ms
----------------------------------------------------------------

2023-08-09 20:11:50 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-09 20:12:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 26 seconds
Variants: generated 200, build-succeeded 66, build-failed 57, syntax-invalid 44, redundant 33
Fitness: max 1(3), min 0.966(1), ave 0.99
Test execution time: sum 37841 ms, max 953 ms, min 388 ms
----------------------------------------------------------------

2023-08-09 20:12:42 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-09 20:13:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 18 seconds
Variants: generated 200, build-succeeded 62, build-failed 61, syntax-invalid 53, redundant 24
Fitness: max 1(3), min 0.966(2), ave 0.99
Test execution time: sum 36897 ms, max 903 ms, min 400 ms
----------------------------------------------------------------

2023-08-09 20:13:33 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-09 20:14:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 22 seconds
Variants: generated 200, build-succeeded 74, build-failed 65, syntax-invalid 33, redundant 28
Fitness: max 1(6), min 0.966(3), ave 0.99
Test execution time: sum 45418 ms, max 870 ms, min 421 ms
----------------------------------------------------------------

2023-08-09 20:14:37 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-09 20:15:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 10 seconds
Variants: generated 146, build-succeeded 54, build-failed 49, syntax-invalid 25, redundant 18
Fitness: max 1(7), min 0.974(1), ave 0.991
Test execution time: sum 34636 ms, max 954 ms, min 409 ms
----------------------------------------------------------------

2023-08-09 20:15:25 [main] [INFO]  KGenProgMain - GA stopped
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v127)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v127)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v127)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v127)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v127)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v127)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v312)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v312)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v312)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v312)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v312)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v312)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v530)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v530)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v530)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v530)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v530)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v530)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v547)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v547)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v547)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v547)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v547)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v547)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v595)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v595)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v595)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v595)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v595)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v595)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v595)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v703)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v703)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v703)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v703)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v703)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v703)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v764)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v860)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v860)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v860)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v860)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v860)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v860)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v923)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v923)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v923)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v923)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v923)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v923)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v923)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:34 [main] [INFO]  PatchLogExporter - patch (v978)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1034)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1034)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1034)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1034)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1034)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1034)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1104)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1104)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1104)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1104)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1104)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1104)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1104)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1117)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1117)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1117)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1117)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1117)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1117)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1117)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1120)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1120)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1120)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1120)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1120)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1120)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1122)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1122)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1122)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1122)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1122)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1122)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1122)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1145)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1145)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1145)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1145)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1145)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1145)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1223)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1223)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1223)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1223)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1223)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1223)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1223)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1352)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1352)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1352)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1352)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1352)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer ret = null;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1352)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1503)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1503)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1503)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1503)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1503)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1503)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1503)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1541)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1541)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1541)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1541)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1541)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1541)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1541)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:35 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -461,6 +461,7 @@
 
       if (negate) {
           result = -result;
+		double remB;
       }
 
       return result;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1637)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1637)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1637)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1637)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1637)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1637)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1782)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1782)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1782)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1782)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1782)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1782)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1782)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1825)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1825)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1825)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1825)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1825)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1825)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -461,6 +461,7 @@
 
       if (negate) {
           result = -result;
+		double remB;
       }
 
       return result;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1825)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1906)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1906)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1906)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1906)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1906)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1906)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -461,6 +461,7 @@
 
       if (negate) {
           result = -result;
+		double remB;
       }
 
       return result;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1958)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1958)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1958)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1958)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1958)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1958)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1958)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1973)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1973)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1973)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1973)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1973)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1973)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1990)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1990)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1990)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1990)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1990)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v1990)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2023)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2023)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2023)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2023)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2023)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -489,7 +487,6 @@
      */
     public Complex subtract(Complex subtrahend)
         throws NullArgumentException {
-        MathUtils.checkNotNull(subtrahend);
         if (isNaN || subtrahend.isNaN) {
             return NaN;
         }
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2023)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2141)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2141)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2141)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2141)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2141)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer ret = null;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:36 [main] [INFO]  PatchLogExporter - patch (v2141)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2181)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2181)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2181)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2181)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2181)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2181)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2330)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2330)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2330)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2330)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2330)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2330)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -461,6 +461,7 @@
 
       if (negate) {
           result = -result;
+		double remB;
       }
 
       return result;
@@ -1373,7 +1374,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2330)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2391)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2391)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2391)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2391)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2391)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2391)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -461,6 +461,7 @@
 
       if (negate) {
           result = -result;
+		double remB;
       }
 
       return result;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2391)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2463)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2463)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2463)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2463)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2463)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2463)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2560)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2560)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2560)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2560)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2560)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2560)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2560)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2565)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2565)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2565)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2565)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2565)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2565)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2565)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer ret = null;
+		final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1180,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2572)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2572)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2572)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2572)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2572)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2572)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
@@ -1466,7 +1467,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2572)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2603)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2603)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2603)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2603)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2603)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2603)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2603)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2707)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2707)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2707)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2707)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2707)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2707)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2707)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2728)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2728)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2728)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2728)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2728)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2728)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2728)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2742)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2742)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2742)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2742)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2742)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2742)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -1373,7 +1372,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:37 [main] [INFO]  PatchLogExporter - patch (v2742)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2804)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2804)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2804)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2804)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2804)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2804)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2804)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2814)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2814)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2814)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2814)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2814)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2814)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2814)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2865)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2865)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2865)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2865)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2865)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2865)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1427,7 +1427,6 @@
             /* High precision not required.  Eval Remez polynomial
          using standard double precision */
             lnza = -0.16624882440418567;
-            lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
@@ -1462,7 +1461,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v2865)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3123)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3123)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3123)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3123)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3123)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3123)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3123)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3164)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3164)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3164)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3164)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3164)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3164)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3164)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3191)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3191)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3191)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3191)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3191)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3191)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3191)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3230)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3230)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3230)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3230)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3230)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3230)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3269)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3269)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3269)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3269)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3269)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3269)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3269)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3280)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3280)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3280)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3280)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3280)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3280)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3280)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3309)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3309)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3309)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3309)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3309)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3309)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3309)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3322)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3322)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3322)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3322)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3322)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3322)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3322)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3581)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3581)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3581)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3581)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3581)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3581)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,11 +1462,9 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3581)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3645)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3645)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3645)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3645)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3645)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3645)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3645)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
@@ -2947,7 +2946,6 @@
             final double pia = 1.5707963267948966*2.0;
             final double pib = 6.123233995736766E-17*2.0;
 
-            za = pia - result;
             zb = -(za - pia + result);
             zb += pib - resultb;
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3923)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3923)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3923)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3923)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3923)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3923)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3923)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3957)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3957)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3957)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3957)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3957)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3957)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v3957)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4243)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4243)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4243)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4243)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4243)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,14 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1180,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4243)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1466,7 +1466,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4243)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4294)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4294)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4294)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4294)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4294)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4294)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4294)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4330)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4330)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4330)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4330)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4330)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4330)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4380)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4380)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4380)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4380)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4380)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4380)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,11 +1462,9 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4380)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4411)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4411)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4411)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4411)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4411)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4411)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:38 [main] [INFO]  PatchLogExporter - patch (v4411)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -489,7 +486,6 @@
      */
     public Complex subtract(Complex subtrahend)
         throws NullArgumentException {
-        MathUtils.checkNotNull(subtrahend);
         if (isNaN || subtrahend.isNaN) {
             return NaN;
         }
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4615)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4615)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4615)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4615)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4615)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4615)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -1466,7 +1465,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4615)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4728)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4728)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4728)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4728)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4728)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4728)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4728)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4848)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4848)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4848)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4848)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4848)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4848)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4891)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4891)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4891)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4891)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4891)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4891)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4891)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,11 +1462,9 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -1466,7 +1465,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5110)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5110)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5110)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5110)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5110)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5110)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5190)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5190)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5190)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5190)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5190)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5190)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1462,7 +1462,6 @@
         b = b + d;
 
         c = a + LN_2_B*exp;
-        d = -(c - a - LN_2_B*exp);
         a = c;
         b = b + d;
 
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5190)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5225)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5225)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5225)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5225)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5225)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5225)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5225)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5228)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5228)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5228)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5228)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5228)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5228)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5228)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5231)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5231)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5231)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5231)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5231)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5231)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -578,7 +577,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5231)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1373,7 +1373,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5321)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5321)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5321)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5321)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5321)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5321)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -1466,7 +1465,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5321)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -578,7 +577,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:39 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5404)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5404)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5404)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5404)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5404)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1088,7 +1085,8 @@
                                            n);
         }
 
-        final List<Complex> result = new ArrayList<Complex>();
+        double imaginary2 = 2.0 * imaginary;
+		final List<Complex> result = new ArrayList<Complex>();
 
         if (isNaN) {
             result.add(NaN);
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5404)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5404)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -578,7 +577,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -1466,7 +1464,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnm[1];
         d = -(c - a - lnm[1]);
         a = c;
         b = b + d;
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5432)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5492)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5492)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5492)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5492)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5492)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1088,7 +1086,8 @@
                                            n);
         }
 
-        final List<Complex> result = new ArrayList<Complex>();
+        double imaginary2 = 2.0 * imaginary;
+		final List<Complex> result = new ArrayList<Complex>();
 
         if (isNaN) {
             result.add(NaN);
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5492)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        final List<Complex> result=new ArrayList<Complex>();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        final List<Complex> result=new ArrayList<Complex>();
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -578,7 +577,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -2798,7 +2796,6 @@
         }
 
         if (negative) {
-            result = -result;
         }
 
         return result;
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5506)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5539)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5539)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5539)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5539)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5539)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1088,7 +1086,8 @@
                                            n);
         }
 
-        final List<Complex> result = new ArrayList<Complex>();
+        double imaginary2 = 2.0 * imaginary;
+		final List<Complex> result = new ArrayList<Complex>();
 
         if (isNaN) {
             result.add(NaN);
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5539)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
@@ -1373,7 +1372,8 @@
         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
 
         double lnza = 0.0;
-        double lnzb = 0.0;
+        double temp = x * HEX_40000000;
+		double lnzb = 0.0;
 
         if (hiPrec != null) {
             /* split epsilon -> x */
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5539)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5546)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5546)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5546)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5546)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5546)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        int sign = 0;
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1088,7 +1086,8 @@
                                            n);
         }
 
-        final List<Complex> result = new ArrayList<Complex>();
+        double imaginary2 = 2.0 * imaginary;
+		final List<Complex> result = new ArrayList<Complex>();
 
         if (isNaN) {
             result.add(NaN);
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5546)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -460,7 +460,6 @@
       }
 
       if (negate) {
-          result = -result;
       }
 
       return result;
2023-08-09 20:15:40 [main] [INFO]  PatchLogExporter - patch (v5546)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 20:15:40 [main] [INFO]  KGenProgMain - Summary
Reached generation = 29
Generated variants = 5546
Syntax valid variants = 4408
Build succeeded variants = 1556
Time elapsed = 21 minutes 25 seconds
Exit status = SUCCESS
