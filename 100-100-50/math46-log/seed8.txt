2023-08-09 21:26:17 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-09 21:26:17 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-09 21:26:17 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-09 21:26:17 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/fse/Downloads/kGenProg/example/math46/kgenprog-46.toml (set by command line)
rootDir = /Users/fse/Downloads/kGenProg/example/math46 (set in config file)
productPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/main] (set in config file)
testPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.complex.ComplexTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 8 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/fse/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-09 21:26:40 [main] [INFO]  KGenProgMain - initial failed tests (2/116)
org.apache.commons.math.complex.ComplexTest.testDivideZero: expected:<(Infinity, Infinity)> but was:<(NaN, NaN)>
org.apache.commons.math.complex.ComplexTest.testAtanI: null

2023-08-09 21:26:41 [main] [INFO]  KGenProgMain - GA started
2023-08-09 21:26:41 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-09 21:26:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, build-succeeded 7, build-failed 51, syntax-invalid 1, redundant 41
Fitness: max 0.991(2), min 0.957(1), ave 0.977
Test execution time: sum 6649 ms, max 1737 ms, min 599 ms
----------------------------------------------------------------

2023-08-09 21:26:55 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-09 21:27:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 100, build-succeeded 14, build-failed 67, syntax-invalid 4, redundant 15
Fitness: max 0.991(7), min 0.81(1), ave 0.968
Test execution time: sum 8427 ms, max 864 ms, min 444 ms
----------------------------------------------------------------

2023-08-09 21:27:11 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-09 21:27:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 4 seconds
Variants: generated 200, build-succeeded 50, build-failed 55, syntax-invalid 9, redundant 86
Fitness: max 1(3), min 0.819(1), ave 0.967
Test execution time: sum 26072 ms, max 988 ms, min 421 ms
----------------------------------------------------------------

2023-08-09 21:27:46 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-09 21:28:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 34 seconds
Variants: generated 200, build-succeeded 41, build-failed 52, syntax-invalid 14, redundant 93
Fitness: max 1(1), min 0.845(1), ave 0.973
Test execution time: sum 19746 ms, max 613 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 21:28:16 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-09 21:28:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 6 seconds
Variants: generated 200, build-succeeded 45, build-failed 60, syntax-invalid 16, redundant 79
Fitness: max 1(1), min 0.957(1), ave 0.983
Test execution time: sum 23153 ms, max 904 ms, min 427 ms
----------------------------------------------------------------

2023-08-09 21:28:47 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-09 21:29:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 32 seconds
Variants: generated 200, build-succeeded 39, build-failed 57, syntax-invalid 28, redundant 76
Fitness: max 1(4), min 0.957(1), ave 0.986
Test execution time: sum 18455 ms, max 598 ms, min 407 ms
----------------------------------------------------------------

2023-08-09 21:29:14 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-09 21:29:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 1 seconds
Variants: generated 200, build-succeeded 45, build-failed 61, syntax-invalid 28, redundant 66
Fitness: max 1(4), min 0.957(1), ave 0.985
Test execution time: sum 20964 ms, max 607 ms, min 421 ms
----------------------------------------------------------------

2023-08-09 21:29:43 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-09 21:30:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 39 seconds
Variants: generated 200, build-succeeded 58, build-failed 64, syntax-invalid 20, redundant 58
Fitness: max 1(3), min 0.957(2), ave 0.987
Test execution time: sum 28382 ms, max 964 ms, min 403 ms
----------------------------------------------------------------

2023-08-09 21:30:21 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-09 21:31:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 21 seconds
Variants: generated 200, build-succeeded 57, build-failed 53, syntax-invalid 33, redundant 57
Fitness: max 1(3), min 0.957(1), ave 0.987
Test execution time: sum 32103 ms, max 992 ms, min 403 ms
----------------------------------------------------------------

2023-08-09 21:31:02 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-09 21:31:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 7 seconds
Variants: generated 200, build-succeeded 61, build-failed 53, syntax-invalid 41, redundant 45
Fitness: max 1(1), min 0.957(4), ave 0.986
Test execution time: sum 34972 ms, max 988 ms, min 389 ms
----------------------------------------------------------------

2023-08-09 21:31:49 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-09 21:32:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 50 seconds
Variants: generated 200, build-succeeded 54, build-failed 67, syntax-invalid 48, redundant 31
Fitness: max 1(4), min 0.957(2), ave 0.987
Test execution time: sum 31619 ms, max 938 ms, min 383 ms
----------------------------------------------------------------

2023-08-09 21:32:32 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-09 21:33:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 35 seconds
Variants: generated 200, build-succeeded 56, build-failed 54, syntax-invalid 54, redundant 36
Fitness: max 1(2), min 0.931(1), ave 0.987
Test execution time: sum 34500 ms, max 937 ms, min 436 ms
----------------------------------------------------------------

2023-08-09 21:33:17 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-09 21:34:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 24 seconds
Variants: generated 200, build-succeeded 56, build-failed 52, syntax-invalid 50, redundant 42
Fitness: max 1(1), min 0.948(2), ave 0.986
Test execution time: sum 36595 ms, max 921 ms, min 420 ms
----------------------------------------------------------------

2023-08-09 21:34:06 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-09 21:34:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 13 seconds
Variants: generated 200, build-succeeded 51, build-failed 61, syntax-invalid 54, redundant 34
Fitness: max 0.991(32), min 0.948(2), ave 0.984
Test execution time: sum 35372 ms, max 929 ms, min 459 ms
----------------------------------------------------------------

2023-08-09 21:34:54 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-09 21:35:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 51 seconds
Variants: generated 200, build-succeeded 49, build-failed 66, syntax-invalid 53, redundant 32
Fitness: max 0.991(30), min 0.922(1), ave 0.983
Test execution time: sum 27054 ms, max 922 ms, min 412 ms
----------------------------------------------------------------

2023-08-09 21:35:33 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-09 21:36:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 26 seconds
Variants: generated 200, build-succeeded 48, build-failed 60, syntax-invalid 64, redundant 28
Fitness: max 1(2), min 0.931(1), ave 0.981
Test execution time: sum 25463 ms, max 994 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 21:36:07 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-09 21:36:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 0 seconds
Variants: generated 200, build-succeeded 46, build-failed 68, syntax-invalid 51, redundant 35
Fitness: max 1(1), min 0.948(1), ave 0.989
Test execution time: sum 23797 ms, max 922 ms, min 397 ms
----------------------------------------------------------------

2023-08-09 21:36:41 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-09 21:37:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 41 seconds
Variants: generated 200, build-succeeded 59, build-failed 57, syntax-invalid 59, redundant 25
Fitness: max 1(3), min 0.957(2), ave 0.988
Test execution time: sum 31762 ms, max 966 ms, min 407 ms
----------------------------------------------------------------

2023-08-09 21:37:23 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-09 21:38:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 22 seconds
Variants: generated 200, build-succeeded 57, build-failed 52, syntax-invalid 61, redundant 30
Fitness: max 0.991(40), min 0.931(1), ave 0.984
Test execution time: sum 30669 ms, max 1003 ms, min 396 ms
----------------------------------------------------------------

2023-08-09 21:38:03 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-09 21:38:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 8 seconds
Variants: generated 200, build-succeeded 64, build-failed 65, syntax-invalid 46, redundant 25
Fitness: max 1(1), min 0.888(1), ave 0.985
Test execution time: sum 34988 ms, max 866 ms, min 408 ms
----------------------------------------------------------------

2023-08-09 21:38:49 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-09 21:39:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 47 seconds
Variants: generated 200, build-succeeded 52, build-failed 60, syntax-invalid 51, redundant 37
Fitness: max 1(4), min 0.957(7), ave 0.986
Test execution time: sum 29094 ms, max 872 ms, min 401 ms
----------------------------------------------------------------

2023-08-09 21:39:29 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-09 21:40:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 33 seconds
Variants: generated 200, build-succeeded 60, build-failed 57, syntax-invalid 53, redundant 30
Fitness: max 1(2), min 0.957(3), ave 0.989
Test execution time: sum 35272 ms, max 923 ms, min 402 ms
----------------------------------------------------------------

2023-08-09 21:40:15 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-09 21:40:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 16 seconds
Variants: generated 200, build-succeeded 54, build-failed 61, syntax-invalid 59, redundant 26
Fitness: max 1(2), min 0.931(1), ave 0.985
Test execution time: sum 31429 ms, max 919 ms, min 416 ms
----------------------------------------------------------------

2023-08-09 21:40:58 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-09 21:41:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 1 seconds
Variants: generated 200, build-succeeded 51, build-failed 56, syntax-invalid 55, redundant 38
Fitness: max 0.991(41), min 0.914(1), ave 0.985
Test execution time: sum 32384 ms, max 898 ms, min 407 ms
----------------------------------------------------------------

2023-08-09 21:41:42 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-09 21:42:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 53 seconds
Variants: generated 200, build-succeeded 58, build-failed 57, syntax-invalid 51, redundant 34
Fitness: max 1(1), min 0.914(1), ave 0.986
Test execution time: sum 39270 ms, max 908 ms, min 419 ms
----------------------------------------------------------------

2023-08-09 21:42:34 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-09 21:43:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 49 seconds
Variants: generated 200, build-succeeded 66, build-failed 50, syntax-invalid 48, redundant 36
Fitness: max 1(2), min 0.862(1), ave 0.984
Test execution time: sum 43132 ms, max 1110 ms, min 394 ms
----------------------------------------------------------------

2023-08-09 21:43:31 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-09 21:44:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 43 seconds
Variants: generated 200, build-succeeded 64, build-failed 50, syntax-invalid 60, redundant 26
Fitness: max 0.991(46), min 0.957(4), ave 0.985
Test execution time: sum 41483 ms, max 931 ms, min 408 ms
----------------------------------------------------------------

2023-08-09 21:44:24 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-09 21:45:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 33 seconds
Variants: generated 200, build-succeeded 55, build-failed 55, syntax-invalid 64, redundant 26
Fitness: max 0.991(43), min 0.957(3), ave 0.987
Test execution time: sum 38300 ms, max 894 ms, min 461 ms
----------------------------------------------------------------

2023-08-09 21:45:14 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-09 21:46:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 24 seconds
Variants: generated 200, build-succeeded 56, build-failed 55, syntax-invalid 64, redundant 25
Fitness: max 1(2), min 0.931(1), ave 0.987
Test execution time: sum 39018 ms, max 2079 ms, min 411 ms
----------------------------------------------------------------

2023-08-09 21:46:05 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-09 21:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 0 seconds
Variants: generated 200, build-succeeded 49, build-failed 57, syntax-invalid 64, redundant 30
Fitness: max 0.991(42), min 0.957(1), ave 0.988
Test execution time: sum 25889 ms, max 881 ms, min 389 ms
----------------------------------------------------------------

2023-08-09 21:46:41 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-09 21:47:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 41 seconds
Variants: generated 200, build-succeeded 61, build-failed 48, syntax-invalid 61, redundant 30
Fitness: max 1(2), min 0.957(1), ave 0.988
Test execution time: sum 31350 ms, max 858 ms, min 398 ms
----------------------------------------------------------------

2023-08-09 21:47:22 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-09 21:47:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 9 seconds
Variants: generated 200, build-succeeded 39, build-failed 60, syntax-invalid 81, redundant 20
Fitness: max 1(1), min 0.931(1), ave 0.988
Test execution time: sum 20617 ms, max 778 ms, min 406 ms
----------------------------------------------------------------

2023-08-09 21:47:51 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-09 21:48:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 41 seconds
Variants: generated 200, build-succeeded 45, build-failed 50, syntax-invalid 75, redundant 30
Fitness: max 1(1), min 0.957(3), ave 0.987
Test execution time: sum 22589 ms, max 841 ms, min 396 ms
----------------------------------------------------------------

2023-08-09 21:48:22 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-09 21:49:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 22 seconds
Variants: generated 200, build-succeeded 58, build-failed 50, syntax-invalid 69, redundant 23
Fitness: max 0.991(50), min 0.922(1), ave 0.987
Test execution time: sum 31323 ms, max 866 ms, min 388 ms
----------------------------------------------------------------

2023-08-09 21:49:04 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-09 21:49:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 51 seconds
Variants: generated 200, build-succeeded 36, build-failed 50, syntax-invalid 83, redundant 31
Fitness: max 1(2), min 0.931(1), ave 0.99
Test execution time: sum 19948 ms, max 879 ms, min 381 ms
----------------------------------------------------------------

2023-08-09 21:49:33 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-09 21:50:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 30 seconds
Variants: generated 200, build-succeeded 51, build-failed 56, syntax-invalid 70, redundant 23
Fitness: max 1(2), min 0.957(2), ave 0.988
Test execution time: sum 28549 ms, max 844 ms, min 403 ms
----------------------------------------------------------------

2023-08-09 21:50:12 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-09 21:50:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 8 seconds
Variants: generated 200, build-succeeded 46, build-failed 58, syntax-invalid 75, redundant 21
Fitness: max 0.991(36), min 0.966(2), ave 0.988
Test execution time: sum 27380 ms, max 942 ms, min 417 ms
----------------------------------------------------------------

2023-08-09 21:50:49 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-09 21:51:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 47 seconds
Variants: generated 200, build-succeeded 49, build-failed 55, syntax-invalid 69, redundant 27
Fitness: max 0.991(44), min 0.957(2), ave 0.989
Test execution time: sum 28948 ms, max 863 ms, min 418 ms
----------------------------------------------------------------

2023-08-09 21:51:29 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-09 21:52:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 32 seconds
Variants: generated 200, build-succeeded 51, build-failed 58, syntax-invalid 64, redundant 27
Fitness: max 0.991(46), min 0.931(1), ave 0.988
Test execution time: sum 32198 ms, max 911 ms, min 425 ms
----------------------------------------------------------------

2023-08-09 21:52:13 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-09 21:53:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 18 seconds
Variants: generated 200, build-succeeded 50, build-failed 59, syntax-invalid 70, redundant 21
Fitness: max 0.991(44), min 0.957(4), ave 0.988
Test execution time: sum 33593 ms, max 867 ms, min 422 ms
----------------------------------------------------------------

2023-08-09 21:53:00 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-09 21:54:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 19 seconds
Variants: generated 200, build-succeeded 67, build-failed 50, syntax-invalid 56, redundant 27
Fitness: max 0.991(61), min 0.836(1), ave 0.987
Test execution time: sum 47050 ms, max 1000 ms, min 459 ms
----------------------------------------------------------------

2023-08-09 21:54:01 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-09 21:54:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 8 seconds
Variants: generated 200, build-succeeded 54, build-failed 63, syntax-invalid 59, redundant 24
Fitness: max 1(2), min 0.931(1), ave 0.99
Test execution time: sum 33984 ms, max 1858 ms, min 392 ms
----------------------------------------------------------------

2023-08-09 21:54:50 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-09 21:55:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 46 seconds
Variants: generated 200, build-succeeded 52, build-failed 58, syntax-invalid 63, redundant 27
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 28363 ms, max 979 ms, min 419 ms
----------------------------------------------------------------

2023-08-09 21:55:28 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-09 21:56:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 22 seconds
Variants: generated 200, build-succeeded 46, build-failed 56, syntax-invalid 67, redundant 31
Fitness: max 0.991(42), min 0.948(1), ave 0.989
Test execution time: sum 24660 ms, max 808 ms, min 405 ms
----------------------------------------------------------------

2023-08-09 21:56:03 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-09 21:56:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 59 seconds
Variants: generated 200, build-succeeded 51, build-failed 59, syntax-invalid 67, redundant 23
Fitness: max 0.991(46), min 0.957(1), ave 0.99
Test execution time: sum 26965 ms, max 850 ms, min 394 ms
----------------------------------------------------------------

2023-08-09 21:56:41 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-09 21:57:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 35 seconds
Variants: generated 200, build-succeeded 45, build-failed 60, syntax-invalid 69, redundant 26
Fitness: max 0.991(39), min 0.931(1), ave 0.988
Test execution time: sum 24615 ms, max 956 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 21:57:17 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-09 21:57:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 10 seconds
Variants: generated 200, build-succeeded 45, build-failed 53, syntax-invalid 74, redundant 28
Fitness: max 0.991(44), min 0.974(1), ave 0.991
Test execution time: sum 24862 ms, max 865 ms, min 396 ms
----------------------------------------------------------------

2023-08-09 21:57:51 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-09 21:58:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 40 seconds
Variants: generated 200, build-succeeded 33, build-failed 61, syntax-invalid 81, redundant 25
Fitness: max 0.991(26), min 0.845(1), ave 0.981
Test execution time: sum 19164 ms, max 1020 ms, min 399 ms
----------------------------------------------------------------

2023-08-09 21:58:21 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-09 21:59:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 19 seconds
Variants: generated 200, build-succeeded 38, build-failed 61, syntax-invalid 77, redundant 24
Fitness: max 0.991(33), min 0.897(1), ave 0.988
Test execution time: sum 25824 ms, max 1098 ms, min 425 ms
----------------------------------------------------------------

2023-08-09 21:59:01 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-09 21:59:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 55 seconds
Variants: generated 200, build-succeeded 42, build-failed 57, syntax-invalid 75, redundant 26
Fitness: max 1(1), min 0.957(1), ave 0.99
Test execution time: sum 24747 ms, max 854 ms, min 402 ms
----------------------------------------------------------------

2023-08-09 21:59:37 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-09 22:00:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 24 seconds
Variants: generated 200, build-succeeded 30, build-failed 60, syntax-invalid 80, redundant 30
Fitness: max 0.991(29), min 0.957(1), ave 0.99
Test execution time: sum 18049 ms, max 838 ms, min 408 ms
----------------------------------------------------------------

2023-08-09 22:00:06 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-09 22:00:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 6 seconds
Variants: generated 200, build-succeeded 48, build-failed 49, syntax-invalid 72, redundant 31
Fitness: max 1(1), min 0.845(1), ave 0.987
Test execution time: sum 29870 ms, max 869 ms, min 412 ms
----------------------------------------------------------------

2023-08-09 22:00:47 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-09 22:01:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 43 seconds
Variants: generated 200, build-succeeded 40, build-failed 46, syntax-invalid 78, redundant 36
Fitness: max 0.991(33), min 0.966(3), ave 0.988
Test execution time: sum 26120 ms, max 965 ms, min 441 ms
----------------------------------------------------------------

2023-08-09 22:01:24 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-09 22:02:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 22 seconds
Variants: generated 200, build-succeeded 39, build-failed 58, syntax-invalid 69, redundant 34
Fitness: max 1(2), min 0.957(3), ave 0.987
Test execution time: sum 27058 ms, max 985 ms, min 438 ms
----------------------------------------------------------------

2023-08-09 22:02:04 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-09 22:02:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 2 seconds
Variants: generated 200, build-succeeded 38, build-failed 65, syntax-invalid 74, redundant 23
Fitness: max 1(1), min 0.966(2), ave 0.99
Test execution time: sum 27278 ms, max 935 ms, min 476 ms
----------------------------------------------------------------

2023-08-09 22:02:44 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-09 22:03:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 41 seconds
Variants: generated 200, build-succeeded 37, build-failed 56, syntax-invalid 73, redundant 34
Fitness: max 1(1), min 0.957(1), ave 0.989
Test execution time: sum 26873 ms, max 907 ms, min 522 ms
----------------------------------------------------------------

2023-08-09 22:03:22 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-09 22:03:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 15 seconds
Variants: generated 200, build-succeeded 39, build-failed 51, syntax-invalid 84, redundant 26
Fitness: max 0.991(36), min 0.957(1), ave 0.99
Test execution time: sum 22552 ms, max 1039 ms, min 403 ms
----------------------------------------------------------------

2023-08-09 22:03:57 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-09 22:04:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 46 seconds
Variants: generated 200, build-succeeded 39, build-failed 62, syntax-invalid 77, redundant 22
Fitness: max 0.991(29), min 0.922(1), ave 0.987
Test execution time: sum 20655 ms, max 873 ms, min 403 ms
----------------------------------------------------------------

2023-08-09 22:04:27 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-09 22:05:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 18 seconds
Variants: generated 200, build-succeeded 44, build-failed 48, syntax-invalid 73, redundant 35
Fitness: max 1(1), min 0.957(1), ave 0.989
Test execution time: sum 23359 ms, max 891 ms, min 406 ms
----------------------------------------------------------------

2023-08-09 22:05:00 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-09 22:05:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 41 seconds
Variants: generated 200, build-succeeded 26, build-failed 50, syntax-invalid 94, redundant 30
Fitness: max 1(1), min 0.931(1), ave 0.989
Test execution time: sum 13914 ms, max 996 ms, min 393 ms
----------------------------------------------------------------

2023-08-09 22:05:22 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-09 22:05:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 8 seconds
Variants: generated 200, build-succeeded 35, build-failed 56, syntax-invalid 72, redundant 37
Fitness: max 0.991(30), min 0.94(1), ave 0.988
Test execution time: sum 19123 ms, max 838 ms, min 405 ms
----------------------------------------------------------------

2023-08-09 22:05:50 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-09 22:06:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 32 seconds
Variants: generated 200, build-succeeded 29, build-failed 56, syntax-invalid 83, redundant 32
Fitness: max 1(1), min 0.957(1), ave 0.99
Test execution time: sum 14331 ms, max 756 ms, min 403 ms
----------------------------------------------------------------

2023-08-09 22:06:13 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-09 22:06:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 58 seconds
Variants: generated 200, build-succeeded 30, build-failed 60, syntax-invalid 92, redundant 18
Fitness: max 0.991(23), min 0.957(2), ave 0.987
Test execution time: sum 15931 ms, max 869 ms, min 397 ms
----------------------------------------------------------------

2023-08-09 22:06:39 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-09 22:07:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 25 seconds
Variants: generated 200, build-succeeded 32, build-failed 55, syntax-invalid 86, redundant 27
Fitness: max 0.991(25), min 0.957(2), ave 0.987
Test execution time: sum 17295 ms, max 911 ms, min 399 ms
----------------------------------------------------------------

2023-08-09 22:07:07 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-09 22:07:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 50 seconds
Variants: generated 200, build-succeeded 28, build-failed 59, syntax-invalid 94, redundant 19
Fitness: max 0.991(20), min 0.966(1), ave 0.988
Test execution time: sum 14844 ms, max 774 ms, min 408 ms
----------------------------------------------------------------

2023-08-09 22:07:32 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-09 22:07:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 13 seconds
Variants: generated 200, build-succeeded 26, build-failed 51, syntax-invalid 96, redundant 27
Fitness: max 0.991(21), min 0.957(1), ave 0.988
Test execution time: sum 13846 ms, max 838 ms, min 406 ms
----------------------------------------------------------------

2023-08-09 22:07:54 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-09 22:08:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 39 seconds
Variants: generated 200, build-succeeded 29, build-failed 60, syntax-invalid 84, redundant 27
Fitness: max 0.991(20), min 0.957(1), ave 0.987
Test execution time: sum 16690 ms, max 947 ms, min 390 ms
----------------------------------------------------------------

2023-08-09 22:08:21 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-09 22:08:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 10 seconds
Variants: generated 200, build-succeeded 35, build-failed 63, syntax-invalid 80, redundant 22
Fitness: max 0.991(25), min 0.957(2), ave 0.986
Test execution time: sum 20496 ms, max 850 ms, min 388 ms
----------------------------------------------------------------

2023-08-09 22:08:51 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-09 22:09:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 39 seconds
Variants: generated 200, build-succeeded 33, build-failed 66, syntax-invalid 77, redundant 24
Fitness: max 1(1), min 0.957(2), ave 0.987
Test execution time: sum 18874 ms, max 866 ms, min 385 ms
----------------------------------------------------------------

2023-08-09 22:09:21 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-09 22:09:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 7 seconds
Variants: generated 200, build-succeeded 29, build-failed 71, syntax-invalid 83, redundant 17
Fitness: max 0.991(22), min 0.957(2), ave 0.987
Test execution time: sum 17241 ms, max 814 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 22:09:49 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-09 22:10:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 39 seconds
Variants: generated 200, build-succeeded 34, build-failed 56, syntax-invalid 87, redundant 23
Fitness: max 1(3), min 0.983(3), ave 0.991
Test execution time: sum 20612 ms, max 851 ms, min 396 ms
----------------------------------------------------------------

2023-08-09 22:10:20 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-09 22:10:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 8 seconds
Variants: generated 200, build-succeeded 27, build-failed 72, syntax-invalid 78, redundant 23
Fitness: max 0.991(22), min 0.957(1), ave 0.989
Test execution time: sum 17729 ms, max 860 ms, min 417 ms
----------------------------------------------------------------

2023-08-09 22:10:49 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-09 22:11:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 37 seconds
Variants: generated 200, build-succeeded 25, build-failed 71, syntax-invalid 86, redundant 18
Fitness: max 0.991(19), min 0.957(3), ave 0.986
Test execution time: sum 17140 ms, max 935 ms, min 452 ms
----------------------------------------------------------------

2023-08-09 22:11:19 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-09 22:11:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 14 seconds
Variants: generated 200, build-succeeded 33, build-failed 64, syntax-invalid 86, redundant 17
Fitness: max 0.991(28), min 0.957(2), ave 0.989
Test execution time: sum 23279 ms, max 983 ms, min 435 ms
----------------------------------------------------------------

2023-08-09 22:11:55 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-09 22:12:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 45 seconds
Variants: generated 200, build-succeeded 27, build-failed 69, syntax-invalid 80, redundant 24
Fitness: max 0.991(27), min 0.991(27), ave 0.991
Test execution time: sum 19032 ms, max 868 ms, min 511 ms
----------------------------------------------------------------

2023-08-09 22:12:27 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-09 22:12:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 16 seconds
Variants: generated 200, build-succeeded 29, build-failed 64, syntax-invalid 93, redundant 14
Fitness: max 0.991(21), min 0.888(1), ave 0.984
Test execution time: sum 18133 ms, max 1278 ms, min 394 ms
----------------------------------------------------------------

2023-08-09 22:12:57 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-09 22:13:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 37 seconds
Variants: generated 200, build-succeeded 22, build-failed 62, syntax-invalid 95, redundant 21
Fitness: max 0.991(22), min 0.991(22), ave 0.991
Test execution time: sum 11687 ms, max 844 ms, min 405 ms
----------------------------------------------------------------

2023-08-09 22:13:19 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-09 22:13:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 59 seconds
Variants: generated 200, build-succeeded 26, build-failed 65, syntax-invalid 85, redundant 24
Fitness: max 0.991(21), min 0.957(2), ave 0.987
Test execution time: sum 12860 ms, max 860 ms, min 392 ms
----------------------------------------------------------------

2023-08-09 22:13:41 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-09 22:14:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 19 seconds
Variants: generated 200, build-succeeded 20, build-failed 59, syntax-invalid 95, redundant 26
Fitness: max 0.991(17), min 0.974(2), ave 0.989
Test execution time: sum 10161 ms, max 857 ms, min 410 ms
----------------------------------------------------------------

2023-08-09 22:14:00 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-09 22:14:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 42 seconds
Variants: generated 200, build-succeeded 26, build-failed 58, syntax-invalid 91, redundant 25
Fitness: max 0.991(18), min 0.931(1), ave 0.982
Test execution time: sum 13883 ms, max 803 ms, min 398 ms
----------------------------------------------------------------

2023-08-09 22:14:24 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-09 22:14:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 8 seconds
Variants: generated 200, build-succeeded 34, build-failed 51, syntax-invalid 94, redundant 21
Fitness: max 0.991(28), min 0.948(1), ave 0.989
Test execution time: sum 17448 ms, max 878 ms, min 390 ms
----------------------------------------------------------------

2023-08-09 22:14:50 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-09 22:15:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 33 seconds
Variants: generated 200, build-succeeded 27, build-failed 62, syntax-invalid 92, redundant 19
Fitness: max 0.991(24), min 0.966(2), ave 0.989
Test execution time: sum 13998 ms, max 859 ms, min 401 ms
----------------------------------------------------------------

2023-08-09 22:15:15 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-09 22:15:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 57 seconds
Variants: generated 200, build-succeeded 23, build-failed 61, syntax-invalid 95, redundant 21
Fitness: max 0.991(19), min 0.957(3), ave 0.986
Test execution time: sum 13077 ms, max 843 ms, min 400 ms
----------------------------------------------------------------

2023-08-09 22:15:38 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-09 22:16:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 24 seconds
Variants: generated 200, build-succeeded 30, build-failed 72, syntax-invalid 84, redundant 14
Fitness: max 1(1), min 0.966(2), ave 0.989
Test execution time: sum 15853 ms, max 802 ms, min 402 ms
----------------------------------------------------------------

2023-08-09 22:16:06 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-09 22:16:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 53 seconds
Variants: generated 200, build-succeeded 30, build-failed 55, syntax-invalid 85, redundant 30
Fitness: max 1(1), min 0.957(2), ave 0.989
Test execution time: sum 17038 ms, max 885 ms, min 408 ms
----------------------------------------------------------------

2023-08-09 22:16:35 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-09 22:17:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 23 seconds
Variants: generated 200, build-succeeded 31, build-failed 75, syntax-invalid 77, redundant 17
Fitness: max 1(1), min 0.966(2), ave 0.99
Test execution time: sum 17169 ms, max 942 ms, min 396 ms
----------------------------------------------------------------

2023-08-09 22:17:04 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-09 22:17:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 51 seconds
Variants: generated 200, build-succeeded 26, build-failed 69, syntax-invalid 91, redundant 14
Fitness: max 0.991(24), min 0.983(2), ave 0.991
Test execution time: sum 15731 ms, max 964 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 22:17:32 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-09 22:18:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 23 seconds
Variants: generated 200, build-succeeded 33, build-failed 60, syntax-invalid 87, redundant 20
Fitness: max 0.991(29), min 0.957(1), ave 0.99
Test execution time: sum 19275 ms, max 890 ms, min 421 ms
----------------------------------------------------------------

2023-08-09 22:18:04 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-09 22:18:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 57 seconds
Variants: generated 200, build-succeeded 34, build-failed 61, syntax-invalid 87, redundant 18
Fitness: max 1(1), min 0.922(1), ave 0.986
Test execution time: sum 20342 ms, max 963 ms, min 412 ms
----------------------------------------------------------------

2023-08-09 22:18:39 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-09 22:19:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 28 seconds
Variants: generated 200, build-succeeded 29, build-failed 55, syntax-invalid 100, redundant 16
Fitness: max 0.991(24), min 0.957(1), ave 0.988
Test execution time: sum 18948 ms, max 961 ms, min 417 ms
----------------------------------------------------------------

2023-08-09 22:19:09 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-09 22:19:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 59 seconds
Variants: generated 200, build-succeeded 29, build-failed 64, syntax-invalid 83, redundant 24
Fitness: max 0.991(25), min 0.957(2), ave 0.988
Test execution time: sum 17837 ms, max 913 ms, min 426 ms
----------------------------------------------------------------

2023-08-09 22:19:40 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-09 22:20:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 31 seconds
Variants: generated 200, build-succeeded 27, build-failed 68, syntax-invalid 83, redundant 22
Fitness: max 0.991(25), min 0.931(1), ave 0.989
Test execution time: sum 17889 ms, max 975 ms, min 458 ms
----------------------------------------------------------------

2023-08-09 22:20:13 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-09 22:20:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 10 seconds
Variants: generated 200, build-succeeded 36, build-failed 57, syntax-invalid 86, redundant 21
Fitness: max 0.991(29), min 0.836(1), ave 0.984
Test execution time: sum 24350 ms, max 878 ms, min 430 ms
----------------------------------------------------------------

2023-08-09 22:20:51 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-09 22:21:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 3 seconds
Variants: generated 200, build-succeeded 52, build-failed 58, syntax-invalid 75, redundant 15
Fitness: max 1(1), min 0.957(3), ave 0.989
Test execution time: sum 37103 ms, max 990 ms, min 476 ms
----------------------------------------------------------------

2023-08-09 22:21:45 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-09 22:22:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 38 seconds
Variants: generated 200, build-succeeded 42, build-failed 73, syntax-invalid 68, redundant 17
Fitness: max 0.991(37), min 0.845(1), ave 0.987
Test execution time: sum 21085 ms, max 896 ms, min 394 ms
----------------------------------------------------------------

2023-08-09 22:22:20 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-09 22:22:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 8 seconds
Variants: generated 200, build-succeeded 37, build-failed 72, syntax-invalid 70, redundant 21
Fitness: max 0.991(32), min 0.957(2), ave 0.989
Test execution time: sum 18496 ms, max 822 ms, min 408 ms
----------------------------------------------------------------

2023-08-09 22:22:50 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-09 22:23:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 41 seconds
Variants: generated 200, build-succeeded 36, build-failed 66, syntax-invalid 80, redundant 18
Fitness: max 1(2), min 0.957(1), ave 0.989
Test execution time: sum 19201 ms, max 925 ms, min 393 ms
----------------------------------------------------------------

2023-08-09 22:23:22 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-09 22:23:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 13 seconds
Variants: generated 200, build-succeeded 36, build-failed 69, syntax-invalid 81, redundant 14
Fitness: max 1(2), min 0.957(1), ave 0.99
Test execution time: sum 20330 ms, max 956 ms, min 399 ms
----------------------------------------------------------------

2023-08-09 22:23:55 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-09 22:24:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 50 seconds
Variants: generated 200, build-succeeded 41, build-failed 67, syntax-invalid 80, redundant 12
Fitness: max 0.991(38), min 0.94(1), ave 0.989
Test execution time: sum 23557 ms, max 951 ms, min 405 ms
----------------------------------------------------------------

2023-08-09 22:24:32 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-09 22:25:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 24 seconds
Variants: generated 200, build-succeeded 35, build-failed 60, syntax-invalid 92, redundant 13
Fitness: max 1(3), min 0.957(4), ave 0.987
Test execution time: sum 20522 ms, max 984 ms, min 394 ms
----------------------------------------------------------------

2023-08-09 22:25:06 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-09 22:25:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 56 seconds
Variants: generated 200, build-succeeded 33, build-failed 66, syntax-invalid 82, redundant 19
Fitness: max 1(2), min 0.974(1), ave 0.99
Test execution time: sum 19272 ms, max 866 ms, min 395 ms
----------------------------------------------------------------

2023-08-09 22:25:38 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-09 22:26:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 28 seconds
Variants: generated 200, build-succeeded 31, build-failed 60, syntax-invalid 90, redundant 19
Fitness: max 1(2), min 0.957(1), ave 0.99
Test execution time: sum 18365 ms, max 906 ms, min 394 ms
----------------------------------------------------------------

2023-08-09 22:26:09 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-09 22:26:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 seconds
Variants: generated 200, build-succeeded 35, build-failed 60, syntax-invalid 89, redundant 16
Fitness: max 1(2), min 0.966(1), ave 0.991
Test execution time: sum 20691 ms, max 875 ms, min 381 ms
----------------------------------------------------------------

2023-08-09 22:26:43 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-09 22:27:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 seconds
Variants: generated 200, build-succeeded 36, build-failed 58, syntax-invalid 86, redundant 20
Fitness: max 0.991(31), min 0.957(1), ave 0.989
Test execution time: sum 21274 ms, max 804 ms, min 397 ms
----------------------------------------------------------------

2023-08-09 22:27:19 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-09 22:27:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 10 seconds
Variants: generated 200, build-succeeded 29, build-failed 56, syntax-invalid 92, redundant 23
Fitness: max 1(1), min 0.957(1), ave 0.989
Test execution time: sum 17953 ms, max 853 ms, min 399 ms
----------------------------------------------------------------

2023-08-09 22:27:51 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-09 22:28:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 45 seconds
Variants: generated 200, build-succeeded 29, build-failed 63, syntax-invalid 89, redundant 19
Fitness: max 1(1), min 0.957(2), ave 0.988
Test execution time: sum 19404 ms, max 903 ms, min 435 ms
----------------------------------------------------------------

2023-08-09 22:28:26 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-09 22:29:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 20 seconds
Variants: generated 200, build-succeeded 29, build-failed 53, syntax-invalid 93, redundant 25
Fitness: max 0.991(28), min 0.966(1), ave 0.99
Test execution time: sum 19893 ms, max 1000 ms, min 430 ms
----------------------------------------------------------------

2023-08-09 22:29:01 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-09 22:29:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 1 seconds
Variants: generated 200, build-succeeded 36, build-failed 59, syntax-invalid 89, redundant 16
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 25167 ms, max 896 ms, min 427 ms
----------------------------------------------------------------

2023-08-09 22:29:43 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-09 22:30:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 39 seconds
Variants: generated 200, build-succeeded 30, build-failed 62, syntax-invalid 95, redundant 13
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 20440 ms, max 886 ms, min 449 ms
----------------------------------------------------------------

2023-08-09 22:30:20 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-09 22:30:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 6 seconds
Variants: generated 200, build-succeeded 29, build-failed 55, syntax-invalid 93, redundant 23
Fitness: max 1(1), min 0.983(3), ave 0.991
Test execution time: sum 13957 ms, max 881 ms, min 385 ms
----------------------------------------------------------------

2023-08-09 22:30:48 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-09 22:31:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 32 seconds
Variants: generated 200, build-succeeded 29, build-failed 62, syntax-invalid 92, redundant 17
Fitness: max 1(2), min 0.957(1), ave 0.99
Test execution time: sum 14223 ms, max 762 ms, min 381 ms
----------------------------------------------------------------

2023-08-09 22:31:13 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-09 22:31:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 55 seconds
Variants: generated 200, build-succeeded 24, build-failed 70, syntax-invalid 87, redundant 19
Fitness: max 0.991(22), min 0.983(2), ave 0.991
Test execution time: sum 11159 ms, max 798 ms, min 375 ms
----------------------------------------------------------------

2023-08-09 22:31:37 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-09 22:32:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 24 seconds
Variants: generated 200, build-succeeded 26, build-failed 66, syntax-invalid 89, redundant 19
Fitness: max 0.991(25), min 0.983(1), ave 0.991
Test execution time: sum 14419 ms, max 956 ms, min 397 ms
----------------------------------------------------------------

2023-08-09 22:32:06 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-09 22:32:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 58 seconds
Variants: generated 200, build-succeeded 32, build-failed 60, syntax-invalid 88, redundant 20
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 19277 ms, max 1007 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 22:32:40 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-09 22:33:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 32 seconds
Variants: generated 200, build-succeeded 32, build-failed 68, syntax-invalid 85, redundant 15
Fitness: max 0.991(31), min 0.983(1), ave 0.991
Test execution time: sum 17791 ms, max 806 ms, min 402 ms
----------------------------------------------------------------

2023-08-09 22:33:13 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-09 22:33:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 3 seconds
Variants: generated 200, build-succeeded 27, build-failed 74, syntax-invalid 86, redundant 13
Fitness: max 0.991(27), min 0.991(27), ave 0.991
Test execution time: sum 15237 ms, max 811 ms, min 418 ms
----------------------------------------------------------------

2023-08-09 22:33:45 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-09 22:34:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 35 seconds
Variants: generated 200, build-succeeded 27, build-failed 68, syntax-invalid 88, redundant 17
Fitness: max 0.991(23), min 0.948(1), ave 0.989
Test execution time: sum 16233 ms, max 919 ms, min 408 ms
----------------------------------------------------------------

2023-08-09 22:34:17 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-09 22:34:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 9 seconds
Variants: generated 200, build-succeeded 34, build-failed 58, syntax-invalid 88, redundant 20
Fitness: max 0.991(29), min 0.983(5), ave 0.99
Test execution time: sum 19267 ms, max 831 ms, min 402 ms
----------------------------------------------------------------

2023-08-09 22:34:51 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-09 22:35:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 41 seconds
Variants: generated 200, build-succeeded 27, build-failed 62, syntax-invalid 97, redundant 14
Fitness: max 0.991(25), min 0.853(1), ave 0.986
Test execution time: sum 16108 ms, max 842 ms, min 398 ms
----------------------------------------------------------------

2023-08-09 22:35:23 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-09 22:35:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 8 seconds
Variants: generated 200, build-succeeded 20, build-failed 59, syntax-invalid 102, redundant 19
Fitness: max 0.991(16), min 0.966(1), ave 0.989
Test execution time: sum 12697 ms, max 1012 ms, min 418 ms
----------------------------------------------------------------

2023-08-09 22:35:50 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-09 22:36:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 39 seconds
Variants: generated 200, build-succeeded 26, build-failed 65, syntax-invalid 84, redundant 25
Fitness: max 1(1), min 0.948(1), ave 0.99
Test execution time: sum 16055 ms, max 883 ms, min 421 ms
----------------------------------------------------------------

2023-08-09 22:36:20 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-09 22:36:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 9 seconds
Variants: generated 200, build-succeeded 25, build-failed 62, syntax-invalid 101, redundant 12
Fitness: max 0.991(21), min 0.966(1), ave 0.989
Test execution time: sum 14852 ms, max 829 ms, min 426 ms
----------------------------------------------------------------

2023-08-09 22:36:50 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-09 22:37:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 44 seconds
Variants: generated 200, build-succeeded 30, build-failed 60, syntax-invalid 92, redundant 18
Fitness: max 1(1), min 0.966(1), ave 0.991
Test execution time: sum 18957 ms, max 927 ms, min 415 ms
----------------------------------------------------------------

2023-08-09 22:37:26 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-09 22:37:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 52 seconds
Variants: generated 25, build-succeeded 6, build-failed 11, syntax-invalid 3, redundant 5
Fitness: max 1(1), min 0.931(1), ave 0.983
Test execution time: sum 4077 ms, max 871 ms, min 477 ms
----------------------------------------------------------------

2023-08-09 22:37:34 [main] [INFO]  KGenProgMain - GA stopped
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v206)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v206)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v206)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v206)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v206)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v206)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v251)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v251)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v251)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v251)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v251)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v251)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v324)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v324)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v324)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v324)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v324)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:42 [main] [INFO]  PatchLogExporter - patch (v324)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v532)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v532)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v532)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v532)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v532)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v532)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v817)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v817)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v817)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v817)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v817)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,10 +291,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v817)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v824)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v824)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v824)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v824)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v824)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v824)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v840)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v840)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v840)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v840)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v840)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v840)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v895)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v895)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v895)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v895)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v895)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v895)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1007)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1007)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1007)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1007)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1007)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1007)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1016)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1016)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1016)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1016)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1016)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1016)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1033)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1033)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1033)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1033)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1033)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1033)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1097)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1097)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1097)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1097)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1097)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1097)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1368)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1368)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1368)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1368)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1368)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1368)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1383)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1383)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1383)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1383)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1383)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1383)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1426)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1426)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1426)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1426)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1426)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1426)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1523)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1523)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1523)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1523)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1523)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1523)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1625)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1625)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1625)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1625)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1625)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,10 +290,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1625)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1834)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1834)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1834)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1834)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1834)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1834)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1856)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1856)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1856)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1856)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1856)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:43 [main] [INFO]  PatchLogExporter - patch (v1856)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1893)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1893)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1893)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1893)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1893)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1893)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1991)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1991)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1991)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1991)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1991)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v1991)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2002)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2002)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2002)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2002)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2002)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2002)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2035)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2035)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2035)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2035)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2035)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2035)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2344)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2344)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2344)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2344)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2344)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2344)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2847)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2847)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2847)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2847)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2847)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,13 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2847)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2950)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2950)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2950)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2950)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2950)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v2950)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3170)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3170)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3170)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3170)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3170)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3170)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3284)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3284)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3284)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3284)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3284)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3284)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,14 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +910,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +910,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3917)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3917)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3917)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3917)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3917)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3917)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3979)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3979)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3979)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3979)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3979)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v3979)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4009)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4009)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4009)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4009)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4009)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4009)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4057)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4057)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4057)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4057)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4057)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4057)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4204)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4204)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4204)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4204)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4204)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4204)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4315)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4315)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4315)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4315)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4315)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:44 [main] [INFO]  PatchLogExporter - patch (v4315)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4725)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4725)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4725)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4725)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4725)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4725)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4815)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4815)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4815)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4815)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4815)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4815)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5591)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5591)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5591)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5591)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5591)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5591)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5856)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5856)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5856)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5856)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5856)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v5856)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6073)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6073)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6073)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6073)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6073)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6073)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6329)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6329)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6329)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6329)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6329)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6329)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6692)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6692)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6692)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6692)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6692)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (real == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6692)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6775)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6775)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6775)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6775)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6775)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6775)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6807)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6807)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6807)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6807)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6807)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6807)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6819)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6819)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6819)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6819)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6819)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v6819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8005)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8005)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8005)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8005)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8005)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8005)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,13 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
+			StringBuffer imAppendTo = new StringBuffer();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8218)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8218)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8218)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8218)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8218)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v8218)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v9630)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v9630)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v9630)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v9630)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v9630)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v9630)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10042)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10042)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10042)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10042)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10042)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10042)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10402)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10402)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10402)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10402)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10402)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10402)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,14 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
+			StringBuffer imAppendTo = new StringBuffer();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +293,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10633)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10633)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10633)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10633)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10633)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +910,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:45 [main] [INFO]  PatchLogExporter - patch (v10633)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11407)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11407)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11407)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11407)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11407)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11407)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11648)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11648)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11648)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11648)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11648)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v11648)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            StringBuffer imAppendTo = new StringBuffer();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13479)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13479)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13479)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13479)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13479)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double expReal = FastMath.exp(real);
+		int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13479)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13805)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13805)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13805)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13805)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13805)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double expReal = FastMath.exp(real);
+		int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13805)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13845)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13845)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13845)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13845)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13845)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13845)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13845)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13883)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13883)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13883)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13883)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13883)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double expReal = FastMath.exp(real);
+		int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v13883)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16407)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16407)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16407)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16407)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16407)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16407)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16660)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16660)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16660)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16660)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16660)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
+			StringBuffer imAppendTo = new StringBuffer();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +275,8 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -289,17 +290,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16660)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16877)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16877)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16877)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16877)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16877)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v16877)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v17413)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v17413)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v17413)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v17413)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v17413)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,8 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v17413)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v18492)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v18492)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v18492)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v18492)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v18492)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer ret = null;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        int sign = 0;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v18492)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v19072)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v19072)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v19072)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v19072)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v19072)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer ret = null;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        int sign = 0;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v19072)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2880,7 +2880,6 @@
             zb += xb * TANGENT_TABLE_B[idx];
             ya = epsA / za;
 
-            temp = ya * HEX_40000000;
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
2023-08-09 22:37:46 [main] [INFO]  PatchLogExporter - patch (v19072)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19093)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19093)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19093)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19093)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19093)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19093)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2888,9 +2888,6 @@
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
-            /* Correct for rounding in division */
-            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
-
             yb += -epsA * zb / za / za;
             yb += epsB / za;
         }
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19093)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19269)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19269)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19269)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19269)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19269)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer ret = null;
+		int sign = 0;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19269)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2888,9 +2888,6 @@
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
-            /* Correct for rounding in division */
-            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
-
             yb += -epsA * zb / za / za;
             yb += epsB / za;
         }
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19269)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer ret = null;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1180,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        int sign = 0;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2880,7 +2880,6 @@
             zb += xb * TANGENT_TABLE_B[idx];
             ya = epsA / za;
 
-            temp = ya * HEX_40000000;
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double expReal = FastMath.exp(real);
+		int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -320,7 +319,7 @@
      */
     @Override
     public boolean equals(Object other) {
-        if (this == other) {
+        if (isNaN) {
             return true;
         }
         if (other instanceof Complex){
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19626)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19626)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19626)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19626)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19626)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		double expReal = FastMath.exp(real);
+		StringBuffer ret = null;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19626)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2888,9 +2888,6 @@
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
-            /* Correct for rounding in division */
-            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
-
             yb += -epsA * zb / za / za;
             yb += epsB / za;
         }
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19626)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19694)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19694)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19694)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19694)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19694)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19694)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2880,7 +2880,6 @@
             zb += xb * TANGENT_TABLE_B[idx];
             ya = epsA / za;
 
-            temp = ya * HEX_40000000;
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19694)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19819)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19819)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19819)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19819)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19819)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,16 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer ret = null;
+		int sign = 0;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1181,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        int sign = 0;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19876)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19876)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19876)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19876)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19876)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer ret = null;
+		int sign = 0;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1180,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        int sign = 0;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v19876)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1454,8 +1454,6 @@
         double c = a+lnm[0];
         double d = -(c-a-lnm[0]);
         a = c;
-        b = b + d;
-
         c = a + lnza;
         d = -(c - a - lnza);
         a = c;
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20076)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20076)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20076)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20076)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20076)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +910,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20076)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2880,7 +2880,6 @@
             zb += xb * TANGENT_TABLE_B[idx];
             ya = epsA / za;
 
-            temp = ya * HEX_40000000;
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20076)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20277)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20277)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20277)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20277)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20277)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20277)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2880,7 +2880,6 @@
             zb += xb * TANGENT_TABLE_B[idx];
             ya = epsA / za;
 
-            temp = ya * HEX_40000000;
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20277)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20345)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20345)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20345)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20345)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20345)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer ret = null;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20345)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2888,9 +2887,6 @@
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
-            /* Correct for rounding in division */
-            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
-
             yb += -epsA * zb / za / za;
             yb += epsB / za;
         }
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20345)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20611)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20611)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20611)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20611)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20611)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -320,7 +319,7 @@
      */
     @Override
     public boolean equals(Object other) {
-        if (this == other) {
+        if (isNaN) {
             return true;
         }
         if (other instanceof Complex){
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20611)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2888,9 +2887,6 @@
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
-            /* Correct for rounding in division */
-            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
-
             yb += -epsA * zb / za / za;
             yb += epsB / za;
         }
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20611)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20806)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20806)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20806)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20806)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20806)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20806)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2888,9 +2888,6 @@
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
-            /* Correct for rounding in division */
-            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
-
             yb += -epsA * zb / za / za;
             yb += epsB / za;
         }
2023-08-09 22:37:47 [main] [INFO]  PatchLogExporter - patch (v20806)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21217)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21217)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21217)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21217)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21217)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		int sign = 0;
+		StringBuffer ret = null;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1180,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        int sign = 0;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21217)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21419)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21419)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21419)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21419)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21419)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -320,7 +317,7 @@
      */
     @Override
     public boolean equals(Object other) {
-        if (this == other) {
+        if (isNaN) {
             return true;
         }
         if (other instanceof Complex){
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21419)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2880,7 +2880,6 @@
             zb += xb * TANGENT_TABLE_B[idx];
             ya = epsA / za;
 
-            temp = ya * HEX_40000000;
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21419)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21666)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21666)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21666)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21666)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21666)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
+        double expReal = FastMath.exp(real);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		StringBuffer ret = null;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -320,7 +320,7 @@
      */
     @Override
     public boolean equals(Object other) {
-        if (this == other) {
+        if (isNaN) {
             return true;
         }
         if (other instanceof Complex){
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21666)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2888,9 +2887,6 @@
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
-            /* Correct for rounding in division */
-            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
-
             yb += -epsA * zb / za / za;
             yb += epsB / za;
         }
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21666)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21817)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21817)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21817)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21817)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21817)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double expReal = FastMath.exp(real);
+		StringBuffer ret = null;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -320,7 +319,7 @@
      */
     @Override
     public boolean equals(Object other) {
-        if (this == other) {
+        if (isNaN) {
             return true;
         }
         if (other instanceof Complex){
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21817)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21817)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21889)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21889)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21889)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21889)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21889)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v21889)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v22417)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v22417)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v22417)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v22417)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v22417)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,13 +293,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		StringBuffer ret = null;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -320,7 +322,7 @@
      */
     @Override
     public boolean equals(Object other) {
-        if (this == other) {
+        if (isNaN) {
             return true;
         }
         if (other instanceof Complex){
@@ -1180,6 +1182,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        int sign = 0;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v22417)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2888,9 +2888,6 @@
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
-            /* Correct for rounding in division */
-            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
-
             yb += -epsA * zb / za / za;
             yb += epsB / za;
         }
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v22417)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v23866)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v23866)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v23866)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v23866)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v23866)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +913,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v23866)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2880,7 +2880,6 @@
             zb += xb * TANGENT_TABLE_B[idx];
             ya = epsA / za;
 
-            temp = ya * HEX_40000000;
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v23866)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24209)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24209)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24209)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24209)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24209)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,20 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		double expReal = FastMath.exp(real);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +914,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return Complex.ONE;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24209)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2880,7 +2880,6 @@
             zb += xb * TANGENT_TABLE_B[idx];
             ya = epsA / za;
 
-            temp = ya * HEX_40000000;
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24209)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24425)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24425)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24425)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24425)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24425)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        double expReal = FastMath.exp(real);
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        int sign = 0;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24425)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-09 22:37:48 [main] [INFO]  PatchLogExporter - patch (v24425)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 22:37:48 [main] [INFO]  KGenProgMain - Summary
Reached generation = 124
Generated variants = 24425
Syntax valid variants = 15450
Build succeeded variants = 4786
Time elapsed = 1 hours 11 minutes 6 seconds
Exit status = SUCCESS
