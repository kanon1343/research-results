2023-08-09 22:37:50 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-09 22:37:50 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-09 22:37:50 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-09 22:37:51 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/fse/Downloads/kGenProg/example/math46/kgenprog-46.toml (set by command line)
rootDir = /Users/fse/Downloads/kGenProg/example/math46 (set in config file)
productPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/main] (set in config file)
testPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.complex.ComplexTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 9 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/fse/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-09 22:38:14 [main] [INFO]  KGenProgMain - initial failed tests (2/116)
org.apache.commons.math.complex.ComplexTest.testDivideZero: expected:<(Infinity, Infinity)> but was:<(NaN, NaN)>
org.apache.commons.math.complex.ComplexTest.testAtanI: null

2023-08-09 22:38:15 [main] [INFO]  KGenProgMain - GA started
2023-08-09 22:38:15 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-09 22:38:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, build-succeeded 8, build-failed 56, syntax-invalid 1, redundant 35
Fitness: max 0.991(3), min 0.966(3), ave 0.98
Test execution time: sum 7443 ms, max 1509 ms, min 583 ms
----------------------------------------------------------------

2023-08-09 22:38:30 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-09 22:38:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 100, build-succeeded 16, build-failed 56, syntax-invalid 4, redundant 24
Fitness: max 0.991(10), min 0.948(1), ave 0.983
Test execution time: sum 9122 ms, max 707 ms, min 478 ms
----------------------------------------------------------------

2023-08-09 22:38:46 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-09 22:39:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 13 seconds
Variants: generated 200, build-succeeded 64, build-failed 47, syntax-invalid 20, redundant 69
Fitness: max 1(1), min 0.94(1), ave 0.981
Test execution time: sum 33300 ms, max 988 ms, min 408 ms
----------------------------------------------------------------

2023-08-09 22:39:29 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-09 22:39:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 44 seconds
Variants: generated 200, build-succeeded 42, build-failed 52, syntax-invalid 18, redundant 88
Fitness: max 0.991(25), min 0.966(3), ave 0.986
Test execution time: sum 19643 ms, max 660 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 22:39:59 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-09 22:40:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 13 seconds
Variants: generated 200, build-succeeded 41, build-failed 56, syntax-invalid 22, redundant 81
Fitness: max 0.991(31), min 0.966(7), ave 0.986
Test execution time: sum 19620 ms, max 589 ms, min 439 ms
----------------------------------------------------------------

2023-08-09 22:40:28 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-09 22:41:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 51 seconds
Variants: generated 200, build-succeeded 62, build-failed 53, syntax-invalid 24, redundant 61
Fitness: max 1(1), min 0.914(1), ave 0.982
Test execution time: sum 29131 ms, max 810 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 22:41:07 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-09 22:41:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 24 seconds
Variants: generated 200, build-succeeded 50, build-failed 52, syntax-invalid 27, redundant 71
Fitness: max 0.991(27), min 0.853(1), ave 0.98
Test execution time: sum 23508 ms, max 639 ms, min 427 ms
----------------------------------------------------------------

2023-08-09 22:41:39 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-09 22:42:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 59 seconds
Variants: generated 200, build-succeeded 48, build-failed 53, syntax-invalid 31, redundant 68
Fitness: max 1(1), min 0.888(1), ave 0.983
Test execution time: sum 26284 ms, max 926 ms, min 409 ms
----------------------------------------------------------------

2023-08-09 22:42:14 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-09 22:42:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 42 seconds
Variants: generated 200, build-succeeded 56, build-failed 57, syntax-invalid 33, redundant 54
Fitness: max 0.991(37), min 0.966(8), ave 0.986
Test execution time: sum 32145 ms, max 989 ms, min 411 ms
----------------------------------------------------------------

2023-08-09 22:42:57 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-09 22:43:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 30 seconds
Variants: generated 200, build-succeeded 62, build-failed 63, syntax-invalid 27, redundant 48
Fitness: max 1(1), min 0.922(1), ave 0.985
Test execution time: sum 37222 ms, max 994 ms, min 412 ms
----------------------------------------------------------------

2023-08-09 22:43:46 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-09 22:44:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 21 seconds
Variants: generated 200, build-succeeded 59, build-failed 53, syntax-invalid 29, redundant 59
Fitness: max 1(1), min 0.966(3), ave 0.988
Test execution time: sum 39074 ms, max 1201 ms, min 414 ms
----------------------------------------------------------------

2023-08-09 22:44:36 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-09 22:45:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 10 seconds
Variants: generated 200, build-succeeded 55, build-failed 55, syntax-invalid 36, redundant 54
Fitness: max 1(3), min 0.948(1), ave 0.989
Test execution time: sum 35669 ms, max 938 ms, min 445 ms
----------------------------------------------------------------

2023-08-09 22:45:25 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-09 22:46:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 10 seconds
Variants: generated 200, build-succeeded 66, build-failed 52, syntax-invalid 46, redundant 36
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 46509 ms, max 928 ms, min 451 ms
----------------------------------------------------------------

2023-08-09 22:46:25 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-09 22:47:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 7 seconds
Variants: generated 200, build-succeeded 76, build-failed 49, syntax-invalid 35, redundant 40
Fitness: max 1(1), min 0.914(1), ave 0.989
Test execution time: sum 43311 ms, max 966 ms, min 411 ms
----------------------------------------------------------------

2023-08-09 22:47:22 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-09 22:48:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 3 seconds
Variants: generated 200, build-succeeded 67, build-failed 53, syntax-invalid 32, redundant 48
Fitness: max 0.991(59), min 0.966(3), ave 0.99
Test execution time: sum 41829 ms, max 1027 ms, min 411 ms
----------------------------------------------------------------

2023-08-09 22:48:18 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-09 22:49:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 0 seconds
Variants: generated 200, build-succeeded 68, build-failed 52, syntax-invalid 50, redundant 30
Fitness: max 0.991(60), min 0.966(3), ave 0.99
Test execution time: sum 44171 ms, max 888 ms, min 417 ms
----------------------------------------------------------------

2023-08-09 22:49:16 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-09 22:50:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 58 seconds
Variants: generated 200, build-succeeded 62, build-failed 53, syntax-invalid 53, redundant 32
Fitness: max 1(3), min 0.845(1), ave 0.988
Test execution time: sum 42122 ms, max 931 ms, min 434 ms
----------------------------------------------------------------

2023-08-09 22:50:13 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-09 22:51:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 0 seconds
Variants: generated 200, build-succeeded 68, build-failed 63, syntax-invalid 39, redundant 30
Fitness: max 1(3), min 0.966(2), ave 0.99
Test execution time: sum 46134 ms, max 2267 ms, min 423 ms
----------------------------------------------------------------

2023-08-09 22:51:15 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-09 22:52:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 53 seconds
Variants: generated 200, build-succeeded 76, build-failed 55, syntax-invalid 37, redundant 32
Fitness: max 1(2), min 0.966(1), ave 0.99
Test execution time: sum 39478 ms, max 897 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 22:52:08 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-09 22:53:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 45 seconds
Variants: generated 200, build-succeeded 71, build-failed 45, syntax-invalid 59, redundant 25
Fitness: max 0.991(55), min 0.957(2), ave 0.988
Test execution time: sum 38223 ms, max 842 ms, min 400 ms
----------------------------------------------------------------

2023-08-09 22:53:00 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-09 22:53:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 38 seconds
Variants: generated 200, build-succeeded 72, build-failed 51, syntax-invalid 54, redundant 23
Fitness: max 1(2), min 0.957(1), ave 0.989
Test execution time: sum 39459 ms, max 963 ms, min 399 ms
----------------------------------------------------------------

2023-08-09 22:53:53 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-09 22:54:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 36 seconds
Variants: generated 200, build-succeeded 81, build-failed 48, syntax-invalid 42, redundant 29
Fitness: max 1(4), min 0.974(1), ave 0.991
Test execution time: sum 44608 ms, max 930 ms, min 409 ms
----------------------------------------------------------------

2023-08-09 22:54:51 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-09 22:55:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 31 seconds
Variants: generated 200, build-succeeded 65, build-failed 67, syntax-invalid 38, redundant 30
Fitness: max 0.991(59), min 0.957(2), ave 0.99
Test execution time: sum 38759 ms, max 881 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 22:55:46 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-09 22:56:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 22 seconds
Variants: generated 200, build-succeeded 58, build-failed 46, syntax-invalid 54, redundant 42
Fitness: max 0.991(54), min 0.931(1), ave 0.989
Test execution time: sum 36818 ms, max 1014 ms, min 397 ms
----------------------------------------------------------------

2023-08-09 22:56:38 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-09 22:57:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 32 seconds
Variants: generated 200, build-succeeded 77, build-failed 49, syntax-invalid 39, redundant 35
Fitness: max 1(2), min 0.966(2), ave 0.99
Test execution time: sum 51905 ms, max 956 ms, min 445 ms
----------------------------------------------------------------

2023-08-09 22:57:47 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-09 22:58:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 39 seconds
Variants: generated 200, build-succeeded 72, build-failed 58, syntax-invalid 42, redundant 28
Fitness: max 1(2), min 0.974(2), ave 0.991
Test execution time: sum 49181 ms, max 2602 ms, min 429 ms
----------------------------------------------------------------

2023-08-09 22:58:54 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-09 22:59:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 34 seconds
Variants: generated 200, build-succeeded 74, build-failed 45, syntax-invalid 49, redundant 32
Fitness: max 1(1), min 0.966(2), ave 0.99
Test execution time: sum 40386 ms, max 1035 ms, min 403 ms
----------------------------------------------------------------

2023-08-09 22:59:49 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-09 23:00:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 31 seconds
Variants: generated 200, build-succeeded 76, build-failed 53, syntax-invalid 50, redundant 21
Fitness: max 1(2), min 0.966(1), ave 0.991
Test execution time: sum 41888 ms, max 844 ms, min 409 ms
----------------------------------------------------------------

2023-08-09 23:00:46 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-09 23:01:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 21 seconds
Variants: generated 200, build-succeeded 64, build-failed 57, syntax-invalid 48, redundant 31
Fitness: max 1(1), min 0.931(1), ave 0.99
Test execution time: sum 35690 ms, max 898 ms, min 417 ms
----------------------------------------------------------------

2023-08-09 23:01:36 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-09 23:02:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 8 seconds
Variants: generated 200, build-succeeded 55, build-failed 60, syntax-invalid 51, redundant 34
Fitness: max 1(2), min 0.983(1), ave 0.992
Test execution time: sum 32156 ms, max 935 ms, min 421 ms
----------------------------------------------------------------

2023-08-09 23:02:24 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-09 23:03:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 8 seconds
Variants: generated 200, build-succeeded 69, build-failed 67, syntax-invalid 45, redundant 19
Fitness: max 1(1), min 0.974(1), ave 0.991
Test execution time: sum 43526 ms, max 1075 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 23:03:24 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-09 23:04:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 2 seconds
Variants: generated 200, build-succeeded 60, build-failed 55, syntax-invalid 48, redundant 37
Fitness: max 1(1), min 0.966(1), ave 0.991
Test execution time: sum 36974 ms, max 879 ms, min 411 ms
----------------------------------------------------------------

2023-08-09 23:04:17 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-09 23:05:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 3 seconds
Variants: generated 200, build-succeeded 65, build-failed 60, syntax-invalid 48, redundant 27
Fitness: max 1(4), min 0.966(1), ave 0.99
Test execution time: sum 43532 ms, max 929 ms, min 414 ms
----------------------------------------------------------------

2023-08-09 23:05:19 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-09 23:06:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 8 seconds
Variants: generated 200, build-succeeded 66, build-failed 55, syntax-invalid 53, redundant 26
Fitness: max 1(1), min 0.957(1), ave 0.99
Test execution time: sum 46214 ms, max 1034 ms, min 440 ms
----------------------------------------------------------------

2023-08-09 23:06:23 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-09 23:07:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 14 seconds
Variants: generated 200, build-succeeded 65, build-failed 63, syntax-invalid 47, redundant 25
Fitness: max 1(3), min 0.966(1), ave 0.99
Test execution time: sum 43911 ms, max 929 ms, min 425 ms
----------------------------------------------------------------

2023-08-09 23:07:29 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-09 23:08:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 0 seconds
Variants: generated 200, build-succeeded 56, build-failed 61, syntax-invalid 56, redundant 27
Fitness: max 1(3), min 0.966(1), ave 0.99
Test execution time: sum 31173 ms, max 881 ms, min 406 ms
----------------------------------------------------------------

2023-08-09 23:08:15 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-09 23:09:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 47 seconds
Variants: generated 200, build-succeeded 57, build-failed 57, syntax-invalid 57, redundant 29
Fitness: max 1(3), min 0.966(3), ave 0.989
Test execution time: sum 32872 ms, max 935 ms, min 406 ms
----------------------------------------------------------------

2023-08-09 23:09:03 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-09 23:09:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 39 seconds
Variants: generated 200, build-succeeded 60, build-failed 62, syntax-invalid 49, redundant 29
Fitness: max 0.991(56), min 0.983(4), ave 0.991
Test execution time: sum 33982 ms, max 909 ms, min 409 ms
----------------------------------------------------------------

2023-08-09 23:09:54 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-09 23:10:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 27 seconds
Variants: generated 200, build-succeeded 58, build-failed 55, syntax-invalid 54, redundant 33
Fitness: max 0.991(45), min 0.914(1), ave 0.988
Test execution time: sum 32640 ms, max 907 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 23:10:42 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-09 23:11:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 20 seconds
Variants: generated 200, build-succeeded 61, build-failed 62, syntax-invalid 55, redundant 22
Fitness: max 1(1), min 0.974(1), ave 0.991
Test execution time: sum 36296 ms, max 879 ms, min 411 ms
----------------------------------------------------------------

2023-08-09 23:11:35 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-09 23:12:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 19 seconds
Variants: generated 200, build-succeeded 63, build-failed 58, syntax-invalid 49, redundant 30
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 40124 ms, max 1210 ms, min 409 ms
----------------------------------------------------------------

2023-08-09 23:12:34 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-09 23:13:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 21 seconds
Variants: generated 200, build-succeeded 68, build-failed 54, syntax-invalid 51, redundant 27
Fitness: max 1(2), min 0.966(4), ave 0.99
Test execution time: sum 44227 ms, max 985 ms, min 418 ms
----------------------------------------------------------------

2023-08-09 23:13:37 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-09 23:14:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 18 seconds
Variants: generated 200, build-succeeded 51, build-failed 75, syntax-invalid 52, redundant 22
Fitness: max 1(2), min 0.983(4), ave 0.991
Test execution time: sum 35326 ms, max 869 ms, min 450 ms
----------------------------------------------------------------

2023-08-09 23:14:33 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-09 23:15:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 21 seconds
Variants: generated 200, build-succeeded 55, build-failed 60, syntax-invalid 59, redundant 26
Fitness: max 0.991(51), min 0.983(4), ave 0.991
Test execution time: sum 42043 ms, max 2738 ms, min 437 ms
----------------------------------------------------------------

2023-08-09 23:15:36 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-09 23:16:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 11 seconds
Variants: generated 200, build-succeeded 64, build-failed 55, syntax-invalid 58, redundant 23
Fitness: max 0.991(56), min 0.966(1), ave 0.99
Test execution time: sum 34869 ms, max 1051 ms, min 403 ms
----------------------------------------------------------------

2023-08-09 23:16:27 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-09 23:17:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 53 seconds
Variants: generated 200, build-succeeded 45, build-failed 65, syntax-invalid 65, redundant 25
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 25170 ms, max 918 ms, min 403 ms
----------------------------------------------------------------

2023-08-09 23:17:08 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-09 23:18:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 45 seconds
Variants: generated 200, build-succeeded 62, build-failed 57, syntax-invalid 64, redundant 17
Fitness: max 1(1), min 0.845(1), ave 0.987
Test execution time: sum 35312 ms, max 974 ms, min 409 ms
----------------------------------------------------------------

2023-08-09 23:18:01 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-09 23:18:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 35 seconds
Variants: generated 200, build-succeeded 57, build-failed 57, syntax-invalid 59, redundant 27
Fitness: max 1(2), min 0.974(2), ave 0.99
Test execution time: sum 32921 ms, max 994 ms, min 421 ms
----------------------------------------------------------------

2023-08-09 23:18:51 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-09 23:19:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 29 seconds
Variants: generated 200, build-succeeded 60, build-failed 66, syntax-invalid 50, redundant 24
Fitness: max 1(2), min 0.974(3), ave 0.99
Test execution time: sum 35804 ms, max 862 ms, min 418 ms
----------------------------------------------------------------

2023-08-09 23:19:44 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-09 23:20:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 25 seconds
Variants: generated 200, build-succeeded 64, build-failed 63, syntax-invalid 40, redundant 33
Fitness: max 1(2), min 0.966(1), ave 0.991
Test execution time: sum 39347 ms, max 894 ms, min 419 ms
----------------------------------------------------------------

2023-08-09 23:20:41 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-09 23:21:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 31 seconds
Variants: generated 200, build-succeeded 68, build-failed 63, syntax-invalid 54, redundant 15
Fitness: max 1(1), min 0.836(2), ave 0.986
Test execution time: sum 46278 ms, max 1191 ms, min 426 ms
----------------------------------------------------------------

2023-08-09 23:21:47 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-09 23:22:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 34 seconds
Variants: generated 200, build-succeeded 58, build-failed 75, syntax-invalid 49, redundant 18
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 41351 ms, max 1031 ms, min 453 ms
----------------------------------------------------------------

2023-08-09 23:22:49 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-09 23:23:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 18 seconds
Variants: generated 200, build-succeeded 47, build-failed 55, syntax-invalid 65, redundant 33
Fitness: max 1(2), min 0.966(1), ave 0.99
Test execution time: sum 25744 ms, max 1009 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 23:23:33 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-09 23:24:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 3 seconds
Variants: generated 200, build-succeeded 51, build-failed 62, syntax-invalid 56, redundant 31
Fitness: max 1(3), min 0.974(1), ave 0.991
Test execution time: sum 27513 ms, max 909 ms, min 406 ms
----------------------------------------------------------------

2023-08-09 23:24:18 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-09 23:25:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 50 seconds
Variants: generated 200, build-succeeded 48, build-failed 63, syntax-invalid 68, redundant 21
Fitness: max 0.991(42), min 0.983(6), ave 0.99
Test execution time: sum 28684 ms, max 1224 ms, min 424 ms
----------------------------------------------------------------

2023-08-09 23:25:05 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-09 23:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 36 seconds
Variants: generated 200, build-succeeded 53, build-failed 54, syntax-invalid 64, redundant 29
Fitness: max 0.991(49), min 0.948(1), ave 0.99
Test execution time: sum 30132 ms, max 853 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 23:25:52 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-09 23:26:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 19 seconds
Variants: generated 200, build-succeeded 44, build-failed 57, syntax-invalid 78, redundant 21
Fitness: max 0.991(38), min 0.931(1), ave 0.989
Test execution time: sum 26048 ms, max 908 ms, min 419 ms
----------------------------------------------------------------

2023-08-09 23:26:34 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-09 23:27:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 6 seconds
Variants: generated 200, build-succeeded 54, build-failed 52, syntax-invalid 71, redundant 23
Fitness: max 0.991(46), min 0.966(1), ave 0.989
Test execution time: sum 30872 ms, max 936 ms, min 407 ms
----------------------------------------------------------------

2023-08-09 23:27:21 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-09 23:28:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 2 seconds
Variants: generated 200, build-succeeded 59, build-failed 55, syntax-invalid 60, redundant 26
Fitness: max 1(2), min 0.983(2), ave 0.991
Test execution time: sum 36836 ms, max 884 ms, min 406 ms
----------------------------------------------------------------

2023-08-09 23:28:18 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-09 23:29:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 58 seconds
Variants: generated 200, build-succeeded 56, build-failed 59, syntax-invalid 60, redundant 25
Fitness: max 0.991(50), min 0.983(6), ave 0.99
Test execution time: sum 36927 ms, max 879 ms, min 433 ms
----------------------------------------------------------------

2023-08-09 23:29:14 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-09 23:30:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 47 seconds
Variants: generated 200, build-succeeded 44, build-failed 59, syntax-invalid 71, redundant 26
Fitness: max 0.991(39), min 0.957(1), ave 0.99
Test execution time: sum 29544 ms, max 954 ms, min 433 ms
----------------------------------------------------------------

2023-08-09 23:30:02 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-09 23:31:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 48 seconds
Variants: generated 200, build-succeeded 50, build-failed 54, syntax-invalid 71, redundant 25
Fitness: max 0.991(43), min 0.966(3), ave 0.989
Test execution time: sum 38845 ms, max 1177 ms, min 500 ms
----------------------------------------------------------------

2023-08-09 23:31:03 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-09 23:32:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 48 seconds
Variants: generated 200, build-succeeded 54, build-failed 57, syntax-invalid 68, redundant 21
Fitness: max 0.991(47), min 0.845(1), ave 0.987
Test execution time: sum 37699 ms, max 2470 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 23:32:04 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-09 23:32:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 37 seconds
Variants: generated 200, build-succeeded 51, build-failed 59, syntax-invalid 68, redundant 22
Fitness: max 0.991(43), min 0.983(8), ave 0.99
Test execution time: sum 29506 ms, max 888 ms, min 412 ms
----------------------------------------------------------------

2023-08-09 23:32:52 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-09 23:33:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 26 seconds
Variants: generated 200, build-succeeded 55, build-failed 63, syntax-invalid 57, redundant 25
Fitness: max 0.991(46), min 0.966(1), ave 0.99
Test execution time: sum 30825 ms, max 894 ms, min 406 ms
----------------------------------------------------------------

2023-08-09 23:33:41 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-09 23:34:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 15 seconds
Variants: generated 200, build-succeeded 52, build-failed 56, syntax-invalid 67, redundant 25
Fitness: max 0.991(46), min 0.966(3), ave 0.989
Test execution time: sum 31156 ms, max 1144 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 23:34:30 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-09 23:35:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 3 seconds
Variants: generated 200, build-succeeded 51, build-failed 57, syntax-invalid 62, redundant 30
Fitness: max 0.991(45), min 0.974(1), ave 0.99
Test execution time: sum 29151 ms, max 975 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 23:35:19 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-09 23:36:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 55 seconds
Variants: generated 200, build-succeeded 54, build-failed 60, syntax-invalid 57, redundant 29
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 31843 ms, max 838 ms, min 423 ms
----------------------------------------------------------------

2023-08-09 23:36:10 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-09 23:36:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 42 seconds
Variants: generated 200, build-succeeded 47, build-failed 54, syntax-invalid 81, redundant 18
Fitness: max 0.991(38), min 0.966(1), ave 0.989
Test execution time: sum 29778 ms, max 905 ms, min 408 ms
----------------------------------------------------------------

2023-08-09 23:36:58 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-09 23:37:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 37 seconds
Variants: generated 200, build-succeeded 55, build-failed 50, syntax-invalid 62, redundant 33
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 35147 ms, max 1102 ms, min 424 ms
----------------------------------------------------------------

2023-08-09 23:37:53 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-09 23:38:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 seconds
Variants: generated 200, build-succeeded 53, build-failed 64, syntax-invalid 65, redundant 18
Fitness: max 0.991(47), min 0.957(1), ave 0.99
Test execution time: sum 36755 ms, max 940 ms, min 431 ms
----------------------------------------------------------------

2023-08-09 23:38:50 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-09 23:39:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 33 seconds
Variants: generated 200, build-succeeded 55, build-failed 53, syntax-invalid 72, redundant 20
Fitness: max 1(1), min 0.974(1), ave 0.99
Test execution time: sum 36974 ms, max 937 ms, min 425 ms
----------------------------------------------------------------

2023-08-09 23:39:48 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-09 23:41:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 45 seconds
Variants: generated 200, build-succeeded 68, build-failed 45, syntax-invalid 66, redundant 21
Fitness: max 1(1), min 0.957(1), ave 0.989
Test execution time: sum 48680 ms, max 918 ms, min 421 ms
----------------------------------------------------------------

2023-08-09 23:41:00 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-09 23:41:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 32 seconds
Variants: generated 200, build-succeeded 54, build-failed 61, syntax-invalid 71, redundant 14
Fitness: max 0.991(44), min 0.966(1), ave 0.989
Test execution time: sum 29429 ms, max 856 ms, min 397 ms
----------------------------------------------------------------

2023-08-09 23:41:47 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-09 23:42:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 16 seconds
Variants: generated 200, build-succeeded 48, build-failed 64, syntax-invalid 69, redundant 19
Fitness: max 1(1), min 0.966(2), ave 0.989
Test execution time: sum 26637 ms, max 931 ms, min 396 ms
----------------------------------------------------------------

2023-08-09 23:42:31 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-09 23:43:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 59 seconds
Variants: generated 200, build-succeeded 48, build-failed 57, syntax-invalid 74, redundant 21
Fitness: max 0.991(40), min 0.914(1), ave 0.987
Test execution time: sum 27412 ms, max 920 ms, min 397 ms
----------------------------------------------------------------

2023-08-09 23:43:14 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-09 23:44:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 53 seconds
Variants: generated 200, build-succeeded 64, build-failed 55, syntax-invalid 57, redundant 24
Fitness: max 1(1), min 0.957(1), ave 0.989
Test execution time: sum 36870 ms, max 931 ms, min 396 ms
----------------------------------------------------------------

2023-08-09 23:44:08 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-09 23:44:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 42 seconds
Variants: generated 200, build-succeeded 55, build-failed 52, syntax-invalid 69, redundant 24
Fitness: max 0.991(50), min 0.983(5), ave 0.991
Test execution time: sum 31996 ms, max 917 ms, min 411 ms
----------------------------------------------------------------

2023-08-09 23:44:57 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-09 23:45:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 36 seconds
Variants: generated 200, build-succeeded 58, build-failed 51, syntax-invalid 76, redundant 15
Fitness: max 1(1), min 0.974(1), ave 0.991
Test execution time: sum 34927 ms, max 820 ms, min 401 ms
----------------------------------------------------------------

2023-08-09 23:45:51 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-09 23:46:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 23 seconds
Variants: generated 200, build-succeeded 45, build-failed 61, syntax-invalid 76, redundant 18
Fitness: max 1(1), min 0.845(2), ave 0.983
Test execution time: sum 27638 ms, max 923 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 23:46:38 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-09 23:47:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 10 seconds
Variants: generated 200, build-succeeded 42, build-failed 58, syntax-invalid 82, redundant 18
Fitness: max 0.991(37), min 0.974(1), ave 0.99
Test execution time: sum 27561 ms, max 908 ms, min 448 ms
----------------------------------------------------------------

2023-08-09 23:47:25 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-09 23:48:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 6 seconds
Variants: generated 200, build-succeeded 50, build-failed 53, syntax-invalid 76, redundant 21
Fitness: max 0.991(44), min 0.966(2), ave 0.989
Test execution time: sum 34832 ms, max 927 ms, min 419 ms
----------------------------------------------------------------

2023-08-09 23:48:21 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-09 23:49:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 1 seconds
Variants: generated 200, build-succeeded 48, build-failed 48, syntax-invalid 74, redundant 30
Fitness: max 1(2), min 0.957(1), ave 0.99
Test execution time: sum 34121 ms, max 1046 ms, min 493 ms
----------------------------------------------------------------

2023-08-09 23:49:17 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-09 23:50:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 57 seconds
Variants: generated 200, build-succeeded 62, build-failed 54, syntax-invalid 65, redundant 19
Fitness: max 1(5), min 0.888(1), ave 0.99
Test execution time: sum 34286 ms, max 1314 ms, min 404 ms
----------------------------------------------------------------

2023-08-09 23:50:12 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-09 23:51:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 51 seconds
Variants: generated 200, build-succeeded 63, build-failed 45, syntax-invalid 70, redundant 22
Fitness: max 1(1), min 0.966(2), ave 0.99
Test execution time: sum 34291 ms, max 820 ms, min 405 ms
----------------------------------------------------------------

2023-08-09 23:51:06 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-09 23:51:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 36 seconds
Variants: generated 200, build-succeeded 44, build-failed 59, syntax-invalid 76, redundant 21
Fitness: max 0.991(39), min 0.974(1), ave 0.99
Test execution time: sum 24737 ms, max 863 ms, min 394 ms
----------------------------------------------------------------

2023-08-09 23:51:51 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-09 23:52:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 32 seconds
Variants: generated 200, build-succeeded 61, build-failed 53, syntax-invalid 63, redundant 23
Fitness: max 1(1), min 0.914(1), ave 0.989
Test execution time: sum 35434 ms, max 1031 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 23:52:48 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-09 23:53:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 23 seconds
Variants: generated 200, build-succeeded 52, build-failed 51, syntax-invalid 76, redundant 21
Fitness: max 1(3), min 0.845(1), ave 0.988
Test execution time: sum 30848 ms, max 859 ms, min 408 ms
----------------------------------------------------------------

2023-08-09 23:53:38 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-09 23:54:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 21 seconds
Variants: generated 200, build-succeeded 59, build-failed 59, syntax-invalid 68, redundant 14
Fitness: max 1(1), min 0.983(5), ave 0.991
Test execution time: sum 38198 ms, max 888 ms, min 418 ms
----------------------------------------------------------------

2023-08-09 23:54:37 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-09 23:55:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 26 seconds
Variants: generated 200, build-succeeded 56, build-failed 59, syntax-invalid 68, redundant 17
Fitness: max 1(3), min 0.983(4), ave 0.991
Test execution time: sum 39554 ms, max 1096 ms, min 413 ms
----------------------------------------------------------------

2023-08-09 23:55:41 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-09 23:56:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 31 seconds
Variants: generated 200, build-succeeded 56, build-failed 50, syntax-invalid 70, redundant 24
Fitness: max 1(1), min 0.966(2), ave 0.99
Test execution time: sum 40144 ms, max 1266 ms, min 425 ms
----------------------------------------------------------------

2023-08-09 23:56:47 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-09 23:57:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 34 seconds
Variants: generated 200, build-succeeded 51, build-failed 66, syntax-invalid 67, redundant 16
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 34468 ms, max 983 ms, min 416 ms
----------------------------------------------------------------

2023-08-09 23:57:49 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-09 23:57:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 38 seconds
Variants: generated 13, build-succeeded 3, build-failed 8, syntax-invalid 0, redundant 2
Fitness: max 1(1), min 0.991(2), ave 0.994
Test execution time: sum 1956 ms, max 794 ms, min 515 ms
----------------------------------------------------------------

2023-08-09 23:57:53 [main] [INFO]  KGenProgMain - GA stopped
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v275)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v275)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v275)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v275)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v275)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v275)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v841)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v841)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v841)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v841)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v841)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v841)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1215)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1215)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1215)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1215)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1215)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,7 +288,7 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
         if (divisor == 0d) {
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1215)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1695)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1695)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1695)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1695)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1695)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1695)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1808)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1808)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1808)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1808)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1808)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v1808)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2016)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2016)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2016)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2016)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2016)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2016)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2027)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2027)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2027)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2027)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2027)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,10 +290,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2027)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2071)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2071)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2071)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2071)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2071)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:02 [main] [INFO]  PatchLogExporter - patch (v2071)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2207)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2207)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2207)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2207)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2207)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2207)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2207)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2440)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2440)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2440)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2440)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2440)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double q = imaginary / real;
+			StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v2440)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3032)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3032)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3032)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3032)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3032)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3032)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3240)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3240)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3240)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3240)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3240)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3240)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3263)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3263)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3263)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3263)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3263)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            final List<Complex> result=new ArrayList<Complex>();
+			StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3263)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3263)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3291)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3291)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3291)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3291)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3291)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3291)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,10 +291,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3970)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3970)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3970)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3970)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3970)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v3970)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4004)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4004)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4004)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4004)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4004)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4004)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double q = imaginary / real;
+			final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +293,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:03 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4019)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4019)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4019)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4019)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4019)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4019)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4019)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4060)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4060)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4060)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4060)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4060)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4060)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4060)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4637)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4637)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4637)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4637)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4637)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4637)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2858,8 +2859,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4637)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4817)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4817)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4817)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4817)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4817)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4817)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,15 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
+            double q = imaginary / real;
+			// return isZero ? NaN : INF; // See MATH-657
             return isZero ? NaN : INF;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2858,8 +2859,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v4828)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5080)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5080)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5080)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5080)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5080)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5080)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5080)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5237)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5237)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5237)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5237)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5237)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5237)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5237)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5430)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5430)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5430)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5430)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5430)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5430)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5430)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5660)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5660)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5660)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5660)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5660)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +289,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5660)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -3070,7 +3071,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5660)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5874)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5874)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5874)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5874)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5874)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5874)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -1472,7 +1473,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v5874)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6077)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6077)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6077)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6077)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6077)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6077)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3234,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6077)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6203)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6203)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6203)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6203)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6203)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6203)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6217)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6217)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6217)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6217)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6217)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6285)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6285)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6285)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6285)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6285)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6285)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6285)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6455)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6455)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6455)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6455)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6455)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6455)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6455)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6619)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6619)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6619)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6619)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6619)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6619)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -2858,8 +2857,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:04 [main] [INFO]  PatchLogExporter - patch (v6619)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6629)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6629)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6629)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6629)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6629)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6629)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6666)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6666)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6666)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6666)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6666)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6666)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6666)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6809)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6809)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6809)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6809)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6809)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6809)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -3070,7 +3071,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6809)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6825)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6825)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6825)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6825)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6825)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6825)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6825)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6827)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6827)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6827)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6827)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6827)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double q = imaginary / real;
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +293,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v6827)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7019)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7019)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7019)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7019)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7019)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7019)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7019)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7021)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7021)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7021)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7021)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7021)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7021)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7021)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7686)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7686)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7686)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7686)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7686)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7686)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2858,8 +2859,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7686)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7836)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7836)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7836)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7836)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7836)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7836)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v7836)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8052)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8052)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8052)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8052)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8052)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8052)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8052)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8071)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8071)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8071)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8071)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8071)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8071)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8071)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8236)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8236)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8236)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8236)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8236)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8236)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8236)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2858,8 +2859,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2858,8 +2859,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3233,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9214)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9214)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9214)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9214)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9214)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9214)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9214)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9242)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9242)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9242)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9242)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9242)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9242)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9242)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9448)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9448)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9448)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9448)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9448)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +293,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9448)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9448)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9458)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9458)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9458)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9458)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9458)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9458)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:05 [main] [INFO]  PatchLogExporter - patch (v9458)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -3070,7 +3071,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9737)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9737)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9737)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9737)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9737)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9737)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9737)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -1472,7 +1473,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3234,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10010)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10010)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10010)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10010)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10010)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10010)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -3070,7 +3071,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3235,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10010)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3234,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10240)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10240)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10240)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10240)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10240)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10240)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3234,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10240)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10419)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10419)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10419)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10419)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10419)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10419)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -3070,7 +3071,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3235,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10419)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2858,8 +2859,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3233,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
@@ -3070,7 +3068,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -2858,8 +2857,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11440)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11440)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11440)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11440)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11440)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11440)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v11440)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13253)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13253)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13253)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13253)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13253)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +293,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13253)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -2858,8 +2857,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
@@ -3070,7 +3067,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13253)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13601)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13601)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13601)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13601)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13601)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13601)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v13601)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14078)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14078)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14078)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14078)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14078)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14078)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14078)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14242)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14242)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14242)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14242)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14242)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14242)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3233,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14242)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14655)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14655)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14655)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14655)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14655)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14655)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -1472,7 +1473,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v14655)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15039)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15039)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15039)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15039)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15039)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15039)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15039)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15446)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15446)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15446)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15446)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15446)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15446)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15446)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15679)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15679)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15679)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15679)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15679)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +290,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15679)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -3070,7 +3071,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v15679)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16222)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16222)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16222)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16222)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16222)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +263,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16222)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16222)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16268)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16268)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16268)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16268)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16268)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +293,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16268)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3233,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16268)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -1472,7 +1473,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3234,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:06 [main] [INFO]  PatchLogExporter - patch (v16480)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16481)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16481)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16481)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16481)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16481)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +264,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16481)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
@@ -3070,7 +3068,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16481)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16482)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16482)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16482)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16482)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16482)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +264,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16482)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16482)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16520)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16520)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16520)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16520)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16520)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +264,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,14 +288,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16520)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3234,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16520)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16554)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16554)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16554)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16554)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16554)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +263,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16554)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3234,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16554)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16622)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16622)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16622)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16622)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16622)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16622)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v16622)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17085)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17085)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17085)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17085)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17085)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17085)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2858,8 +2859,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17085)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17208)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17208)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17208)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17208)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17208)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +263,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17208)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17208)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17274)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17274)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17274)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17274)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17274)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17274)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -1472,7 +1473,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17274)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17279)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17279)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17279)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17279)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17279)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +265,8 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,8 +294,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17279)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,7 +3070,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3234,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17279)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17426)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17426)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17426)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17426)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17426)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +265,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,12 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17426)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
@@ -3074,8 +3072,6 @@
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
-        ra = temp;
-
         if (ra == 0) { // Fix up the sign so atan works correctly
             ra = copySign(0.0, y);
         }
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17426)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17615)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17615)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17615)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17615)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17615)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +265,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17615)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1472,7 +1472,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -3070,7 +3069,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
@@ -3234,7 +3233,7 @@
       double ra = doubleHighPart(r);
       double rb = r - ra;
 
-      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
+      int count = 0;
       rb += yb / x;  // Add in effect additional bits of sqrt.
 
       temp = ra + rb;
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17615)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17640)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17640)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17640)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17640)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17640)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +264,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17640)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,12 +3070,10 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
-        ra = temp;
-
         if (ra == 0) { // Fix up the sign so atan works correctly
             ra = copySign(0.0, y);
         }
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17640)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +264,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -3070,7 +3071,7 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17807)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17807)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17807)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17807)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17807)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +264,8 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17807)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2858,8 +2859,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v17807)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18055)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18055)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18055)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18055)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18055)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +263,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18055)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3070,12 +3070,10 @@
         final double xa = doubleHighPart(x);
         final double xb = x - xa;
 
-        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
+        int count = 0;
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
-        ra = temp;
-
         if (ra == 0) { // Fix up the sign so atan works correctly
             ra = copySign(0.0, y);
         }
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18055)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18213)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18213)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18213)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18213)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18213)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -266,6 +264,7 @@
 
         final double c = divisor.getReal();
         final double d = divisor.getImaginary();
+		MathUtils.checkNotNull(divisor);
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18213)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1431,6 +1431,7 @@
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
+			double max = 0;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -1472,7 +1473,6 @@
         b = b + d;
 
         c = a + lnzb;
-        d = -(c - a - lnzb);
         a = c;
         b = b + d;
 
@@ -2858,8 +2858,6 @@
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
         xa = ya;
-        xb += yb;
-
         //if (idx > 8 || idx == 0)
         if (idx == 0) {
             /* If the slope of the arctan is gentle enough (< 0.45), this approximation will suffice */
@@ -3074,8 +3072,6 @@
 
         double temp = ra + rb;
         rb = -(temp - ra - rb);
-        ra = temp;
-
         if (ra == 0) { // Fix up the sign so atan works correctly
             ra = copySign(0.0, y);
         }
2023-08-09 23:58:07 [main] [INFO]  PatchLogExporter - patch (v18213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-09 23:58:07 [main] [INFO]  KGenProgMain - Summary
Reached generation = 93
Generated variants = 18213
Syntax valid variants = 13225
Build succeeded variants = 5263
Time elapsed = 1 hours 19 minutes 52 seconds
Exit status = SUCCESS
