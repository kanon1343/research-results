2023-08-05 17:36:07 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-05 17:36:07 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-05 17:36:07 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-05 17:36:07 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/kgenprog-78.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.ode.events.EventStateTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 1 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/afterResearch
version = 1.8.2
================================================================
2023-08-05 17:36:31 [main] [INFO]  KGenProgMain - initial failed tests (1/1)
org.apache.commons.math.ode.events.EventStateTest.closeEvents: function values at endpoints do not have different signs.  Endpoints: [89.999, 153.1], Values: [-0.066, -1,142.11]

2023-08-05 17:36:31 [main] [INFO]  KGenProgMain - GA started
2023-08-05 17:36:31 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-05 17:36:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, build-succeeded 27, build-failed 56, syntax-invalid 11, redundant 6
Fitness: max 0(27), min 0(27), ave 0
Test execution time: sum 4215 ms, max 342 ms, min 87 ms
----------------------------------------------------------------

2023-08-05 17:36:45 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-05 17:36:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 100, build-succeeded 19, build-failed 65, syntax-invalid 5, redundant 11
Fitness: max 0(19), min 0(19), ave 0
Test execution time: sum 1710 ms, max 158 ms, min 69 ms
----------------------------------------------------------------

2023-08-05 17:36:53 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-05 17:37:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 200, build-succeeded 37, build-failed 62, syntax-invalid 25, redundant 76
Fitness: max 0(37), min 0(37), ave 0
Test execution time: sum 2927 ms, max 167 ms, min 66 ms
----------------------------------------------------------------

2023-08-05 17:37:04 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-05 17:37:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 seconds
Variants: generated 200, build-succeeded 70, build-failed 49, syntax-invalid 16, redundant 65
Fitness: max 0(70), min 0(70), ave 0
Test execution time: sum 5586 ms, max 189 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 17:37:19 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-05 17:37:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 3 seconds
Variants: generated 200, build-succeeded 76, build-failed 57, syntax-invalid 15, redundant 52
Fitness: max 0(76), min 0(76), ave 0
Test execution time: sum 6129 ms, max 210 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:37:34 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-05 17:37:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 18 seconds
Variants: generated 200, build-succeeded 87, build-failed 59, syntax-invalid 12, redundant 42
Fitness: max 0(87), min 0(87), ave 0
Test execution time: sum 6274 ms, max 205 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:37:49 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-05 17:38:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 31 seconds
Variants: generated 200, build-succeeded 80, build-failed 64, syntax-invalid 9, redundant 47
Fitness: max 1(2), min 0(78), ave 0.025
Test execution time: sum 5897 ms, max 191 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 17:38:03 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-05 17:38:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 46 seconds
Variants: generated 200, build-succeeded 94, build-failed 61, syntax-invalid 9, redundant 36
Fitness: max 1(1), min 0(93), ave 0.011
Test execution time: sum 6698 ms, max 203 ms, min 62 ms
----------------------------------------------------------------

2023-08-05 17:38:18 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-05 17:38:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 3 seconds
Variants: generated 200, build-succeeded 85, build-failed 67, syntax-invalid 6, redundant 42
Fitness: max 1(2), min 0(83), ave 0.024
Test execution time: sum 6780 ms, max 206 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:38:34 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-05 17:38:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 19 seconds
Variants: generated 200, build-succeeded 90, build-failed 67, syntax-invalid 12, redundant 31
Fitness: max 0(90), min 0(90), ave 0
Test execution time: sum 6688 ms, max 274 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:38:50 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-05 17:39:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 35 seconds
Variants: generated 200, build-succeeded 98, build-failed 54, syntax-invalid 14, redundant 34
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 7063 ms, max 189 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:39:06 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-05 17:39:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 51 seconds
Variants: generated 200, build-succeeded 98, build-failed 56, syntax-invalid 24, redundant 22
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 7116 ms, max 261 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:39:23 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-05 17:39:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 11 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 14, redundant 19
Fitness: max 1(1), min 0(109), ave 0.009
Test execution time: sum 8312 ms, max 261 ms, min 62 ms
----------------------------------------------------------------

2023-08-05 17:39:42 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-05 17:40:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 29 seconds
Variants: generated 200, build-succeeded 101, build-failed 53, syntax-invalid 28, redundant 18
Fitness: max 1(2), min 0(99), ave 0.02
Test execution time: sum 7386 ms, max 242 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:40:00 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-05 17:40:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 46 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 16, redundant 21
Fitness: max 1(1), min 0(101), ave 0.01
Test execution time: sum 7448 ms, max 250 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:40:17 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-05 17:40:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 5 seconds
Variants: generated 200, build-succeeded 112, build-failed 58, syntax-invalid 17, redundant 13
Fitness: max 1(1), min 0(111), ave 0.009
Test execution time: sum 8103 ms, max 164 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 17:40:36 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-05 17:40:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 22 seconds
Variants: generated 200, build-succeeded 96, build-failed 66, syntax-invalid 29, redundant 9
Fitness: max 1(1), min 0(95), ave 0.01
Test execution time: sum 7083 ms, max 162 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:40:54 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-05 17:41:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 42 seconds
Variants: generated 200, build-succeeded 112, build-failed 59, syntax-invalid 16, redundant 13
Fitness: max 1(2), min 0(110), ave 0.018
Test execution time: sum 8348 ms, max 185 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:41:13 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-05 17:41:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 0 seconds
Variants: generated 200, build-succeeded 108, build-failed 59, syntax-invalid 19, redundant 14
Fitness: max 1(1), min 0(107), ave 0.009
Test execution time: sum 8083 ms, max 285 ms, min 62 ms
----------------------------------------------------------------

2023-08-05 17:41:32 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-05 17:41:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 23 seconds
Variants: generated 200, build-succeeded 105, build-failed 59, syntax-invalid 22, redundant 14
Fitness: max 1(2), min 0(103), ave 0.019
Test execution time: sum 9072 ms, max 297 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 17:41:54 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-05 17:42:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 47 seconds
Variants: generated 200, build-succeeded 110, build-failed 64, syntax-invalid 11, redundant 15
Fitness: max 1(2), min 0(108), ave 0.018
Test execution time: sum 10400 ms, max 685 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 17:42:18 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-05 17:42:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 6 seconds
Variants: generated 200, build-succeeded 102, build-failed 66, syntax-invalid 16, redundant 16
Fitness: max 1(5), min 0(97), ave 0.049
Test execution time: sum 7851 ms, max 270 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:42:38 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-05 17:42:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 26 seconds
Variants: generated 200, build-succeeded 110, build-failed 66, syntax-invalid 10, redundant 14
Fitness: max 1(2), min 0(108), ave 0.018
Test execution time: sum 7850 ms, max 255 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:42:58 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-05 17:43:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 46 seconds
Variants: generated 200, build-succeeded 100, build-failed 63, syntax-invalid 17, redundant 20
Fitness: max 1(2), min 0(98), ave 0.02
Test execution time: sum 7268 ms, max 258 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:43:18 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-05 17:43:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 7 seconds
Variants: generated 200, build-succeeded 107, build-failed 73, syntax-invalid 16, redundant 4
Fitness: max 1(2), min 0(105), ave 0.019
Test execution time: sum 7962 ms, max 271 ms, min 62 ms
----------------------------------------------------------------

2023-08-05 17:43:39 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-05 17:43:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 26 seconds
Variants: generated 200, build-succeeded 112, build-failed 63, syntax-invalid 14, redundant 11
Fitness: max 1(1), min 0(111), ave 0.009
Test execution time: sum 7631 ms, max 99 ms, min 62 ms
----------------------------------------------------------------

2023-08-05 17:43:58 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-05 17:47:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 47 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 26, redundant 12
Fitness: max 1(2), min 0(102), ave 0.019
Test execution time: sum 187865 ms, max 180091 ms, min 62 ms
----------------------------------------------------------------

2023-08-05 17:47:18 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-05 17:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 9 seconds
Variants: generated 200, build-succeeded 115, build-failed 65, syntax-invalid 12, redundant 8
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 9112 ms, max 294 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:47:41 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-05 17:48:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 29 seconds
Variants: generated 200, build-succeeded 111, build-failed 63, syntax-invalid 19, redundant 7
Fitness: max 1(1), min 0(110), ave 0.009
Test execution time: sum 8214 ms, max 116 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 17:48:00 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-05 17:48:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 52 seconds
Variants: generated 200, build-succeeded 122, build-failed 55, syntax-invalid 16, redundant 7
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 9494 ms, max 147 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 17:48:24 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-05 17:48:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 14 seconds
Variants: generated 200, build-succeeded 108, build-failed 67, syntax-invalid 18, redundant 7
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 8386 ms, max 272 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 17:48:46 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-05 17:49:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 35 seconds
Variants: generated 200, build-succeeded 107, build-failed 63, syntax-invalid 18, redundant 12
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 7620 ms, max 164 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:49:07 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-05 17:49:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 57 seconds
Variants: generated 200, build-succeeded 120, build-failed 62, syntax-invalid 9, redundant 9
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 8656 ms, max 171 ms, min 62 ms
----------------------------------------------------------------

2023-08-05 17:49:29 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-05 17:49:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 17 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 9, redundant 20
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 7997 ms, max 126 ms, min 62 ms
----------------------------------------------------------------

2023-08-05 17:49:48 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-05 17:50:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 39 seconds
Variants: generated 200, build-succeeded 113, build-failed 54, syntax-invalid 19, redundant 14
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 8347 ms, max 285 ms, min 62 ms
----------------------------------------------------------------

2023-08-05 17:50:11 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-05 17:53:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 1 seconds
Variants: generated 200, build-succeeded 108, build-failed 63, syntax-invalid 23, redundant 6
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 187821 ms, max 180080 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:53:33 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-05 17:56:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 24 seconds
Variants: generated 200, build-succeeded 112, build-failed 64, syntax-invalid 20, redundant 4
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 188682 ms, max 180097 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:56:56 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-05 17:57:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 46 seconds
Variants: generated 200, build-succeeded 107, build-failed 62, syntax-invalid 21, redundant 10
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 7731 ms, max 134 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 17:57:18 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-05 17:57:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 10 seconds
Variants: generated 200, build-succeeded 109, build-failed 57, syntax-invalid 22, redundant 12
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 8489 ms, max 368 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 17:57:41 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-05 17:58:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 32 seconds
Variants: generated 200, build-succeeded 108, build-failed 59, syntax-invalid 26, redundant 7
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 8383 ms, max 210 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 17:58:03 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-05 17:58:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 56 seconds
Variants: generated 200, build-succeeded 105, build-failed 64, syntax-invalid 21, redundant 10
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 9077 ms, max 312 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 17:58:28 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-05 18:01:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 21 seconds
Variants: generated 200, build-succeeded 104, build-failed 60, syntax-invalid 25, redundant 11
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 188353 ms, max 180090 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:01:52 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-05 18:02:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 44 seconds
Variants: generated 200, build-succeeded 102, build-failed 59, syntax-invalid 23, redundant 16
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 7889 ms, max 186 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:02:15 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-05 18:02:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 10 seconds
Variants: generated 200, build-succeeded 113, build-failed 60, syntax-invalid 13, redundant 14
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 9401 ms, max 302 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:02:41 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-05 18:03:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 36 seconds
Variants: generated 200, build-succeeded 111, build-failed 60, syntax-invalid 20, redundant 9
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 10331 ms, max 363 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:03:08 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-05 18:03:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 1 seconds
Variants: generated 200, build-succeeded 111, build-failed 63, syntax-invalid 16, redundant 10
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 8724 ms, max 250 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:03:33 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-05 18:03:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 28 seconds
Variants: generated 200, build-succeeded 103, build-failed 68, syntax-invalid 21, redundant 8
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 8179 ms, max 218 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:03:59 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-05 18:04:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 49 seconds
Variants: generated 200, build-succeeded 103, build-failed 54, syntax-invalid 27, redundant 16
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 7331 ms, max 169 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:04:20 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-05 18:04:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 11 seconds
Variants: generated 200, build-succeeded 113, build-failed 58, syntax-invalid 22, redundant 7
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 7727 ms, max 99 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:04:43 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-05 18:05:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 35 seconds
Variants: generated 200, build-succeeded 96, build-failed 61, syntax-invalid 32, redundant 11
Fitness: max 0(96), min 0(96), ave 0
Test execution time: sum 6969 ms, max 180 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:05:06 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-05 18:05:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 58 seconds
Variants: generated 200, build-succeeded 100, build-failed 57, syntax-invalid 29, redundant 14
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 7424 ms, max 281 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:05:30 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-05 18:05:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 18 seconds
Variants: generated 200, build-succeeded 82, build-failed 71, syntax-invalid 38, redundant 9
Fitness: max 0(82), min 0(82), ave 0
Test execution time: sum 5720 ms, max 131 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:05:49 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-05 18:06:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 41 seconds
Variants: generated 200, build-succeeded 94, build-failed 61, syntax-invalid 35, redundant 10
Fitness: max 1(3), min 0(91), ave 0.032
Test execution time: sum 7148 ms, max 154 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:06:13 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-05 18:06:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 5 seconds
Variants: generated 200, build-succeeded 98, build-failed 60, syntax-invalid 37, redundant 5
Fitness: max 1(1), min 0(97), ave 0.01
Test execution time: sum 7403 ms, max 166 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:06:36 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-05 18:06:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 28 seconds
Variants: generated 200, build-succeeded 105, build-failed 66, syntax-invalid 24, redundant 5
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 7651 ms, max 169 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:07:00 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-05 18:07:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 55 seconds
Variants: generated 200, build-succeeded 117, build-failed 61, syntax-invalid 13, redundant 9
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 8793 ms, max 178 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:07:26 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-05 18:07:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 18 seconds
Variants: generated 200, build-succeeded 102, build-failed 67, syntax-invalid 19, redundant 12
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 7194 ms, max 159 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:07:49 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-05 18:08:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 41 seconds
Variants: generated 200, build-succeeded 107, build-failed 69, syntax-invalid 19, redundant 5
Fitness: max 1(1), min 0(106), ave 0.009
Test execution time: sum 7344 ms, max 142 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:08:13 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-05 18:08:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 6 seconds
Variants: generated 200, build-succeeded 97, build-failed 71, syntax-invalid 25, redundant 7
Fitness: max 1(1), min 0(96), ave 0.01
Test execution time: sum 7140 ms, max 166 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:08:38 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-05 18:09:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 31 seconds
Variants: generated 200, build-succeeded 111, build-failed 69, syntax-invalid 17, redundant 3
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 7909 ms, max 163 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:09:02 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-05 18:09:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 57 seconds
Variants: generated 200, build-succeeded 107, build-failed 62, syntax-invalid 23, redundant 8
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 8114 ms, max 187 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:09:29 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-05 18:09:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 21 seconds
Variants: generated 200, build-succeeded 103, build-failed 50, syntax-invalid 39, redundant 8
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 7204 ms, max 152 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:09:53 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-05 18:10:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 45 seconds
Variants: generated 200, build-succeeded 91, build-failed 69, syntax-invalid 35, redundant 5
Fitness: max 0(91), min 0(91), ave 0
Test execution time: sum 6690 ms, max 157 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:10:17 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-05 18:10:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 7 seconds
Variants: generated 200, build-succeeded 81, build-failed 69, syntax-invalid 40, redundant 10
Fitness: max 0(81), min 0(81), ave 0
Test execution time: sum 5663 ms, max 108 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:10:38 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-05 18:11:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 31 seconds
Variants: generated 200, build-succeeded 87, build-failed 65, syntax-invalid 36, redundant 12
Fitness: max 0(87), min 0(87), ave 0
Test execution time: sum 6213 ms, max 138 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:11:02 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-05 18:11:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 52 seconds
Variants: generated 200, build-succeeded 81, build-failed 73, syntax-invalid 38, redundant 8
Fitness: max 0(81), min 0(81), ave 0
Test execution time: sum 5630 ms, max 131 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:11:24 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-05 18:11:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 14 seconds
Variants: generated 200, build-succeeded 81, build-failed 76, syntax-invalid 34, redundant 9
Fitness: max 0(81), min 0(81), ave 0
Test execution time: sum 5615 ms, max 99 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:11:46 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-05 18:12:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 40 seconds
Variants: generated 200, build-succeeded 95, build-failed 67, syntax-invalid 30, redundant 8
Fitness: max 0(95), min 0(95), ave 0
Test execution time: sum 6836 ms, max 174 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:12:11 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-05 18:12:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 4 seconds
Variants: generated 200, build-succeeded 100, build-failed 58, syntax-invalid 30, redundant 12
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 6848 ms, max 156 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:12:35 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-05 18:15:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 27 seconds
Variants: generated 200, build-succeeded 97, build-failed 55, syntax-invalid 40, redundant 8
Fitness: max 1(1), min 0(96), ave 0.01
Test execution time: sum 186594 ms, max 180072 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:15:59 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-05 18:16:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 52 seconds
Variants: generated 200, build-succeeded 102, build-failed 65, syntax-invalid 24, redundant 9
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 7077 ms, max 105 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:16:23 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-05 18:16:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 19 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 26, redundant 10
Fitness: max 1(1), min 0(105), ave 0.009
Test execution time: sum 7489 ms, max 152 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:16:50 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-05 18:17:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 42 seconds
Variants: generated 200, build-succeeded 95, build-failed 64, syntax-invalid 35, redundant 6
Fitness: max 0(95), min 0(95), ave 0
Test execution time: sum 6417 ms, max 151 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:17:14 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-05 18:17:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 5 seconds
Variants: generated 200, build-succeeded 90, build-failed 72, syntax-invalid 33, redundant 5
Fitness: max 0(90), min 0(90), ave 0
Test execution time: sum 5983 ms, max 87 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:17:37 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-05 18:18:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 30 seconds
Variants: generated 200, build-succeeded 89, build-failed 58, syntax-invalid 39, redundant 14
Fitness: max 0(89), min 0(89), ave 0
Test execution time: sum 6508 ms, max 234 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:18:02 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-05 18:18:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 55 seconds
Variants: generated 200, build-succeeded 95, build-failed 61, syntax-invalid 39, redundant 5
Fitness: max 0(95), min 0(95), ave 0
Test execution time: sum 6531 ms, max 139 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:18:27 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-05 18:18:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 17 seconds
Variants: generated 200, build-succeeded 84, build-failed 63, syntax-invalid 43, redundant 10
Fitness: max 0(84), min 0(84), ave 0
Test execution time: sum 5788 ms, max 149 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:18:49 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-05 18:19:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 41 seconds
Variants: generated 200, build-succeeded 83, build-failed 55, syntax-invalid 52, redundant 10
Fitness: max 0(83), min 0(83), ave 0
Test execution time: sum 6110 ms, max 104 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:19:13 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-05 18:19:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 9 seconds
Variants: generated 200, build-succeeded 82, build-failed 60, syntax-invalid 45, redundant 13
Fitness: max 0(82), min 0(82), ave 0
Test execution time: sum 6704 ms, max 238 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:19:40 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-05 18:20:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 36 seconds
Variants: generated 200, build-succeeded 95, build-failed 58, syntax-invalid 41, redundant 6
Fitness: max 0(95), min 0(95), ave 0
Test execution time: sum 7248 ms, max 199 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:20:08 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-05 18:20:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 6 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 31, redundant 7
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 7879 ms, max 204 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:20:37 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-05 18:21:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 31 seconds
Variants: generated 200, build-succeeded 84, build-failed 69, syntax-invalid 38, redundant 9
Fitness: max 0(84), min 0(84), ave 0
Test execution time: sum 6144 ms, max 111 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:21:02 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-05 18:21:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 6 seconds
Variants: generated 200, build-succeeded 102, build-failed 68, syntax-invalid 23, redundant 7
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 10570 ms, max 412 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:21:38 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-05 18:22:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 39 seconds
Variants: generated 200, build-succeeded 110, build-failed 62, syntax-invalid 22, redundant 6
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 9293 ms, max 295 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:22:11 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-05 18:22:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 9 seconds
Variants: generated 200, build-succeeded 106, build-failed 60, syntax-invalid 25, redundant 9
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 7861 ms, max 126 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:22:41 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-05 18:23:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 42 seconds
Variants: generated 200, build-succeeded 109, build-failed 55, syntax-invalid 26, redundant 10
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 9282 ms, max 210 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:23:14 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-05 18:23:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 18 seconds
Variants: generated 200, build-succeeded 112, build-failed 62, syntax-invalid 18, redundant 8
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 11086 ms, max 334 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:23:50 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-05 18:24:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 51 seconds
Variants: generated 200, build-succeeded 111, build-failed 60, syntax-invalid 18, redundant 11
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 9049 ms, max 241 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:24:22 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-05 18:24:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 25 seconds
Variants: generated 200, build-succeeded 112, build-failed 58, syntax-invalid 18, redundant 12
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 9724 ms, max 348 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:24:57 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-05 18:25:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 54 seconds
Variants: generated 200, build-succeeded 93, build-failed 71, syntax-invalid 30, redundant 6
Fitness: max 0(93), min 0(93), ave 0
Test execution time: sum 6659 ms, max 213 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:25:25 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-05 18:25:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 25 seconds
Variants: generated 200, build-succeeded 110, build-failed 66, syntax-invalid 18, redundant 6
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 7833 ms, max 127 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:25:57 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-05 18:26:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 59 seconds
Variants: generated 200, build-succeeded 114, build-failed 53, syntax-invalid 22, redundant 11
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 8972 ms, max 167 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:26:31 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-05 18:27:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 33 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 25, redundant 10
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 8632 ms, max 265 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:27:05 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-05 18:27:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 8 seconds
Variants: generated 200, build-succeeded 112, build-failed 54, syntax-invalid 21, redundant 13
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 8887 ms, max 231 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:27:39 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-05 18:28:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 40 seconds
Variants: generated 200, build-succeeded 99, build-failed 58, syntax-invalid 33, redundant 10
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 7577 ms, max 154 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:28:11 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-05 18:28:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 14 seconds
Variants: generated 200, build-succeeded 100, build-failed 63, syntax-invalid 25, redundant 12
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 8027 ms, max 211 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:28:45 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-05 18:29:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 46 seconds
Variants: generated 200, build-succeeded 109, build-failed 62, syntax-invalid 20, redundant 9
Fitness: max 1(1), min 0(108), ave 0.009
Test execution time: sum 8369 ms, max 207 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:29:18 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-05 18:29:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 20 seconds
Variants: generated 200, build-succeeded 124, build-failed 52, syntax-invalid 17, redundant 7
Fitness: max 0(124), min 0(124), ave 0
Test execution time: sum 8653 ms, max 153 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:29:51 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-05 18:30:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 54 seconds
Variants: generated 200, build-succeeded 114, build-failed 56, syntax-invalid 16, redundant 14
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 8754 ms, max 148 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:30:26 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-05 18:30:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 24 seconds
Variants: generated 200, build-succeeded 94, build-failed 64, syntax-invalid 32, redundant 10
Fitness: max 0(94), min 0(94), ave 0
Test execution time: sum 6267 ms, max 88 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:30:55 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-05 18:34:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 57 seconds
Variants: generated 200, build-succeeded 110, build-failed 60, syntax-invalid 17, redundant 13
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 188549 ms, max 180101 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:34:29 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-05 18:35:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 29 seconds
Variants: generated 200, build-succeeded 109, build-failed 63, syntax-invalid 21, redundant 7
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 7460 ms, max 91 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:35:00 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-05 18:35:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 4 seconds
Variants: generated 200, build-succeeded 113, build-failed 68, syntax-invalid 12, redundant 7
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 8207 ms, max 161 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:35:35 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-05 18:36:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 37 seconds
Variants: generated 200, build-succeeded 116, build-failed 62, syntax-invalid 14, redundant 8
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 8381 ms, max 212 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:36:08 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-05 18:36:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 seconds
Variants: generated 200, build-succeeded 105, build-failed 64, syntax-invalid 18, redundant 13
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 7209 ms, max 99 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:36:41 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-05 18:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 15, redundant 15
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 8653 ms, max 164 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:37:17 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-05 18:37:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 19 seconds
Variants: generated 200, build-succeeded 112, build-failed 52, syntax-invalid 17, redundant 19
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 7869 ms, max 179 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:37:51 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-05 18:38:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 53 seconds
Variants: generated 200, build-succeeded 115, build-failed 58, syntax-invalid 23, redundant 4
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 8173 ms, max 122 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:38:25 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-05 18:38:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 27 seconds
Variants: generated 200, build-succeeded 112, build-failed 67, syntax-invalid 12, redundant 9
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 7849 ms, max 98 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:38:59 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-05 18:39:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 4 seconds
Variants: generated 200, build-succeeded 114, build-failed 58, syntax-invalid 18, redundant 10
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 8122 ms, max 160 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:39:35 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-05 18:40:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 40 seconds
Variants: generated 200, build-succeeded 109, build-failed 64, syntax-invalid 18, redundant 9
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 8534 ms, max 248 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:40:12 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-05 18:40:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 16 seconds
Variants: generated 200, build-succeeded 110, build-failed 59, syntax-invalid 21, redundant 10
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 8062 ms, max 231 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:40:48 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-05 18:41:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 51 seconds
Variants: generated 200, build-succeeded 100, build-failed 72, syntax-invalid 22, redundant 6
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 7487 ms, max 148 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:41:22 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-05 18:41:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 25 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 19, redundant 10
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 8423 ms, max 198 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 18:41:57 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-05 18:42:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 1 seconds
Variants: generated 200, build-succeeded 109, build-failed 65, syntax-invalid 15, redundant 11
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 7837 ms, max 160 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:42:33 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-05 18:43:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 35 seconds
Variants: generated 200, build-succeeded 99, build-failed 59, syntax-invalid 28, redundant 14
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 7053 ms, max 91 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:43:07 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-05 18:43:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 12 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 31, redundant 9
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 7548 ms, max 187 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:43:43 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-05 18:44:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 48 seconds
Variants: generated 200, build-succeeded 114, build-failed 64, syntax-invalid 9, redundant 13
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 7829 ms, max 128 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:44:20 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-05 18:44:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 24 seconds
Variants: generated 200, build-succeeded 117, build-failed 56, syntax-invalid 18, redundant 9
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 8198 ms, max 114 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:44:56 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-05 18:45:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 2 seconds
Variants: generated 200, build-succeeded 116, build-failed 57, syntax-invalid 18, redundant 9
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 8607 ms, max 200 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:45:33 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-05 18:46:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 39 seconds
Variants: generated 200, build-succeeded 120, build-failed 52, syntax-invalid 16, redundant 12
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 8722 ms, max 147 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:46:11 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-05 18:46:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 15 seconds
Variants: generated 200, build-succeeded 119, build-failed 65, syntax-invalid 9, redundant 7
Fitness: max 0(119), min 0(119), ave 0
Test execution time: sum 8402 ms, max 107 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:46:47 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-05 18:47:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 55 seconds
Variants: generated 200, build-succeeded 113, build-failed 62, syntax-invalid 16, redundant 9
Fitness: max 1(1), min 0(112), ave 0.009
Test execution time: sum 8779 ms, max 134 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:47:26 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-05 18:48:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 32 seconds
Variants: generated 200, build-succeeded 117, build-failed 55, syntax-invalid 11, redundant 17
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 8357 ms, max 194 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:48:04 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-05 18:48:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 9 seconds
Variants: generated 200, build-succeeded 117, build-failed 49, syntax-invalid 18, redundant 16
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 8151 ms, max 114 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:48:41 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-05 18:49:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 47 seconds
Variants: generated 200, build-succeeded 117, build-failed 61, syntax-invalid 10, redundant 12
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 8366 ms, max 96 ms, min 66 ms
----------------------------------------------------------------

2023-08-05 18:49:18 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-05 18:49:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 26 seconds
Variants: generated 200, build-succeeded 118, build-failed 57, syntax-invalid 13, redundant 12
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 8521 ms, max 142 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:49:58 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-05 18:50:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 5 seconds
Variants: generated 200, build-succeeded 120, build-failed 63, syntax-invalid 8, redundant 9
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 8580 ms, max 229 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:50:37 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-05 18:51:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 43 seconds
Variants: generated 200, build-succeeded 116, build-failed 60, syntax-invalid 12, redundant 12
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 8250 ms, max 119 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:51:14 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-05 18:51:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 25 seconds
Variants: generated 200, build-succeeded 121, build-failed 61, syntax-invalid 12, redundant 6
Fitness: max 0(121), min 0(121), ave 0
Test execution time: sum 9373 ms, max 172 ms, min 66 ms
----------------------------------------------------------------

2023-08-05 18:51:56 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-05 18:52:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 3 seconds
Variants: generated 200, build-succeeded 110, build-failed 65, syntax-invalid 17, redundant 8
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 7826 ms, max 166 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 18:52:35 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-05 18:53:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 40 seconds
Variants: generated 200, build-succeeded 103, build-failed 56, syntax-invalid 33, redundant 8
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 7246 ms, max 115 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:53:11 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-05 18:53:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 24 seconds
Variants: generated 200, build-succeeded 117, build-failed 55, syntax-invalid 22, redundant 6
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 9844 ms, max 780 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 18:53:55 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-05 18:54:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 1 seconds
Variants: generated 200, build-succeeded 109, build-failed 55, syntax-invalid 28, redundant 8
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 6944 ms, max 200 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 18:54:32 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-05 18:55:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 31 seconds
Variants: generated 200, build-succeeded 100, build-failed 57, syntax-invalid 22, redundant 21
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5602 ms, max 94 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 18:55:03 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-05 18:55:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 2 seconds
Variants: generated 200, build-succeeded 114, build-failed 60, syntax-invalid 17, redundant 9
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6431 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 18:55:34 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-05 18:56:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 35 seconds
Variants: generated 200, build-succeeded 117, build-failed 57, syntax-invalid 18, redundant 8
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 6756 ms, max 126 ms, min 51 ms
----------------------------------------------------------------

2023-08-05 18:56:06 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-05 18:56:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 6 seconds
Variants: generated 200, build-succeeded 110, build-failed 61, syntax-invalid 17, redundant 12
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6419 ms, max 149 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 18:56:38 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-05 19:00:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 38 seconds
Variants: generated 200, build-succeeded 107, build-failed 72, syntax-invalid 14, redundant 7
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 186162 ms, max 180062 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:00:09 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-05 19:03:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 11 seconds
Variants: generated 200, build-succeeded 100, build-failed 60, syntax-invalid 29, redundant 11
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 186345 ms, max 180079 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:03:42 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-05 19:07:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 43 seconds
Variants: generated 200, build-succeeded 118, build-failed 60, syntax-invalid 13, redundant 9
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 186889 ms, max 180063 ms, min 51 ms
----------------------------------------------------------------

2023-08-05 19:07:15 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-05 19:07:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 15 seconds
Variants: generated 200, build-succeeded 105, build-failed 62, syntax-invalid 16, redundant 17
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 5858 ms, max 85 ms, min 51 ms
----------------------------------------------------------------

2023-08-05 19:07:46 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-05 19:11:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 47 seconds
Variants: generated 200, build-succeeded 106, build-failed 60, syntax-invalid 26, redundant 8
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 186152 ms, max 180059 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:11:18 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-05 19:11:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 26 seconds
Variants: generated 200, build-succeeded 116, build-failed 56, syntax-invalid 17, redundant 11
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 8168 ms, max 191 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:11:57 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-05 19:12:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 1 seconds
Variants: generated 200, build-succeeded 108, build-failed 59, syntax-invalid 27, redundant 6
Fitness: max 1(1), min 0(107), ave 0.009
Test execution time: sum 7093 ms, max 200 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:12:32 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-05 19:13:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 35 seconds
Variants: generated 200, build-succeeded 107, build-failed 65, syntax-invalid 16, redundant 12
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6560 ms, max 152 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:13:07 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-05 19:13:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 12 seconds
Variants: generated 200, build-succeeded 115, build-failed 62, syntax-invalid 13, redundant 10
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 7463 ms, max 187 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:13:44 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-05 19:14:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 47 seconds
Variants: generated 200, build-succeeded 110, build-failed 51, syntax-invalid 10, redundant 29
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 7259 ms, max 162 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:14:19 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-05 19:14:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 22 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 15, redundant 14
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6817 ms, max 169 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:14:54 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-05 19:15:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 58 seconds
Variants: generated 200, build-succeeded 115, build-failed 69, syntax-invalid 9, redundant 7
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6863 ms, max 93 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:15:29 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-05 19:16:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 34 seconds
Variants: generated 200, build-succeeded 113, build-failed 60, syntax-invalid 19, redundant 8
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 7296 ms, max 193 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:16:05 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-05 19:16:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 5 seconds
Variants: generated 200, build-succeeded 105, build-failed 59, syntax-invalid 23, redundant 13
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 5895 ms, max 124 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:16:37 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-05 19:17:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 39 seconds
Variants: generated 200, build-succeeded 112, build-failed 62, syntax-invalid 17, redundant 9
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6205 ms, max 86 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:17:10 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-05 19:17:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 13 seconds
Variants: generated 200, build-succeeded 110, build-failed 61, syntax-invalid 20, redundant 9
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6573 ms, max 130 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:17:45 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-05 19:18:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 47 seconds
Variants: generated 200, build-succeeded 104, build-failed 67, syntax-invalid 21, redundant 8
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 5808 ms, max 124 ms, min 51 ms
----------------------------------------------------------------

2023-08-05 19:18:18 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-05 19:18:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 20 seconds
Variants: generated 200, build-succeeded 108, build-failed 62, syntax-invalid 18, redundant 12
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 5894 ms, max 81 ms, min 51 ms
----------------------------------------------------------------

2023-08-05 19:18:51 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-05 19:19:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 52 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 24, redundant 11
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 6184 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:19:24 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-05 19:19:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 28 seconds
Variants: generated 200, build-succeeded 111, build-failed 62, syntax-invalid 21, redundant 6
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6443 ms, max 145 ms, min 51 ms
----------------------------------------------------------------

2023-08-05 19:19:59 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-05 19:20:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 2 seconds
Variants: generated 200, build-succeeded 120, build-failed 60, syntax-invalid 12, redundant 8
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 6734 ms, max 108 ms, min 51 ms
----------------------------------------------------------------

2023-08-05 19:20:34 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-05 19:21:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 35 seconds
Variants: generated 200, build-succeeded 108, build-failed 54, syntax-invalid 23, redundant 15
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6008 ms, max 89 ms, min 51 ms
----------------------------------------------------------------

2023-08-05 19:21:07 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-05 19:21:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 12 seconds
Variants: generated 200, build-succeeded 112, build-failed 62, syntax-invalid 15, redundant 11
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6598 ms, max 151 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:21:43 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-05 19:22:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 46 seconds
Variants: generated 200, build-succeeded 103, build-failed 54, syntax-invalid 29, redundant 14
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 5861 ms, max 144 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:22:17 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-05 19:22:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 19 seconds
Variants: generated 200, build-succeeded 112, build-failed 55, syntax-invalid 21, redundant 12
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6096 ms, max 75 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:22:50 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-05 19:23:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 54 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 26, redundant 11
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 5722 ms, max 81 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:23:25 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-05 19:24:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 28 seconds
Variants: generated 200, build-succeeded 96, build-failed 62, syntax-invalid 28, redundant 14
Fitness: max 0(96), min 0(96), ave 0
Test execution time: sum 5692 ms, max 247 ms, min 51 ms
----------------------------------------------------------------

2023-08-05 19:24:00 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-05 19:24:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 2 seconds
Variants: generated 200, build-succeeded 100, build-failed 61, syntax-invalid 26, redundant 13
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5657 ms, max 118 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:24:33 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-05 19:25:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 37 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 21, redundant 14
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 5976 ms, max 83 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:25:08 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-05 19:25:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 14 seconds
Variants: generated 200, build-succeeded 110, build-failed 63, syntax-invalid 17, redundant 10
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6406 ms, max 107 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:25:45 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-05 19:26:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 51 seconds
Variants: generated 200, build-succeeded 116, build-failed 63, syntax-invalid 12, redundant 9
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6879 ms, max 147 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:26:22 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-05 19:26:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 25 seconds
Variants: generated 200, build-succeeded 102, build-failed 63, syntax-invalid 22, redundant 13
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 5689 ms, max 111 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:26:57 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-05 19:27:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 1 seconds
Variants: generated 200, build-succeeded 98, build-failed 69, syntax-invalid 24, redundant 9
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 5527 ms, max 84 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:27:33 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-05 19:28:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 41 seconds
Variants: generated 200, build-succeeded 123, build-failed 51, syntax-invalid 10, redundant 16
Fitness: max 0(123), min 0(123), ave 0
Test execution time: sum 7251 ms, max 126 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:28:12 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-05 19:28:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 18 seconds
Variants: generated 200, build-succeeded 120, build-failed 52, syntax-invalid 14, redundant 14
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 6705 ms, max 113 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:28:49 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-05 19:29:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 52 seconds
Variants: generated 200, build-succeeded 102, build-failed 66, syntax-invalid 23, redundant 9
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 5724 ms, max 90 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:29:24 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-05 19:30:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 31 seconds
Variants: generated 200, build-succeeded 108, build-failed 70, syntax-invalid 17, redundant 5
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6657 ms, max 124 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:30:02 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-05 19:30:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 8 seconds
Variants: generated 200, build-succeeded 120, build-failed 59, syntax-invalid 9, redundant 12
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 6780 ms, max 120 ms, min 51 ms
----------------------------------------------------------------

2023-08-05 19:30:39 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-05 19:31:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 47 seconds
Variants: generated 200, build-succeeded 118, build-failed 56, syntax-invalid 13, redundant 13
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 6790 ms, max 98 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:31:18 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-05 19:31:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 28 seconds
Variants: generated 200, build-succeeded 102, build-failed 66, syntax-invalid 22, redundant 10
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 6538 ms, max 184 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:31:59 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-05 19:32:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 9 seconds
Variants: generated 200, build-succeeded 105, build-failed 62, syntax-invalid 18, redundant 15
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 7097 ms, max 207 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:32:41 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-05 19:33:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 47 seconds
Variants: generated 200, build-succeeded 100, build-failed 51, syntax-invalid 28, redundant 21
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 6431 ms, max 252 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:33:18 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-05 19:33:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 24 seconds
Variants: generated 200, build-succeeded 111, build-failed 60, syntax-invalid 13, redundant 16
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6238 ms, max 80 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:33:56 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-05 19:34:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 4 seconds
Variants: generated 200, build-succeeded 120, build-failed 56, syntax-invalid 18, redundant 6
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 7280 ms, max 230 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:34:35 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-05 19:35:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 41 seconds
Variants: generated 200, build-succeeded 113, build-failed 60, syntax-invalid 15, redundant 12
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6388 ms, max 122 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:35:12 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-05 19:35:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 17 seconds
Variants: generated 200, build-succeeded 101, build-failed 68, syntax-invalid 19, redundant 12
Fitness: max 0(101), min 0(101), ave 0
Test execution time: sum 5592 ms, max 81 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:35:48 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-05 19:36:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 55 seconds
Variants: generated 200, build-succeeded 99, build-failed 73, syntax-invalid 16, redundant 12
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 6049 ms, max 125 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:36:26 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-05 19:37:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 seconds
Variants: generated 200, build-succeeded 106, build-failed 65, syntax-invalid 14, redundant 15
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 5999 ms, max 116 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:37:04 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-05 19:37:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 9 seconds
Variants: generated 200, build-succeeded 103, build-failed 60, syntax-invalid 23, redundant 14
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 5837 ms, max 92 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:37:40 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-05 19:38:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 46 seconds
Variants: generated 200, build-succeeded 106, build-failed 62, syntax-invalid 20, redundant 12
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6221 ms, max 77 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:38:18 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-05 19:38:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 26 seconds
Variants: generated 200, build-succeeded 119, build-failed 51, syntax-invalid 16, redundant 14
Fitness: max 0(119), min 0(119), ave 0
Test execution time: sum 7140 ms, max 150 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:38:57 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-05 19:39:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 3 seconds
Variants: generated 200, build-succeeded 108, build-failed 68, syntax-invalid 16, redundant 8
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6198 ms, max 122 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:39:34 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-05 19:40:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 41 seconds
Variants: generated 200, build-succeeded 110, build-failed 55, syntax-invalid 19, redundant 16
Fitness: max 1(1), min 0(109), ave 0.009
Test execution time: sum 6333 ms, max 87 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:40:12 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-05 19:40:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 19 seconds
Variants: generated 200, build-succeeded 115, build-failed 58, syntax-invalid 19, redundant 8
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6816 ms, max 134 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:40:51 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-05 19:41:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 57 seconds
Variants: generated 200, build-succeeded 103, build-failed 68, syntax-invalid 21, redundant 8
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 5798 ms, max 122 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:41:28 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-05 19:42:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 35 seconds
Variants: generated 200, build-succeeded 118, build-failed 58, syntax-invalid 11, redundant 13
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 6670 ms, max 93 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:42:07 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-05 19:42:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 13 seconds
Variants: generated 200, build-succeeded 112, build-failed 62, syntax-invalid 19, redundant 7
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6475 ms, max 125 ms, min 52 ms
----------------------------------------------------------------

2023-08-05 19:42:45 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-05 19:43:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 52 seconds
Variants: generated 200, build-succeeded 110, build-failed 64, syntax-invalid 15, redundant 11
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6389 ms, max 117 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:43:23 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-05 19:44:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 30 seconds
Variants: generated 200, build-succeeded 120, build-failed 56, syntax-invalid 10, redundant 14
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 6713 ms, max 96 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:44:01 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-05 19:44:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 8 seconds
Variants: generated 200, build-succeeded 119, build-failed 58, syntax-invalid 11, redundant 12
Fitness: max 0(119), min 0(119), ave 0
Test execution time: sum 6763 ms, max 74 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:44:39 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-05 19:45:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 48 seconds
Variants: generated 200, build-succeeded 114, build-failed 66, syntax-invalid 9, redundant 11
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 7140 ms, max 224 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:45:19 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-05 19:45:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 25 seconds
Variants: generated 200, build-succeeded 103, build-failed 60, syntax-invalid 12, redundant 25
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 5799 ms, max 85 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:45:57 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-05 19:46:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 3 seconds
Variants: generated 200, build-succeeded 114, build-failed 62, syntax-invalid 12, redundant 12
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6641 ms, max 104 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:46:35 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-05 19:47:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 43 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 17, redundant 21
Fitness: max 1(1), min 0(104), ave 0.01
Test execution time: sum 6792 ms, max 158 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:47:14 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-05 19:47:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 21 seconds
Variants: generated 200, build-succeeded 109, build-failed 62, syntax-invalid 16, redundant 13
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 6251 ms, max 118 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:47:53 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-05 19:48:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 5 seconds
Variants: generated 200, build-succeeded 115, build-failed 53, syntax-invalid 16, redundant 16
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 7662 ms, max 236 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:48:37 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-05 19:52:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 47 seconds
Variants: generated 200, build-succeeded 111, build-failed 58, syntax-invalid 17, redundant 14
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 187002 ms, max 180076 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 19:52:19 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-05 19:53:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 31 seconds
Variants: generated 200, build-succeeded 100, build-failed 66, syntax-invalid 27, redundant 7
Fitness: max 1(1), min 0(99), ave 0.01
Test execution time: sum 7237 ms, max 251 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:53:02 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-05 19:53:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 13 seconds
Variants: generated 200, build-succeeded 120, build-failed 50, syntax-invalid 17, redundant 13
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 8100 ms, max 145 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:53:45 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-05 19:54:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 55 seconds
Variants: generated 200, build-succeeded 112, build-failed 63, syntax-invalid 18, redundant 7
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 7083 ms, max 168 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:54:26 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-05 19:55:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 38 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 22, redundant 12
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 7205 ms, max 193 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 19:55:09 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-05 19:55:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 23 seconds
Variants: generated 200, build-succeeded 115, build-failed 50, syntax-invalid 21, redundant 14
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 8870 ms, max 296 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 19:55:54 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-05 19:56:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 7 seconds
Variants: generated 200, build-succeeded 122, build-failed 53, syntax-invalid 15, redundant 10
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 7985 ms, max 147 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 19:56:39 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-05 19:57:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 48 seconds
Variants: generated 200, build-succeeded 106, build-failed 62, syntax-invalid 23, redundant 9
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6894 ms, max 127 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 19:57:20 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-05 19:58:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 39 seconds
Variants: generated 200, build-succeeded 108, build-failed 63, syntax-invalid 15, redundant 14
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 9931 ms, max 348 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 19:58:11 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-05 19:58:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 27 seconds
Variants: generated 200, build-succeeded 99, build-failed 53, syntax-invalid 25, redundant 23
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 8369 ms, max 302 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 19:58:58 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-05 19:59:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 10 seconds
Variants: generated 200, build-succeeded 102, build-failed 68, syntax-invalid 20, redundant 10
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 6538 ms, max 135 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 19:59:41 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-05 20:00:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 56 seconds
Variants: generated 200, build-succeeded 106, build-failed 63, syntax-invalid 22, redundant 9
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 7476 ms, max 288 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:00:27 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-05 20:01:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 40 seconds
Variants: generated 200, build-succeeded 109, build-failed 61, syntax-invalid 17, redundant 13
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 6847 ms, max 122 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:01:11 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-05 20:01:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 23 seconds
Variants: generated 200, build-succeeded 104, build-failed 70, syntax-invalid 16, redundant 10
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 6750 ms, max 203 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:01:55 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-05 20:05:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 9 seconds
Variants: generated 200, build-succeeded 106, build-failed 62, syntax-invalid 19, redundant 13
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 187369 ms, max 180075 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:05:41 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-05 20:06:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 55 seconds
Variants: generated 200, build-succeeded 111, build-failed 67, syntax-invalid 14, redundant 8
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 7391 ms, max 233 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:06:26 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-05 20:07:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 37 seconds
Variants: generated 200, build-succeeded 91, build-failed 63, syntax-invalid 35, redundant 11
Fitness: max 0(91), min 0(91), ave 0
Test execution time: sum 5931 ms, max 137 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:07:08 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-05 20:07:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 18 seconds
Variants: generated 200, build-succeeded 99, build-failed 63, syntax-invalid 24, redundant 14
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 6066 ms, max 109 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:07:50 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-05 20:08:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 4 seconds
Variants: generated 200, build-succeeded 93, build-failed 65, syntax-invalid 26, redundant 16
Fitness: max 0(93), min 0(93), ave 0
Test execution time: sum 7024 ms, max 298 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:08:36 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-05 20:09:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 51 seconds
Variants: generated 200, build-succeeded 114, build-failed 68, syntax-invalid 13, redundant 5
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 7702 ms, max 233 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:09:22 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-05 20:10:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 36 seconds
Variants: generated 200, build-succeeded 110, build-failed 72, syntax-invalid 9, redundant 9
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6899 ms, max 151 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:10:07 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-05 20:10:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 21 seconds
Variants: generated 200, build-succeeded 107, build-failed 67, syntax-invalid 18, redundant 8
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 7263 ms, max 185 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:10:53 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-05 20:11:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 7 seconds
Variants: generated 200, build-succeeded 103, build-failed 69, syntax-invalid 17, redundant 11
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 7063 ms, max 293 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:11:38 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-05 20:12:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 48 seconds
Variants: generated 200, build-succeeded 102, build-failed 70, syntax-invalid 24, redundant 4
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 6006 ms, max 104 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:12:19 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-05 20:13:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 30 seconds
Variants: generated 200, build-succeeded 112, build-failed 53, syntax-invalid 20, redundant 15
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6757 ms, max 166 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:13:01 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-05 20:16:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 13 seconds
Variants: generated 200, build-succeeded 109, build-failed 59, syntax-invalid 22, redundant 10
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 186646 ms, max 180065 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:16:44 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-05 20:17:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 54 seconds
Variants: generated 200, build-succeeded 101, build-failed 68, syntax-invalid 24, redundant 7
Fitness: max 0(101), min 0(101), ave 0
Test execution time: sum 5883 ms, max 78 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:17:26 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-05 20:18:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 37 seconds
Variants: generated 200, build-succeeded 105, build-failed 68, syntax-invalid 12, redundant 15
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 6125 ms, max 82 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:18:08 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-05 20:18:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 21 seconds
Variants: generated 200, build-succeeded 110, build-failed 72, syntax-invalid 13, redundant 5
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6757 ms, max 150 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:18:53 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-05 20:19:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 3 seconds
Variants: generated 200, build-succeeded 100, build-failed 72, syntax-invalid 18, redundant 10
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5983 ms, max 120 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:19:34 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-05 20:20:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 45 seconds
Variants: generated 200, build-succeeded 112, build-failed 65, syntax-invalid 13, redundant 10
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6434 ms, max 85 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:20:17 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-05 20:21:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 30 seconds
Variants: generated 200, build-succeeded 114, build-failed 58, syntax-invalid 8, redundant 20
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 7132 ms, max 187 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:21:01 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-05 20:21:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 14 seconds
Variants: generated 200, build-succeeded 119, build-failed 57, syntax-invalid 8, redundant 16
Fitness: max 0(119), min 0(119), ave 0
Test execution time: sum 7114 ms, max 127 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:21:45 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-05 20:22:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 59 seconds
Variants: generated 200, build-succeeded 121, build-failed 61, syntax-invalid 5, redundant 13
Fitness: max 1(1), min 0(120), ave 0.008
Test execution time: sum 7081 ms, max 100 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:22:30 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-05 20:23:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 44 seconds
Variants: generated 200, build-succeeded 120, build-failed 52, syntax-invalid 15, redundant 13
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 7197 ms, max 122 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:23:15 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-05 20:24:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 29 seconds
Variants: generated 200, build-succeeded 124, build-failed 61, syntax-invalid 9, redundant 6
Fitness: max 0(124), min 0(124), ave 0
Test execution time: sum 7154 ms, max 110 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:24:01 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-05 20:24:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 12 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 20, redundant 17
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 6064 ms, max 91 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:24:43 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-05 20:25:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 56 seconds
Variants: generated 200, build-succeeded 118, build-failed 58, syntax-invalid 12, redundant 12
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 6817 ms, max 72 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:25:28 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-05 20:26:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 42 seconds
Variants: generated 200, build-succeeded 114, build-failed 61, syntax-invalid 15, redundant 10
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6701 ms, max 120 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:26:13 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-05 20:27:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 28 seconds
Variants: generated 200, build-succeeded 120, build-failed 57, syntax-invalid 6, redundant 17
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 7102 ms, max 101 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:27:00 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-05 20:27:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 18 seconds
Variants: generated 200, build-succeeded 131, build-failed 59, syntax-invalid 4, redundant 6
Fitness: max 0(131), min 0(131), ave 0
Test execution time: sum 8279 ms, max 137 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:27:49 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-05 20:28:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 12 seconds
Variants: generated 200, build-succeeded 120, build-failed 67, syntax-invalid 5, redundant 8
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 9541 ms, max 284 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:28:43 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-05 20:29:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 1 seconds
Variants: generated 200, build-succeeded 124, build-failed 56, syntax-invalid 7, redundant 13
Fitness: max 0(124), min 0(124), ave 0
Test execution time: sum 7798 ms, max 169 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:29:33 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-05 20:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 46 seconds
Variants: generated 200, build-succeeded 120, build-failed 58, syntax-invalid 8, redundant 14
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 6857 ms, max 91 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:30:18 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-05 20:31:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 34 seconds
Variants: generated 200, build-succeeded 118, build-failed 56, syntax-invalid 7, redundant 19
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 7595 ms, max 243 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:31:05 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-05 20:34:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 20 seconds
Variants: generated 200, build-succeeded 120, build-failed 54, syntax-invalid 12, redundant 14
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 187179 ms, max 180068 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:34:52 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-05 20:35:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 6 seconds
Variants: generated 200, build-succeeded 120, build-failed 62, syntax-invalid 12, redundant 6
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 6974 ms, max 89 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:35:38 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-05 20:36:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 55 seconds
Variants: generated 200, build-succeeded 126, build-failed 56, syntax-invalid 5, redundant 13
Fitness: max 0(126), min 0(126), ave 0
Test execution time: sum 7942 ms, max 134 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:36:26 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-05 20:37:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 seconds
Variants: generated 200, build-succeeded 125, build-failed 56, syntax-invalid 4, redundant 15
Fitness: max 0(125), min 0(125), ave 0
Test execution time: sum 7289 ms, max 95 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:37:13 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-05 20:38:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 29 seconds
Variants: generated 200, build-succeeded 123, build-failed 58, syntax-invalid 7, redundant 12
Fitness: max 0(123), min 0(123), ave 0
Test execution time: sum 7177 ms, max 75 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:38:00 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-05 20:38:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 17 seconds
Variants: generated 200, build-succeeded 117, build-failed 58, syntax-invalid 6, redundant 19
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 7020 ms, max 121 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:38:48 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-05 20:39:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 4 seconds
Variants: generated 200, build-succeeded 120, build-failed 66, syntax-invalid 4, redundant 10
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 6963 ms, max 115 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:39:35 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-05 20:40:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 51 seconds
Variants: generated 200, build-succeeded 116, build-failed 62, syntax-invalid 9, redundant 13
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6814 ms, max 88 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:40:22 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-05 20:41:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 40 seconds
Variants: generated 200, build-succeeded 118, build-failed 62, syntax-invalid 12, redundant 8
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 7328 ms, max 221 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:41:11 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-05 20:41:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 27 seconds
Variants: generated 200, build-succeeded 127, build-failed 55, syntax-invalid 5, redundant 13
Fitness: max 0(127), min 0(127), ave 0
Test execution time: sum 7285 ms, max 120 ms, min 53 ms
----------------------------------------------------------------

2023-08-05 20:41:59 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-05 20:45:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 19 seconds
Variants: generated 200, build-succeeded 126, build-failed 60, syntax-invalid 2, redundant 12
Fitness: max 0(126), min 0(126), ave 0
Test execution time: sum 188081 ms, max 180090 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:45:50 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-05 20:46:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 12 seconds
Variants: generated 200, build-succeeded 120, build-failed 58, syntax-invalid 7, redundant 15
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 8984 ms, max 239 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:46:44 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-05 20:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 9 seconds
Variants: generated 200, build-succeeded 115, build-failed 68, syntax-invalid 8, redundant 9
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 9537 ms, max 430 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 20:47:41 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-05 20:48:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 1 seconds
Variants: generated 200, build-succeeded 117, build-failed 61, syntax-invalid 9, redundant 13
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 7360 ms, max 213 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 20:48:32 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-05 20:49:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 56 seconds
Variants: generated 200, build-succeeded 112, build-failed 61, syntax-invalid 10, redundant 17
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 8834 ms, max 333 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:49:28 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-05 20:50:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 49 seconds
Variants: generated 200, build-succeeded 108, build-failed 62, syntax-invalid 17, redundant 13
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 7880 ms, max 197 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 20:50:20 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-05 20:51:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 40 seconds
Variants: generated 200, build-succeeded 111, build-failed 64, syntax-invalid 13, redundant 12
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 7821 ms, max 160 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 20:51:12 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-05 20:52:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 33 seconds
Variants: generated 200, build-succeeded 111, build-failed 57, syntax-invalid 17, redundant 15
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 7978 ms, max 167 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 20:52:05 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-05 20:53:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 28 seconds
Variants: generated 200, build-succeeded 107, build-failed 62, syntax-invalid 15, redundant 16
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 8859 ms, max 265 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 20:53:00 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-05 20:53:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 19 seconds
Variants: generated 200, build-succeeded 105, build-failed 71, syntax-invalid 15, redundant 9
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 6769 ms, max 153 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 20:53:51 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-05 20:54:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 12 seconds
Variants: generated 200, build-succeeded 117, build-failed 53, syntax-invalid 13, redundant 17
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 7589 ms, max 153 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 20:54:44 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-05 20:55:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 1 seconds
Variants: generated 200, build-succeeded 117, build-failed 57, syntax-invalid 16, redundant 10
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 6858 ms, max 119 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:55:32 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-05 20:56:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 49 seconds
Variants: generated 200, build-succeeded 115, build-failed 61, syntax-invalid 9, redundant 15
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6542 ms, max 88 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:56:21 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-05 20:57:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 37 seconds
Variants: generated 200, build-succeeded 108, build-failed 66, syntax-invalid 18, redundant 8
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6443 ms, max 78 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 20:57:09 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-05 21:00:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 28 seconds
Variants: generated 200, build-succeeded 110, build-failed 63, syntax-invalid 18, redundant 9
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 186682 ms, max 180067 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 21:00:59 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-05 21:01:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 16 seconds
Variants: generated 200, build-succeeded 113, build-failed 61, syntax-invalid 17, redundant 9
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6529 ms, max 93 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 21:01:48 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-05 21:02:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 4 seconds
Variants: generated 200, build-succeeded 101, build-failed 47, syntax-invalid 32, redundant 20
Fitness: max 0(101), min 0(101), ave 0
Test execution time: sum 5777 ms, max 75 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:02:35 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-05 21:03:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 54 seconds
Variants: generated 200, build-succeeded 114, build-failed 65, syntax-invalid 15, redundant 6
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6708 ms, max 111 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:03:26 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-05 21:04:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 44 seconds
Variants: generated 200, build-succeeded 116, build-failed 61, syntax-invalid 15, redundant 8
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6633 ms, max 108 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:04:15 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-05 21:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 32 seconds
Variants: generated 200, build-succeeded 114, build-failed 52, syntax-invalid 16, redundant 18
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6497 ms, max 83 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 21:05:04 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-05 21:05:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 22 seconds
Variants: generated 200, build-succeeded 107, build-failed 51, syntax-invalid 22, redundant 20
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6478 ms, max 132 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 21:05:54 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-05 21:06:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 10 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 26, redundant 9
Fitness: max 1(2), min 0(105), ave 0.019
Test execution time: sum 6412 ms, max 115 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 21:06:42 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-05 21:07:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 58 seconds
Variants: generated 200, build-succeeded 104, build-failed 57, syntax-invalid 24, redundant 15
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 6092 ms, max 88 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:07:30 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-05 21:08:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 45 seconds
Variants: generated 200, build-succeeded 93, build-failed 57, syntax-invalid 26, redundant 24
Fitness: max 0(93), min 0(93), ave 0
Test execution time: sum 5576 ms, max 78 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:08:17 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-05 21:09:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 34 seconds
Variants: generated 200, build-succeeded 92, build-failed 60, syntax-invalid 34, redundant 14
Fitness: max 0(92), min 0(92), ave 0
Test execution time: sum 5435 ms, max 114 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 21:09:06 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-05 21:09:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 26 seconds
Variants: generated 200, build-succeeded 111, build-failed 54, syntax-invalid 19, redundant 16
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 7145 ms, max 188 ms, min 54 ms
----------------------------------------------------------------

2023-08-05 21:09:57 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-05 21:10:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 18 seconds
Variants: generated 200, build-succeeded 102, build-failed 63, syntax-invalid 24, redundant 11
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 6472 ms, max 189 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:10:50 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-05 21:11:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 12 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 28, redundant 12
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 7085 ms, max 187 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:11:43 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-05 21:12:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 8 seconds
Variants: generated 200, build-succeeded 121, build-failed 55, syntax-invalid 15, redundant 9
Fitness: max 0(121), min 0(121), ave 0
Test execution time: sum 7969 ms, max 119 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:12:39 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-05 21:13:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 1 seconds
Variants: generated 200, build-succeeded 108, build-failed 60, syntax-invalid 18, redundant 14
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6879 ms, max 112 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:13:32 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-05 21:14:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 54 seconds
Variants: generated 200, build-succeeded 113, build-failed 62, syntax-invalid 13, redundant 12
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 7125 ms, max 95 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:14:26 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-05 21:15:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 51 seconds
Variants: generated 200, build-succeeded 103, build-failed 68, syntax-invalid 20, redundant 9
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 7772 ms, max 223 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:15:23 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-05 21:16:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 46 seconds
Variants: generated 200, build-succeeded 112, build-failed 62, syntax-invalid 15, redundant 11
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 7488 ms, max 224 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:16:18 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-05 21:17:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 40 seconds
Variants: generated 200, build-succeeded 109, build-failed 64, syntax-invalid 11, redundant 16
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 7027 ms, max 210 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:17:11 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-05 21:18:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 38 seconds
Variants: generated 200, build-succeeded 107, build-failed 65, syntax-invalid 22, redundant 6
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 8366 ms, max 165 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:18:10 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-05 21:19:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 33 seconds
Variants: generated 200, build-succeeded 114, build-failed 55, syntax-invalid 20, redundant 11
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 7781 ms, max 132 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:19:04 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-05 21:19:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 26 seconds
Variants: generated 200, build-succeeded 103, build-failed 63, syntax-invalid 23, redundant 11
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 6523 ms, max 101 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:19:58 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-05 21:23:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 24 seconds
Variants: generated 200, build-succeeded 110, build-failed 62, syntax-invalid 21, redundant 7
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 188091 ms, max 180075 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:23:55 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-05 21:24:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 19 seconds
Variants: generated 200, build-succeeded 111, build-failed 58, syntax-invalid 19, redundant 12
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 7418 ms, max 126 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:24:50 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-05 21:25:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 49 minutes 11 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 22, redundant 14
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6417 ms, max 100 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:25:43 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-05 21:26:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 8 seconds
Variants: generated 200, build-succeeded 113, build-failed 65, syntax-invalid 17, redundant 5
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 7839 ms, max 202 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:26:40 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-05 21:27:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 4 seconds
Variants: generated 200, build-succeeded 106, build-failed 67, syntax-invalid 17, redundant 10
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6866 ms, max 158 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:27:35 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-05 21:28:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 57 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 22, redundant 14
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6730 ms, max 128 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:28:28 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-05 21:29:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 53 seconds
Variants: generated 200, build-succeeded 109, build-failed 58, syntax-invalid 21, redundant 12
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 7061 ms, max 170 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:29:24 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-05 21:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 46 seconds
Variants: generated 200, build-succeeded 106, build-failed 60, syntax-invalid 25, redundant 9
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6546 ms, max 123 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:30:18 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-05 21:34:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 42 seconds
Variants: generated 200, build-succeeded 104, build-failed 68, syntax-invalid 19, redundant 9
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 186688 ms, max 180066 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:34:13 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-05 21:35:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 35 seconds
Variants: generated 200, build-succeeded 107, build-failed 55, syntax-invalid 26, redundant 12
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6447 ms, max 107 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:35:06 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-05 21:36:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 33 seconds
Variants: generated 200, build-succeeded 107, build-failed 63, syntax-invalid 21, redundant 9
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 8427 ms, max 253 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:36:05 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-05 21:36:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 seconds
Variants: generated 200, build-succeeded 105, build-failed 63, syntax-invalid 26, redundant 6
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 6609 ms, max 128 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:36:59 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-05 21:37:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 21 seconds
Variants: generated 200, build-succeeded 101, build-failed 58, syntax-invalid 26, redundant 15
Fitness: max 0(101), min 0(101), ave 0
Test execution time: sum 6504 ms, max 111 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:37:53 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-05 21:38:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 19 seconds
Variants: generated 200, build-succeeded 114, build-failed 63, syntax-invalid 16, redundant 7
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 7539 ms, max 157 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:38:50 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-05 21:42:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 6 minutes 16 seconds
Variants: generated 200, build-succeeded 115, build-failed 51, syntax-invalid 20, redundant 14
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 187745 ms, max 180112 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 21:42:48 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-05 21:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 10 seconds
Variants: generated 200, build-succeeded 98, build-failed 68, syntax-invalid 27, redundant 7
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 186208 ms, max 180083 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:46:41 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-05 21:53:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 8 seconds
Variants: generated 200, build-succeeded 114, build-failed 59, syntax-invalid 21, redundant 6
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 368575 ms, max 180088 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:53:40 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-05 21:57:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 7 seconds
Variants: generated 200, build-succeeded 110, build-failed 56, syntax-invalid 21, redundant 13
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 188233 ms, max 180069 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:57:38 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-05 21:58:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 22 minutes 2 seconds
Variants: generated 200, build-succeeded 101, build-failed 65, syntax-invalid 23, redundant 11
Fitness: max 0(101), min 0(101), ave 0
Test execution time: sum 6622 ms, max 207 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:58:33 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-05 21:59:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 22 minutes 58 seconds
Variants: generated 200, build-succeeded 103, build-failed 65, syntax-invalid 26, redundant 6
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 6973 ms, max 186 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 21:59:30 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-05 22:00:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 53 seconds
Variants: generated 200, build-succeeded 104, build-failed 68, syntax-invalid 20, redundant 8
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 6974 ms, max 144 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:00:25 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-05 22:01:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 49 seconds
Variants: generated 200, build-succeeded 111, build-failed 57, syntax-invalid 23, redundant 9
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6991 ms, max 109 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:01:21 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-05 22:02:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 25 minutes 47 seconds
Variants: generated 200, build-succeeded 108, build-failed 62, syntax-invalid 14, redundant 16
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6986 ms, max 125 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:02:19 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-05 22:03:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 45 seconds
Variants: generated 200, build-succeeded 111, build-failed 58, syntax-invalid 19, redundant 12
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 7194 ms, max 159 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 22:03:17 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-05 22:04:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 42 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 17, redundant 12
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 7126 ms, max 102 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 22:04:14 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-05 22:05:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 28 minutes 41 seconds
Variants: generated 200, build-succeeded 116, build-failed 60, syntax-invalid 12, redundant 12
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 7725 ms, max 272 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:05:13 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-08-05 22:06:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 minutes 41 seconds
Variants: generated 200, build-succeeded 118, build-failed 63, syntax-invalid 14, redundant 5
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 7733 ms, max 242 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 22:06:12 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-08-05 22:07:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 41 seconds
Variants: generated 200, build-succeeded 124, build-failed 59, syntax-invalid 7, redundant 10
Fitness: max 0(124), min 0(124), ave 0
Test execution time: sum 7761 ms, max 163 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:07:12 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-08-05 22:08:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 41 seconds
Variants: generated 200, build-succeeded 118, build-failed 54, syntax-invalid 11, redundant 17
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 8123 ms, max 254 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:08:13 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-08-05 22:09:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 32 minutes 41 seconds
Variants: generated 200, build-succeeded 120, build-failed 56, syntax-invalid 10, redundant 14
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 7549 ms, max 114 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:09:12 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-08-05 22:10:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 33 minutes 40 seconds
Variants: generated 200, build-succeeded 113, build-failed 58, syntax-invalid 14, redundant 15
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 7415 ms, max 171 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:10:11 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-08-05 22:11:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 41 seconds
Variants: generated 200, build-succeeded 113, build-failed 59, syntax-invalid 14, redundant 14
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 8147 ms, max 246 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:11:12 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-08-05 22:12:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 35 minutes 40 seconds
Variants: generated 200, build-succeeded 109, build-failed 65, syntax-invalid 16, redundant 10
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 7466 ms, max 198 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:12:12 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-08-05 22:13:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 minutes 39 seconds
Variants: generated 200, build-succeeded 110, build-failed 65, syntax-invalid 12, redundant 13
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 7095 ms, max 128 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:13:10 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-08-05 22:14:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 37 minutes 40 seconds
Variants: generated 200, build-succeeded 113, build-failed 61, syntax-invalid 12, redundant 14
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 7919 ms, max 149 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:14:12 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-08-05 22:15:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 38 minutes 41 seconds
Variants: generated 200, build-succeeded 116, build-failed 66, syntax-invalid 11, redundant 7
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 7615 ms, max 198 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:15:13 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-08-05 22:16:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 39 minutes 40 seconds
Variants: generated 200, build-succeeded 108, build-failed 60, syntax-invalid 20, redundant 12
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6806 ms, max 102 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:16:11 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-08-05 22:17:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 40 minutes 38 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 27, redundant 13
Fitness: max 0(101), min 0(101), ave 0
Test execution time: sum 6993 ms, max 287 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:17:10 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-08-05 22:18:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 40 seconds
Variants: generated 200, build-succeeded 114, build-failed 58, syntax-invalid 15, redundant 13
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 7765 ms, max 163 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:18:12 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-08-05 22:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 42 minutes 40 seconds
Variants: generated 200, build-succeeded 110, build-failed 68, syntax-invalid 8, redundant 14
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6937 ms, max 182 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 22:19:11 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-08-05 22:20:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 43 minutes 43 seconds
Variants: generated 200, build-succeeded 118, build-failed 57, syntax-invalid 15, redundant 10
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 8101 ms, max 328 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:20:15 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-08-05 22:21:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 44 minutes 44 seconds
Variants: generated 200, build-succeeded 114, build-failed 65, syntax-invalid 11, redundant 10
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 7293 ms, max 141 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:21:16 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-08-05 22:22:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 46 seconds
Variants: generated 200, build-succeeded 126, build-failed 58, syntax-invalid 10, redundant 6
Fitness: max 0(126), min 0(126), ave 0
Test execution time: sum 7819 ms, max 120 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:22:18 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-08-05 22:23:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 51 seconds
Variants: generated 200, build-succeeded 124, build-failed 57, syntax-invalid 4, redundant 15
Fitness: max 0(124), min 0(124), ave 0
Test execution time: sum 8520 ms, max 199 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:23:23 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-08-05 22:24:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 53 seconds
Variants: generated 200, build-succeeded 124, build-failed 54, syntax-invalid 12, redundant 10
Fitness: max 0(124), min 0(124), ave 0
Test execution time: sum 8177 ms, max 193 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:24:24 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-08-05 22:25:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 54 seconds
Variants: generated 200, build-succeeded 120, build-failed 60, syntax-invalid 6, redundant 14
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 7577 ms, max 103 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:25:26 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-08-05 22:26:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 59 seconds
Variants: generated 200, build-succeeded 120, build-failed 59, syntax-invalid 8, redundant 13
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 8479 ms, max 364 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:26:30 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-08-05 22:27:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 2 seconds
Variants: generated 200, build-succeeded 118, build-failed 69, syntax-invalid 5, redundant 8
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 7742 ms, max 182 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 22:27:33 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-08-05 22:28:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 5 seconds
Variants: generated 200, build-succeeded 121, build-failed 63, syntax-invalid 8, redundant 8
Fitness: max 0(121), min 0(121), ave 0
Test execution time: sum 7453 ms, max 107 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:28:36 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-08-05 22:29:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 53 minutes 12 seconds
Variants: generated 200, build-succeeded 134, build-failed 55, syntax-invalid 5, redundant 6
Fitness: max 0(134), min 0(134), ave 0
Test execution time: sum 9552 ms, max 193 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:29:43 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-08-05 22:30:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 54 minutes 16 seconds
Variants: generated 200, build-succeeded 125, build-failed 54, syntax-invalid 7, redundant 14
Fitness: max 0(125), min 0(125), ave 0
Test execution time: sum 8165 ms, max 132 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:30:47 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-08-05 22:31:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 55 minutes 20 seconds
Variants: generated 200, build-succeeded 122, build-failed 66, syntax-invalid 3, redundant 9
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 8050 ms, max 130 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:31:52 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-08-05 22:33:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 56 minutes 29 seconds
Variants: generated 200, build-succeeded 127, build-failed 56, syntax-invalid 2, redundant 15
Fitness: max 0(127), min 0(127), ave 0
Test execution time: sum 9368 ms, max 239 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:33:00 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-08-05 22:34:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 57 minutes 33 seconds
Variants: generated 200, build-succeeded 123, build-failed 61, syntax-invalid 7, redundant 9
Fitness: max 0(123), min 0(123), ave 0
Test execution time: sum 7807 ms, max 136 ms, min 55 ms
----------------------------------------------------------------

2023-08-05 22:34:04 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-08-05 22:35:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 36 seconds
Variants: generated 200, build-succeeded 119, build-failed 64, syntax-invalid 8, redundant 9
Fitness: max 0(119), min 0(119), ave 0
Test execution time: sum 7376 ms, max 106 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:35:08 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-08-05 22:36:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 44 seconds
Variants: generated 200, build-succeeded 120, build-failed 61, syntax-invalid 8, redundant 11
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 8435 ms, max 168 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:36:16 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-08-05 22:37:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 seconds
Variants: generated 200, build-succeeded 120, build-failed 53, syntax-invalid 13, redundant 14
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 8472 ms, max 227 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:37:24 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-08-05 22:38:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 1 minutes 56 seconds
Variants: generated 200, build-succeeded 124, build-failed 55, syntax-invalid 10, redundant 11
Fitness: max 0(124), min 0(124), ave 0
Test execution time: sum 7950 ms, max 122 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:38:28 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-08-05 22:39:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 3 minutes 5 seconds
Variants: generated 200, build-succeeded 116, build-failed 64, syntax-invalid 7, redundant 13
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 9272 ms, max 200 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:39:36 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-08-05 22:40:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 11 seconds
Variants: generated 200, build-succeeded 118, build-failed 56, syntax-invalid 15, redundant 11
Fitness: max 1(1), min 0(117), ave 0.008
Test execution time: sum 8643 ms, max 205 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:40:42 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-08-05 22:41:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 15 seconds
Variants: generated 200, build-succeeded 124, build-failed 51, syntax-invalid 8, redundant 17
Fitness: max 0(124), min 0(124), ave 0
Test execution time: sum 8488 ms, max 108 ms, min 58 ms
----------------------------------------------------------------

2023-08-05 22:41:47 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-08-05 22:42:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 23 seconds
Variants: generated 200, build-succeeded 122, build-failed 60, syntax-invalid 8, redundant 10
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 8447 ms, max 180 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:42:54 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-08-05 22:44:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 28 seconds
Variants: generated 200, build-succeeded 128, build-failed 56, syntax-invalid 4, redundant 12
Fitness: max 0(128), min 0(128), ave 0
Test execution time: sum 8496 ms, max 147 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 22:44:00 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-08-05 22:45:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 30 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 15, redundant 16
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 7068 ms, max 93 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:45:01 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-08-05 22:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 12 minutes 36 seconds
Variants: generated 200, build-succeeded 113, build-failed 49, syntax-invalid 12, redundant 26
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 188495 ms, max 180070 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:49:08 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-08-05 22:53:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 43 seconds
Variants: generated 200, build-succeeded 114, build-failed 56, syntax-invalid 14, redundant 16
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 188518 ms, max 180068 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:53:14 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-08-05 22:54:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 17 minutes 47 seconds
Variants: generated 200, build-succeeded 115, build-failed 64, syntax-invalid 13, redundant 8
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 7811 ms, max 131 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:54:19 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-08-05 22:55:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 54 seconds
Variants: generated 200, build-succeeded 127, build-failed 49, syntax-invalid 8, redundant 16
Fitness: max 0(127), min 0(127), ave 0
Test execution time: sum 9234 ms, max 268 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:55:26 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-08-05 22:56:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 58 seconds
Variants: generated 200, build-succeeded 117, build-failed 53, syntax-invalid 17, redundant 13
Fitness: max 1(2), min 0(115), ave 0.017
Test execution time: sum 8222 ms, max 232 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:56:30 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-08-05 22:57:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 2 seconds
Variants: generated 200, build-succeeded 107, build-failed 62, syntax-invalid 20, redundant 11
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 7240 ms, max 174 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 22:57:33 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-08-05 23:01:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 8 seconds
Variants: generated 200, build-succeeded 109, build-failed 65, syntax-invalid 20, redundant 6
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 187938 ms, max 180100 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 23:01:40 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-08-05 23:02:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 13 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 20, redundant 10
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 7372 ms, max 161 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 23:02:44 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-08-05 23:03:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 17 seconds
Variants: generated 200, build-succeeded 117, build-failed 50, syntax-invalid 14, redundant 19
Fitness: max 1(2), min 0(115), ave 0.017
Test execution time: sum 7683 ms, max 162 ms, min 56 ms
----------------------------------------------------------------

2023-08-05 23:03:48 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-08-05 23:04:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 25 seconds
Variants: generated 200, build-succeeded 118, build-failed 56, syntax-invalid 12, redundant 14
Fitness: max 1(4), min 0(114), ave 0.034
Test execution time: sum 8726 ms, max 203 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 23:04:56 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-08-05 23:06:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 31 seconds
Variants: generated 200, build-succeeded 113, build-failed 56, syntax-invalid 8, redundant 23
Fitness: max 1(1), min 0(112), ave 0.009
Test execution time: sum 8213 ms, max 176 ms, min 58 ms
----------------------------------------------------------------

2023-08-05 23:06:03 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-08-05 23:07:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 37 seconds
Variants: generated 200, build-succeeded 110, build-failed 69, syntax-invalid 8, redundant 13
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 7634 ms, max 95 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 23:07:09 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-08-05 23:08:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 47 seconds
Variants: generated 200, build-succeeded 122, build-failed 51, syntax-invalid 14, redundant 13
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 9286 ms, max 185 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 23:08:19 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-08-05 23:09:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 32 minutes 53 seconds
Variants: generated 200, build-succeeded 114, build-failed 56, syntax-invalid 15, redundant 15
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 8048 ms, max 119 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 23:09:24 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-08-05 23:10:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 34 minutes 1 seconds
Variants: generated 200, build-succeeded 118, build-failed 58, syntax-invalid 10, redundant 14
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 8250 ms, max 104 ms, min 57 ms
----------------------------------------------------------------

2023-08-05 23:10:32 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-08-05 23:11:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 9 seconds
Variants: generated 200, build-succeeded 109, build-failed 67, syntax-invalid 15, redundant 9
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 8922 ms, max 320 ms, min 59 ms
----------------------------------------------------------------

2023-08-05 23:11:40 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-08-05 23:12:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 16 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 19, redundant 15
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 7722 ms, max 137 ms, min 59 ms
----------------------------------------------------------------

2023-08-05 23:12:47 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-08-05 23:13:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 20 seconds
Variants: generated 200, build-succeeded 108, build-failed 57, syntax-invalid 26, redundant 9
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 7735 ms, max 111 ms, min 58 ms
----------------------------------------------------------------

2023-08-05 23:13:52 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-08-05 23:14:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 28 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 21, redundant 13
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 8478 ms, max 152 ms, min 59 ms
----------------------------------------------------------------

2023-08-05 23:14:59 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-08-05 23:16:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 37 seconds
Variants: generated 200, build-succeeded 111, build-failed 65, syntax-invalid 12, redundant 12
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 8484 ms, max 169 ms, min 58 ms
----------------------------------------------------------------

2023-08-05 23:16:08 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-08-05 23:17:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 40 minutes 44 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 17, redundant 17
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 8605 ms, max 187 ms, min 60 ms
----------------------------------------------------------------

2023-08-05 23:17:16 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-08-05 23:18:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 51 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 19, redundant 14
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 8631 ms, max 232 ms, min 61 ms
----------------------------------------------------------------

2023-08-05 23:18:22 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-08-05 23:19:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 57 seconds
Variants: generated 200, build-succeeded 113, build-failed 45, syntax-invalid 21, redundant 21
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 8667 ms, max 169 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 23:19:29 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-08-05 23:20:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 2 seconds
Variants: generated 200, build-succeeded 102, build-failed 53, syntax-invalid 26, redundant 19
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 7558 ms, max 94 ms, min 60 ms
----------------------------------------------------------------

2023-08-05 23:20:34 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-08-05 23:21:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 10 seconds
Variants: generated 200, build-succeeded 105, build-failed 56, syntax-invalid 27, redundant 12
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 8238 ms, max 141 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 23:21:41 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-08-05 23:22:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 21 seconds
Variants: generated 200, build-succeeded 105, build-failed 66, syntax-invalid 14, redundant 15
Fitness: max 1(1), min 0(104), ave 0.01
Test execution time: sum 8770 ms, max 147 ms, min 59 ms
----------------------------------------------------------------

2023-08-05 23:22:53 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-08-05 23:23:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 27 seconds
Variants: generated 200, build-succeeded 103, build-failed 59, syntax-invalid 20, redundant 18
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 7712 ms, max 158 ms, min 58 ms
----------------------------------------------------------------

2023-08-05 23:23:59 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-08-05 23:25:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 36 seconds
Variants: generated 200, build-succeeded 107, build-failed 60, syntax-invalid 19, redundant 14
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 8425 ms, max 148 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 23:25:07 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-08-05 23:26:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 49 minutes 42 seconds
Variants: generated 200, build-succeeded 103, build-failed 59, syntax-invalid 26, redundant 12
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 7856 ms, max 122 ms, min 66 ms
----------------------------------------------------------------

2023-08-05 23:26:14 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-08-05 23:27:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 50 minutes 52 seconds
Variants: generated 200, build-succeeded 112, build-failed 66, syntax-invalid 12, redundant 10
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 9035 ms, max 202 ms, min 61 ms
----------------------------------------------------------------

2023-08-05 23:27:24 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-08-05 23:28:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 1 seconds
Variants: generated 200, build-succeeded 100, build-failed 61, syntax-invalid 29, redundant 10
Fitness: max 1(3), min 0(97), ave 0.03
Test execution time: sum 8125 ms, max 194 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 23:28:32 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-08-05 23:29:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 10 seconds
Variants: generated 200, build-succeeded 117, build-failed 62, syntax-invalid 11, redundant 10
Fitness: max 1(1), min 0(116), ave 0.009
Test execution time: sum 9005 ms, max 182 ms, min 61 ms
----------------------------------------------------------------

2023-08-05 23:29:41 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-08-05 23:30:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 17 seconds
Variants: generated 200, build-succeeded 108, build-failed 64, syntax-invalid 18, redundant 10
Fitness: max 1(1), min 0(107), ave 0.009
Test execution time: sum 7946 ms, max 132 ms, min 59 ms
----------------------------------------------------------------

2023-08-05 23:30:49 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-08-05 23:31:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 55 minutes 26 seconds
Variants: generated 200, build-succeeded 103, build-failed 56, syntax-invalid 26, redundant 15
Fitness: max 1(2), min 0(101), ave 0.019
Test execution time: sum 8604 ms, max 353 ms, min 60 ms
----------------------------------------------------------------

2023-08-05 23:31:58 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-08-05 23:33:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 56 minutes 34 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 26, redundant 12
Fitness: max 1(2), min 0(103), ave 0.019
Test execution time: sum 8089 ms, max 150 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 23:33:05 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-08-05 23:34:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 39 seconds
Variants: generated 200, build-succeeded 101, build-failed 53, syntax-invalid 32, redundant 14
Fitness: max 1(1), min 0(100), ave 0.01
Test execution time: sum 7324 ms, max 125 ms, min 60 ms
----------------------------------------------------------------

2023-08-05 23:34:11 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-08-05 23:35:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 minutes 44 seconds
Variants: generated 200, build-succeeded 91, build-failed 63, syntax-invalid 33, redundant 13
Fitness: max 0(91), min 0(91), ave 0
Test execution time: sum 6823 ms, max 111 ms, min 64 ms
----------------------------------------------------------------

2023-08-05 23:35:16 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-08-05 23:36:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 52 seconds
Variants: generated 200, build-succeeded 95, build-failed 53, syntax-invalid 39, redundant 13
Fitness: max 0(95), min 0(95), ave 0
Test execution time: sum 7855 ms, max 211 ms, min 62 ms
----------------------------------------------------------------

2023-08-05 23:36:24 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-08-05 23:37:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 58 seconds
Variants: generated 200, build-succeeded 97, build-failed 56, syntax-invalid 33, redundant 14
Fitness: max 0(97), min 0(97), ave 0
Test execution time: sum 7246 ms, max 161 ms, min 63 ms
----------------------------------------------------------------

2023-08-05 23:37:29 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-08-05 23:38:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 5 seconds
Variants: generated 200, build-succeeded 100, build-failed 64, syntax-invalid 23, redundant 13
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 7207 ms, max 111 ms, min 60 ms
----------------------------------------------------------------

2023-08-05 23:38:36 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-08-05 23:39:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 3 minutes 13 seconds
Variants: generated 200, build-succeeded 96, build-failed 57, syntax-invalid 34, redundant 13
Fitness: max 1(1), min 0(95), ave 0.01
Test execution time: sum 7596 ms, max 199 ms, min 60 ms
----------------------------------------------------------------

2023-08-05 23:39:44 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-08-05 23:40:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 4 minutes 22 seconds
Variants: generated 200, build-succeeded 100, build-failed 54, syntax-invalid 31, redundant 15
Fitness: max 1(1), min 0(99), ave 0.01
Test execution time: sum 7416 ms, max 134 ms, min 60 ms
----------------------------------------------------------------

2023-08-05 23:40:53 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-08-05 23:41:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 5 minutes 27 seconds
Variants: generated 200, build-succeeded 98, build-failed 57, syntax-invalid 29, redundant 16
Fitness: max 1(1), min 0(97), ave 0.01
Test execution time: sum 7088 ms, max 114 ms, min 58 ms
----------------------------------------------------------------

2023-08-05 23:41:58 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-08-05 23:46:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 35 seconds
Variants: generated 200, build-succeeded 109, build-failed 54, syntax-invalid 28, redundant 9
Fitness: max 1(1), min 0(108), ave 0.009
Test execution time: sum 188135 ms, max 180083 ms, min 59 ms
----------------------------------------------------------------

2023-08-05 23:46:07 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-08-05 23:47:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 10 minutes 49 seconds
Variants: generated 200, build-succeeded 107, build-failed 65, syntax-invalid 18, redundant 10
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 8729 ms, max 226 ms, min 59 ms
----------------------------------------------------------------

2023-08-05 23:47:21 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-08-05 23:48:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 1 seconds
Variants: generated 200, build-succeeded 112, build-failed 59, syntax-invalid 19, redundant 10
Fitness: max 1(3), min 0(109), ave 0.027
Test execution time: sum 9038 ms, max 156 ms, min 66 ms
----------------------------------------------------------------

2023-08-05 23:48:32 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-08-05 23:49:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 9 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 23, redundant 15
Fitness: max 1(1), min 0(103), ave 0.01
Test execution time: sum 7826 ms, max 134 ms, min 65 ms
----------------------------------------------------------------

2023-08-05 23:49:41 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-08-05 23:50:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 14 minutes 22 seconds
Variants: generated 200, build-succeeded 119, build-failed 60, syntax-invalid 14, redundant 7
Fitness: max 1(1), min 0(118), ave 0.008
Test execution time: sum 9527 ms, max 208 ms, min 60 ms
----------------------------------------------------------------

2023-08-05 23:50:53 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-08-05 23:55:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 35 seconds
Variants: generated 200, build-succeeded 122, build-failed 60, syntax-invalid 10, redundant 8
Fitness: max 1(1), min 0(121), ave 0.008
Test execution time: sum 189191 ms, max 180079 ms, min 58 ms
----------------------------------------------------------------

2023-08-05 23:55:06 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-08-05 23:59:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 22 minutes 44 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 21, redundant 12
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 187837 ms, max 180072 ms, min 58 ms
----------------------------------------------------------------

2023-08-05 23:59:15 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-08-06 00:00:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 23 minutes 58 seconds
Variants: generated 200, build-succeeded 113, build-failed 58, syntax-invalid 16, redundant 13
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 9366 ms, max 170 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 00:00:29 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-08-06 00:01:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 12 seconds
Variants: generated 200, build-succeeded 114, build-failed 59, syntax-invalid 11, redundant 16
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 10007 ms, max 274 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 00:01:43 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-08-06 00:02:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 26 minutes 24 seconds
Variants: generated 200, build-succeeded 115, build-failed 58, syntax-invalid 12, redundant 15
Fitness: max 1(3), min 0(112), ave 0.026
Test execution time: sum 8804 ms, max 127 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 00:02:55 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-08-06 00:04:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 37 seconds
Variants: generated 200, build-succeeded 112, build-failed 63, syntax-invalid 12, redundant 13
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 8983 ms, max 150 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 00:04:09 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-08-06 00:05:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 28 minutes 47 seconds
Variants: generated 200, build-succeeded 105, build-failed 60, syntax-invalid 22, redundant 13
Fitness: max 1(1), min 0(104), ave 0.01
Test execution time: sum 7723 ms, max 113 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 00:05:18 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-08-06 00:06:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 29 minutes 58 seconds
Variants: generated 200, build-succeeded 99, build-failed 75, syntax-invalid 18, redundant 8
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 7830 ms, max 158 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 00:06:29 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-08-06 00:07:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 10 seconds
Variants: generated 200, build-succeeded 108, build-failed 69, syntax-invalid 15, redundant 8
Fitness: max 1(4), min 0(104), ave 0.037
Test execution time: sum 8536 ms, max 120 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 00:07:42 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-08-06 00:08:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 23 seconds
Variants: generated 200, build-succeeded 109, build-failed 60, syntax-invalid 17, redundant 14
Fitness: max 1(2), min 0(107), ave 0.018
Test execution time: sum 8497 ms, max 166 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 00:08:54 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-08-06 00:10:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 34 seconds
Variants: generated 200, build-succeeded 105, build-failed 61, syntax-invalid 19, redundant 15
Fitness: max 1(1), min 0(104), ave 0.01
Test execution time: sum 8132 ms, max 151 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 00:10:06 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-08-06 00:11:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 45 seconds
Variants: generated 200, build-succeeded 113, build-failed 55, syntax-invalid 17, redundant 15
Fitness: max 1(3), min 0(110), ave 0.027
Test execution time: sum 8357 ms, max 109 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 00:11:17 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-08-06 00:12:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 43 seconds
Variants: generated 163, build-succeeded 82, build-failed 58, syntax-invalid 10, redundant 13
Fitness: max 1(5), min 0(77), ave 0.061
Test execution time: sum 6041 ms, max 117 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 00:12:15 [main] [INFO]  KGenProgMain - GA stopped
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1056)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -271,7 +271,8 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
+          this.dirtyState = true;
+		final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1056)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1056)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,8 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        boolean resetDerivatives = false;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1056)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1056)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1056)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -271,7 +271,8 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
+          this.dirtyState = true;
+		final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,7 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
+        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,8 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        boolean resetDerivatives = false;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1086)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1202)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1202)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
+        this.iterationCount = 0;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1202)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -214,7 +214,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1202)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1202)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1202)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -237,7 +237,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -272,7 +271,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1416)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1416)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,8 +98,6 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1416)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1416)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1416)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +276,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (Math.abs(y1) <= functionValueAccuracy) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1457)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1457)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,8 +98,6 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1457)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1457)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v1457)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,10 +278,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2383)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -276,7 +276,8 @@
           dirtyState = false;
       }
 
-      return interpolatedState;
+      h = -h;
+	return interpolatedState;
 
   }
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2383)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2383)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,8 +98,6 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2383)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2383)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2383)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -281,6 +276,7 @@
                     // Fall back to bisection.
                     delta = 0.5 * dx;
                     oldDelta = delta;
+					delta = p / p1;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2455)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2455)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2455)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,8 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        boolean resetDerivatives = false;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2455)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2455)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2455)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -224,20 +224,16 @@
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+				x2 = x0;
+				y2 = y0;
+				delta = x1 - x0;
+				oldDelta = delta;
+			}
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2545)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -226,6 +221,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -269,13 +265,11 @@
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
-                if (p > 0.0) {
+                if (i < maximalIterationCount) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,8 +98,6 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
@@ -169,7 +167,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2792)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -281,6 +281,7 @@
                     // Fall back to bisection.
                     delta = 0.5 * dx;
                     oldDelta = delta;
+					delta = p / p1;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2918)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,6 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2918)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2918)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2918)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2918)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v2918)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -226,6 +221,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -237,7 +233,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -274,8 +269,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3089)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3089)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,15 +98,13 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        boolean resetDerivatives = false;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -213,7 +211,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3089)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3089)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3089)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3332)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3332)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3332)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,8 +98,6 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3332)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3332)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3332)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +276,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,15 +98,13 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        boolean resetDerivatives = false;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3388)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +276,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3532)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -269,12 +268,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3532)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3532)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,8 +98,6 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3532)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3532)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3532)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -276,10 +271,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3707)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3707)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3707)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,8 +98,6 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
@@ -169,7 +167,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3707)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3707)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3707)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +275,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3783)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3783)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3783)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,9 +98,6 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3783)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3783)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3783)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -276,10 +271,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3921)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3921)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -169,7 +169,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3921)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3921)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3921)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -226,6 +221,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +271,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3984)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3984)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,8 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        boolean resetDerivatives = false;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3984)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3984)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v3984)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,9 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +277,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4115)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4115)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,13 +100,13 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
+		pendingEvent = false;
 
     }
 
@@ -169,7 +169,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4115)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4115)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4115)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +275,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4124)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4124)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,8 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        boolean resetDerivatives = false;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -169,7 +170,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4124)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4124)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4124)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -274,8 +269,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,7 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    h = currentTime - previousTime;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,7 +100,6 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4160)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,7 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    h = currentTime - previousTime;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4160)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4160)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,8 +105,9 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        pendingEvent = false;
+        boolean resetDerivatives = false;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4160)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4160)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4160)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4167)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4167)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4167)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,7 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
+        pendingEvent = false;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -169,7 +169,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4167)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4167)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4167)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +275,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4393)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4393)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,12 +100,11 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
+        pendingEvent = false;
         nextAction        = EventHandler.CONTINUE;
 
     }
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4393)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4393)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4393)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +276,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4397)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4397)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4397)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,7 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
+        pendingEvent = false;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -169,7 +169,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4397)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4397)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4397)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -274,8 +269,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4523)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,7 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    h = currentTime - previousTime;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.forward = forward;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4523)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4523)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,11 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        nextAction = EventHandler.CONTINUE;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        boolean resetDerivatives = false;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4523)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4523)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4523)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -237,7 +238,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4577)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4577)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,9 +103,10 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        nextAction = EventHandler.CONTINUE;
         previousEventTime = Double.NaN;
         increasing        = true;
+		pendingEvent = false;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -203,7 +204,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4577)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4577)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4577)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +275,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,7 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    h = currentTime - previousTime;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.forward = forward;
 
       return interpolatedState;
 
@@ -284,12 +280,8 @@
   public double[] getInterpolatedDerivatives() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedDerivatives;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        nextAction = EventHandler.CONTINUE;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4796)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4796)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,6 +106,7 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
+		pendingEvent = false;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -169,7 +170,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4796)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4796)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4796)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +276,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4981)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,7 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    h = currentTime - previousTime;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4981)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4981)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,7 +100,6 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4981)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4981)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v4981)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +276,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5085)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,7 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    h = currentTime - previousTime;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5085)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5085)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,8 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        boolean resetDerivatives = false;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -231,9 +232,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5085)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5085)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5085)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5196)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -116,7 +116,6 @@
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
-    this.forward      = forward;
     this.dirtyState   = true;
 
   }
@@ -269,12 +268,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5196)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5196)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5196)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5196)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -237,7 +238,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5530)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5530)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5530)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,10 +100,9 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        nextAction = EventHandler.CONTINUE;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -169,7 +168,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5530)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5530)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:19 [main] [INFO]  PatchLogExporter - patch (v5530)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +275,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10232)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    interpolatedTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +115,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -269,12 +268,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
@@ -284,12 +279,8 @@
   public double[] getInterpolatedDerivatives() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedDerivatives;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10232)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10232)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10232)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10232)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10232)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -226,6 +221,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,10 +272,7 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                    x0 = x1;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10264)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    interpolatedTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +115,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -269,12 +268,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
@@ -284,12 +279,8 @@
   public double[] getInterpolatedDerivatives() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedDerivatives;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10264)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10264)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10264)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10264)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10264)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10264)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -226,6 +221,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10291)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    interpolatedTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +115,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -269,12 +268,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
@@ -284,12 +279,8 @@
   public double[] getInterpolatedDerivatives() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedDerivatives;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10291)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10291)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -282,7 +281,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10291)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10291)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10291)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -226,6 +221,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10434)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    interpolatedTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +115,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -269,12 +268,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
@@ -284,12 +279,8 @@
   public double[] getInterpolatedDerivatives() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedDerivatives;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10434)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10434)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,10 +98,7 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -282,7 +279,11 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        {
+			previousEventTime = t;
+			g0Positive = increasing;
+			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));
+		}
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10434)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10434)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v10434)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -226,6 +221,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11300)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    interpolatedTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -107,7 +107,7 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -116,6 +116,7 @@
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
+	currentTime = Double.NaN;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -217,6 +218,7 @@
   public void storeTime(final double t) {
 
     currentTime = t;
+	final int n = (currentState == null) ? -1 : currentState.length;
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11300)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11300)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11300)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11300)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11300)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11300)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11457)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,11 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -217,6 +215,7 @@
   public void storeTime(final double t) {
 
     currentTime = t;
+	final int n = (currentState == null) ? -1 : currentState.length;
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
@@ -269,12 +268,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
@@ -284,12 +279,8 @@
   public double[] getInterpolatedDerivatives() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedDerivatives;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11457)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11457)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,11 +98,8 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11457)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11457)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11457)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v11457)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,10 +278,7 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                    y1 = f.value(x1);
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v13749)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,12 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    finalized = false;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -107,15 +106,14 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    h = currentTime - previousTime;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +175,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
 
@@ -269,12 +266,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v13749)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v13749)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v13749)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -177,6 +176,7 @@
             double ta = t0;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
+			ta = tb;
             for (int i = 0; i < n; ++i) {
 
                 // evaluate handler value at the end of the substep
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v13749)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v13749)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v13749)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v14121)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,11 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -111,11 +109,10 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    h = currentTime - previousTime;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -269,12 +266,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v14121)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v14121)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -169,7 +168,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
@@ -177,6 +175,7 @@
             double ta = t0;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
+			ta = tb;
             for (int i = 0; i < n; ++i) {
 
                 // evaluate handler value at the end of the substep
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v14121)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v14121)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v14121)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v19106)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,12 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -107,15 +106,12 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -269,12 +265,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v19106)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v19106)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v19106)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,7 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
+        pendingEvent = false;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -240,7 +240,39 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
-                    ga = gb;
+                    {
+						increasing = gb >= ga;
+						final UnivariateRealFunction f = new UnivariateRealFunction() {
+							public double value(final double t) throws FunctionEvaluationException {
+								try {
+									interpolator.setInterpolatedTime(t);
+									return handler.g(t, interpolator.getInterpolatedState());
+								} catch (DerivativeException e) {
+									throw new FunctionEvaluationException(e, t);
+								} catch (EventException e) {
+									throw new FunctionEvaluationException(e, t);
+								}
+							}
+						};
+						final BrentSolver solver = new BrentSolver();
+						solver.setAbsoluteAccuracy(convergence);
+						solver.setMaximalIterationCount(maxIterationCount);
+						final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
+						if ((Math.abs(root - ta) <= convergence)
+								&& (Math.abs(root - previousEventTime) <= convergence)) {
+							ta = tb;
+							ga = gb;
+						} else if (Double.isNaN(previousEventTime)
+								|| (Math.abs(previousEventTime - root) > convergence)) {
+							pendingEventTime = root;
+							if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
+								return false;
+							}
+							pendingEvent = true;
+							return true;
+						}
+					}
+					ga = gb;
                 }
 
             }
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v19106)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v19106)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v19106)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,14 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v24205)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,8 +88,7 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    finalized = false;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -218,8 +217,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +240,12 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      currentTime = Double.NaN;
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
+	dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -269,12 +271,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v24205)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v24205)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,6 +104,7 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
+		pendingEvent = false;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -238,9 +238,138 @@
                     }
 
                 } else {
-                    // no sign change: there is no event for now
+                    interpolator.setInterpolatedTime(t0);
+					// no sign change: there is no event for now
                     ta = tb;
-                    ga = gb;
+                    {
+						increasing = gb >= ga;
+						final UnivariateRealFunction f = new UnivariateRealFunction() {
+							public double value(final double t) throws FunctionEvaluationException {
+								try {
+									interpolator.setInterpolatedTime(t);
+									return handler.g(t, interpolator.getInterpolatedState());
+								} catch (DerivativeException e) {
+									throw new FunctionEvaluationException(e, t);
+								} catch (EventException e) {
+									throw new FunctionEvaluationException(e, t);
+								}
+							}
+						};
+						final BrentSolver solver = new BrentSolver();
+						solver.setAbsoluteAccuracy(convergence);
+						solver.setMaximalIterationCount(maxIterationCount);
+						final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
+						if ((Math.abs(root - ta) <= convergence)
+								&& (Math.abs(root - previousEventTime) <= convergence)) {
+							ta = tb;
+							ga = gb;
+						} else if (Double.isNaN(previousEventTime)
+								|| (Math.abs(previousEventTime - root) > convergence)) {
+							pendingEventTime = root;
+							if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
+								return false;
+							}
+							pendingEvent = true;
+							return true;
+						}
+					}
+					{
+						increasing = gb >= ga;
+						final UnivariateRealFunction f = new UnivariateRealFunction() {
+							public double value(final double t) throws FunctionEvaluationException {
+								try {
+									interpolator.setInterpolatedTime(t);
+									return handler.g(t, interpolator.getInterpolatedState());
+								} catch (DerivativeException e) {
+									throw new FunctionEvaluationException(e, t);
+								} catch (EventException e) {
+									throw new FunctionEvaluationException(e, t);
+								}
+							}
+						};
+						final BrentSolver solver = new BrentSolver();
+						solver.setAbsoluteAccuracy(convergence);
+						solver.setMaximalIterationCount(maxIterationCount);
+						final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
+						if ((Math.abs(root - ta) <= convergence)
+								&& (Math.abs(root - previousEventTime) <= convergence)) {
+							ta = tb;
+							ga = gb;
+						} else if (Double.isNaN(previousEventTime)
+								|| (Math.abs(previousEventTime - root) > convergence)) {
+							pendingEventTime = root;
+							if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
+								return false;
+							}
+							pendingEvent = true;
+							return true;
+						}
+					}
+					{
+						increasing = gb >= ga;
+						final UnivariateRealFunction f = new UnivariateRealFunction() {
+							public double value(final double t) throws FunctionEvaluationException {
+								try {
+									interpolator.setInterpolatedTime(t);
+									return handler.g(t, interpolator.getInterpolatedState());
+								} catch (DerivativeException e) {
+									throw new FunctionEvaluationException(e, t);
+								} catch (EventException e) {
+									throw new FunctionEvaluationException(e, t);
+								}
+							}
+						};
+						final BrentSolver solver = new BrentSolver();
+						solver.setAbsoluteAccuracy(convergence);
+						solver.setMaximalIterationCount(maxIterationCount);
+						final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
+						if ((Math.abs(root - ta) <= convergence)
+								&& (Math.abs(root - previousEventTime) <= convergence)) {
+							ta = tb;
+							ga = gb;
+						} else if (Double.isNaN(previousEventTime)
+								|| (Math.abs(previousEventTime - root) > convergence)) {
+							pendingEventTime = root;
+							if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
+								return false;
+							}
+							pendingEvent = true;
+							return true;
+						}
+					}
+					{
+						increasing = gb >= ga;
+						final UnivariateRealFunction f = new UnivariateRealFunction() {
+							public double value(final double t) throws FunctionEvaluationException {
+								try {
+									interpolator.setInterpolatedTime(t);
+									return handler.g(t, interpolator.getInterpolatedState());
+								} catch (DerivativeException e) {
+									throw new FunctionEvaluationException(e, t);
+								} catch (EventException e) {
+									throw new FunctionEvaluationException(e, t);
+								}
+							}
+						};
+						final BrentSolver solver = new BrentSolver();
+						solver.setAbsoluteAccuracy(convergence);
+						solver.setMaximalIterationCount(maxIterationCount);
+						final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
+						if ((Math.abs(root - ta) <= convergence)
+								&& (Math.abs(root - previousEventTime) <= convergence)) {
+							ta = tb;
+							ga = gb;
+						} else if (Double.isNaN(previousEventTime)
+								|| (Math.abs(previousEventTime - root) > convergence)) {
+							pendingEventTime = root;
+							if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
+								return false;
+							}
+							pendingEvent = true;
+							return true;
+						}
+					}
+					ga = gb;
                 }
 
             }
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v24205)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v24205)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v24205)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v24205)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,10 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v28630)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,8 +88,7 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    finalized = false;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -107,7 +106,7 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -269,12 +268,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		h = currentTime - previousTime;
 
       return interpolatedState;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v28630)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v28630)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,12 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
+		pendingEvent = false;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -213,7 +215,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -240,7 +241,39 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
-                    ga = gb;
+                    {
+						increasing = gb >= ga;
+						final UnivariateRealFunction f = new UnivariateRealFunction() {
+							public double value(final double t) throws FunctionEvaluationException {
+								try {
+									interpolator.setInterpolatedTime(t);
+									return handler.g(t, interpolator.getInterpolatedState());
+								} catch (DerivativeException e) {
+									throw new FunctionEvaluationException(e, t);
+								} catch (EventException e) {
+									throw new FunctionEvaluationException(e, t);
+								}
+							}
+						};
+						final BrentSolver solver = new BrentSolver();
+						solver.setAbsoluteAccuracy(convergence);
+						solver.setMaximalIterationCount(maxIterationCount);
+						final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
+						if ((Math.abs(root - ta) <= convergence)
+								&& (Math.abs(root - previousEventTime) <= convergence)) {
+							ta = tb;
+							ga = gb;
+						} else if (Double.isNaN(previousEventTime)
+								|| (Math.abs(previousEventTime - root) > convergence)) {
+							pendingEventTime = root;
+							if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
+								return false;
+							}
+							pendingEvent = true;
+							return true;
+						}
+					}
+					ga = gb;
                 }
 
             }
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v28630)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v28630)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v28630)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,21 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v37848)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,7 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -117,7 +116,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v37848)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v37848)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,12 +101,18 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+		pendingEvent = false;
+		pendingEvent = false;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
+		double ga = g0;
 
     }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v37848)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v37848)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v37848)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40146)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,15 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedTime = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -107,7 +105,7 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
+    interpolatedTime = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -117,7 +115,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40146)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40146)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,8 +103,14 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+		pendingEvent = false;
+		pendingEvent = false;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
@@ -282,7 +288,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40146)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40146)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40146)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,25 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40864)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,14 +89,12 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -112,12 +110,10 @@
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
-    interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -217,7 +213,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    interpolatedDerivatives = null;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40864)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40864)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40864)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40864)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40864)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v40864)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				this.resultComputed = true;
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v47216)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,6 +90,7 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
+	h = currentTime - previousTime;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -272,7 +273,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
@@ -287,7 +287,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v47216)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v47216)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v47216)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v47216)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v47216)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,38 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,10 +308,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55811)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -112,9 +110,9 @@
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
-    interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
+    currentTime = Double.NaN;
+	currentTime = Double.NaN;
+	dirtyState = true;
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -216,7 +214,8 @@
    */
   public void storeTime(final double t) {
 
-    currentTime = t;
+    finalized = false;
+	currentTime = t;
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
@@ -272,7 +271,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55811)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55811)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,10 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55811)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55811)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55811)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,40 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +308,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (dx > 0.0) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55850)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -112,9 +110,9 @@
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
-    interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
+    currentTime = Double.NaN;
+	currentTime = Double.NaN;
+	dirtyState = true;
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -216,7 +214,8 @@
    */
   public void storeTime(final double t) {
 
-    currentTime = t;
+    finalized = false;
+	currentTime = t;
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
@@ -272,7 +271,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55850)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55850)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,10 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55850)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55850)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v55850)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v70856)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v70856)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v70856)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,10 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
+		pendingEvent = false;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -247,7 +250,11 @@
 
             // no event during the whole step
             pendingEvent     = false;
-            pendingEventTime = Double.NaN;
+            {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+			pendingEventTime = Double.NaN;
             return false;
 
         } catch (FunctionEvaluationException e) {
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v70856)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v70856)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v70856)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72718)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,8 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    this.dirtyState = true;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -208,7 +209,7 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    this.h = Math.abs(h);
   }
 
   /** Store the current step time.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72718)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72718)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72718)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72718)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72718)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72718)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,57 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72781)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72781)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72781)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72781)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,12 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72781)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72781)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v72781)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,54 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73464)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73464)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73464)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73464)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73464)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73464)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				setResult(x1, i);
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73533)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,13 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    this.dirtyState = true;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    h = -h;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73533)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73533)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73533)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73533)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73533)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73533)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,58 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73648)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73648)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73648)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73648)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73648)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,61 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,10 +331,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73688)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73688)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73688)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73688)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73688)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73688)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,61 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73746)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,8 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    this.dirtyState = true;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73746)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73746)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73746)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73746)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73746)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73746)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,58 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73771)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,13 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    this.dirtyState = true;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73771)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73771)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73771)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -231,9 +232,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73771)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73771)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73771)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,56 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73828)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73828)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,7 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
+        this.maximalIterationCount = defaultMaximalIterationCount;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73828)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73828)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73828)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v73828)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,62 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v76814)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    h = -h;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v76814)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v76814)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v76814)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,15 +98,14 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v76814)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v76814)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v76814)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77805)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -208,7 +207,7 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    finalized = true;
   }
 
   /** Store the current step time.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77805)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77805)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,8 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77805)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77805)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77805)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,9 +223,64 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (i <= maximalIterationCount) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77878)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -208,7 +207,7 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    finalized = true;
   }
 
   /** Store the current step time.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77878)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77878)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,8 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77878)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77878)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77878)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77961)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    h = -h;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +115,7 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
+    h = -h;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +177,7 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
+    h = -h;
     this.forward      = isForward;
     this.dirtyState   = true;
 
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77961)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77961)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77961)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,11 +98,12 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77961)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77961)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v77961)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,55 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78181)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    h = -h;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78181)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78181)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -182,7 +185,8 @@
                 // evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
-                final double gb = handler.g(tb, interpolator.getInterpolatedState());
+                boolean resetDerivatives = false;
+				final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
                 if (g0Positive ^ (gb >= 0)) {
@@ -213,7 +217,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78181)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78181)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78181)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,61 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78318)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78318)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78318)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,8 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
@@ -182,7 +182,8 @@
                 // evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
-                final double gb = handler.g(tb, interpolator.getInterpolatedState());
+                boolean resetDerivatives = false;
+				final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
                 if (g0Positive ^ (gb >= 0)) {
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78318)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78318)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78318)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,60 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78521)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,8 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	interpolatedTime = Double.NaN;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -208,7 +208,7 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    finalized = true;
   }
 
   /** Store the current step time.
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78521)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78521)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,12 +98,11 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -182,7 +181,8 @@
                 // evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
-                final double gb = handler.g(tb, interpolator.getInterpolatedState());
+                boolean resetDerivatives = false;
+				final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
                 if (g0Positive ^ (gb >= 0)) {
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78521)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78521)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78521)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,56 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78553)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78553)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,12 +98,10 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -182,7 +180,8 @@
                 // evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
-                final double gb = handler.g(tb, interpolator.getInterpolatedState());
+                boolean resetDerivatives = false;
+				final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
                 if (g0Positive ^ (gb >= 0)) {
@@ -213,7 +212,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78553)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78553)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78553)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,58 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				y0 = y1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78724)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78724)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78724)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,8 +212,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78724)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78724)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:20 [main] [INFO]  PatchLogExporter - patch (v78724)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,7 +226,62 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78746)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	interpolatedTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -208,7 +209,7 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    finalized = true;
   }
 
   /** Store the current step time.
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78746)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78746)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78746)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,11 +98,10 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78746)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78746)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78746)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,59 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78949)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,7 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    finalized = true;
   }
 
   /** Store the current step time.
@@ -272,7 +272,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78949)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78949)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78949)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,11 +98,11 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -213,8 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78949)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78949)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v78949)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,57 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v79879)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    h = -h;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v79879)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v79879)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,9 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -170,7 +170,8 @@
         try {
 
             forward = interpolator.isForward();
-            final double t1 = interpolator.getCurrentTime();
+			nextAction = EventHandler.CONTINUE;
+			final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v79879)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v79879)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v79879)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,57 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -280,7 +331,11 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
+                    {
+						oldDelta = delta;
+						delta = p / p1;
+					}
+					oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80196)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80196)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80196)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,9 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80196)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80196)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80196)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,64 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -280,7 +338,11 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
+                    {
+						oldDelta = delta;
+						delta = p / p1;
+					}
+					oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80260)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80260)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80260)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80260)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -324,8 +325,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80260)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80260)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80260)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,63 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80595)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80595)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80595)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80595)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80595)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,64 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -280,7 +338,11 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
+                    {
+						oldDelta = delta;
+						delta = p / p1;
+					}
+					oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80940)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80940)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80940)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80940)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80940)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80940)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,64 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,13 +334,8 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80960)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80960)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80960)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80960)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80960)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80960)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80960)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,63 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80980)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80980)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,14 +98,10 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
-        increasing        = true;
+		pendingEventTime  = Double.NaN;
         nextAction        = EventHandler.CONTINUE;
 
     }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80980)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80980)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v80980)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,62 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,10 +332,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81143)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    h = -h;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81143)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81143)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,12 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81143)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81143)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81143)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,59 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -280,7 +333,11 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
+                    {
+						oldDelta = delta;
+						delta = p / p1;
+					}
+					oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81357)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    h = -h;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81357)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81357)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81357)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81357)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81357)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,62 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,13 +332,8 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81541)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    h = -h;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81541)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81541)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81541)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+		previousEventTime = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81541)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81541)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v81541)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -219,13 +219,69 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        delta = x1 - x0;
+		delta = x1 - x0;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,10 +332,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82224)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82224)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82224)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82224)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82224)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82224)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82224)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,65 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,10 +335,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82242)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82242)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82242)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
@@ -75,7 +74,7 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
+        maximalIterationCount = defaultMaximalIterationCount;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82242)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82242)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82242)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82242)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,65 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82363)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82363)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,9 +103,12 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -214,7 +217,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82363)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82363)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82363)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,62 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -272,7 +328,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -282,7 +337,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82683)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82683)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82683)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82683)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82683)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82683)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v82683)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,65 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -274,8 +333,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (dx > 0.0) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83114)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83114)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83114)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,8 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
@@ -214,7 +215,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83114)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83114)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83114)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,64 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				final double q = (x2 - x1) / (x1 - x0);
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -272,7 +330,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83158)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83158)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83158)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,11 +98,14 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -203,7 +206,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
@@ -214,7 +216,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83158)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83158)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83158)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,61 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -272,7 +327,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83169)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83169)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -214,7 +215,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83169)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83169)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83169)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,68 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -272,7 +334,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83175)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83175)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83175)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,11 +98,11 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -203,7 +203,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83175)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83175)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83175)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,64 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -276,10 +334,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83352)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83352)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83352)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,10 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -169,7 +173,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
@@ -214,7 +217,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
@@ -234,6 +236,7 @@
                         // either we were not waiting for the event or it has
                         // moved in such a way the step cannot be accepted
                         pendingEvent = true;
+						solver.setMaximalIterationCount(maxIterationCount);
                         return true;
                     }
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83352)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83352)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83352)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,61 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -250,7 +305,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -272,7 +326,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83373)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    currentTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83373)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83373)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83373)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,7 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
+        nextAction = EventHandler.CONTINUE;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -214,7 +214,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83373)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83373)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83373)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,66 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83521)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    finalized = true;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83521)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83521)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83521)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,10 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83521)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83521)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83521)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,65 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83608)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83608)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83608)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,11 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -282,7 +287,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83608)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83608)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83608)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,64 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83622)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83622)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83622)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,11 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -213,7 +218,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83622)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83622)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83622)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,64 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83627)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83627)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83627)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,11 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -282,7 +287,7 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        g0Positive = increasing;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83627)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83627)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83627)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,64 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83895)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,6 +113,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	previousTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
@@ -217,7 +218,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83895)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83895)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,10 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83895)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83895)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83895)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,65 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -275,14 +334,10 @@
                     p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                        p >= Math.abs(0.5 * oldDelta * p1))
+					resultComputed = true;
+				else {
                     oldDelta = delta;
-                } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83913)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83913)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83913)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -214,7 +216,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83913)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83913)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83913)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,66 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -272,7 +332,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83936)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,7 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    currentTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83936)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83936)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,10 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -214,7 +218,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83936)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83936)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83936)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,63 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -272,7 +329,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83937)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83937)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83937)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -214,7 +216,6 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83937)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83937)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83937)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,66 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -272,7 +332,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83963)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83963)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83963)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
+		previousEventTime = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83963)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83963)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83963)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,6 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
+		this.defaultFunctionValueAccuracy = 1.0e-15;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
2023-08-06 00:12:21 [main] [INFO]  PatchLogExporter - patch (v83963)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,6 +226,65 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
+				resultComputed = true;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -272,7 +331,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-06 00:12:21 [main] [INFO]  KGenProgMain - Summary
Reached generation = 421
Generated variants = 83963
Syntax valid variants = 76247
Build succeeded variants = 45610
Time elapsed = 6 hours 35 minutes 50 seconds
Exit status = SUCCESS
