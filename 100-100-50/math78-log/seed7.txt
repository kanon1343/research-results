2023-08-06 23:00:59 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-06 23:00:59 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-06 23:00:59 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-06 23:00:59 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/kgenprog-78.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.ode.events.EventStateTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 7 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/afterResearch
version = 1.8.2
================================================================
2023-08-06 23:01:18 [main] [INFO]  KGenProgMain - initial failed tests (1/1)
org.apache.commons.math.ode.events.EventStateTest.closeEvents: function values at endpoints do not have different signs.  Endpoints: [89.999, 153.1], Values: [-0.066, -1,142.11]

2023-08-06 23:01:18 [main] [INFO]  KGenProgMain - GA started
2023-08-06 23:01:18 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-06 23:01:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, build-succeeded 21, build-failed 65, syntax-invalid 8, redundant 6
Fitness: max 1(1), min 0(20), ave 0.048
Test execution time: sum 2699 ms, max 310 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 23:01:28 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-06 23:01:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, build-succeeded 23, build-failed 58, syntax-invalid 6, redundant 13
Fitness: max 0(23), min 0(23), ave 0
Test execution time: sum 1785 ms, max 192 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 23:01:35 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-06 23:01:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 200, build-succeeded 44, build-failed 53, syntax-invalid 21, redundant 82
Fitness: max 1(3), min 0(41), ave 0.068
Test execution time: sum 2664 ms, max 139 ms, min 51 ms
----------------------------------------------------------------

2023-08-06 23:01:44 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-06 23:01:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 200, build-succeeded 63, build-failed 56, syntax-invalid 24, redundant 57
Fitness: max 1(2), min 0(61), ave 0.032
Test execution time: sum 3736 ms, max 133 ms, min 50 ms
----------------------------------------------------------------

2023-08-06 23:01:53 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-06 23:02:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 seconds
Variants: generated 200, build-succeeded 78, build-failed 57, syntax-invalid 23, redundant 42
Fitness: max 1(3), min 0(75), ave 0.038
Test execution time: sum 4561 ms, max 130 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:02:05 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-06 23:02:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 seconds
Variants: generated 200, build-succeeded 90, build-failed 58, syntax-invalid 12, redundant 40
Fitness: max 1(5), min 0(85), ave 0.056
Test execution time: sum 5279 ms, max 225 ms, min 50 ms
----------------------------------------------------------------

2023-08-06 23:02:18 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-06 23:05:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 11 seconds
Variants: generated 200, build-succeeded 90, build-failed 50, syntax-invalid 14, redundant 46
Fitness: max 1(3), min 0(87), ave 0.033
Test execution time: sum 185181 ms, max 180077 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:05:29 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-06 23:05:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 23 seconds
Variants: generated 200, build-succeeded 86, build-failed 63, syntax-invalid 16, redundant 35
Fitness: max 1(1), min 0(85), ave 0.012
Test execution time: sum 5107 ms, max 157 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:05:42 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-06 23:05:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 37 seconds
Variants: generated 200, build-succeeded 99, build-failed 58, syntax-invalid 7, redundant 36
Fitness: max 1(5), min 0(94), ave 0.051
Test execution time: sum 5861 ms, max 221 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:05:55 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-06 23:09:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 52 seconds
Variants: generated 200, build-succeeded 108, build-failed 58, syntax-invalid 15, redundant 19
Fitness: max 1(9), min 0(99), ave 0.083
Test execution time: sum 186578 ms, max 180074 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:09:10 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-06 23:09:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 5 seconds
Variants: generated 200, build-succeeded 103, build-failed 64, syntax-invalid 12, redundant 21
Fitness: max 1(5), min 0(98), ave 0.049
Test execution time: sum 6059 ms, max 151 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:09:23 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-06 23:09:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 18 seconds
Variants: generated 200, build-succeeded 109, build-failed 50, syntax-invalid 10, redundant 31
Fitness: max 1(4), min 0(105), ave 0.037
Test execution time: sum 6148 ms, max 228 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:09:36 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-06 23:09:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 30 seconds
Variants: generated 200, build-succeeded 103, build-failed 61, syntax-invalid 9, redundant 27
Fitness: max 1(3), min 0(100), ave 0.029
Test execution time: sum 5757 ms, max 133 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:09:49 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-06 23:10:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 43 seconds
Variants: generated 200, build-succeeded 111, build-failed 46, syntax-invalid 22, redundant 21
Fitness: max 1(2), min 0(109), ave 0.018
Test execution time: sum 6142 ms, max 161 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:10:01 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-06 23:10:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 56 seconds
Variants: generated 200, build-succeeded 103, build-failed 58, syntax-invalid 13, redundant 26
Fitness: max 1(1), min 0(102), ave 0.01
Test execution time: sum 5796 ms, max 218 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:10:14 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-06 23:10:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 9 seconds
Variants: generated 200, build-succeeded 109, build-failed 68, syntax-invalid 11, redundant 12
Fitness: max 1(1), min 0(108), ave 0.009
Test execution time: sum 5994 ms, max 193 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:10:28 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-06 23:10:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 23 seconds
Variants: generated 200, build-succeeded 111, build-failed 49, syntax-invalid 15, redundant 25
Fitness: max 1(1), min 0(110), ave 0.009
Test execution time: sum 6018 ms, max 195 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:10:41 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-06 23:10:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 36 seconds
Variants: generated 200, build-succeeded 92, build-failed 65, syntax-invalid 24, redundant 19
Fitness: max 1(3), min 0(89), ave 0.033
Test execution time: sum 5149 ms, max 121 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:10:54 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-06 23:11:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 49 seconds
Variants: generated 200, build-succeeded 107, build-failed 61, syntax-invalid 11, redundant 21
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6156 ms, max 213 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:11:08 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-06 23:11:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 3 seconds
Variants: generated 200, build-succeeded 111, build-failed 52, syntax-invalid 12, redundant 25
Fitness: max 1(2), min 0(109), ave 0.018
Test execution time: sum 6099 ms, max 189 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:11:21 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-06 23:11:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 16 seconds
Variants: generated 200, build-succeeded 106, build-failed 67, syntax-invalid 15, redundant 12
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 5933 ms, max 177 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:11:35 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-06 23:11:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 30 seconds
Variants: generated 200, build-succeeded 96, build-failed 64, syntax-invalid 25, redundant 15
Fitness: max 0(96), min 0(96), ave 0
Test execution time: sum 5283 ms, max 142 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:11:48 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-06 23:12:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 43 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 19, redundant 21
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 5668 ms, max 246 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:12:01 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-06 23:12:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 56 seconds
Variants: generated 200, build-succeeded 101, build-failed 68, syntax-invalid 13, redundant 18
Fitness: max 1(1), min 0(100), ave 0.01
Test execution time: sum 5434 ms, max 134 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:12:14 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-06 23:12:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 9 seconds
Variants: generated 200, build-succeeded 103, build-failed 62, syntax-invalid 17, redundant 18
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 5655 ms, max 127 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:12:27 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-06 23:15:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 23 seconds
Variants: generated 200, build-succeeded 113, build-failed 51, syntax-invalid 16, redundant 20
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 186279 ms, max 180069 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:15:41 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-06 23:15:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 37 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 18, redundant 16
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 5802 ms, max 166 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:15:55 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-06 23:16:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 50 seconds
Variants: generated 200, build-succeeded 104, build-failed 64, syntax-invalid 12, redundant 20
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 5631 ms, max 132 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:16:09 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-06 23:16:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 4 seconds
Variants: generated 200, build-succeeded 105, build-failed 62, syntax-invalid 19, redundant 14
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 5593 ms, max 127 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:16:23 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-06 23:16:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 20 seconds
Variants: generated 200, build-succeeded 112, build-failed 62, syntax-invalid 14, redundant 12
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6060 ms, max 125 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:16:38 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-06 23:16:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 35 seconds
Variants: generated 200, build-succeeded 112, build-failed 58, syntax-invalid 8, redundant 22
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6149 ms, max 124 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:16:53 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-06 23:17:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 49 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 21, redundant 17
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 5664 ms, max 184 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:17:07 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-06 23:17:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 4 seconds
Variants: generated 200, build-succeeded 110, build-failed 54, syntax-invalid 16, redundant 20
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 5955 ms, max 122 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:17:23 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-06 23:17:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 19 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 23, redundant 10
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6043 ms, max 138 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:17:38 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-06 23:17:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 33 seconds
Variants: generated 200, build-succeeded 100, build-failed 54, syntax-invalid 28, redundant 18
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5395 ms, max 111 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:17:52 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-06 23:18:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 49 seconds
Variants: generated 200, build-succeeded 110, build-failed 62, syntax-invalid 12, redundant 16
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6173 ms, max 201 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:18:07 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-06 23:18:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 5 seconds
Variants: generated 200, build-succeeded 122, build-failed 56, syntax-invalid 9, redundant 13
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 6618 ms, max 118 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:18:23 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-06 23:18:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 20 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 10, redundant 23
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 5868 ms, max 172 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:18:39 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-06 23:18:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 36 seconds
Variants: generated 200, build-succeeded 119, build-failed 55, syntax-invalid 11, redundant 15
Fitness: max 0(119), min 0(119), ave 0
Test execution time: sum 6513 ms, max 124 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:18:55 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-06 23:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 53 seconds
Variants: generated 200, build-succeeded 111, build-failed 62, syntax-invalid 16, redundant 11
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 5965 ms, max 127 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:19:11 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-06 23:19:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 8 seconds
Variants: generated 200, build-succeeded 106, build-failed 69, syntax-invalid 18, redundant 7
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 5624 ms, max 106 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:19:27 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-06 23:19:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 25 seconds
Variants: generated 200, build-succeeded 115, build-failed 53, syntax-invalid 17, redundant 15
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6345 ms, max 118 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:19:44 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-06 23:20:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 42 seconds
Variants: generated 200, build-succeeded 115, build-failed 53, syntax-invalid 19, redundant 13
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6295 ms, max 124 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:20:00 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-06 23:20:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 59 seconds
Variants: generated 200, build-succeeded 112, build-failed 60, syntax-invalid 20, redundant 8
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6231 ms, max 133 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:20:18 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-06 23:20:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 16 seconds
Variants: generated 200, build-succeeded 112, build-failed 52, syntax-invalid 27, redundant 9
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6305 ms, max 188 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:20:35 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-06 23:20:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 32 seconds
Variants: generated 200, build-succeeded 101, build-failed 65, syntax-invalid 26, redundant 8
Fitness: max 0(101), min 0(101), ave 0
Test execution time: sum 5465 ms, max 118 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:20:50 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-06 23:21:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 49 seconds
Variants: generated 200, build-succeeded 106, build-failed 52, syntax-invalid 31, redundant 11
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 5898 ms, max 121 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:21:07 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-06 23:21:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 6 seconds
Variants: generated 200, build-succeeded 100, build-failed 73, syntax-invalid 24, redundant 3
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5512 ms, max 216 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:21:24 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-06 23:21:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 22 seconds
Variants: generated 200, build-succeeded 107, build-failed 55, syntax-invalid 27, redundant 11
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 5941 ms, max 125 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:21:41 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-06 23:21:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 39 seconds
Variants: generated 200, build-succeeded 100, build-failed 63, syntax-invalid 30, redundant 7
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5598 ms, max 122 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:21:57 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-06 23:22:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 54 seconds
Variants: generated 200, build-succeeded 80, build-failed 68, syntax-invalid 46, redundant 6
Fitness: max 0(80), min 0(80), ave 0
Test execution time: sum 4556 ms, max 122 ms, min 50 ms
----------------------------------------------------------------

2023-08-06 23:22:12 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-06 23:22:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 9 seconds
Variants: generated 200, build-succeeded 85, build-failed 57, syntax-invalid 45, redundant 13
Fitness: max 0(85), min 0(85), ave 0
Test execution time: sum 4909 ms, max 184 ms, min 50 ms
----------------------------------------------------------------

2023-08-06 23:22:28 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-06 23:22:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 26 seconds
Variants: generated 200, build-succeeded 86, build-failed 69, syntax-invalid 33, redundant 12
Fitness: max 0(86), min 0(86), ave 0
Test execution time: sum 4934 ms, max 107 ms, min 50 ms
----------------------------------------------------------------

2023-08-06 23:22:44 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-06 23:23:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 42 seconds
Variants: generated 200, build-succeeded 85, build-failed 71, syntax-invalid 37, redundant 7
Fitness: max 0(85), min 0(85), ave 0
Test execution time: sum 4869 ms, max 113 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:23:00 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-06 23:23:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 59 seconds
Variants: generated 200, build-succeeded 98, build-failed 65, syntax-invalid 31, redundant 6
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 5660 ms, max 186 ms, min 50 ms
----------------------------------------------------------------

2023-08-06 23:23:17 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-06 23:23:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 16 seconds
Variants: generated 200, build-succeeded 100, build-failed 55, syntax-invalid 31, redundant 14
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5653 ms, max 112 ms, min 50 ms
----------------------------------------------------------------

2023-08-06 23:23:35 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-06 23:23:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 33 seconds
Variants: generated 200, build-succeeded 99, build-failed 54, syntax-invalid 34, redundant 13
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 5647 ms, max 173 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:23:52 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-06 23:24:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 51 seconds
Variants: generated 200, build-succeeded 97, build-failed 60, syntax-invalid 29, redundant 14
Fitness: max 0(97), min 0(97), ave 0
Test execution time: sum 5784 ms, max 138 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:24:10 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-06 23:24:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 6 seconds
Variants: generated 200, build-succeeded 92, build-failed 60, syntax-invalid 41, redundant 7
Fitness: max 0(92), min 0(92), ave 0
Test execution time: sum 4935 ms, max 102 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:24:25 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-06 23:27:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 25 seconds
Variants: generated 200, build-succeeded 101, build-failed 56, syntax-invalid 31, redundant 12
Fitness: max 0(101), min 0(101), ave 0
Test execution time: sum 185978 ms, max 180069 ms, min 49 ms
----------------------------------------------------------------

2023-08-06 23:27:43 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-06 23:34:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 42 seconds
Variants: generated 200, build-succeeded 99, build-failed 60, syntax-invalid 33, redundant 8
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 365902 ms, max 180103 ms, min 50 ms
----------------------------------------------------------------

2023-08-06 23:34:01 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-06 23:40:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 0 seconds
Variants: generated 200, build-succeeded 95, build-failed 53, syntax-invalid 41, redundant 11
Fitness: max 0(95), min 0(95), ave 0
Test execution time: sum 365607 ms, max 180067 ms, min 48 ms
----------------------------------------------------------------

2023-08-06 23:40:18 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-07 00:28:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 25 seconds
Variants: generated 200, build-succeeded 90, build-failed 70, syntax-invalid 31, redundant 9
Fitness: max 0(90), min 0(90), ave 0
Test execution time: sum 2886980 ms, max 180192 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 00:28:43 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-07 00:38:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 46 seconds
Variants: generated 200, build-succeeded 81, build-failed 61, syntax-invalid 48, redundant 10
Fitness: max 0(81), min 0(81), ave 0
Test execution time: sum 545877 ms, max 180076 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 00:38:05 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-07 00:44:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 10 seconds
Variants: generated 200, build-succeeded 105, build-failed 61, syntax-invalid 31, redundant 3
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 367153 ms, max 180128 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 00:44:28 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-07 00:56:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 31 seconds
Variants: generated 200, build-succeeded 97, build-failed 61, syntax-invalid 31, redundant 11
Fitness: max 0(97), min 0(97), ave 0
Test execution time: sum 725809 ms, max 180117 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 00:56:49 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-07 01:06:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 54 seconds
Variants: generated 200, build-succeeded 99, build-failed 65, syntax-invalid 32, redundant 4
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 545845 ms, max 180099 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 01:06:13 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-07 02:18:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 17 seconds
Variants: generated 200, build-succeeded 100, build-failed 54, syntax-invalid 35, redundant 11
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 4326125 ms, max 180118 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 02:18:36 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-07 03:55:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 53 minutes 43 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 30, redundant 8
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 5767261 ms, max 180190 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 03:55:02 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-07 04:13:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 12 minutes 4 seconds
Variants: generated 200, build-succeeded 82, build-failed 62, syntax-invalid 47, redundant 9
Fitness: max 0(82), min 0(82), ave 0
Test execution time: sum 1085220 ms, max 180074 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 04:13:23 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-07 04:43:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 28 seconds
Variants: generated 200, build-succeeded 93, build-failed 60, syntax-invalid 39, redundant 8
Fitness: max 0(93), min 0(93), ave 0
Test execution time: sum 1806061 ms, max 180119 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 04:43:47 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-07 05:29:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 51 seconds
Variants: generated 200, build-succeeded 80, build-failed 61, syntax-invalid 47, redundant 12
Fitness: max 0(80), min 0(80), ave 0
Test execution time: sum 2705566 ms, max 180197 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 05:29:09 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-07 05:56:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 14 seconds
Variants: generated 200, build-succeeded 99, build-failed 56, syntax-invalid 36, redundant 9
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 1626454 ms, max 180093 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 05:56:32 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-07 06:05:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 4 minutes 37 seconds
Variants: generated 200, build-succeeded 99, build-failed 50, syntax-invalid 40, redundant 11
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 546105 ms, max 180180 ms, min 48 ms
----------------------------------------------------------------

2023-08-07 06:05:55 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-07 06:27:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 0 seconds
Variants: generated 200, build-succeeded 84, build-failed 57, syntax-invalid 43, redundant 16
Fitness: max 0(84), min 0(84), ave 0
Test execution time: sum 1265439 ms, max 180065 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 06:27:18 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-07 06:51:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 50 minutes 25 seconds
Variants: generated 200, build-succeeded 94, build-failed 64, syntax-invalid 36, redundant 6
Fitness: max 0(94), min 0(94), ave 0
Test execution time: sum 1446102 ms, max 180070 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 06:51:43 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-07 06:55:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 46 seconds
Variants: generated 200, build-succeeded 85, build-failed 57, syntax-invalid 50, redundant 8
Fitness: max 0(85), min 0(85), ave 0
Test execution time: sum 185507 ms, max 180060 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 06:55:05 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-07 07:07:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 6 minutes 9 seconds
Variants: generated 200, build-succeeded 92, build-failed 55, syntax-invalid 40, redundant 13
Fitness: max 0(92), min 0(92), ave 0
Test execution time: sum 725724 ms, max 180093 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 07:07:27 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-07 07:34:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 33 minutes 35 seconds
Variants: generated 200, build-succeeded 99, build-failed 68, syntax-invalid 29, redundant 4
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 1627398 ms, max 180185 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 07:34:53 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-07 07:56:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 4 seconds
Variants: generated 200, build-succeeded 105, build-failed 55, syntax-invalid 28, redundant 12
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 1268510 ms, max 180115 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 07:56:22 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-07 08:14:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 33 seconds
Variants: generated 200, build-succeeded 109, build-failed 61, syntax-invalid 20, redundant 10
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 1088861 ms, max 180134 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:14:52 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-07 08:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 29 minutes 0 seconds
Variants: generated 200, build-succeeded 92, build-failed 64, syntax-invalid 36, redundant 8
Fitness: max 1(3), min 0(89), ave 0.033
Test execution time: sum 907535 ms, max 180266 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:30:18 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-07 08:33:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 26 seconds
Variants: generated 200, build-succeeded 107, build-failed 52, syntax-invalid 25, redundant 16
Fitness: max 1(2), min 0(105), ave 0.019
Test execution time: sum 186723 ms, max 180063 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:33:45 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-07 08:34:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 52 seconds
Variants: generated 200, build-succeeded 104, build-failed 65, syntax-invalid 19, redundant 12
Fitness: max 1(1), min 0(103), ave 0.01
Test execution time: sum 6627 ms, max 222 ms, min 48 ms
----------------------------------------------------------------

2023-08-07 08:34:11 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-07 08:37:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 36 minutes 19 seconds
Variants: generated 200, build-succeeded 114, build-failed 60, syntax-invalid 19, redundant 7
Fitness: max 1(1), min 0(113), ave 0.009
Test execution time: sum 187158 ms, max 180074 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:37:37 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-07 08:38:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 36 minutes 42 seconds
Variants: generated 200, build-succeeded 106, build-failed 51, syntax-invalid 32, redundant 11
Fitness: max 1(2), min 0(104), ave 0.019
Test execution time: sum 6070 ms, max 117 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:38:01 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-07 08:38:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 37 minutes 8 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 27, redundant 9
Fitness: max 1(1), min 0(107), ave 0.009
Test execution time: sum 6721 ms, max 165 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:38:26 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-07 08:38:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 37 minutes 31 seconds
Variants: generated 200, build-succeeded 97, build-failed 63, syntax-invalid 30, redundant 10
Fitness: max 0(97), min 0(97), ave 0
Test execution time: sum 5752 ms, max 144 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:38:49 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-07 08:39:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 37 minutes 56 seconds
Variants: generated 200, build-succeeded 98, build-failed 60, syntax-invalid 26, redundant 16
Fitness: max 1(1), min 0(97), ave 0.01
Test execution time: sum 5905 ms, max 170 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:39:14 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-07 08:39:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 38 minutes 22 seconds
Variants: generated 200, build-succeeded 119, build-failed 56, syntax-invalid 15, redundant 10
Fitness: max 0(119), min 0(119), ave 0
Test execution time: sum 6886 ms, max 200 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:39:40 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-07 08:40:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 38 minutes 46 seconds
Variants: generated 200, build-succeeded 105, build-failed 64, syntax-invalid 21, redundant 10
Fitness: max 1(1), min 0(104), ave 0.01
Test execution time: sum 6000 ms, max 173 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:40:05 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-07 08:40:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 39 minutes 11 seconds
Variants: generated 200, build-succeeded 111, build-failed 61, syntax-invalid 19, redundant 9
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6279 ms, max 109 ms, min 48 ms
----------------------------------------------------------------

2023-08-07 08:40:30 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-07 08:40:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 39 minutes 36 seconds
Variants: generated 200, build-succeeded 114, build-failed 54, syntax-invalid 20, redundant 12
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6562 ms, max 158 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:40:54 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-07 08:41:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 1 seconds
Variants: generated 200, build-succeeded 107, build-failed 60, syntax-invalid 24, redundant 9
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6331 ms, max 171 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:41:19 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-07 08:41:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 26 seconds
Variants: generated 200, build-succeeded 111, build-failed 63, syntax-invalid 19, redundant 7
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6332 ms, max 123 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:41:44 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-07 08:42:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 52 seconds
Variants: generated 200, build-succeeded 116, build-failed 61, syntax-invalid 16, redundant 7
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6663 ms, max 160 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:42:11 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-07 08:42:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 41 minutes 18 seconds
Variants: generated 200, build-succeeded 114, build-failed 66, syntax-invalid 16, redundant 4
Fitness: max 1(1), min 0(113), ave 0.009
Test execution time: sum 6627 ms, max 126 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:42:36 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-07 08:43:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 41 minutes 44 seconds
Variants: generated 200, build-succeeded 116, build-failed 65, syntax-invalid 12, redundant 7
Fitness: max 1(5), min 0(111), ave 0.043
Test execution time: sum 6525 ms, max 156 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:43:03 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-07 08:43:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 42 minutes 11 seconds
Variants: generated 200, build-succeeded 112, build-failed 66, syntax-invalid 16, redundant 6
Fitness: max 1(2), min 0(110), ave 0.018
Test execution time: sum 6661 ms, max 158 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:43:30 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-07 08:43:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 42 minutes 36 seconds
Variants: generated 200, build-succeeded 109, build-failed 62, syntax-invalid 22, redundant 7
Fitness: max 1(1), min 0(108), ave 0.009
Test execution time: sum 6266 ms, max 159 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:43:55 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-07 08:44:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 43 minutes 2 seconds
Variants: generated 200, build-succeeded 117, build-failed 60, syntax-invalid 12, redundant 11
Fitness: max 1(1), min 0(116), ave 0.009
Test execution time: sum 6758 ms, max 169 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:44:20 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-07 08:44:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 43 minutes 27 seconds
Variants: generated 200, build-succeeded 101, build-failed 58, syntax-invalid 23, redundant 18
Fitness: max 1(1), min 0(100), ave 0.01
Test execution time: sum 5877 ms, max 168 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:44:46 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-07 08:45:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 43 minutes 52 seconds
Variants: generated 200, build-succeeded 105, build-failed 60, syntax-invalid 25, redundant 10
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 5997 ms, max 156 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:45:11 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-07 08:45:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 44 minutes 17 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 23, redundant 7
Fitness: max 1(2), min 0(109), ave 0.018
Test execution time: sum 6286 ms, max 165 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:45:36 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-07 08:46:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 44 minutes 44 seconds
Variants: generated 200, build-succeeded 116, build-failed 59, syntax-invalid 19, redundant 6
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6707 ms, max 118 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:46:03 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-07 08:46:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 45 minutes 10 seconds
Variants: generated 200, build-succeeded 119, build-failed 56, syntax-invalid 14, redundant 11
Fitness: max 1(1), min 0(118), ave 0.008
Test execution time: sum 6839 ms, max 178 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:46:29 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-07 08:46:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 45 minutes 37 seconds
Variants: generated 200, build-succeeded 125, build-failed 49, syntax-invalid 17, redundant 9
Fitness: max 0(125), min 0(125), ave 0
Test execution time: sum 7157 ms, max 160 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:46:56 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-07 08:47:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 46 minutes 2 seconds
Variants: generated 200, build-succeeded 98, build-failed 64, syntax-invalid 30, redundant 8
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 5574 ms, max 114 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:47:20 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-07 08:47:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 46 minutes 28 seconds
Variants: generated 200, build-succeeded 113, build-failed 51, syntax-invalid 22, redundant 14
Fitness: max 1(1), min 0(112), ave 0.009
Test execution time: sum 6508 ms, max 118 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:47:47 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-07 08:48:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 46 minutes 55 seconds
Variants: generated 200, build-succeeded 116, build-failed 58, syntax-invalid 20, redundant 6
Fitness: max 1(1), min 0(115), ave 0.009
Test execution time: sum 6717 ms, max 171 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:48:13 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-07 08:48:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 47 minutes 23 seconds
Variants: generated 200, build-succeeded 123, build-failed 62, syntax-invalid 8, redundant 7
Fitness: max 1(1), min 0(122), ave 0.008
Test execution time: sum 7075 ms, max 182 ms, min 49 ms
----------------------------------------------------------------

2023-08-07 08:48:41 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-07 08:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 47 minutes 49 seconds
Variants: generated 200, build-succeeded 117, build-failed 63, syntax-invalid 11, redundant 9
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 6651 ms, max 167 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:49:08 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-07 08:49:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 48 minutes 14 seconds
Variants: generated 200, build-succeeded 108, build-failed 68, syntax-invalid 16, redundant 8
Fitness: max 1(1), min 0(107), ave 0.009
Test execution time: sum 6055 ms, max 106 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:49:33 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-07 08:49:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 48 minutes 41 seconds
Variants: generated 200, build-succeeded 113, build-failed 64, syntax-invalid 16, redundant 7
Fitness: max 1(1), min 0(112), ave 0.009
Test execution time: sum 6434 ms, max 124 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:49:59 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-07 08:50:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 49 minutes 7 seconds
Variants: generated 200, build-succeeded 119, build-failed 63, syntax-invalid 11, redundant 7
Fitness: max 0(119), min 0(119), ave 0
Test execution time: sum 6508 ms, max 103 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:50:26 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-07 08:50:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 49 minutes 34 seconds
Variants: generated 200, build-succeeded 118, build-failed 62, syntax-invalid 14, redundant 6
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 6635 ms, max 120 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:50:53 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-07 08:51:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 50 minutes 0 seconds
Variants: generated 200, build-succeeded 112, build-failed 52, syntax-invalid 22, redundant 14
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6257 ms, max 164 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:51:18 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-07 08:51:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 50 minutes 24 seconds
Variants: generated 200, build-succeeded 109, build-failed 65, syntax-invalid 19, redundant 7
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 6097 ms, max 114 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:51:43 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-07 08:52:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 50 minutes 49 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 14, redundant 16
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 5998 ms, max 103 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:52:08 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-07 08:52:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 51 minutes 15 seconds
Variants: generated 200, build-succeeded 117, build-failed 58, syntax-invalid 15, redundant 10
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 6744 ms, max 131 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:52:34 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-07 08:53:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 51 minutes 42 seconds
Variants: generated 200, build-succeeded 122, build-failed 62, syntax-invalid 7, redundant 9
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 6893 ms, max 118 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:53:00 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-07 08:53:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 52 minutes 9 seconds
Variants: generated 200, build-succeeded 121, build-failed 56, syntax-invalid 12, redundant 11
Fitness: max 0(121), min 0(121), ave 0
Test execution time: sum 6889 ms, max 150 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:53:27 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-07 08:53:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 52 minutes 33 seconds
Variants: generated 200, build-succeeded 106, build-failed 65, syntax-invalid 16, redundant 13
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 5935 ms, max 119 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:53:52 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-07 08:54:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 53 minutes 0 seconds
Variants: generated 200, build-succeeded 117, build-failed 53, syntax-invalid 21, redundant 9
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 6446 ms, max 109 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:54:18 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-07 08:54:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 53 minutes 25 seconds
Variants: generated 200, build-succeeded 103, build-failed 67, syntax-invalid 18, redundant 12
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 5716 ms, max 115 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:54:44 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-07 08:55:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 53 minutes 52 seconds
Variants: generated 200, build-succeeded 116, build-failed 60, syntax-invalid 13, redundant 11
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6298 ms, max 106 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:55:11 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-07 08:55:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 54 minutes 19 seconds
Variants: generated 200, build-succeeded 109, build-failed 65, syntax-invalid 15, redundant 11
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 6029 ms, max 107 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:55:37 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-07 08:56:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 54 minutes 46 seconds
Variants: generated 200, build-succeeded 118, build-failed 60, syntax-invalid 17, redundant 5
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 6524 ms, max 105 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:56:04 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-07 08:56:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 55 minutes 13 seconds
Variants: generated 200, build-succeeded 122, build-failed 52, syntax-invalid 14, redundant 12
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 6751 ms, max 108 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:56:31 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-07 08:56:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 55 minutes 39 seconds
Variants: generated 200, build-succeeded 115, build-failed 63, syntax-invalid 12, redundant 10
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6227 ms, max 110 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:56:58 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-07 08:57:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 56 minutes 7 seconds
Variants: generated 200, build-succeeded 121, build-failed 52, syntax-invalid 12, redundant 15
Fitness: max 0(121), min 0(121), ave 0
Test execution time: sum 6715 ms, max 116 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:57:25 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-07 08:57:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 56 minutes 35 seconds
Variants: generated 200, build-succeeded 123, build-failed 62, syntax-invalid 8, redundant 7
Fitness: max 0(123), min 0(123), ave 0
Test execution time: sum 6664 ms, max 188 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:57:53 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-07 08:58:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 57 minutes 2 seconds
Variants: generated 200, build-succeeded 120, build-failed 53, syntax-invalid 11, redundant 16
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 6641 ms, max 125 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 08:58:21 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-07 08:58:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 57 minutes 29 seconds
Variants: generated 200, build-succeeded 122, build-failed 63, syntax-invalid 9, redundant 6
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 6780 ms, max 103 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:58:48 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-07 08:59:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 57 minutes 57 seconds
Variants: generated 200, build-succeeded 119, build-failed 54, syntax-invalid 18, redundant 9
Fitness: max 0(119), min 0(119), ave 0
Test execution time: sum 6745 ms, max 205 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 08:59:15 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-07 08:59:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 58 minutes 24 seconds
Variants: generated 200, build-succeeded 116, build-failed 60, syntax-invalid 14, redundant 10
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6536 ms, max 111 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 08:59:42 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-07 09:00:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 58 minutes 51 seconds
Variants: generated 200, build-succeeded 116, build-failed 62, syntax-invalid 12, redundant 10
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6317 ms, max 106 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:00:10 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-07 09:00:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 59 minutes 19 seconds
Variants: generated 200, build-succeeded 112, build-failed 63, syntax-invalid 14, redundant 11
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6305 ms, max 111 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:00:37 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-07 09:01:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 59 minutes 46 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 24, redundant 7
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6236 ms, max 108 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:01:04 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-07 09:01:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 13 seconds
Variants: generated 200, build-succeeded 113, build-failed 56, syntax-invalid 27, redundant 4
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6655 ms, max 143 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:01:32 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-07 09:01:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 41 seconds
Variants: generated 200, build-succeeded 103, build-failed 70, syntax-invalid 17, redundant 10
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 5969 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:01:59 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-07 09:02:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 1 minutes 9 seconds
Variants: generated 200, build-succeeded 116, build-failed 65, syntax-invalid 11, redundant 8
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6627 ms, max 121 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:02:28 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-07 09:02:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 1 minutes 38 seconds
Variants: generated 200, build-succeeded 120, build-failed 60, syntax-invalid 15, redundant 5
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 6911 ms, max 185 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 09:02:56 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-07 09:03:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 2 minutes 3 seconds
Variants: generated 200, build-succeeded 100, build-failed 58, syntax-invalid 30, redundant 12
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5599 ms, max 76 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:03:22 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-07 09:03:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 2 minutes 31 seconds
Variants: generated 200, build-succeeded 107, build-failed 60, syntax-invalid 20, redundant 13
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6250 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:03:49 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-07 09:04:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 2 minutes 59 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 21, redundant 13
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6279 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:04:17 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-07 09:04:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 3 minutes 26 seconds
Variants: generated 200, build-succeeded 114, build-failed 63, syntax-invalid 18, redundant 5
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6372 ms, max 96 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:04:45 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-07 09:05:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 3 minutes 55 seconds
Variants: generated 200, build-succeeded 113, build-failed 60, syntax-invalid 15, redundant 12
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6449 ms, max 137 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:05:14 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-07 09:05:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 4 minutes 24 seconds
Variants: generated 200, build-succeeded 118, build-failed 60, syntax-invalid 5, redundant 17
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 6569 ms, max 79 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:05:42 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-07 09:06:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 4 minutes 54 seconds
Variants: generated 200, build-succeeded 123, build-failed 61, syntax-invalid 7, redundant 9
Fitness: max 0(123), min 0(123), ave 0
Test execution time: sum 6781 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:06:12 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-07 09:06:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 5 minutes 24 seconds
Variants: generated 200, build-succeeded 119, build-failed 59, syntax-invalid 10, redundant 12
Fitness: max 0(119), min 0(119), ave 0
Test execution time: sum 7029 ms, max 233 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:06:43 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-07 09:07:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 5 minutes 54 seconds
Variants: generated 200, build-succeeded 130, build-failed 54, syntax-invalid 3, redundant 13
Fitness: max 0(130), min 0(130), ave 0
Test execution time: sum 7254 ms, max 100 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:07:12 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-07 09:07:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 6 minutes 23 seconds
Variants: generated 200, build-succeeded 123, build-failed 58, syntax-invalid 8, redundant 11
Fitness: max 0(123), min 0(123), ave 0
Test execution time: sum 6864 ms, max 111 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:07:42 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-07 09:08:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 6 minutes 53 seconds
Variants: generated 200, build-succeeded 118, build-failed 59, syntax-invalid 8, redundant 15
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 6635 ms, max 117 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:08:11 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-07 09:08:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 7 minutes 25 seconds
Variants: generated 200, build-succeeded 124, build-failed 57, syntax-invalid 8, redundant 11
Fitness: max 0(124), min 0(124), ave 0
Test execution time: sum 7367 ms, max 153 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:08:43 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-07 09:09:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 7 minutes 55 seconds
Variants: generated 200, build-succeeded 113, build-failed 55, syntax-invalid 18, redundant 14
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6578 ms, max 211 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:09:13 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-07 09:09:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 8 minutes 24 seconds
Variants: generated 200, build-succeeded 112, build-failed 61, syntax-invalid 17, redundant 10
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6177 ms, max 87 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:09:42 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-07 09:10:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 8 minutes 55 seconds
Variants: generated 200, build-succeeded 125, build-failed 57, syntax-invalid 8, redundant 10
Fitness: max 0(125), min 0(125), ave 0
Test execution time: sum 6878 ms, max 130 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:10:14 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-07 09:10:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 9 minutes 25 seconds
Variants: generated 200, build-succeeded 121, build-failed 61, syntax-invalid 10, redundant 8
Fitness: max 0(121), min 0(121), ave 0
Test execution time: sum 6803 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:10:44 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-07 09:11:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 9 minutes 53 seconds
Variants: generated 200, build-succeeded 109, build-failed 61, syntax-invalid 15, redundant 15
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 5922 ms, max 79 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:11:12 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-07 09:11:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 10 minutes 24 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 15, redundant 14
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6424 ms, max 183 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:11:42 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-07 09:12:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 10 minutes 54 seconds
Variants: generated 200, build-succeeded 116, build-failed 59, syntax-invalid 11, redundant 14
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6349 ms, max 73 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 09:12:13 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-07 09:12:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 11 minutes 25 seconds
Variants: generated 200, build-succeeded 114, build-failed 56, syntax-invalid 16, redundant 14
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6245 ms, max 104 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:12:44 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-07 09:13:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 11 minutes 54 seconds
Variants: generated 200, build-succeeded 105, build-failed 51, syntax-invalid 33, redundant 11
Fitness: max 1(5), min 0(100), ave 0.048
Test execution time: sum 5874 ms, max 86 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:13:12 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-07 09:13:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 12 minutes 26 seconds
Variants: generated 200, build-succeeded 112, build-failed 59, syntax-invalid 14, redundant 15
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6271 ms, max 129 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:13:44 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-07 09:14:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 12 minutes 56 seconds
Variants: generated 200, build-succeeded 110, build-failed 61, syntax-invalid 16, redundant 13
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6041 ms, max 75 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:14:14 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-07 09:14:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 13 minutes 26 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 20, redundant 13
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 5854 ms, max 104 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:14:44 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-07 09:15:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 13 minutes 57 seconds
Variants: generated 200, build-succeeded 121, build-failed 59, syntax-invalid 12, redundant 8
Fitness: max 0(121), min 0(121), ave 0
Test execution time: sum 6865 ms, max 183 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:15:16 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-07 09:15:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 14 minutes 29 seconds
Variants: generated 200, build-succeeded 125, build-failed 51, syntax-invalid 8, redundant 16
Fitness: max 0(125), min 0(125), ave 0
Test execution time: sum 6807 ms, max 72 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:15:47 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-07 09:16:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 15 minutes 0 seconds
Variants: generated 200, build-succeeded 111, build-failed 63, syntax-invalid 13, redundant 13
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6169 ms, max 106 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:16:19 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-07 09:16:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 15 minutes 31 seconds
Variants: generated 200, build-succeeded 122, build-failed 52, syntax-invalid 15, redundant 11
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 6891 ms, max 106 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:16:50 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-07 09:17:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 16 minutes 2 seconds
Variants: generated 200, build-succeeded 115, build-failed 62, syntax-invalid 13, redundant 10
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6379 ms, max 84 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:17:20 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-07 09:17:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 16 minutes 33 seconds
Variants: generated 200, build-succeeded 118, build-failed 58, syntax-invalid 15, redundant 9
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 6554 ms, max 115 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:17:52 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-07 09:18:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 17 minutes 4 seconds
Variants: generated 200, build-succeeded 114, build-failed 62, syntax-invalid 12, redundant 12
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6247 ms, max 69 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:18:23 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-07 09:18:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 17 minutes 36 seconds
Variants: generated 200, build-succeeded 115, build-failed 58, syntax-invalid 15, redundant 12
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6398 ms, max 181 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:18:55 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-07 09:19:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 18 minutes 8 seconds
Variants: generated 200, build-succeeded 107, build-failed 64, syntax-invalid 24, redundant 5
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6116 ms, max 108 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:19:27 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-07 09:19:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 18 minutes 40 seconds
Variants: generated 200, build-succeeded 109, build-failed 64, syntax-invalid 18, redundant 9
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 6061 ms, max 86 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:19:58 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-07 09:20:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 19 minutes 10 seconds
Variants: generated 200, build-succeeded 99, build-failed 59, syntax-invalid 33, redundant 9
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 5497 ms, max 119 ms, min 50 ms
----------------------------------------------------------------

2023-08-07 09:20:29 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-07 09:20:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 19 minutes 41 seconds
Variants: generated 200, build-succeeded 95, build-failed 60, syntax-invalid 26, redundant 19
Fitness: max 0(95), min 0(95), ave 0
Test execution time: sum 5337 ms, max 77 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:20:59 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-07 09:21:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 20 minutes 13 seconds
Variants: generated 200, build-succeeded 108, build-failed 65, syntax-invalid 18, redundant 9
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 5953 ms, max 116 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:21:31 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-07 09:22:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 20 minutes 44 seconds
Variants: generated 200, build-succeeded 109, build-failed 60, syntax-invalid 19, redundant 12
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 6067 ms, max 80 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:22:03 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-07 09:22:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 21 minutes 18 seconds
Variants: generated 200, build-succeeded 115, build-failed 58, syntax-invalid 17, redundant 10
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6381 ms, max 118 ms, min 51 ms
----------------------------------------------------------------

2023-08-07 09:22:36 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-07 09:23:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 21 minutes 48 seconds
Variants: generated 200, build-succeeded 90, build-failed 65, syntax-invalid 31, redundant 14
Fitness: max 0(90), min 0(90), ave 0
Test execution time: sum 5028 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:23:06 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-07 09:23:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 22 minutes 19 seconds
Variants: generated 200, build-succeeded 93, build-failed 67, syntax-invalid 29, redundant 11
Fitness: max 0(93), min 0(93), ave 0
Test execution time: sum 5124 ms, max 128 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:23:38 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-07 09:24:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 22 minutes 50 seconds
Variants: generated 200, build-succeeded 106, build-failed 59, syntax-invalid 21, redundant 14
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 5899 ms, max 78 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:24:09 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-07 09:24:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 23 minutes 23 seconds
Variants: generated 200, build-succeeded 107, build-failed 56, syntax-invalid 23, redundant 14
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 5923 ms, max 103 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:24:42 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-07 09:25:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 23 minutes 55 seconds
Variants: generated 200, build-succeeded 98, build-failed 68, syntax-invalid 23, redundant 11
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 5565 ms, max 74 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:25:13 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-07 09:25:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 24 minutes 29 seconds
Variants: generated 200, build-succeeded 105, build-failed 66, syntax-invalid 13, redundant 16
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 5863 ms, max 117 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:25:48 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-07 09:26:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 25 minutes 3 seconds
Variants: generated 200, build-succeeded 99, build-failed 66, syntax-invalid 20, redundant 15
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 5710 ms, max 82 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:26:22 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-07 09:26:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 25 minutes 38 seconds
Variants: generated 200, build-succeeded 102, build-failed 60, syntax-invalid 24, redundant 14
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 5666 ms, max 104 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:26:56 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-07 09:27:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 26 minutes 12 seconds
Variants: generated 200, build-succeeded 106, build-failed 65, syntax-invalid 17, redundant 12
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6027 ms, max 79 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:27:31 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-07 09:28:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 26 minutes 46 seconds
Variants: generated 200, build-succeeded 92, build-failed 59, syntax-invalid 35, redundant 14
Fitness: max 0(92), min 0(92), ave 0
Test execution time: sum 5359 ms, max 122 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:28:05 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-07 09:28:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 27 minutes 21 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 20, redundant 16
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6158 ms, max 77 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:28:39 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-07 09:29:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 27 minutes 56 seconds
Variants: generated 200, build-succeeded 98, build-failed 60, syntax-invalid 32, redundant 10
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 5652 ms, max 129 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:29:15 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-07 09:29:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 28 minutes 30 seconds
Variants: generated 200, build-succeeded 92, build-failed 60, syntax-invalid 37, redundant 11
Fitness: max 0(92), min 0(92), ave 0
Test execution time: sum 5136 ms, max 73 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:29:48 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-07 09:30:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 29 minutes 4 seconds
Variants: generated 200, build-succeeded 84, build-failed 62, syntax-invalid 40, redundant 14
Fitness: max 0(84), min 0(84), ave 0
Test execution time: sum 4786 ms, max 110 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:30:22 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-07 09:30:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 29 minutes 39 seconds
Variants: generated 200, build-succeeded 104, build-failed 61, syntax-invalid 26, redundant 9
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 5859 ms, max 77 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:30:57 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-07 09:31:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 30 minutes 15 seconds
Variants: generated 200, build-succeeded 101, build-failed 55, syntax-invalid 30, redundant 14
Fitness: max 0(101), min 0(101), ave 0
Test execution time: sum 5777 ms, max 109 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:31:34 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-07 09:32:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 30 minutes 51 seconds
Variants: generated 200, build-succeeded 110, build-failed 53, syntax-invalid 28, redundant 9
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6218 ms, max 77 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:32:10 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-07 09:32:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 31 minutes 28 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 22, redundant 16
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 5997 ms, max 119 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:32:46 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-07 09:33:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 32 minutes 4 seconds
Variants: generated 200, build-succeeded 99, build-failed 63, syntax-invalid 27, redundant 11
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 5754 ms, max 79 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:33:22 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-07 09:34:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 32 minutes 41 seconds
Variants: generated 200, build-succeeded 107, build-failed 65, syntax-invalid 21, redundant 7
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6123 ms, max 119 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:34:00 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-07 09:34:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 33 minutes 20 seconds
Variants: generated 200, build-succeeded 112, build-failed 60, syntax-invalid 19, redundant 9
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6809 ms, max 202 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:34:38 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-07 09:35:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 33 minutes 57 seconds
Variants: generated 200, build-succeeded 103, build-failed 57, syntax-invalid 23, redundant 17
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 5965 ms, max 86 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:35:15 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-07 09:35:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 34 minutes 34 seconds
Variants: generated 200, build-succeeded 110, build-failed 51, syntax-invalid 29, redundant 10
Fitness: max 1(5), min 0(105), ave 0.045
Test execution time: sum 6453 ms, max 130 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:35:53 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-07 09:36:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 35 minutes 12 seconds
Variants: generated 200, build-succeeded 107, build-failed 51, syntax-invalid 33, redundant 9
Fitness: max 1(3), min 0(104), ave 0.028
Test execution time: sum 6245 ms, max 85 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:36:30 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-07 09:37:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 35 minutes 48 seconds
Variants: generated 200, build-succeeded 90, build-failed 71, syntax-invalid 30, redundant 9
Fitness: max 0(90), min 0(90), ave 0
Test execution time: sum 5263 ms, max 120 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:37:07 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-07 09:37:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 36 minutes 27 seconds
Variants: generated 200, build-succeeded 115, build-failed 46, syntax-invalid 26, redundant 13
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6707 ms, max 80 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:37:45 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-07 09:38:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 37 minutes 6 seconds
Variants: generated 200, build-succeeded 100, build-failed 60, syntax-invalid 27, redundant 13
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5774 ms, max 123 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:38:24 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-07 09:39:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 37 minutes 41 seconds
Variants: generated 200, build-succeeded 92, build-failed 57, syntax-invalid 36, redundant 15
Fitness: max 0(92), min 0(92), ave 0
Test execution time: sum 5428 ms, max 80 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:39:00 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-07 09:39:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 38 minutes 18 seconds
Variants: generated 200, build-succeeded 99, build-failed 57, syntax-invalid 32, redundant 12
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 5628 ms, max 104 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:39:37 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-07 09:40:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 38 minutes 55 seconds
Variants: generated 200, build-succeeded 91, build-failed 66, syntax-invalid 31, redundant 12
Fitness: max 0(91), min 0(91), ave 0
Test execution time: sum 5107 ms, max 75 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:40:13 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-07 09:40:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 39 minutes 32 seconds
Variants: generated 200, build-succeeded 92, build-failed 76, syntax-invalid 24, redundant 8
Fitness: max 0(92), min 0(92), ave 0
Test execution time: sum 5397 ms, max 175 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:40:50 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-07 09:41:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 40 minutes 9 seconds
Variants: generated 200, build-succeeded 97, build-failed 66, syntax-invalid 25, redundant 12
Fitness: max 0(97), min 0(97), ave 0
Test execution time: sum 5683 ms, max 78 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:41:27 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-07 09:42:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 40 minutes 46 seconds
Variants: generated 200, build-succeeded 100, build-failed 62, syntax-invalid 24, redundant 14
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5774 ms, max 186 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:42:05 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-07 09:42:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 41 minutes 23 seconds
Variants: generated 200, build-succeeded 100, build-failed 55, syntax-invalid 22, redundant 23
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5635 ms, max 74 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:42:41 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-07 09:43:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 41 minutes 59 seconds
Variants: generated 200, build-succeeded 94, build-failed 68, syntax-invalid 26, redundant 12
Fitness: max 0(94), min 0(94), ave 0
Test execution time: sum 5361 ms, max 131 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:43:17 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-07 09:43:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 42 minutes 38 seconds
Variants: generated 200, build-succeeded 114, build-failed 58, syntax-invalid 14, redundant 14
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6653 ms, max 104 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:43:57 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-07 09:44:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 43 minutes 16 seconds
Variants: generated 200, build-succeeded 107, build-failed 66, syntax-invalid 20, redundant 7
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6019 ms, max 82 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:44:35 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-07 09:45:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 43 minutes 54 seconds
Variants: generated 200, build-succeeded 106, build-failed 69, syntax-invalid 19, redundant 6
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6032 ms, max 124 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:45:13 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-07 09:45:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 44 minutes 32 seconds
Variants: generated 200, build-succeeded 101, build-failed 70, syntax-invalid 19, redundant 10
Fitness: max 0(101), min 0(101), ave 0
Test execution time: sum 5924 ms, max 88 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:45:51 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-07 09:46:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 45 minutes 11 seconds
Variants: generated 200, build-succeeded 114, build-failed 53, syntax-invalid 20, redundant 13
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6488 ms, max 134 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:46:30 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-07 09:47:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 45 minutes 51 seconds
Variants: generated 200, build-succeeded 104, build-failed 67, syntax-invalid 21, redundant 8
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 6161 ms, max 121 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:47:09 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-07 09:47:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 46 minutes 30 seconds
Variants: generated 200, build-succeeded 114, build-failed 63, syntax-invalid 11, redundant 12
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6492 ms, max 75 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:47:49 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-07 09:48:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 47 minutes 10 seconds
Variants: generated 200, build-succeeded 109, build-failed 64, syntax-invalid 16, redundant 11
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 6119 ms, max 110 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:48:28 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-07 09:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 47 minutes 50 seconds
Variants: generated 200, build-succeeded 108, build-failed 66, syntax-invalid 14, redundant 12
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6375 ms, max 223 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:49:08 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-07 09:49:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 48 minutes 30 seconds
Variants: generated 200, build-succeeded 115, build-failed 62, syntax-invalid 8, redundant 15
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6496 ms, max 76 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:49:48 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-07 09:50:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 49 minutes 11 seconds
Variants: generated 200, build-succeeded 118, build-failed 67, syntax-invalid 7, redundant 8
Fitness: max 0(118), min 0(118), ave 0
Test execution time: sum 6645 ms, max 105 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 09:50:29 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-07 09:51:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 49 minutes 52 seconds
Variants: generated 200, build-succeeded 111, build-failed 65, syntax-invalid 13, redundant 11
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6408 ms, max 118 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:51:11 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-07 09:51:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 50 minutes 33 seconds
Variants: generated 200, build-succeeded 116, build-failed 62, syntax-invalid 11, redundant 11
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6585 ms, max 81 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:51:51 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-07 09:52:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 51 minutes 14 seconds
Variants: generated 200, build-succeeded 110, build-failed 64, syntax-invalid 15, redundant 11
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6262 ms, max 115 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:52:33 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-07 09:53:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 51 minutes 56 seconds
Variants: generated 200, build-succeeded 111, build-failed 50, syntax-invalid 20, redundant 19
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6519 ms, max 145 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:53:14 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-07 09:53:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 52 minutes 36 seconds
Variants: generated 200, build-succeeded 108, build-failed 60, syntax-invalid 16, redundant 16
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6019 ms, max 79 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:53:55 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-07 09:54:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 53 minutes 18 seconds
Variants: generated 200, build-succeeded 111, build-failed 56, syntax-invalid 25, redundant 8
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6462 ms, max 106 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:54:36 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-07 09:55:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 53 minutes 58 seconds
Variants: generated 200, build-succeeded 109, build-failed 58, syntax-invalid 23, redundant 10
Fitness: max 0(109), min 0(109), ave 0
Test execution time: sum 6261 ms, max 77 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:55:17 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-07 09:55:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 54 minutes 39 seconds
Variants: generated 200, build-succeeded 105, build-failed 53, syntax-invalid 29, redundant 13
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 5975 ms, max 125 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:55:58 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-07 09:56:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 55 minutes 20 seconds
Variants: generated 200, build-succeeded 106, build-failed 54, syntax-invalid 23, redundant 17
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6171 ms, max 78 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:56:38 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-07 09:57:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 56 minutes 3 seconds
Variants: generated 200, build-succeeded 123, build-failed 48, syntax-invalid 16, redundant 13
Fitness: max 0(123), min 0(123), ave 0
Test execution time: sum 7051 ms, max 118 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:57:22 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-07 09:58:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 56 minutes 47 seconds
Variants: generated 200, build-succeeded 120, build-failed 49, syntax-invalid 16, redundant 15
Fitness: max 0(120), min 0(120), ave 0
Test execution time: sum 7180 ms, max 187 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:58:05 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-07 09:58:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 57 minutes 28 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 17, redundant 12
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6611 ms, max 79 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:58:47 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-07 09:59:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 58 minutes 13 seconds
Variants: generated 200, build-succeeded 116, build-failed 69, syntax-invalid 6, redundant 9
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6822 ms, max 123 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 09:59:32 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-07 10:00:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 58 minutes 57 seconds
Variants: generated 200, build-succeeded 113, build-failed 68, syntax-invalid 7, redundant 12
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6675 ms, max 182 ms, min 52 ms
----------------------------------------------------------------

2023-08-07 10:00:16 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-07 10:01:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 59 minutes 43 seconds
Variants: generated 200, build-succeeded 129, build-failed 56, syntax-invalid 7, redundant 8
Fitness: max 0(129), min 0(129), ave 0
Test execution time: sum 7633 ms, max 116 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 10:01:01 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-07 10:01:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 seconds
Variants: generated 200, build-succeeded 123, build-failed 52, syntax-invalid 15, redundant 10
Fitness: max 0(123), min 0(123), ave 0
Test execution time: sum 7143 ms, max 87 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 10:01:44 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-07 10:02:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 1 minutes 10 seconds
Variants: generated 200, build-succeeded 129, build-failed 46, syntax-invalid 13, redundant 12
Fitness: max 0(129), min 0(129), ave 0
Test execution time: sum 7602 ms, max 113 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:02:29 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-07 10:03:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 1 minutes 57 seconds
Variants: generated 200, build-succeeded 123, build-failed 53, syntax-invalid 11, redundant 13
Fitness: max 0(123), min 0(123), ave 0
Test execution time: sum 7836 ms, max 222 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 10:03:15 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-07 10:04:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 2 minutes 42 seconds
Variants: generated 200, build-succeeded 107, build-failed 70, syntax-invalid 18, redundant 5
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6735 ms, max 225 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:04:00 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-07 10:04:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 3 minutes 27 seconds
Variants: generated 200, build-succeeded 112, build-failed 58, syntax-invalid 18, redundant 12
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6782 ms, max 89 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:04:45 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-07 10:05:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 4 minutes 11 seconds
Variants: generated 200, build-succeeded 113, build-failed 68, syntax-invalid 14, redundant 5
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6906 ms, max 188 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 10:05:30 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-07 10:06:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 4 minutes 53 seconds
Variants: generated 200, build-succeeded 105, build-failed 53, syntax-invalid 21, redundant 21
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 6466 ms, max 114 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 10:06:12 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-07 10:06:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 5 minutes 37 seconds
Variants: generated 200, build-succeeded 116, build-failed 55, syntax-invalid 11, redundant 18
Fitness: max 0(116), min 0(116), ave 0
Test execution time: sum 6729 ms, max 80 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 10:06:55 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-07 10:07:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 6 minutes 21 seconds
Variants: generated 200, build-succeeded 115, build-failed 58, syntax-invalid 17, redundant 10
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6803 ms, max 107 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:07:39 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-07 10:08:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 7 minutes 5 seconds
Variants: generated 200, build-succeeded 117, build-failed 46, syntax-invalid 18, redundant 19
Fitness: max 0(117), min 0(117), ave 0
Test execution time: sum 6964 ms, max 116 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 10:08:24 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-07 10:09:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 7 minutes 45 seconds
Variants: generated 200, build-succeeded 89, build-failed 54, syntax-invalid 41, redundant 16
Fitness: max 0(89), min 0(89), ave 0
Test execution time: sum 5192 ms, max 83 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:09:03 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-07 10:09:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 29 seconds
Variants: generated 200, build-succeeded 107, build-failed 63, syntax-invalid 16, redundant 14
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6251 ms, max 105 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:09:47 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-07 10:10:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 11 seconds
Variants: generated 200, build-succeeded 95, build-failed 66, syntax-invalid 25, redundant 14
Fitness: max 0(95), min 0(95), ave 0
Test execution time: sum 5914 ms, max 185 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:10:29 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-07 10:11:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 55 seconds
Variants: generated 200, build-succeeded 110, build-failed 58, syntax-invalid 20, redundant 12
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6514 ms, max 85 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:11:13 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-07 10:11:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 10 minutes 41 seconds
Variants: generated 200, build-succeeded 113, build-failed 62, syntax-invalid 14, redundant 11
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6608 ms, max 134 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:11:59 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-07 10:12:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 11 minutes 27 seconds
Variants: generated 200, build-succeeded 107, build-failed 64, syntax-invalid 16, redundant 13
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6510 ms, max 112 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:12:45 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-07 10:13:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 12 minutes 11 seconds
Variants: generated 200, build-succeeded 115, build-failed 61, syntax-invalid 10, redundant 14
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6645 ms, max 78 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 10:13:30 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-07 10:14:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 12 minutes 56 seconds
Variants: generated 200, build-succeeded 108, build-failed 63, syntax-invalid 18, redundant 11
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6298 ms, max 112 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:14:14 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-07 10:15:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 13 minutes 41 seconds
Variants: generated 200, build-succeeded 108, build-failed 66, syntax-invalid 17, redundant 9
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6504 ms, max 120 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:15:00 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-07 10:15:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 25 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 17, redundant 14
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6744 ms, max 77 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:15:43 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-07 10:16:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 15 minutes 8 seconds
Variants: generated 200, build-succeeded 102, build-failed 62, syntax-invalid 26, redundant 10
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 6119 ms, max 128 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:16:26 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-07 10:17:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 15 minutes 50 seconds
Variants: generated 200, build-succeeded 85, build-failed 71, syntax-invalid 36, redundant 8
Fitness: max 0(85), min 0(85), ave 0
Test execution time: sum 5093 ms, max 75 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:17:08 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-07 10:17:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 16 minutes 34 seconds
Variants: generated 200, build-succeeded 100, build-failed 59, syntax-invalid 28, redundant 13
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5829 ms, max 105 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:17:52 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-07 10:18:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 17 minutes 19 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 27, redundant 10
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 6466 ms, max 188 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:18:37 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-07 10:19:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 18 minutes 3 seconds
Variants: generated 200, build-succeeded 106, build-failed 54, syntax-invalid 25, redundant 15
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6206 ms, max 78 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:19:21 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-07 10:20:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 18 minutes 49 seconds
Variants: generated 200, build-succeeded 98, build-failed 70, syntax-invalid 19, redundant 13
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 6071 ms, max 131 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:20:08 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-07 10:20:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 19 minutes 37 seconds
Variants: generated 200, build-succeeded 108, build-failed 65, syntax-invalid 17, redundant 10
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6769 ms, max 206 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 10:20:55 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-07 10:21:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 20 minutes 20 seconds
Variants: generated 200, build-succeeded 103, build-failed 59, syntax-invalid 25, redundant 13
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 6102 ms, max 80 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:21:39 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-07 10:22:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 21 minutes 5 seconds
Variants: generated 200, build-succeeded 99, build-failed 69, syntax-invalid 19, redundant 13
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 5926 ms, max 104 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:22:24 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-07 10:23:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 21 minutes 51 seconds
Variants: generated 200, build-succeeded 108, build-failed 65, syntax-invalid 18, redundant 9
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6690 ms, max 131 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:23:10 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-07 10:23:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 22 minutes 34 seconds
Variants: generated 200, build-succeeded 90, build-failed 68, syntax-invalid 31, redundant 11
Fitness: max 0(90), min 0(90), ave 0
Test execution time: sum 5496 ms, max 88 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:23:53 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-07 10:24:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 23 minutes 20 seconds
Variants: generated 200, build-succeeded 104, build-failed 61, syntax-invalid 22, redundant 13
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 6363 ms, max 183 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:24:39 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-07 10:25:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 24 minutes 7 seconds
Variants: generated 200, build-succeeded 102, build-failed 75, syntax-invalid 18, redundant 5
Fitness: max 0(102), min 0(102), ave 0
Test execution time: sum 6418 ms, max 123 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:25:25 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-07 10:26:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 24 minutes 52 seconds
Variants: generated 200, build-succeeded 107, build-failed 66, syntax-invalid 16, redundant 11
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6551 ms, max 80 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:26:10 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-07 10:26:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 38 seconds
Variants: generated 200, build-succeeded 100, build-failed 71, syntax-invalid 11, redundant 18
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5970 ms, max 128 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:26:57 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-07 10:27:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 minutes 25 seconds
Variants: generated 200, build-succeeded 106, build-failed 69, syntax-invalid 16, redundant 9
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6458 ms, max 107 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:27:43 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-07 10:28:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 9 seconds
Variants: generated 200, build-succeeded 99, build-failed 58, syntax-invalid 23, redundant 20
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 5808 ms, max 73 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:28:28 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-07 10:29:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 55 seconds
Variants: generated 200, build-succeeded 100, build-failed 65, syntax-invalid 27, redundant 8
Fitness: max 0(100), min 0(100), ave 0
Test execution time: sum 5998 ms, max 112 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:29:13 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-07 10:29:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 28 minutes 40 seconds
Variants: generated 200, build-succeeded 91, build-failed 64, syntax-invalid 28, redundant 17
Fitness: max 0(91), min 0(91), ave 0
Test execution time: sum 5718 ms, max 121 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:29:59 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-07 10:30:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 29 minutes 22 seconds
Variants: generated 200, build-succeeded 89, build-failed 62, syntax-invalid 38, redundant 11
Fitness: max 0(89), min 0(89), ave 0
Test execution time: sum 5231 ms, max 73 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:30:41 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-07 10:31:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 30 minutes 8 seconds
Variants: generated 200, build-succeeded 97, build-failed 66, syntax-invalid 28, redundant 9
Fitness: max 0(97), min 0(97), ave 0
Test execution time: sum 5724 ms, max 106 ms, min 53 ms
----------------------------------------------------------------

2023-08-07 10:31:26 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-07 10:32:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 30 minutes 54 seconds
Variants: generated 200, build-succeeded 99, build-failed 69, syntax-invalid 22, redundant 10
Fitness: max 0(99), min 0(99), ave 0
Test execution time: sum 6130 ms, max 116 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:32:13 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-07 10:32:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 31 minutes 40 seconds
Variants: generated 200, build-succeeded 111, build-failed 61, syntax-invalid 17, redundant 11
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6593 ms, max 102 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:32:59 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-07 10:33:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 32 minutes 27 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 20, redundant 15
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6410 ms, max 109 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:33:45 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-07 10:34:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 33 minutes 11 seconds
Variants: generated 200, build-succeeded 98, build-failed 56, syntax-invalid 38, redundant 8
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 6099 ms, max 134 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:34:30 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-07 10:35:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 33 minutes 57 seconds
Variants: generated 200, build-succeeded 103, build-failed 55, syntax-invalid 26, redundant 16
Fitness: max 0(103), min 0(103), ave 0
Test execution time: sum 6022 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:35:15 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-07 10:36:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 34 minutes 44 seconds
Variants: generated 200, build-succeeded 113, build-failed 50, syntax-invalid 17, redundant 20
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6848 ms, max 119 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:36:03 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-07 10:36:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 35 minutes 30 seconds
Variants: generated 200, build-succeeded 96, build-failed 64, syntax-invalid 26, redundant 14
Fitness: max 0(96), min 0(96), ave 0
Test execution time: sum 5744 ms, max 74 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:36:49 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-07 10:37:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 36 minutes 18 seconds
Variants: generated 200, build-succeeded 104, build-failed 55, syntax-invalid 22, redundant 19
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 6133 ms, max 110 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:37:36 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-07 10:38:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 37 minutes 5 seconds
Variants: generated 200, build-succeeded 113, build-failed 53, syntax-invalid 17, redundant 17
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6636 ms, max 111 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:38:24 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-07 10:39:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 37 minutes 52 seconds
Variants: generated 200, build-succeeded 104, build-failed 56, syntax-invalid 19, redundant 21
Fitness: max 0(104), min 0(104), ave 0
Test execution time: sum 6448 ms, max 200 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:39:11 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-07 10:39:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 38 minutes 40 seconds
Variants: generated 200, build-succeeded 113, build-failed 51, syntax-invalid 18, redundant 18
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6607 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:39:59 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-07 10:40:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 39 minutes 29 seconds
Variants: generated 200, build-succeeded 122, build-failed 52, syntax-invalid 13, redundant 13
Fitness: max 0(122), min 0(122), ave 0
Test execution time: sum 7225 ms, max 204 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:40:48 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-07 10:41:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 40 minutes 18 seconds
Variants: generated 200, build-succeeded 113, build-failed 61, syntax-invalid 15, redundant 11
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6847 ms, max 104 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:41:36 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-07 10:42:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 41 minutes 5 seconds
Variants: generated 200, build-succeeded 114, build-failed 51, syntax-invalid 15, redundant 20
Fitness: max 0(114), min 0(114), ave 0
Test execution time: sum 6714 ms, max 77 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:42:24 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-07 10:43:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 41 minutes 54 seconds
Variants: generated 200, build-succeeded 115, build-failed 58, syntax-invalid 9, redundant 18
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6698 ms, max 131 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:43:13 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-07 10:44:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 42 minutes 44 seconds
Variants: generated 200, build-succeeded 115, build-failed 58, syntax-invalid 15, redundant 12
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6874 ms, max 119 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:44:02 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-07 10:44:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 43 minutes 31 seconds
Variants: generated 200, build-succeeded 110, build-failed 52, syntax-invalid 21, redundant 17
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6505 ms, max 76 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:44:50 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-07 10:45:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 44 minutes 21 seconds
Variants: generated 200, build-succeeded 110, build-failed 65, syntax-invalid 12, redundant 13
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6457 ms, max 108 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:45:39 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-07 10:46:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 45 minutes 11 seconds
Variants: generated 200, build-succeeded 115, build-failed 57, syntax-invalid 13, redundant 15
Fitness: max 0(115), min 0(115), ave 0
Test execution time: sum 6980 ms, max 124 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:46:29 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-07 10:47:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 45 minutes 59 seconds
Variants: generated 200, build-succeeded 112, build-failed 58, syntax-invalid 16, redundant 14
Fitness: max 0(112), min 0(112), ave 0
Test execution time: sum 6664 ms, max 75 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:47:17 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-07 10:48:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 46 minutes 47 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 18, redundant 17
Fitness: max 0(107), min 0(107), ave 0
Test execution time: sum 6260 ms, max 122 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:48:06 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-07 10:48:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 47 minutes 36 seconds
Variants: generated 200, build-succeeded 113, build-failed 48, syntax-invalid 17, redundant 22
Fitness: max 0(113), min 0(113), ave 0
Test execution time: sum 6908 ms, max 104 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:48:55 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-07 10:49:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 24 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 20, redundant 13
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6502 ms, max 79 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:49:43 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-07 10:50:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 49 minutes 15 seconds
Variants: generated 200, build-succeeded 110, build-failed 68, syntax-invalid 14, redundant 8
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6511 ms, max 111 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:50:34 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-07 10:51:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 50 minutes 5 seconds
Variants: generated 200, build-succeeded 111, build-failed 63, syntax-invalid 14, redundant 12
Fitness: max 0(111), min 0(111), ave 0
Test execution time: sum 6862 ms, max 156 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:51:24 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-07 10:52:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 50 minutes 54 seconds
Variants: generated 200, build-succeeded 105, build-failed 63, syntax-invalid 22, redundant 10
Fitness: max 0(105), min 0(105), ave 0
Test execution time: sum 6164 ms, max 77 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 10:52:12 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-07 10:53:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 51 minutes 43 seconds
Variants: generated 200, build-succeeded 110, build-failed 62, syntax-invalid 20, redundant 8
Fitness: max 0(110), min 0(110), ave 0
Test execution time: sum 6535 ms, max 139 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:53:02 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-07 10:53:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 52 minutes 33 seconds
Variants: generated 200, build-succeeded 108, build-failed 51, syntax-invalid 30, redundant 11
Fitness: max 0(108), min 0(108), ave 0
Test execution time: sum 6796 ms, max 113 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 10:53:51 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-07 10:54:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 20 seconds
Variants: generated 200, build-succeeded 98, build-failed 59, syntax-invalid 30, redundant 13
Fitness: max 0(98), min 0(98), ave 0
Test execution time: sum 5799 ms, max 76 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:54:38 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-07 10:55:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 54 minutes 8 seconds
Variants: generated 200, build-succeeded 106, build-failed 57, syntax-invalid 21, redundant 16
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6373 ms, max 117 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:55:27 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-07 10:56:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 54 minutes 58 seconds
Variants: generated 200, build-succeeded 106, build-failed 52, syntax-invalid 22, redundant 20
Fitness: max 0(106), min 0(106), ave 0
Test execution time: sum 6544 ms, max 110 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:56:16 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-07 10:56:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 55 minutes 9 seconds
Variants: generated 48, build-succeeded 18, build-failed 25, syntax-invalid 4, redundant 1
Fitness: max 1(1), min 0(17), ave 0.056
Test execution time: sum 1223 ms, max 86 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 10:56:28 [main] [INFO]  KGenProgMain - GA stopped
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v82)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v82)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v82)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v82)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (!resultComputed) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v353)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v353)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -203,7 +203,7 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
+                                double ga = g0;
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v353)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v353)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v353)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v377)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -270,11 +270,9 @@
 
       // lazy evaluation of the state
       if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+		doFinalize();
+		finalized = true;
+	}
 
       return interpolatedState;
 
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v377)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v377)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v377)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v377)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,8 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = Double.NaN;
+	previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v503)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v503)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v503)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v503)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v503)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v553)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v553)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v553)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -203,7 +203,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v553)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v553)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v553)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v739)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v739)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -237,10 +237,6 @@
                         return true;
                     }
 
-                } else {
-                    // no sign change: there is no event for now
-                    ta = tb;
-                    ga = gb;
                 }
 
             }
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v739)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v739)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v739)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -165,7 +165,7 @@
 
         // Verify bracketing
         double sign = yMin * yMax;
-        if (sign > 0) {
+        if (f == null) {
             // check if either value is close to a zero
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v784)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -242,7 +242,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v784)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v784)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v784)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v784)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
@@ -276,10 +280,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -267,7 +267,8 @@
                     double r1 = y0 / y2;
                     double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
-                    p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
+                    ++i;
+					p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
                     p1 = -p1;
@@ -276,10 +277,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v920)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,8 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    h = -h;
+	currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v920)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v920)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v920)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v920)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v920)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v957)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v957)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v957)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v957)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
@@ -250,7 +254,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v963)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v963)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v963)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v963)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v963)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v976)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v976)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v976)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v976)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v976)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,13 +282,12 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y0 = y1;
                     delta = p / p1;
                 }
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v1128)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v1128)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v1128)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v1128)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:31 [main] [INFO]  PatchLogExporter - patch (v1128)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1161)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -116,7 +116,6 @@
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
-    this.forward      = forward;
     this.dirtyState   = true;
 
   }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1161)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1161)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,7 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
+        g0 = Double.NaN;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1161)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1161)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1161)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1171)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1171)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1171)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1171)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1171)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
@@ -282,7 +286,7 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y0 = y1;
                     delta = p / p1;
                 }
             }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,7 +89,6 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1464)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1464)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -149,7 +148,6 @@
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
         t0 = tStart;
-        g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
 
@@ -285,12 +283,9 @@
         t0 = t;
         g0 = handler.g(t, y);
 
-        if (pendingEvent) {
-            // force the sign to its value "just after the event"
-            previousEventTime = t;
-            g0Positive        = increasing;
-            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
-        } else {
+        if (pendingEvent)
+			g0Positive = true;
+		else {
             g0Positive = g0 >= 0;
             nextAction = EventHandler.CONTINUE;
         }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1464)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1464)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1464)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
@@ -242,6 +240,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1525)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,8 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = Double.NaN;
+	previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1525)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1525)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1525)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1525)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1525)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1545)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1545)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1545)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1545)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -227,7 +227,8 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
-                x2 = x0;
+                x1 = x2;
+				x2 = x0;
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
@@ -242,6 +243,14 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1588)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,6 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1588)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1588)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1588)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1588)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1588)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -228,6 +228,7 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
+				y2 = y0;
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
@@ -242,6 +243,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1600)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1600)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1600)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1600)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1600)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -227,7 +227,8 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
-                x2 = x0;
+                x1 = x2;
+				x2 = x0;
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
@@ -242,6 +243,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1701)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1701)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1701)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1701)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1701)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -237,11 +237,15 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                y0 = y1;
             }
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1763)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -113,7 +112,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    currentTime = Double.NaN;
 
     finalized         = false;
     this.forward      = forward;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1763)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1763)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1763)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1763)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1763)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
@@ -242,6 +240,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1764)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1764)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1764)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1764)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1764)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1764)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1770)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1770)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1770)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -323,7 +322,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1770)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1770)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1770)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1781)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1781)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1781)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1781)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1781)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1790)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1790)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -323,7 +322,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1790)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1790)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1790)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
@@ -242,6 +240,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1799)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -273,7 +273,6 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1799)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1799)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1799)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1799)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1799)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -227,7 +227,8 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
-                x2 = x0;
+                x1 = x2;
+				x2 = x0;
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
@@ -242,6 +243,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1804)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +112,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1804)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1804)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -282,7 +279,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1804)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1804)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1882)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +112,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1882)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1882)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1882)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1882)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1882)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1900)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +112,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1900)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1900)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -171,7 +171,8 @@
 
             forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
-            final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
+            final double t0 = interpolator.getPreviousTime();
+			final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
@@ -197,9 +198,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1900)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1900)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1936)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1936)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1936)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1936)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1936)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1936)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1936)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v1961)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -228,6 +228,7 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
+				y2 = y0;
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
@@ -242,6 +243,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2140)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2140)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2140)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2140)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2140)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2140)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2149)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2149)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -149,7 +149,6 @@
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
         t0 = tStart;
-        g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
 
@@ -197,9 +196,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2149)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2149)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2149)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2149)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2165)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2165)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2165)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2165)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2165)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2165)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -118,6 +118,7 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		this.iterationCount = iterationCount;
         if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);
             return result;
@@ -237,11 +238,15 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                y0 = y1;
             }
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2194)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2194)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2194)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -197,9 +196,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2194)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2194)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2194)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2323)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +112,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2323)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2323)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2323)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2323)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2323)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2394)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -273,7 +273,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          finalized = false;
       }
 
       return interpolatedState;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2394)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2394)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2394)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2394)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -242,6 +241,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2400)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2400)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2400)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2400)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2400)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2400)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -242,6 +242,10 @@
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
+			{
+				delta = 0.5 * dx;
+				oldDelta = delta;
+			}
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
                 return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2535)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2535)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2535)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2535)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2535)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2535)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,8 +162,7 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
-        this.resultComputed = false;
+        this.resultComputed = true;
     }
 
     /**
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2769)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2769)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2769)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -213,7 +210,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2769)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2769)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2769)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2915)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2915)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2915)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -98,11 +98,8 @@
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -213,7 +210,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2915)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v2915)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3140)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -272,8 +271,7 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          finalized = false;
       }
 
       return interpolatedState;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3140)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3140)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3140)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3140)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -273,7 +273,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          finalized = false;
       }
 
       return interpolatedState;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -149,7 +149,6 @@
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
         t0 = tStart;
-        g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
 
@@ -197,9 +196,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -213,7 +209,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3381)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3381)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -213,7 +210,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3381)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3381)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3381)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3381)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -118,6 +118,7 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		this.iterationCount = iterationCount;
         if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);
             return result;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3719)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -273,7 +272,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          finalized = false;
       }
 
       return interpolatedState;
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3719)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3719)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -171,7 +171,8 @@
 
             forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
-            final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
+            final double t0 = interpolator.getPreviousTime();
+			final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
@@ -197,9 +198,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -213,7 +211,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3719)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3719)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3733)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3733)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -171,7 +170,8 @@
 
             forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
-            final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
+            final double t0 = interpolator.getPreviousTime();
+			final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3733)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3733)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3733)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v3733)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -118,6 +118,7 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		this.iterationCount = iterationCount;
         if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);
             return result;
@@ -156,8 +157,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v4558)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v4558)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v4558)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -213,7 +210,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v4558)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v4558)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:32 [main] [INFO]  PatchLogExporter - patch (v4558)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16126)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,8 +88,8 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -217,7 +215,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16126)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16126)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,7 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        relativeAccuracy = defaultRelativeAccuracy;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16126)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -169,12 +168,13 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
+			pendingEvent = false;
+			pendingEvent = false;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
@@ -324,8 +324,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16126)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16126)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16181)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,12 +89,14 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16181)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16181)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16181)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -169,15 +168,15 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
+			pendingEvent = false;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
-            for (int i = 0; i < n; ++i) {
+            for (int i = 0; interpolator.isForward(); ++i) {
 
                 // evaluate handler value at the end of the substep
                 tb += h;
@@ -197,9 +196,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16181)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16181)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16182)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,12 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    currentState = null;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -107,7 +106,7 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
+    currentState = null;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16182)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16182)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -175,9 +174,12 @@
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
+			pendingEvent = false;
+			pendingEvent = false;
+			pendingEvent = false;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
-            for (int i = 0; i < n; ++i) {
+            for (int i = 0; interpolator.isForward(); ++i) {
 
                 // evaluate handler value at the end of the substep
                 tb += h;
@@ -213,7 +215,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -324,8 +325,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16182)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16182)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16313)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,8 +88,11 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    currentState = null;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -107,14 +110,12 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
+    currentState = null;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -175,8 +176,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16313)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16313)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -175,9 +174,10 @@
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
+			pendingEvent = false;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
-            for (int i = 0; i < n; ++i) {
+            for (int i = 0; interpolator.isForward(); ++i) {
 
                 // evaluate handler value at the end of the substep
                 tb += h;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16313)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16313)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16313)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16369)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,7 +89,10 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -113,8 +116,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
+	currentTime = Double.NaN;
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -175,8 +177,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16369)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16369)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16369)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -175,9 +174,10 @@
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
+			pendingEvent = false;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
-            for (int i = 0; i < n; ++i) {
+            for (int i = 0; interpolator.isForward(); ++i) {
 
                 // evaluate handler value at the end of the substep
                 tb += h;
@@ -240,7 +240,10 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
-                    ga = gb;
+                    {
+						ta = tb;
+						ga = gb;
+					}
                 }
 
             }
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16369)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16369)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16568)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,7 +89,8 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -242,7 +243,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
@@ -272,7 +272,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16568)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16568)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16568)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -177,7 +176,7 @@
             double ta = t0;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
-            for (int i = 0; i < n; ++i) {
+            for (int i = 0; interpolator.isForward(); ++i) {
 
                 // evaluate handler value at the end of the substep
                 tb += h;
@@ -240,6 +239,9 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -324,8 +326,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16568)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16568)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,8 +88,10 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    currentState = null;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -113,8 +115,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -175,8 +175,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
@@ -217,7 +215,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -272,7 +269,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,7 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        relativeAccuracy = defaultRelativeAccuracy;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -240,6 +239,7 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,6 +77,7 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
+		double fa;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16912)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,7 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+    currentState = null;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -242,7 +240,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16912)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16912)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16912)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -169,7 +168,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
@@ -240,6 +238,9 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -324,8 +325,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16912)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16912)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16912)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16918)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,7 +89,10 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -113,8 +116,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
+	currentTime = Double.NaN;
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16918)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16918)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16918)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,10 +100,8 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -177,7 +175,7 @@
             double ta = t0;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
-            for (int i = 0; i < n; ++i) {
+            for (int i = 0; interpolator.isForward(); ++i) {
 
                 // evaluate handler value at the end of the substep
                 tb += h;
@@ -197,9 +195,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -240,6 +235,7 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16918)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v16918)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17105)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,8 +88,8 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -175,8 +173,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
@@ -242,7 +238,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17105)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17105)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,9 +101,7 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -175,6 +173,7 @@
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
+			pendingEvent = false;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
@@ -240,6 +239,8 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17105)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17105)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17105)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17403)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,11 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    interpolatedDerivatives = null;
+	h                       = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,6 +111,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
@@ -242,7 +241,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17403)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17403)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -197,9 +196,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -240,6 +236,11 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17403)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17403)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17403)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i < maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17916)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,12 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +112,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
+	currentTime = Double.NaN;
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -248,7 +246,8 @@
 
   /** {@inheritDoc} */
   public boolean isForward() {
-    return forward;
+    previousTime = Double.NaN;
+	return forward;
   }
 
   /** Compute the state and derivatives at the interpolated time.
@@ -272,7 +271,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
@@ -287,7 +285,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17916)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17916)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17916)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17916)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v17916)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19119)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,12 +89,14 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +115,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -175,8 +175,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19119)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19119)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19119)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,14 +96,14 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        pendingEventTime = Double.NaN;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -240,6 +237,8 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19119)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19119)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19119)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19320)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +115,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +176,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
 
@@ -220,9 +218,6 @@
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
-    // the step is not finalized anymore
-    finalized  = false;
-
   }
 
   /** {@inheritDoc} */
@@ -242,7 +237,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19320)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19320)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -240,6 +239,7 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -324,8 +324,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19320)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19320)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19320)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19334)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,14 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -107,7 +108,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
@@ -115,7 +115,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -208,7 +207,7 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    h = -h;
   }
 
   /** Store the current step time.
@@ -272,7 +271,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
@@ -287,7 +285,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19334)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19334)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -173,6 +173,7 @@
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
+			interpolator.setInterpolatedTime(t0);
 
             double ta = t0;
             double ga = g0;
@@ -240,6 +241,8 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19334)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19334)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19334)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19350)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,12 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,9 +112,10 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +177,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
 
@@ -272,7 +271,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19350)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19350)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -240,6 +239,8 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -324,8 +325,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19350)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19350)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19350)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19359)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,11 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +113,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -242,7 +239,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
@@ -272,7 +268,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
@@ -287,7 +282,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19359)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19359)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -175,6 +174,7 @@
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
+			pendingEvent = false;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
@@ -240,6 +240,10 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19359)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19359)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19359)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19377)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,12 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -242,13 +241,13 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
   /** {@inheritDoc} */
   public boolean isForward() {
-    return forward;
+    previousTime = Double.NaN;
+	return forward;
   }
 
   /** Compute the state and derivatives at the interpolated time.
@@ -272,7 +271,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19377)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19377)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19377)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -181,7 +181,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -197,9 +196,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -240,6 +236,10 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19377)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19377)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19377)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19529)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,14 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -107,12 +108,13 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
@@ -248,7 +250,8 @@
 
   /** {@inheritDoc} */
   public boolean isForward() {
-    return forward;
+    previousTime = Double.NaN;
+	return forward;
   }
 
   /** Compute the state and derivatives at the interpolated time.
@@ -272,7 +275,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19529)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19529)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -181,7 +181,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -240,6 +239,7 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19529)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19529)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19529)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19584)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,12 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,9 +112,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
-    finalized         = false;
+	currentTime = Double.NaN;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +174,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
 
@@ -208,7 +204,7 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
+    h = -h;
   }
 
   /** Store the current step time.
@@ -272,7 +268,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19584)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19584)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -175,6 +175,7 @@
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
+			pendingEvent = false;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
@@ -240,6 +241,8 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19584)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19584)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19584)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19712)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,9 +113,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -242,7 +242,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19712)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19712)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,9 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
+		g0Positive = g0 >= 0;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -175,13 +175,14 @@
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
+			pendingEvent = false;
+			pendingEvent = false;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -240,6 +241,7 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19712)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19712)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19712)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19970)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -107,15 +107,15 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    interpolatedTime = Double.NaN;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19970)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19970)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -197,9 +196,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -240,6 +236,7 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19970)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19970)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v19970)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20053)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,11 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    interpolatedDerivatives = null;
+	h                       = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,6 +111,8 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -243,7 +241,7 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
+      interpolatedState = null;
   }
 
   /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20053)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20053)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -179,7 +178,8 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                final double[] y = interpolator.getInterpolatedState();
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -197,9 +197,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
@@ -240,6 +237,8 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20053)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20053)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20053)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20529)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,13 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,9 +113,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20529)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20529)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,9 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+		g0Positive = g0 >= 0;
 
     }
 
@@ -175,11 +174,13 @@
             final double h  = (t1 - t0) / n;
 
             double ta = t0;
+			pendingEvent = false;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                final double[] y = interpolator.getInterpolatedState();
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -197,9 +198,6 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20529)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20529)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20529)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20545)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,12 +89,16 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,6 +117,8 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20545)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20545)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -179,7 +179,8 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                final double[] y = interpolator.getInterpolatedState();
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -240,6 +241,9 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20545)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20545)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20545)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20949)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,15 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -107,15 +109,14 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20949)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20949)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,7 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
+        double ga = g0;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -240,6 +240,8 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20949)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20949)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v20949)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21552)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,12 +89,14 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,6 +115,9 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21552)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21552)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -173,13 +172,15 @@
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
+			interpolator.setInterpolatedTime(t0);
 
             double ta = t0;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                nextAction = EventHandler.CONTINUE;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -240,6 +241,9 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21552)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21552)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21552)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
@@ -290,7 +288,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21755)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,15 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,6 +115,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21755)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21755)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,10 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -179,7 +176,10 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -240,6 +240,8 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21755)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21755)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21755)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21906)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,8 +88,9 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -107,12 +108,12 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21906)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21906)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,6 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -173,13 +172,18 @@
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
+			interpolator.setInterpolatedTime(t0);
+			interpolator.setInterpolatedTime(t0);
 
             double ta = t0;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -240,6 +244,9 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21906)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21906)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v21906)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22374)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,12 +89,19 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +122,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +183,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22374)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22374)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -240,6 +239,8 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22374)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22374)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22374)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22524)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,12 +89,12 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,9 +113,10 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	currentTime = Double.NaN;
+	currentTime = Double.NaN;
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +178,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
 
@@ -220,8 +220,7 @@
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
-    // the step is not finalized anymore
-    finalized  = false;
+    finalized = true;
 
   }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22524)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22524)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -173,6 +172,7 @@
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
+			interpolator.setInterpolatedTime(t0);
 
             double ta = t0;
             double ga = g0;
@@ -181,7 +181,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -240,6 +239,9 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22524)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22524)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v22524)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32402)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,17 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -106,7 +109,6 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
@@ -115,7 +117,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -243,7 +244,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32402)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32402)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,7 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
+        g0Positive = increasing;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -179,7 +179,11 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -240,6 +244,12 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32402)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32402)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32402)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32410)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,17 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -106,7 +109,6 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
@@ -115,7 +117,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -243,7 +244,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32410)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32410)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,7 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
+        g0Positive = increasing;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -179,7 +179,11 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -240,6 +244,12 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32410)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32410)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,7 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                    double fa;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32456)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,17 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -106,7 +109,6 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
@@ -115,7 +117,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -243,7 +244,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32456)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32456)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,7 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
+        g0Positive = increasing;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -179,7 +179,11 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -240,6 +244,12 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -282,7 +292,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32456)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32456)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32473)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,17 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -106,7 +109,6 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
@@ -115,7 +117,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -243,7 +244,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32473)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32473)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,7 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
+        g0Positive = increasing;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -179,7 +179,11 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -240,6 +244,12 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32473)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32473)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32473)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -258,7 +258,7 @@
                 // the equality test (x0 == x2) is intentional,
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
-                if (x0 == x2) {
+                if (i <= maximalIterationCount) {
                     // Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32500)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,17 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -106,7 +109,6 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
@@ -115,7 +117,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -243,7 +244,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32500)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32500)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32500)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,7 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
+        g0Positive = increasing;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -179,7 +179,11 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				g0Positive = increasing;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -240,6 +244,12 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32500)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v32500)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40661)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,21 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +118,11 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    currentTime = Double.NaN;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +184,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -271,6 +275,7 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		previousTime = currentTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40661)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40661)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,8 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -181,7 +179,7 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
+                pendingEventTime = Double.NaN;
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -240,6 +238,14 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -323,7 +329,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40661)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40661)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40661)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40669)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,21 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +118,11 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    currentTime = Double.NaN;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +184,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -271,6 +275,7 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		previousTime = currentTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40669)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40669)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,8 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -181,7 +179,7 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
+                pendingEventTime = Double.NaN;
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -213,7 +211,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    t0 = Double.NaN;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -240,6 +238,14 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -323,7 +329,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40669)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40669)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40673)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,21 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +118,11 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    currentTime = Double.NaN;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +184,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -271,6 +275,7 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		previousTime = currentTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40673)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40673)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,8 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -181,7 +179,7 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
+                pendingEventTime = Double.NaN;
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -240,6 +238,14 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -323,7 +329,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40673)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40673)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40673)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,7 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                    x2 = x0;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40681)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,21 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +118,11 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    currentTime = Double.NaN;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +184,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -271,6 +275,7 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		previousTime = currentTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40681)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40681)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,8 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -181,7 +179,7 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
+                pendingEventTime = Double.NaN;
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -213,7 +211,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -240,6 +237,14 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -323,7 +328,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40681)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40681)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40682)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,21 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +118,11 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    currentTime = Double.NaN;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +184,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -271,6 +275,7 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		previousTime = currentTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40682)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40682)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,8 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -181,7 +179,7 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
+                pendingEventTime = Double.NaN;
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -240,6 +238,14 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -323,7 +329,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40682)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40682)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:33 [main] [INFO]  PatchLogExporter - patch (v40682)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40825)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,21 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +118,11 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    currentTime = Double.NaN;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +184,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -271,6 +275,7 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		previousTime = currentTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40825)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40825)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,8 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -181,7 +179,7 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
+                pendingEventTime = Double.NaN;
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -240,6 +238,14 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -323,7 +329,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40825)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40825)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40825)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -227,7 +227,8 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
-                x2 = x0;
+                final double q = (x2 - x1) / (x1 - x0);
+				x2 = x0;
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
@@ -276,10 +277,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40859)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,21 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +118,11 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    currentTime = Double.NaN;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +184,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -271,6 +275,7 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		previousTime = currentTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40859)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40859)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,8 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -181,7 +179,7 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
+                pendingEventTime = Double.NaN;
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -213,7 +211,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -240,6 +237,14 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -323,7 +328,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40859)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40859)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40859)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -227,7 +227,8 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
-                x2 = x0;
+                final double q = (x2 - x1) / (x1 - x0);
+				x2 = x0;
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40900)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,21 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +118,11 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    currentTime = Double.NaN;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -179,7 +184,6 @@
 
     finalized         = false;
     this.forward      = isForward;
-    this.dirtyState   = true;
 
   }
 
@@ -271,6 +275,7 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
+		previousTime = currentTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40900)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40900)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,8 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -181,7 +179,7 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
+                pendingEventTime = Double.NaN;
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -240,6 +238,14 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -323,7 +329,6 @@
         if (nextAction == EventHandler.RESET_STATE) {
             handler.resetState(t, y);
         }
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40900)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40900)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v40900)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -227,7 +227,8 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
-                x2 = x0;
+                final double q = (x2 - x1) / (x1 - x0);
+				x2 = x0;
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
@@ -275,14 +276,10 @@
                     p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                        p >= Math.abs(0.5 * oldDelta * p1))
+					clearResult();
+				else {
                     oldDelta = delta;
-                } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v62848)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,19 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    currentTime = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
+    interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	interpolatedDerivatives = null;
+	h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -113,11 +116,11 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
+    currentTime = Double.NaN;
+	interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -242,8 +245,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
@@ -418,8 +419,6 @@
     currentTime   = in.readDouble();
     h             = in.readDouble();
     forward       = in.readBoolean();
-    dirtyState    = true;
-
     if (dimension < 0) {
         currentState = null;
     } else {
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v62848)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v62848)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,7 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
+        previousEventTime = Double.NaN;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -179,7 +179,8 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                g0Positive = increasing;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -240,6 +241,37 @@
                 } else {
                     // no sign change: there is no event for now
                     ta = tb;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
+					g0Positive = g0 >= 0;
                     ga = gb;
                 }
 
@@ -282,7 +314,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v62848)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 10:56:34 [main] [INFO]  PatchLogExporter - patch (v62848)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 10:56:34 [main] [INFO]  KGenProgMain - Summary
Reached generation = 316
Generated variants = 62848
Syntax valid variants = 56381
Build succeeded variants = 33462
Time elapsed = 11 hours 55 minutes 15 seconds
Exit status = SUCCESS
