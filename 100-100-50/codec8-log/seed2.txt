2023-11-05 05:52:13 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-11-05 05:52:13 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-11-05 05:52:13 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-11-05 05:52:13 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 2 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-11-05 05:52:16 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-11-05 05:52:16 [main] [INFO]  KGenProgMain - GA started
2023-11-05 05:52:16 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-11-05 06:07:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 3 seconds
Variants: generated 100, build-succeeded 14, build-failed 52, syntax-invalid 8, redundant 26
Fitness: max 0.917(5), min 0.583(1), ave 0.81
Test execution time: sum 901011 ms, max 900031 ms, min 31 ms
----------------------------------------------------------------

2023-11-05 06:07:19 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-11-05 06:22:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 6 seconds
Variants: generated 100, build-succeeded 21, build-failed 45, syntax-invalid 11, redundant 23
Fitness: max 0.917(7), min 0.583(1), ave 0.798
Test execution time: sum 900964 ms, max 900029 ms, min 25 ms
----------------------------------------------------------------

2023-11-05 06:22:22 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-11-05 07:55:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 12 seconds
Variants: generated 200, build-succeeded 62, build-failed 48, syntax-invalid 24, redundant 66
Fitness: max 0.917(6), min 0.333(2), ave 0.747
Test execution time: sum 5583114 ms, max 1440029 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 07:55:29 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-11-05 08:10:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 19 seconds
Variants: generated 200, build-succeeded 56, build-failed 55, syntax-invalid 26, redundant 63
Fitness: max 1(1), min 0.583(1), ave 0.778
Test execution time: sum 903000 ms, max 900024 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 08:10:35 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-11-05 08:10:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 25 seconds
Variants: generated 200, build-succeeded 64, build-failed 62, syntax-invalid 24, redundant 50
Fitness: max 1(1), min 0.5(2), ave 0.797
Test execution time: sum 2977 ms, max 377 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 08:10:42 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-11-05 08:28:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 31 seconds
Variants: generated 200, build-succeeded 53, build-failed 59, syntax-invalid 31, redundant 57
Fitness: max 1(1), min 0.333(1), ave 0.838
Test execution time: sum 1082977 ms, max 1080021 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 08:28:48 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-11-05 09:19:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 37 seconds
Variants: generated 200, build-succeeded 38, build-failed 61, syntax-invalid 40, redundant 61
Fitness: max 0.917(27), min 0.333(1), ave 0.838
Test execution time: sum 3062602 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 09:19:53 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-11-05 09:28:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 41 seconds
Variants: generated 200, build-succeeded 46, build-failed 53, syntax-invalid 30, redundant 71
Fitness: max 1(1), min 0.583(1), ave 0.893
Test execution time: sum 540622 ms, max 537122 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 09:28:57 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-11-05 09:46:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 39 seconds
Variants: generated 200, build-succeeded 43, build-failed 65, syntax-invalid 42, redundant 50
Fitness: max 1(1), min 0.583(2), ave 0.874
Test execution time: sum 1074646 ms, max 540022 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 09:46:55 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-11-05 09:56:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 3 minutes 44 seconds
Variants: generated 200, build-succeeded 55, build-failed 57, syntax-invalid 37, redundant 51
Fitness: max 1(1), min 0.5(1), ave 0.876
Test execution time: sum 541333 ms, max 537325 ms, min 20 ms
----------------------------------------------------------------

2023-11-05 09:56:00 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-11-05 10:38:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 53 seconds
Variants: generated 200, build-succeeded 68, build-failed 63, syntax-invalid 39, redundant 30
Fitness: max 0.917(57), min 0.333(4), ave 0.853
Test execution time: sum 2525079 ms, max 720023 ms, min 20 ms
----------------------------------------------------------------

2023-11-05 10:38:10 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-11-05 10:50:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 1 seconds
Variants: generated 200, build-succeeded 52, build-failed 66, syntax-invalid 51, redundant 31
Fitness: max 0.917(44), min 0(1), ave 0.865
Test execution time: sum 723978 ms, max 720022 ms, min 20 ms
----------------------------------------------------------------

2023-11-05 10:50:18 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-11-05 11:32:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 40 minutes 8 seconds
Variants: generated 200, build-succeeded 57, build-failed 65, syntax-invalid 45, redundant 33
Fitness: max 1(1), min 0.333(5), ave 0.8
Test execution time: sum 2523398 ms, max 720022 ms, min 20 ms
----------------------------------------------------------------

2023-11-05 11:32:25 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-11-05 11:56:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 4 minutes 17 seconds
Variants: generated 200, build-succeeded 62, build-failed 61, syntax-invalid 47, redundant 30
Fitness: max 0.917(51), min 0.333(2), ave 0.863
Test execution time: sum 1444456 ms, max 720023 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 11:56:34 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-11-05 12:23:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 26 seconds
Variants: generated 200, build-succeeded 60, build-failed 67, syntax-invalid 48, redundant 25
Fitness: max 1(1), min 0.333(1), ave 0.868
Test execution time: sum 1624250 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 12:23:42 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-11-05 12:23:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 36 seconds
Variants: generated 200, build-succeeded 74, build-failed 62, syntax-invalid 32, redundant 32
Fitness: max 1(1), min 0.5(2), ave 0.895
Test execution time: sum 5631 ms, max 108 ms, min 20 ms
----------------------------------------------------------------

2023-11-05 12:23:53 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-11-05 12:36:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 46 seconds
Variants: generated 200, build-succeeded 66, build-failed 67, syntax-invalid 46, redundant 21
Fitness: max 0.917(56), min 0.333(1), ave 0.874
Test execution time: sum 724934 ms, max 720022 ms, min 20 ms
----------------------------------------------------------------

2023-11-05 12:36:02 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-11-05 13:00:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 7 minutes 55 seconds
Variants: generated 200, build-succeeded 64, build-failed 62, syntax-invalid 53, redundant 21
Fitness: max 0.917(53), min 0.333(2), ave 0.866
Test execution time: sum 1444500 ms, max 720022 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 13:00:11 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-11-05 13:33:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 41 minutes 9 seconds
Variants: generated 200, build-succeeded 65, build-failed 73, syntax-invalid 42, redundant 20
Fitness: max 0.917(54), min 0.333(4), ave 0.856
Test execution time: sum 1989313 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 13:33:25 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-11-05 13:39:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 47 minutes 18 seconds
Variants: generated 200, build-succeeded 60, build-failed 68, syntax-invalid 45, redundant 27
Fitness: max 0.917(53), min 0.333(1), ave 0.885
Test execution time: sum 364670 ms, max 360022 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 13:39:35 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-11-05 13:53:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 1 minutes 9 seconds
Variants: generated 200, build-succeeded 69, build-failed 74, syntax-invalid 34, redundant 23
Fitness: max 0.917(56), min 0.333(1), ave 0.867
Test execution time: sum 825632 ms, max 720021 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 13:53:25 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-11-05 14:41:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 49 minutes 20 seconds
Variants: generated 200, build-succeeded 84, build-failed 64, syntax-invalid 31, redundant 21
Fitness: max 0.917(75), min 0.333(4), ave 0.876
Test execution time: sum 2886678 ms, max 720022 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 14:41:37 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-11-05 14:41:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 49 minutes 33 seconds
Variants: generated 200, build-succeeded 91, build-failed 57, syntax-invalid 31, redundant 21
Fitness: max 0.917(80), min 0.667(5), ave 0.894
Test execution time: sum 7252 ms, max 120 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 14:41:50 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-11-05 14:42:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 49 minutes 45 seconds
Variants: generated 200, build-succeeded 76, build-failed 62, syntax-invalid 37, redundant 25
Fitness: max 1(2), min 0.667(3), ave 0.902
Test execution time: sum 6164 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 14:42:01 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-11-05 15:06:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 58 seconds
Variants: generated 200, build-succeeded 93, build-failed 55, syntax-invalid 32, redundant 20
Fitness: max 0.917(82), min 0.333(2), ave 0.886
Test execution time: sum 1447513 ms, max 720022 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 15:06:15 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-11-05 15:42:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 50 minutes 10 seconds
Variants: generated 200, build-succeeded 82, build-failed 65, syntax-invalid 33, redundant 20
Fitness: max 0.917(71), min 0.333(2), ave 0.878
Test execution time: sum 2166514 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 15:42:27 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-11-05 16:06:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 14 minutes 24 seconds
Variants: generated 200, build-succeeded 96, build-failed 53, syntax-invalid 28, redundant 23
Fitness: max 1(1), min 0(1), ave 0.881
Test execution time: sum 1447688 ms, max 1440022 ms, min 20 ms
----------------------------------------------------------------

2023-11-05 16:06:41 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-11-05 16:06:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 14 minutes 37 seconds
Variants: generated 200, build-succeeded 87, build-failed 60, syntax-invalid 34, redundant 19
Fitness: max 0.917(79), min 0.5(1), ave 0.894
Test execution time: sum 7007 ms, max 128 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 16:06:54 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-11-05 16:22:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 29 minutes 52 seconds
Variants: generated 200, build-succeeded 106, build-failed 60, syntax-invalid 22, redundant 12
Fitness: max 1(1), min 0.5(5), ave 0.881
Test execution time: sum 908383 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 16:22:09 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-11-05 16:22:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 30 minutes 7 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 24, redundant 10
Fitness: max 0.917(91), min 0.5(8), ave 0.874
Test execution time: sum 8343 ms, max 138 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 16:22:24 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-11-05 16:22:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 30 minutes 21 seconds
Variants: generated 200, build-succeeded 95, build-failed 55, syntax-invalid 32, redundant 18
Fitness: max 1(1), min 0.5(4), ave 0.889
Test execution time: sum 7713 ms, max 141 ms, min 20 ms
----------------------------------------------------------------

2023-11-05 16:22:38 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-11-05 16:22:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 30 minutes 34 seconds
Variants: generated 200, build-succeeded 91, build-failed 55, syntax-invalid 41, redundant 13
Fitness: max 1(1), min 0.5(5), ave 0.875
Test execution time: sum 6963 ms, max 139 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 16:22:51 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-11-05 16:23:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 30 minutes 47 seconds
Variants: generated 200, build-succeeded 83, build-failed 62, syntax-invalid 40, redundant 15
Fitness: max 1(1), min 0.5(2), ave 0.883
Test execution time: sum 6567 ms, max 169 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 16:23:04 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-11-05 16:47:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 55 minutes 2 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 25, redundant 13
Fitness: max 0.917(92), min 0.333(1), ave 0.889
Test execution time: sum 1448191 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 16:47:19 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-11-05 16:47:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 55 minutes 18 seconds
Variants: generated 200, build-succeeded 109, build-failed 52, syntax-invalid 20, redundant 19
Fitness: max 1(1), min 0.667(4), ave 0.904
Test execution time: sum 8805 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 16:47:35 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-11-05 16:47:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 55 minutes 32 seconds
Variants: generated 200, build-succeeded 95, build-failed 60, syntax-invalid 32, redundant 13
Fitness: max 1(1), min 0.667(6), ave 0.902
Test execution time: sum 7704 ms, max 135 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 16:47:49 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-11-05 17:12:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 19 minutes 48 seconds
Variants: generated 200, build-succeeded 112, build-failed 58, syntax-invalid 20, redundant 10
Fitness: max 1(1), min 0.333(1), ave 0.891
Test execution time: sum 1448920 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 17:12:05 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-11-05 17:12:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 20 minutes 4 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 22, redundant 17
Fitness: max 0.917(96), min 0.5(2), ave 0.889
Test execution time: sum 8602 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 17:12:21 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-11-05 17:12:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 20 minutes 19 seconds
Variants: generated 200, build-succeeded 95, build-failed 65, syntax-invalid 23, redundant 17
Fitness: max 0.917(83), min 0.667(11), ave 0.886
Test execution time: sum 7686 ms, max 137 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 17:12:36 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-11-05 17:12:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 20 minutes 35 seconds
Variants: generated 200, build-succeeded 104, build-failed 57, syntax-invalid 24, redundant 15
Fitness: max 0.917(93), min 0.5(2), ave 0.889
Test execution time: sum 8709 ms, max 153 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 17:12:51 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-11-05 17:13:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 20 minutes 50 seconds
Variants: generated 200, build-succeeded 111, build-failed 53, syntax-invalid 23, redundant 13
Fitness: max 1(1), min 0.5(4), ave 0.877
Test execution time: sum 8650 ms, max 123 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 17:13:07 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-11-05 17:14:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 22 minutes 22 seconds
Variants: generated 200, build-succeeded 111, build-failed 60, syntax-invalid 16, redundant 13
Fitness: max 0.917(105), min 0.5(1), ave 0.903
Test execution time: sum 83789 ms, max 74039 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 17:14:38 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-11-05 18:02:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 10 minutes 37 seconds
Variants: generated 200, build-succeeded 97, build-failed 59, syntax-invalid 32, redundant 12
Fitness: max 0.917(89), min 0.333(2), ave 0.887
Test execution time: sum 2888020 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 18:02:53 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-11-05 18:27:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 34 minutes 52 seconds
Variants: generated 200, build-succeeded 106, build-failed 51, syntax-invalid 23, redundant 20
Fitness: max 1(1), min 0.333(1), ave 0.874
Test execution time: sum 1448171 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 18:27:09 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-11-05 18:27:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 35 minutes 6 seconds
Variants: generated 200, build-succeeded 87, build-failed 59, syntax-invalid 22, redundant 32
Fitness: max 0.917(73), min 0.667(11), ave 0.879
Test execution time: sum 6840 ms, max 133 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 18:27:23 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-11-05 18:27:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 35 minutes 20 seconds
Variants: generated 200, build-succeeded 85, build-failed 60, syntax-invalid 28, redundant 27
Fitness: max 1(1), min 0.667(7), ave 0.891
Test execution time: sum 6942 ms, max 131 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 18:27:36 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-11-05 18:27:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 35 minutes 33 seconds
Variants: generated 200, build-succeeded 85, build-failed 63, syntax-invalid 32, redundant 20
Fitness: max 0.917(77), min 0.667(5), ave 0.897
Test execution time: sum 7058 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 18:27:50 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-11-05 18:28:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 35 minutes 47 seconds
Variants: generated 200, build-succeeded 78, build-failed 71, syntax-invalid 35, redundant 16
Fitness: max 0.917(73), min 0.667(5), ave 0.901
Test execution time: sum 6572 ms, max 136 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 18:28:03 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-11-05 18:28:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 36 minutes 1 seconds
Variants: generated 200, build-succeeded 93, build-failed 55, syntax-invalid 33, redundant 19
Fitness: max 1(1), min 0.667(4), ave 0.903
Test execution time: sum 7695 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 18:28:18 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-11-05 18:28:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 36 minutes 17 seconds
Variants: generated 200, build-succeeded 95, build-failed 57, syntax-invalid 30, redundant 18
Fitness: max 0.917(87), min 0.667(5), ave 0.898
Test execution time: sum 7814 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 18:28:33 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-11-05 18:28:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 36 minutes 32 seconds
Variants: generated 200, build-succeeded 94, build-failed 60, syntax-invalid 24, redundant 22
Fitness: max 1(1), min 0.667(3), ave 0.908
Test execution time: sum 7846 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 18:28:48 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-11-05 18:29:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 36 minutes 48 seconds
Variants: generated 200, build-succeeded 104, build-failed 53, syntax-invalid 24, redundant 19
Fitness: max 0.917(91), min 0.5(1), ave 0.885
Test execution time: sum 8338 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 18:29:04 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-11-05 18:29:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 37 minutes 3 seconds
Variants: generated 200, build-succeeded 100, build-failed 53, syntax-invalid 32, redundant 15
Fitness: max 0.917(88), min 0.5(1), ave 0.887
Test execution time: sum 8099 ms, max 136 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 18:29:20 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-11-05 18:29:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 37 minutes 19 seconds
Variants: generated 200, build-succeeded 89, build-failed 58, syntax-invalid 31, redundant 22
Fitness: max 1(1), min 0(1), ave 0.89
Test execution time: sum 7616 ms, max 164 ms, min 9 ms
----------------------------------------------------------------

2023-11-05 18:29:35 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-11-05 19:08:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 16 minutes 35 seconds
Variants: generated 200, build-succeeded 107, build-failed 47, syntax-invalid 30, redundant 16
Fitness: max 1(1), min 0.333(1), ave 0.895
Test execution time: sum 2348563 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 19:08:51 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-11-05 19:09:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 16 minutes 49 seconds
Variants: generated 200, build-succeeded 90, build-failed 54, syntax-invalid 32, redundant 24
Fitness: max 1(1), min 0.667(7), ave 0.893
Test execution time: sum 7222 ms, max 131 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 19:09:06 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-11-05 19:33:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 41 minutes 5 seconds
Variants: generated 200, build-succeeded 98, build-failed 48, syntax-invalid 35, redundant 19
Fitness: max 0.917(86), min 0.333(1), ave 0.886
Test execution time: sum 1447923 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 19:33:21 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-11-05 19:48:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 56 minutes 19 seconds
Variants: generated 200, build-succeeded 91, build-failed 53, syntax-invalid 38, redundant 18
Fitness: max 0.917(80), min 0.583(1), ave 0.889
Test execution time: sum 907129 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 19:48:36 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-11-05 19:48:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 56 minutes 36 seconds
Variants: generated 200, build-succeeded 102, build-failed 59, syntax-invalid 32, redundant 7
Fitness: max 0.917(94), min 0.667(4), ave 0.9
Test execution time: sum 8509 ms, max 140 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 19:48:53 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-11-05 19:49:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 56 minutes 52 seconds
Variants: generated 200, build-succeeded 100, build-failed 52, syntax-invalid 34, redundant 14
Fitness: max 0.917(95), min 0.667(2), ave 0.907
Test execution time: sum 8221 ms, max 147 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 19:49:09 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-11-05 19:49:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 57 minutes 8 seconds
Variants: generated 200, build-succeeded 91, build-failed 58, syntax-invalid 37, redundant 14
Fitness: max 0.917(85), min 0.667(6), ave 0.9
Test execution time: sum 7391 ms, max 136 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 19:49:24 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-11-05 20:04:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 12 minutes 24 seconds
Variants: generated 200, build-succeeded 101, build-failed 58, syntax-invalid 34, redundant 7
Fitness: max 1(2), min 0.583(1), ave 0.904
Test execution time: sum 908556 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 20:04:41 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-11-05 20:04:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 12 minutes 41 seconds
Variants: generated 200, build-succeeded 103, build-failed 51, syntax-invalid 36, redundant 10
Fitness: max 1(1), min 0.667(2), ave 0.909
Test execution time: sum 9018 ms, max 131 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 20:04:58 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-11-05 20:05:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 12 minutes 59 seconds
Variants: generated 200, build-succeeded 103, build-failed 52, syntax-invalid 32, redundant 13
Fitness: max 0.917(96), min 0.667(4), ave 0.902
Test execution time: sum 8785 ms, max 138 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 20:05:15 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-11-05 20:05:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 13 minutes 15 seconds
Variants: generated 200, build-succeeded 98, build-failed 54, syntax-invalid 38, redundant 10
Fitness: max 1(1), min 0.667(4), ave 0.907
Test execution time: sum 8292 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 20:05:32 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-11-05 20:05:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 13 minutes 32 seconds
Variants: generated 200, build-succeeded 96, build-failed 52, syntax-invalid 44, redundant 8
Fitness: max 0.917(87), min 0.667(4), ave 0.898
Test execution time: sum 7942 ms, max 133 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 20:05:48 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-11-05 20:06:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 13 minutes 48 seconds
Variants: generated 200, build-succeeded 99, build-failed 50, syntax-invalid 42, redundant 9
Fitness: max 0.917(91), min 0.5(3), ave 0.891
Test execution time: sum 8293 ms, max 139 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 20:06:05 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-11-05 20:06:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 14 minutes 6 seconds
Variants: generated 200, build-succeeded 100, build-failed 56, syntax-invalid 36, redundant 8
Fitness: max 0.917(96), min 0.667(2), ave 0.908
Test execution time: sum 8702 ms, max 131 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 20:06:22 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-11-05 20:06:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 14 minutes 24 seconds
Variants: generated 200, build-succeeded 110, build-failed 54, syntax-invalid 26, redundant 10
Fitness: max 0.917(107), min 0.5(2), ave 0.907
Test execution time: sum 9613 ms, max 132 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 20:06:41 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-11-05 20:07:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 14 minutes 44 seconds
Variants: generated 200, build-succeeded 113, build-failed 57, syntax-invalid 25, redundant 5
Fitness: max 0.917(105), min 0.333(1), ave 0.896
Test execution time: sum 9768 ms, max 134 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 20:07:00 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-11-05 20:07:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 15 minutes 1 seconds
Variants: generated 200, build-succeeded 98, build-failed 58, syntax-invalid 38, redundant 6
Fitness: max 1(1), min 0(1), ave 0.904
Test execution time: sum 8719 ms, max 136 ms, min 20 ms
----------------------------------------------------------------

2023-11-05 20:07:18 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-11-05 20:22:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 30 minutes 20 seconds
Variants: generated 200, build-succeeded 111, build-failed 55, syntax-invalid 22, redundant 12
Fitness: max 1(1), min 0.583(1), ave 0.898
Test execution time: sum 909259 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 20:22:37 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-11-05 20:58:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 6 minutes 39 seconds
Variants: generated 200, build-succeeded 113, build-failed 56, syntax-invalid 23, redundant 8
Fitness: max 0.917(104), min 0.333(1), ave 0.894
Test execution time: sum 2169478 ms, max 1440021 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 20:58:55 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-11-05 20:59:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 6 minutes 58 seconds
Variants: generated 200, build-succeeded 108, build-failed 55, syntax-invalid 22, redundant 15
Fitness: max 1(1), min 0.667(4), ave 0.908
Test execution time: sum 9606 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 20:59:15 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-11-05 21:14:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 22 minutes 17 seconds
Variants: generated 200, build-succeeded 116, build-failed 49, syntax-invalid 19, redundant 16
Fitness: max 0.917(108), min 0.583(1), ave 0.9
Test execution time: sum 909644 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:14:34 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-11-05 21:14:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 22 minutes 37 seconds
Variants: generated 200, build-succeeded 113, build-failed 54, syntax-invalid 24, redundant 9
Fitness: max 0.917(106), min 0.5(1), ave 0.901
Test execution time: sum 9627 ms, max 141 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:14:54 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-11-05 21:15:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 22 minutes 57 seconds
Variants: generated 200, build-succeeded 109, build-failed 57, syntax-invalid 27, redundant 7
Fitness: max 1(1), min 0.5(1), ave 0.909
Test execution time: sum 9519 ms, max 147 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:15:13 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-11-05 21:15:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 23 minutes 14 seconds
Variants: generated 200, build-succeeded 90, build-failed 73, syntax-invalid 31, redundant 6
Fitness: max 0.917(89), min 0.5(1), ave 0.912
Test execution time: sum 7889 ms, max 133 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 21:15:31 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-11-05 21:15:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 23 minutes 33 seconds
Variants: generated 200, build-succeeded 109, build-failed 50, syntax-invalid 28, redundant 13
Fitness: max 0.917(103), min 0.5(1), ave 0.903
Test execution time: sum 9240 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:15:50 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-11-05 21:16:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 23 minutes 53 seconds
Variants: generated 200, build-succeeded 114, build-failed 59, syntax-invalid 18, redundant 9
Fitness: max 1(1), min 0.667(11), ave 0.893
Test execution time: sum 9410 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:16:10 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-11-05 21:16:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 24 minutes 13 seconds
Variants: generated 200, build-succeeded 114, build-failed 61, syntax-invalid 17, redundant 8
Fitness: max 1(1), min 0.667(8), ave 0.897
Test execution time: sum 9496 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:16:30 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-11-05 21:16:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 24 minutes 34 seconds
Variants: generated 200, build-succeeded 116, build-failed 59, syntax-invalid 17, redundant 8
Fitness: max 1(1), min 0.5(1), ave 0.895
Test execution time: sum 9879 ms, max 135 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:16:51 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-11-05 21:17:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 24 minutes 56 seconds
Variants: generated 200, build-succeeded 120, build-failed 56, syntax-invalid 17, redundant 7
Fitness: max 1(1), min 0.667(5), ave 0.906
Test execution time: sum 10720 ms, max 138 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 21:17:13 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-11-05 21:17:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 25 minutes 18 seconds
Variants: generated 200, build-succeeded 125, build-failed 53, syntax-invalid 15, redundant 7
Fitness: max 0.917(120), min 0.667(3), ave 0.908
Test execution time: sum 10928 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:17:35 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-11-05 21:17:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 25 minutes 37 seconds
Variants: generated 200, build-succeeded 106, build-failed 57, syntax-invalid 25, redundant 12
Fitness: max 0.917(99), min 0.667(6), ave 0.901
Test execution time: sum 8757 ms, max 131 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:17:54 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-11-05 21:18:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 25 minutes 59 seconds
Variants: generated 200, build-succeeded 117, build-failed 61, syntax-invalid 15, redundant 7
Fitness: max 1(1), min 0.667(4), ave 0.907
Test execution time: sum 9789 ms, max 138 ms, min 21 ms
----------------------------------------------------------------

2023-11-05 21:18:15 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-11-05 21:18:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 26 minutes 18 seconds
Variants: generated 200, build-succeeded 104, build-failed 60, syntax-invalid 24, redundant 12
Fitness: max 0.917(93), min 0.667(10), ave 0.891
Test execution time: sum 8212 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:18:34 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-11-05 21:18:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 26 minutes 36 seconds
Variants: generated 200, build-succeeded 94, build-failed 62, syntax-invalid 37, redundant 7
Fitness: max 0.917(89), min 0.667(4), ave 0.904
Test execution time: sum 7943 ms, max 136 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:18:53 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-11-05 21:19:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 26 minutes 56 seconds
Variants: generated 200, build-succeeded 108, build-failed 57, syntax-invalid 26, redundant 9
Fitness: max 0.917(105), min 0.667(3), ave 0.91
Test execution time: sum 9333 ms, max 133 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 21:19:13 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-11-05 21:19:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 27 minutes 18 seconds
Variants: generated 200, build-succeeded 117, build-failed 47, syntax-invalid 24, redundant 12
Fitness: max 0.917(111), min 0.583(1), ave 0.906
Test execution time: sum 10112 ms, max 132 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:19:34 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-11-05 21:34:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 42 minutes 39 seconds
Variants: generated 200, build-succeeded 115, build-failed 65, syntax-invalid 17, redundant 3
Fitness: max 0.917(108), min 0.583(1), ave 0.901
Test execution time: sum 909622 ms, max 900023 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 21:34:56 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-11-05 21:35:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 43 minutes 1 seconds
Variants: generated 200, build-succeeded 119, build-failed 51, syntax-invalid 21, redundant 9
Fitness: max 0.917(110), min 0.667(7), ave 0.899
Test execution time: sum 10434 ms, max 145 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 21:35:18 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-11-05 21:50:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 58 minutes 22 seconds
Variants: generated 200, build-succeeded 113, build-failed 55, syntax-invalid 29, redundant 3
Fitness: max 1(1), min 0.583(1), ave 0.9
Test execution time: sum 909750 ms, max 900023 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 21:50:39 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-11-05 22:15:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 22 minutes 44 seconds
Variants: generated 200, build-succeeded 121, build-failed 50, syntax-invalid 25, redundant 4
Fitness: max 1(2), min 0.333(1), ave 0.899
Test execution time: sum 1450340 ms, max 1440022 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:15:01 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-11-05 22:15:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 23 minutes 8 seconds
Variants: generated 200, build-succeeded 129, build-failed 54, syntax-invalid 12, redundant 5
Fitness: max 0.917(123), min 0.667(2), ave 0.908
Test execution time: sum 11442 ms, max 139 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:15:25 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-11-05 22:15:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 23 minutes 30 seconds
Variants: generated 200, build-succeeded 110, build-failed 63, syntax-invalid 18, redundant 9
Fitness: max 1(1), min 0.667(5), ave 0.905
Test execution time: sum 9722 ms, max 135 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:15:47 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-11-05 22:16:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 23 minutes 54 seconds
Variants: generated 200, build-succeeded 122, build-failed 57, syntax-invalid 13, redundant 8
Fitness: max 1(1), min 0.667(2), ave 0.911
Test execution time: sum 10846 ms, max 137 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:16:10 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-11-05 22:16:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 24 minutes 15 seconds
Variants: generated 200, build-succeeded 106, build-failed 64, syntax-invalid 22, redundant 8
Fitness: max 0.917(100), min 0.5(1), ave 0.902
Test execution time: sum 8993 ms, max 133 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:16:32 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-11-05 22:16:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 24 minutes 37 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 22, redundant 7
Fitness: max 0.917(107), min 0.667(5), ave 0.903
Test execution time: sum 9652 ms, max 133 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:16:53 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-11-05 22:17:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 24 minutes 59 seconds
Variants: generated 200, build-succeeded 113, build-failed 65, syntax-invalid 15, redundant 7
Fitness: max 0.917(107), min 0.667(6), ave 0.903
Test execution time: sum 9504 ms, max 135 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:17:16 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-11-05 22:17:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 25 minutes 22 seconds
Variants: generated 200, build-succeeded 120, build-failed 54, syntax-invalid 16, redundant 10
Fitness: max 1(3), min 0.667(8), ave 0.901
Test execution time: sum 10035 ms, max 131 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:17:38 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-11-05 22:18:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 25 minutes 43 seconds
Variants: generated 200, build-succeeded 99, build-failed 70, syntax-invalid 22, redundant 9
Fitness: max 0.917(93), min 0.667(5), ave 0.903
Test execution time: sum 8537 ms, max 141 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:18:00 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-11-05 22:18:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 26 minutes 7 seconds
Variants: generated 200, build-succeeded 120, build-failed 59, syntax-invalid 16, redundant 5
Fitness: max 1(1), min 0.5(1), ave 0.895
Test execution time: sum 10388 ms, max 179 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:18:23 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-11-05 22:18:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 26 minutes 30 seconds
Variants: generated 200, build-succeeded 124, build-failed 51, syntax-invalid 20, redundant 5
Fitness: max 1(1), min 0.5(1), ave 0.899
Test execution time: sum 10333 ms, max 128 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:18:46 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-11-05 22:19:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 26 minutes 52 seconds
Variants: generated 200, build-succeeded 108, build-failed 63, syntax-invalid 18, redundant 11
Fitness: max 1(1), min 0.5(1), ave 0.9
Test execution time: sum 8923 ms, max 140 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:19:09 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-11-05 22:19:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 27 minutes 15 seconds
Variants: generated 200, build-succeeded 118, build-failed 59, syntax-invalid 15, redundant 8
Fitness: max 0.917(110), min 0.667(7), ave 0.9
Test execution time: sum 9953 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:19:32 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-11-05 22:19:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 27 minutes 36 seconds
Variants: generated 200, build-succeeded 96, build-failed 61, syntax-invalid 32, redundant 11
Fitness: max 0.917(90), min 0.667(5), ave 0.902
Test execution time: sum 8153 ms, max 133 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:19:53 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-11-05 22:35:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 42 minutes 59 seconds
Variants: generated 200, build-succeeded 110, build-failed 55, syntax-invalid 27, redundant 8
Fitness: max 0.917(106), min 0.583(1), ave 0.907
Test execution time: sum 909433 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:35:15 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-11-05 22:35:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 43 minutes 22 seconds
Variants: generated 200, build-succeeded 113, build-failed 58, syntax-invalid 20, redundant 9
Fitness: max 1(1), min 0.667(6), ave 0.904
Test execution time: sum 9664 ms, max 145 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:35:38 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-11-05 22:36:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 43 minutes 45 seconds
Variants: generated 200, build-succeeded 109, build-failed 57, syntax-invalid 23, redundant 11
Fitness: max 0.917(102), min 0.5(1), ave 0.903
Test execution time: sum 9773 ms, max 151 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:36:02 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-11-05 22:36:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 44 minutes 9 seconds
Variants: generated 200, build-succeeded 116, build-failed 59, syntax-invalid 19, redundant 6
Fitness: max 0.917(110), min 0.667(6), ave 0.904
Test execution time: sum 10504 ms, max 141 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:36:26 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-11-05 22:36:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 44 minutes 33 seconds
Variants: generated 200, build-succeeded 117, build-failed 50, syntax-invalid 25, redundant 8
Fitness: max 0.917(110), min 0.667(6), ave 0.902
Test execution time: sum 10582 ms, max 142 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:36:50 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-11-05 22:37:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 44 minutes 57 seconds
Variants: generated 200, build-succeeded 119, build-failed 49, syntax-invalid 23, redundant 9
Fitness: max 0.917(107), min 0.667(8), ave 0.895
Test execution time: sum 9923 ms, max 114 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:37:13 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-11-05 22:37:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 45 minutes 19 seconds
Variants: generated 200, build-succeeded 106, build-failed 57, syntax-invalid 29, redundant 8
Fitness: max 1(1), min 0.667(5), ave 0.903
Test execution time: sum 9393 ms, max 147 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:37:36 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-11-05 22:38:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 45 minutes 44 seconds
Variants: generated 200, build-succeeded 123, build-failed 46, syntax-invalid 24, redundant 7
Fitness: max 0.917(118), min 0.667(4), ave 0.907
Test execution time: sum 10714 ms, max 146 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:38:01 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-11-05 22:38:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 46 minutes 6 seconds
Variants: generated 200, build-succeeded 98, build-failed 60, syntax-invalid 31, redundant 11
Fitness: max 1(1), min 0.667(7), ave 0.895
Test execution time: sum 8030 ms, max 134 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:38:22 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-11-05 22:38:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 46 minutes 29 seconds
Variants: generated 200, build-succeeded 105, build-failed 72, syntax-invalid 17, redundant 6
Fitness: max 0.917(99), min 0.667(5), ave 0.903
Test execution time: sum 9098 ms, max 141 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:38:46 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-11-05 22:39:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 46 minutes 53 seconds
Variants: generated 200, build-succeeded 113, build-failed 56, syntax-invalid 24, redundant 7
Fitness: max 0.917(105), min 0.667(7), ave 0.9
Test execution time: sum 9692 ms, max 136 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:39:10 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-11-05 22:39:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 47 minutes 15 seconds
Variants: generated 200, build-succeeded 97, build-failed 63, syntax-invalid 31, redundant 9
Fitness: max 0.917(87), min 0.667(8), ave 0.893
Test execution time: sum 8139 ms, max 136 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:39:32 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-11-05 22:39:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 47 minutes 38 seconds
Variants: generated 200, build-succeeded 107, build-failed 52, syntax-invalid 29, redundant 12
Fitness: max 0.917(101), min 0.667(4), ave 0.904
Test execution time: sum 9311 ms, max 134 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:39:55 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-11-05 22:55:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 3 minutes 2 seconds
Variants: generated 200, build-succeeded 111, build-failed 43, syntax-invalid 33, redundant 13
Fitness: max 0.917(106), min 0.583(1), ave 0.906
Test execution time: sum 909920 ms, max 900024 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:55:18 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-11-05 22:55:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 3 minutes 25 seconds
Variants: generated 200, build-succeeded 105, build-failed 48, syntax-invalid 37, redundant 10
Fitness: max 0.917(95), min 0.667(4), ave 0.898
Test execution time: sum 8992 ms, max 144 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 22:55:41 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-11-05 22:56:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 3 minutes 46 seconds
Variants: generated 200, build-succeeded 93, build-failed 56, syntax-invalid 43, redundant 8
Fitness: max 0.917(87), min 0.667(5), ave 0.901
Test execution time: sum 7912 ms, max 130 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 22:56:03 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-11-05 23:11:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 19 minutes 9 seconds
Variants: generated 200, build-succeeded 101, build-failed 50, syntax-invalid 42, redundant 7
Fitness: max 1(1), min 0.583(1), ave 0.913
Test execution time: sum 908741 ms, max 900024 ms, min 34 ms
----------------------------------------------------------------

2023-11-05 23:11:25 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-11-05 23:13:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 20 minutes 43 seconds
Variants: generated 200, build-succeeded 98, build-failed 57, syntax-invalid 40, redundant 5
Fitness: max 0.917(90), min 0.5(1), ave 0.895
Test execution time: sum 80176 ms, max 72058 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:13:00 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-11-05 23:13:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 21 minutes 7 seconds
Variants: generated 200, build-succeeded 105, build-failed 52, syntax-invalid 36, redundant 7
Fitness: max 0.917(104), min 0.667(1), ave 0.914
Test execution time: sum 9155 ms, max 128 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:13:23 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-11-05 23:13:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 21 minutes 30 seconds
Variants: generated 200, build-succeeded 98, build-failed 60, syntax-invalid 34, redundant 8
Fitness: max 1(1), min 0.75(2), ave 0.914
Test execution time: sum 8755 ms, max 134 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:13:47 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-11-05 23:14:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 21 minutes 56 seconds
Variants: generated 200, build-succeeded 114, build-failed 63, syntax-invalid 19, redundant 4
Fitness: max 0.917(113), min 0.75(1), ave 0.915
Test execution time: sum 10156 ms, max 138 ms, min 31 ms
----------------------------------------------------------------

2023-11-05 23:14:13 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-11-05 23:14:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 22 minutes 20 seconds
Variants: generated 200, build-succeeded 102, build-failed 56, syntax-invalid 36, redundant 6
Fitness: max 0.917(95), min 0.667(3), ave 0.903
Test execution time: sum 8984 ms, max 136 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:14:37 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-11-05 23:15:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 22 minutes 44 seconds
Variants: generated 200, build-succeeded 100, build-failed 60, syntax-invalid 34, redundant 6
Fitness: max 0.917(99), min 0.667(1), ave 0.914
Test execution time: sum 8978 ms, max 137 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:15:01 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-11-05 23:15:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 23 minutes 9 seconds
Variants: generated 200, build-succeeded 111, build-failed 52, syntax-invalid 29, redundant 8
Fitness: max 0.917(105), min 0.667(3), ave 0.905
Test execution time: sum 9632 ms, max 134 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:15:26 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-11-05 23:15:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 23 minutes 34 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 34, redundant 6
Fitness: max 1(1), min 0.667(1), ave 0.913
Test execution time: sum 9197 ms, max 135 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:15:50 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-11-05 23:16:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 24 minutes 0 seconds
Variants: generated 200, build-succeeded 119, build-failed 53, syntax-invalid 23, redundant 5
Fitness: max 0.917(109), min 0.5(1), ave 0.896
Test execution time: sum 10149 ms, max 134 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:16:17 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-11-05 23:16:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 24 minutes 25 seconds
Variants: generated 200, build-succeeded 100, build-failed 65, syntax-invalid 29, redundant 6
Fitness: max 0.917(94), min 0.667(4), ave 0.903
Test execution time: sum 8630 ms, max 138 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:16:41 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-11-05 23:17:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 24 minutes 48 seconds
Variants: generated 200, build-succeeded 93, build-failed 56, syntax-invalid 42, redundant 9
Fitness: max 0.917(88), min 0.5(1), ave 0.903
Test execution time: sum 8147 ms, max 136 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:17:04 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-11-05 23:32:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 40 minutes 12 seconds
Variants: generated 200, build-succeeded 101, build-failed 53, syntax-invalid 37, redundant 9
Fitness: max 1(1), min 0.583(1), ave 0.899
Test execution time: sum 908988 ms, max 900024 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:32:29 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-11-05 23:32:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 40 minutes 38 seconds
Variants: generated 200, build-succeeded 112, build-failed 58, syntax-invalid 26, redundant 4
Fitness: max 0.917(110), min 0.667(1), ave 0.914
Test execution time: sum 9702 ms, max 137 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:32:54 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-11-05 23:33:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 41 minutes 4 seconds
Variants: generated 200, build-succeeded 118, build-failed 48, syntax-invalid 23, redundant 11
Fitness: max 0.917(111), min 0.667(6), ave 0.903
Test execution time: sum 10060 ms, max 141 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:33:21 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-11-05 23:33:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 41 minutes 31 seconds
Variants: generated 200, build-succeeded 114, build-failed 55, syntax-invalid 25, redundant 6
Fitness: max 0.917(111), min 0.5(2), ave 0.908
Test execution time: sum 9891 ms, max 138 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:33:48 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-11-05 23:34:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 41 minutes 57 seconds
Variants: generated 200, build-succeeded 110, build-failed 58, syntax-invalid 23, redundant 9
Fitness: max 0.917(103), min 0.667(6), ave 0.902
Test execution time: sum 9250 ms, max 136 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:34:14 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-11-05 23:34:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 42 minutes 24 seconds
Variants: generated 200, build-succeeded 105, build-failed 66, syntax-invalid 20, redundant 9
Fitness: max 0.917(102), min 0.667(2), ave 0.91
Test execution time: sum 9264 ms, max 138 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:34:40 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-11-05 23:36:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 44 minutes 1 seconds
Variants: generated 200, build-succeeded 105, build-failed 56, syntax-invalid 32, redundant 7
Fitness: max 0.917(100), min 0.5(2), ave 0.902
Test execution time: sum 80904 ms, max 71942 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:36:18 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-11-05 23:36:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 44 minutes 27 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 29, redundant 8
Fitness: max 0.917(102), min 0.667(2), ave 0.91
Test execution time: sum 9158 ms, max 150 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:36:44 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-11-05 23:37:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 44 minutes 54 seconds
Variants: generated 200, build-succeeded 110, build-failed 56, syntax-invalid 27, redundant 7
Fitness: max 0.917(108), min 0.75(2), ave 0.914
Test execution time: sum 9549 ms, max 144 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:37:11 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-11-05 23:37:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 45 minutes 21 seconds
Variants: generated 200, build-succeeded 108, build-failed 60, syntax-invalid 25, redundant 7
Fitness: max 0.917(106), min 0.667(2), ave 0.912
Test execution time: sum 9310 ms, max 134 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:37:37 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-11-05 23:38:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 45 minutes 49 seconds
Variants: generated 200, build-succeeded 118, build-failed 56, syntax-invalid 19, redundant 7
Fitness: max 1(2), min 0.667(3), ave 0.909
Test execution time: sum 10156 ms, max 138 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:38:06 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-11-05 23:38:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 46 minutes 16 seconds
Variants: generated 200, build-succeeded 113, build-failed 55, syntax-invalid 24, redundant 8
Fitness: max 0.917(109), min 0.667(3), ave 0.909
Test execution time: sum 9599 ms, max 133 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:38:33 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-11-05 23:39:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 46 minutes 43 seconds
Variants: generated 200, build-succeeded 112, build-failed 51, syntax-invalid 24, redundant 13
Fitness: max 0.917(106), min 0.667(2), ave 0.907
Test execution time: sum 9295 ms, max 135 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:39:00 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-11-05 23:39:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 47 minutes 9 seconds
Variants: generated 200, build-succeeded 106, build-failed 51, syntax-invalid 35, redundant 8
Fitness: max 1(1), min 0.667(3), ave 0.909
Test execution time: sum 8847 ms, max 135 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:39:26 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-11-05 23:57:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 5 minutes 37 seconds
Variants: generated 200, build-succeeded 118, build-failed 50, syntax-invalid 26, redundant 6
Fitness: max 0.917(114), min 0.333(1), ave 0.905
Test execution time: sum 1090060 ms, max 1080021 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:57:54 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-11-05 23:58:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 6 minutes 4 seconds
Variants: generated 200, build-succeeded 110, build-failed 44, syntax-invalid 34, redundant 12
Fitness: max 0.917(107), min 0.667(2), ave 0.911
Test execution time: sum 9348 ms, max 129 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:58:20 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-11-05 23:58:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 6 minutes 29 seconds
Variants: generated 200, build-succeeded 97, build-failed 56, syntax-invalid 41, redundant 6
Fitness: max 0.917(91), min 0.667(3), ave 0.904
Test execution time: sum 8217 ms, max 139 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:58:45 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-11-05 23:59:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 6 minutes 55 seconds
Variants: generated 200, build-succeeded 100, build-failed 61, syntax-invalid 34, redundant 5
Fitness: max 0.917(96), min 0.667(3), ave 0.907
Test execution time: sum 8763 ms, max 151 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 23:59:11 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-11-05 23:59:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 7 minutes 21 seconds
Variants: generated 200, build-succeeded 95, build-failed 62, syntax-invalid 34, redundant 9
Fitness: max 0.917(89), min 0.667(2), ave 0.904
Test execution time: sum 9021 ms, max 151 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 23:59:38 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-11-06 00:00:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 7 minutes 48 seconds
Variants: generated 200, build-succeeded 104, build-failed 55, syntax-invalid 31, redundant 10
Fitness: max 0.917(101), min 0.667(2), ave 0.91
Test execution time: sum 9121 ms, max 128 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:00:05 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-11-06 00:00:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 8 minutes 13 seconds
Variants: generated 200, build-succeeded 93, build-failed 67, syntax-invalid 36, redundant 4
Fitness: max 1(1), min 0.667(2), ave 0.909
Test execution time: sum 7986 ms, max 137 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 00:00:30 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-11-06 00:00:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 8 minutes 39 seconds
Variants: generated 200, build-succeeded 100, build-failed 57, syntax-invalid 35, redundant 8
Fitness: max 0.917(94), min 0.667(5), ave 0.902
Test execution time: sum 8380 ms, max 133 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:00:56 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-11-06 00:01:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 9 minutes 4 seconds
Variants: generated 200, build-succeeded 92, build-failed 57, syntax-invalid 47, redundant 4
Fitness: max 1(1), min 0.667(4), ave 0.905
Test execution time: sum 7850 ms, max 136 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 00:01:20 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-11-06 00:01:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 9 minutes 29 seconds
Variants: generated 200, build-succeeded 99, build-failed 53, syntax-invalid 39, redundant 9
Fitness: max 0.917(92), min 0.667(2), ave 0.904
Test execution time: sum 8396 ms, max 135 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:01:46 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-11-06 00:02:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 9 minutes 56 seconds
Variants: generated 200, build-succeeded 103, build-failed 56, syntax-invalid 36, redundant 5
Fitness: max 0.917(97), min 0.667(4), ave 0.904
Test execution time: sum 8901 ms, max 135 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 00:02:13 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-11-06 00:02:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 10 minutes 21 seconds
Variants: generated 200, build-succeeded 94, build-failed 57, syntax-invalid 44, redundant 5
Fitness: max 1(1), min 0.583(1), ave 0.901
Test execution time: sum 7975 ms, max 137 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 00:02:38 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-11-06 00:15:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 22 minutes 48 seconds
Variants: generated 200, build-succeeded 97, build-failed 56, syntax-invalid 40, redundant 7
Fitness: max 1(1), min 0.583(1), ave 0.906
Test execution time: sum 728459 ms, max 720023 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:15:04 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-11-06 00:15:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 23 minutes 14 seconds
Variants: generated 200, build-succeeded 99, build-failed 57, syntax-invalid 38, redundant 6
Fitness: max 0.917(93), min 0.5(1), ave 0.9
Test execution time: sum 8762 ms, max 149 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:15:31 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-11-06 00:15:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 23 minutes 40 seconds
Variants: generated 200, build-succeeded 96, build-failed 50, syntax-invalid 46, redundant 8
Fitness: max 1(1), min 0.5(3), ave 0.89
Test execution time: sum 8266 ms, max 150 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 00:15:57 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-11-06 00:16:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 24 minutes 6 seconds
Variants: generated 200, build-succeeded 94, build-failed 41, syntax-invalid 53, redundant 12
Fitness: max 0.917(88), min 0.5(1), ave 0.899
Test execution time: sum 8421 ms, max 136 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:16:22 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-11-06 00:16:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 24 minutes 32 seconds
Variants: generated 200, build-succeeded 93, build-failed 58, syntax-invalid 45, redundant 4
Fitness: max 1(1), min 0.667(4), ave 0.898
Test execution time: sum 8116 ms, max 142 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:16:49 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-11-06 00:17:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 24 minutes 57 seconds
Variants: generated 200, build-succeeded 85, build-failed 50, syntax-invalid 51, redundant 14
Fitness: max 1(1), min 0.667(4), ave 0.9
Test execution time: sum 7431 ms, max 143 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:17:13 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-11-06 00:17:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 25 minutes 23 seconds
Variants: generated 200, build-succeeded 95, build-failed 48, syntax-invalid 46, redundant 11
Fitness: max 0.917(92), min 0.667(2), ave 0.91
Test execution time: sum 8358 ms, max 125 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:17:40 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-11-06 00:22:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 30 minutes 32 seconds
Variants: generated 200, build-succeeded 107, build-failed 47, syntax-invalid 43, redundant 3
Fitness: max 1(1), min 0.5(1), ave 0.896
Test execution time: sum 290398 ms, max 281603 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:22:49 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-11-06 00:23:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 31 minutes 0 seconds
Variants: generated 200, build-succeeded 100, build-failed 55, syntax-invalid 40, redundant 5
Fitness: max 0.917(94), min 0.667(4), ave 0.903
Test execution time: sum 8541 ms, max 141 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:23:16 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-11-06 00:23:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 31 minutes 28 seconds
Variants: generated 200, build-succeeded 104, build-failed 46, syntax-invalid 42, redundant 8
Fitness: max 0.917(98), min 0.667(2), ave 0.905
Test execution time: sum 8981 ms, max 146 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:23:44 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-11-06 00:39:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 46 minutes 54 seconds
Variants: generated 200, build-succeeded 90, build-failed 50, syntax-invalid 53, redundant 7
Fitness: max 0.917(83), min 0.5(2), ave 0.895
Test execution time: sum 907508 ms, max 900025 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:39:10 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-11-06 00:39:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 47 minutes 20 seconds
Variants: generated 200, build-succeeded 87, build-failed 57, syntax-invalid 48, redundant 8
Fitness: max 0.917(83), min 0.5(1), ave 0.903
Test execution time: sum 7405 ms, max 141 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:39:37 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-11-06 00:40:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 47 minutes 45 seconds
Variants: generated 200, build-succeeded 80, build-failed 53, syntax-invalid 59, redundant 8
Fitness: max 0.917(77), min 0.667(1), ave 0.909
Test execution time: sum 6853 ms, max 150 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:40:01 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-11-06 00:40:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 48 minutes 10 seconds
Variants: generated 200, build-succeeded 87, build-failed 48, syntax-invalid 60, redundant 5
Fitness: max 1(1), min 0.5(1), ave 0.911
Test execution time: sum 7444 ms, max 138 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:40:27 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-11-06 00:40:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 48 minutes 36 seconds
Variants: generated 200, build-succeeded 81, build-failed 57, syntax-invalid 52, redundant 10
Fitness: max 0.917(77), min 0.667(1), ave 0.907
Test execution time: sum 6660 ms, max 134 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:40:52 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-11-06 00:41:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 49 minutes 1 seconds
Variants: generated 200, build-succeeded 84, build-failed 58, syntax-invalid 53, redundant 5
Fitness: max 1(1), min 0.5(1), ave 0.913
Test execution time: sum 7217 ms, max 135 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:41:18 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-11-06 00:41:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 49 minutes 27 seconds
Variants: generated 200, build-succeeded 89, build-failed 56, syntax-invalid 51, redundant 4
Fitness: max 0.917(87), min 0.667(1), ave 0.912
Test execution time: sum 7444 ms, max 115 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 00:41:44 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-11-06 00:42:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 49 minutes 52 seconds
Variants: generated 200, build-succeeded 80, build-failed 57, syntax-invalid 58, redundant 5
Fitness: max 1(1), min 0.75(2), ave 0.914
Test execution time: sum 6689 ms, max 138 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 00:42:09 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-11-06 00:42:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 50 minutes 16 seconds
Variants: generated 200, build-succeeded 73, build-failed 61, syntax-invalid 59, redundant 7
Fitness: max 0.917(73), min 0.917(73), ave 0.917
Test execution time: sum 6436 ms, max 140 ms, min 73 ms
----------------------------------------------------------------

2023-11-06 00:42:33 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-11-06 01:07:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 14 minutes 43 seconds
Variants: generated 200, build-succeeded 89, build-failed 52, syntax-invalid 54, redundant 5
Fitness: max 1(1), min 0.333(1), ave 0.904
Test execution time: sum 1447713 ms, max 1440022 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:07:00 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-11-06 01:07:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 15 minutes 8 seconds
Variants: generated 200, build-succeeded 76, build-failed 49, syntax-invalid 63, redundant 12
Fitness: max 0.917(73), min 0.667(2), ave 0.908
Test execution time: sum 6477 ms, max 128 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:07:25 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-11-06 01:07:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 15 minutes 32 seconds
Variants: generated 200, build-succeeded 69, build-failed 61, syntax-invalid 64, redundant 6
Fitness: max 0.917(67), min 0.667(1), ave 0.911
Test execution time: sum 6089 ms, max 136 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:07:49 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-11-06 01:08:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 15 minutes 59 seconds
Variants: generated 200, build-succeeded 89, build-failed 48, syntax-invalid 53, redundant 10
Fitness: max 0.917(84), min 0.5(2), ave 0.9
Test execution time: sum 7709 ms, max 135 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:08:16 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-11-06 01:23:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 31 minutes 25 seconds
Variants: generated 200, build-succeeded 81, build-failed 51, syntax-invalid 61, redundant 7
Fitness: max 0.917(75), min 0.5(1), ave 0.899
Test execution time: sum 907331 ms, max 900025 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:23:42 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-11-06 01:24:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 31 minutes 51 seconds
Variants: generated 200, build-succeeded 76, build-failed 60, syntax-invalid 60, redundant 4
Fitness: max 0.917(74), min 0.667(2), ave 0.91
Test execution time: sum 6608 ms, max 132 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:24:08 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-11-06 01:24:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 32 minutes 16 seconds
Variants: generated 200, build-succeeded 75, build-failed 57, syntax-invalid 60, redundant 8
Fitness: max 0.917(69), min 0.5(3), ave 0.891
Test execution time: sum 6193 ms, max 135 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:24:33 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-11-06 01:25:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 32 minutes 43 seconds
Variants: generated 200, build-succeeded 85, build-failed 59, syntax-invalid 54, redundant 2
Fitness: max 1(1), min 0.5(1), ave 0.899
Test execution time: sum 7303 ms, max 144 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:25:00 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-11-06 01:25:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 33 minutes 9 seconds
Variants: generated 200, build-succeeded 80, build-failed 53, syntax-invalid 57, redundant 10
Fitness: max 1(2), min 0.5(1), ave 0.901
Test execution time: sum 6817 ms, max 133 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:25:26 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-11-06 01:25:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 33 minutes 36 seconds
Variants: generated 200, build-succeeded 86, build-failed 53, syntax-invalid 56, redundant 5
Fitness: max 0.917(81), min 0.5(2), ave 0.898
Test execution time: sum 7149 ms, max 136 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:25:53 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-11-06 01:35:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 43 minutes 1 seconds
Variants: generated 200, build-succeeded 81, build-failed 46, syntax-invalid 63, redundant 10
Fitness: max 0.917(76), min 0.5(4), ave 0.893
Test execution time: sum 546627 ms, max 540022 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:35:18 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-11-06 01:35:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 43 minutes 25 seconds
Variants: generated 200, build-succeeded 67, build-failed 61, syntax-invalid 67, redundant 5
Fitness: max 1(2), min 0.5(1), ave 0.893
Test execution time: sum 5357 ms, max 123 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:35:42 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-11-06 01:36:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 43 minutes 53 seconds
Variants: generated 200, build-succeeded 82, build-failed 50, syntax-invalid 56, redundant 12
Fitness: max 0.917(77), min 0.5(1), ave 0.899
Test execution time: sum 6786 ms, max 126 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:36:09 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-11-06 01:36:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 44 minutes 20 seconds
Variants: generated 200, build-succeeded 89, build-failed 49, syntax-invalid 55, redundant 7
Fitness: max 1(2), min 0.667(3), ave 0.906
Test execution time: sum 7401 ms, max 135 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:36:37 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-11-06 01:37:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 44 minutes 48 seconds
Variants: generated 200, build-succeeded 89, build-failed 49, syntax-invalid 54, redundant 8
Fitness: max 1(1), min 0.5(1), ave 0.895
Test execution time: sum 7304 ms, max 137 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:37:05 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-11-06 01:37:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 45 minutes 13 seconds
Variants: generated 200, build-succeeded 65, build-failed 63, syntax-invalid 64, redundant 8
Fitness: max 0.917(60), min 0.667(4), ave 0.899
Test execution time: sum 5515 ms, max 132 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:37:29 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-11-06 01:37:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 45 minutes 40 seconds
Variants: generated 200, build-succeeded 77, build-failed 63, syntax-invalid 54, redundant 6
Fitness: max 0.917(70), min 0.5(1), ave 0.892
Test execution time: sum 6574 ms, max 141 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:37:56 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-11-06 01:38:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 46 minutes 9 seconds
Variants: generated 200, build-succeeded 94, build-failed 50, syntax-invalid 52, redundant 4
Fitness: max 1(1), min 0.667(6), ave 0.896
Test execution time: sum 8070 ms, max 139 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:38:25 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-11-06 01:38:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 46 minutes 37 seconds
Variants: generated 200, build-succeeded 87, build-failed 54, syntax-invalid 57, redundant 2
Fitness: max 0.917(82), min 0.667(5), ave 0.902
Test execution time: sum 7839 ms, max 134 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:38:54 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-11-06 01:39:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 47 minutes 3 seconds
Variants: generated 200, build-succeeded 67, build-failed 61, syntax-invalid 63, redundant 9
Fitness: max 0.917(62), min 0.5(1), ave 0.899
Test execution time: sum 6003 ms, max 153 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:39:20 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-11-06 01:39:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 47 minutes 29 seconds
Variants: generated 200, build-succeeded 70, build-failed 59, syntax-invalid 63, redundant 8
Fitness: max 0.917(64), min 0.667(4), ave 0.898
Test execution time: sum 5992 ms, max 127 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:39:46 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-11-06 01:40:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 47 minutes 55 seconds
Variants: generated 200, build-succeeded 71, build-failed 53, syntax-invalid 67, redundant 9
Fitness: max 0.917(63), min 0.667(6), ave 0.891
Test execution time: sum 5801 ms, max 128 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:40:11 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-11-06 01:40:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 48 minutes 20 seconds
Variants: generated 200, build-succeeded 66, build-failed 58, syntax-invalid 66, redundant 10
Fitness: max 0.917(59), min 0.5(1), ave 0.889
Test execution time: sum 5341 ms, max 134 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 01:40:36 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-11-06 01:41:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 48 minutes 47 seconds
Variants: generated 200, build-succeeded 76, build-failed 60, syntax-invalid 57, redundant 7
Fitness: max 1(1), min 0.583(1), ave 0.897
Test execution time: sum 6496 ms, max 134 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:41:04 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-11-06 01:41:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 49 minutes 17 seconds
Variants: generated 200, build-succeeded 89, build-failed 50, syntax-invalid 53, redundant 8
Fitness: max 0.917(81), min 0.667(7), ave 0.895
Test execution time: sum 7516 ms, max 131 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:41:34 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-11-06 01:42:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 49 minutes 47 seconds
Variants: generated 200, build-succeeded 82, build-failed 57, syntax-invalid 52, redundant 9
Fitness: max 0.917(79), min 0.667(3), ave 0.908
Test execution time: sum 7397 ms, max 138 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:42:03 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-11-06 01:51:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 59 minutes 18 seconds
Variants: generated 200, build-succeeded 99, build-failed 51, syntax-invalid 45, redundant 5
Fitness: max 1(2), min 0.5(3), ave 0.889
Test execution time: sum 548520 ms, max 540022 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:51:35 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-11-06 01:52:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 59 minutes 48 seconds
Variants: generated 200, build-succeeded 84, build-failed 54, syntax-invalid 55, redundant 7
Fitness: max 0.917(78), min 0.667(5), ave 0.9
Test execution time: sum 7159 ms, max 125 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 01:52:04 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-11-06 02:01:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 9 minutes 16 seconds
Variants: generated 200, build-succeeded 73, build-failed 65, syntax-invalid 55, redundant 7
Fitness: max 0.917(67), min 0.5(1), ave 0.895
Test execution time: sum 546355 ms, max 540022 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 02:01:32 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-11-06 02:11:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 18 minutes 45 seconds
Variants: generated 200, build-succeeded 85, build-failed 57, syntax-invalid 55, redundant 3
Fitness: max 0.917(74), min 0.5(1), ave 0.884
Test execution time: sum 547179 ms, max 540023 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 02:11:02 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-11-06 02:29:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 37 minutes 15 seconds
Variants: generated 200, build-succeeded 87, build-failed 56, syntax-invalid 56, redundant 1
Fitness: max 0.917(81), min 0.5(1), ave 0.898
Test execution time: sum 1087529 ms, max 1080022 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 02:29:31 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-11-06 02:39:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 46 minutes 44 seconds
Variants: generated 200, build-succeeded 87, build-failed 48, syntax-invalid 58, redundant 7
Fitness: max 0.917(82), min 0.5(1), ave 0.9
Test execution time: sum 547695 ms, max 540022 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:39:01 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-11-06 02:39:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 47 minutes 15 seconds
Variants: generated 200, build-succeeded 90, build-failed 54, syntax-invalid 49, redundant 7
Fitness: max 0.917(87), min 0.667(2), ave 0.909
Test execution time: sum 8010 ms, max 122 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:39:32 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-11-06 02:40:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 47 minutes 48 seconds
Variants: generated 200, build-succeeded 95, build-failed 57, syntax-invalid 42, redundant 6
Fitness: max 0.917(88), min 0.667(5), ave 0.9
Test execution time: sum 8340 ms, max 135 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:40:05 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-11-06 02:40:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 48 minutes 22 seconds
Variants: generated 200, build-succeeded 105, build-failed 44, syntax-invalid 44, redundant 7
Fitness: max 0.917(103), min 0.667(2), ave 0.912
Test execution time: sum 9812 ms, max 132 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:40:39 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-11-06 02:41:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 48 minutes 54 seconds
Variants: generated 200, build-succeeded 95, build-failed 46, syntax-invalid 51, redundant 8
Fitness: max 0.917(88), min 0.667(6), ave 0.899
Test execution time: sum 8374 ms, max 131 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:41:11 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-11-06 02:41:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 49 minutes 28 seconds
Variants: generated 200, build-succeeded 101, build-failed 54, syntax-invalid 42, redundant 3
Fitness: max 1(1), min 0.667(7), ave 0.899
Test execution time: sum 8972 ms, max 136 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 02:41:45 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-11-06 02:42:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 49 minutes 59 seconds
Variants: generated 200, build-succeeded 80, build-failed 62, syntax-invalid 52, redundant 6
Fitness: max 1(1), min 0.667(5), ave 0.902
Test execution time: sum 7151 ms, max 137 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:42:16 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-11-06 02:42:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 50 minutes 32 seconds
Variants: generated 200, build-succeeded 94, build-failed 50, syntax-invalid 48, redundant 8
Fitness: max 1(1), min 0.667(6), ave 0.902
Test execution time: sum 8465 ms, max 136 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:42:48 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-11-06 02:43:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 51 minutes 5 seconds
Variants: generated 200, build-succeeded 95, build-failed 52, syntax-invalid 46, redundant 7
Fitness: max 1(1), min 0.667(4), ave 0.904
Test execution time: sum 8677 ms, max 136 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:43:22 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-11-06 02:43:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 51 minutes 36 seconds
Variants: generated 200, build-succeeded 76, build-failed 61, syntax-invalid 58, redundant 5
Fitness: max 1(1), min 0.667(5), ave 0.899
Test execution time: sum 6991 ms, max 139 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:43:53 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-11-06 02:44:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 52 minutes 8 seconds
Variants: generated 200, build-succeeded 78, build-failed 63, syntax-invalid 53, redundant 6
Fitness: max 1(1), min 0.667(2), ave 0.909
Test execution time: sum 7332 ms, max 139 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:44:24 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-11-06 02:44:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 52 minutes 41 seconds
Variants: generated 200, build-succeeded 94, build-failed 50, syntax-invalid 48, redundant 8
Fitness: max 0.917(89), min 0.667(4), ave 0.904
Test execution time: sum 8779 ms, max 137 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:44:58 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-11-06 02:45:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 53 minutes 21 seconds
Variants: generated 200, build-succeeded 93, build-failed 53, syntax-invalid 39, redundant 15
Fitness: max 0.917(87), min 0.417(1), ave 0.898
Test execution time: sum 13729 ms, max 5133 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:45:38 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-11-06 02:46:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 53 minutes 54 seconds
Variants: generated 200, build-succeeded 87, build-failed 52, syntax-invalid 53, redundant 8
Fitness: max 0.917(87), min 0.917(87), ave 0.917
Test execution time: sum 8373 ms, max 143 ms, min 74 ms
----------------------------------------------------------------

2023-11-06 02:46:11 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-11-06 02:46:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 54 minutes 31 seconds
Variants: generated 200, build-succeeded 105, build-failed 48, syntax-invalid 42, redundant 5
Fitness: max 1(1), min 0.667(5), ave 0.906
Test execution time: sum 9611 ms, max 149 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:46:48 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-11-06 02:47:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 55 minutes 7 seconds
Variants: generated 200, build-succeeded 101, build-failed 47, syntax-invalid 43, redundant 9
Fitness: max 1(1), min 0.667(3), ave 0.91
Test execution time: sum 9369 ms, max 135 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:47:24 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-11-06 02:48:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 55 minutes 43 seconds
Variants: generated 200, build-succeeded 99, build-failed 57, syntax-invalid 40, redundant 4
Fitness: max 0.917(90), min 0.667(7), ave 0.896
Test execution time: sum 8670 ms, max 139 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:48:00 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-11-06 02:48:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 56 minutes 17 seconds
Variants: generated 200, build-succeeded 98, build-failed 43, syntax-invalid 54, redundant 5
Fitness: max 0.917(94), min 0.667(3), ave 0.907
Test execution time: sum 8668 ms, max 134 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:48:34 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-11-06 02:52:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 59 minutes 48 seconds
Variants: generated 200, build-succeeded 79, build-failed 53, syntax-invalid 60, redundant 8
Fitness: max 0.917(72), min 0.667(6), ave 0.897
Test execution time: sum 186645 ms, max 180077 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:52:04 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-11-06 02:52:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 20 seconds
Variants: generated 200, build-succeeded 78, build-failed 62, syntax-invalid 52, redundant 8
Fitness: max 1(3), min 0.667(5), ave 0.904
Test execution time: sum 6444 ms, max 135 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:52:36 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-11-06 02:53:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 55 seconds
Variants: generated 200, build-succeeded 101, build-failed 47, syntax-invalid 49, redundant 3
Fitness: max 1(1), min 0.667(3), ave 0.91
Test execution time: sum 8684 ms, max 135 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:53:11 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-11-06 02:53:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 1 minutes 29 seconds
Variants: generated 200, build-succeeded 86, build-failed 58, syntax-invalid 47, redundant 9
Fitness: max 1(1), min 0.667(4), ave 0.906
Test execution time: sum 7769 ms, max 143 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:53:46 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-11-06 02:54:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 2 minutes 3 seconds
Variants: generated 200, build-succeeded 90, build-failed 53, syntax-invalid 53, redundant 4
Fitness: max 0.917(88), min 0.667(2), ave 0.911
Test execution time: sum 8193 ms, max 137 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:54:19 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-11-06 02:54:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 2 minutes 37 seconds
Variants: generated 200, build-succeeded 94, build-failed 48, syntax-invalid 50, redundant 8
Fitness: max 0.917(88), min 0.667(4), ave 0.902
Test execution time: sum 8488 ms, max 140 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:54:54 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-11-06 02:55:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 3 minutes 10 seconds
Variants: generated 200, build-succeeded 78, build-failed 55, syntax-invalid 63, redundant 4
Fitness: max 0.917(76), min 0.667(2), ave 0.91
Test execution time: sum 7585 ms, max 151 ms, min 26 ms
----------------------------------------------------------------

2023-11-06 02:55:27 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-11-06 02:56:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 3 minutes 44 seconds
Variants: generated 200, build-succeeded 94, build-failed 44, syntax-invalid 52, redundant 10
Fitness: max 1(1), min 0.667(3), ave 0.908
Test execution time: sum 8529 ms, max 129 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:56:01 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-11-06 02:56:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 4 minutes 21 seconds
Variants: generated 200, build-succeeded 100, build-failed 51, syntax-invalid 44, redundant 5
Fitness: max 0.917(91), min 0.667(6), ave 0.897
Test execution time: sum 8709 ms, max 147 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:56:38 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-11-06 02:57:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 4 minutes 54 seconds
Variants: generated 200, build-succeeded 85, build-failed 52, syntax-invalid 55, redundant 8
Fitness: max 0.917(78), min 0.667(6), ave 0.898
Test execution time: sum 7151 ms, max 150 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 02:57:11 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-11-06 02:57:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 5 minutes 7 seconds
Variants: generated 61, build-succeeded 25, build-failed 32, syntax-invalid 0, redundant 4
Fitness: max 1(1), min 0.917(24), ave 0.92
Test execution time: sum 2199 ms, max 128 ms, min 73 ms
----------------------------------------------------------------

2023-11-06 02:57:24 [main] [INFO]  KGenProgMain - GA stopped
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v537)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v537)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v537)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v537)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,8 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v537)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v537)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v537)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v736)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v736)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v736)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v736)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1025,7 +1026,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v736)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v736)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v736)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v900)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v900)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v900)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v900)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v900)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v900)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v900)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v900)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1238)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1238)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1238)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1238)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1238)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1238)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1238)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1561)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1561)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1561)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1561)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1024,7 +1027,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1561)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1561)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1561)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2299)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2299)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2299)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2299)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2299)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -407,7 +409,8 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
+            int readLen = 0;
+			readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2299)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2299)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2299)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2651)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2651)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2651)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2651)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+            readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2651)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2651)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2651)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,10 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +387,8 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+            int startSrc = 0;
+			readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -1024,7 +1029,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+            readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -417,7 +422,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (lineSeparator == null) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +388,8 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+            int startSrc = 0;
+			readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -1025,7 +1031,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5027)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5027)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5027)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5027)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			currentLinePos = 0;
+            readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +389,7 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			int bytesCopied = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5027)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5027)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5027)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -383,7 +387,8 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+            int startSrc = 0;
+			readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5880)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5880)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5880)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5880)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5880)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -387,6 +390,7 @@
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             buffer = b;
         }
     }
@@ -407,7 +411,8 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
+            int readLen = 0;
+			readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
@@ -1025,7 +1030,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5880)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5880)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v5880)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			x = x << 6;
+            readPos = 0;
+			int bytesCopied = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1025,7 +1031,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6219)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6219)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6219)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6219)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -407,7 +412,8 @@
         if (buffer != null) {
             int len = Math.min(avail(), bAvail);
             System.arraycopy(buffer, readPos, b, bPos, len);
-            readPos += len;
+            int readLen = 0;
+			readPos += len;
             if (readPos >= pos) {
                 buffer = null;
             }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6219)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6219)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6219)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6625)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6824)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6824)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6824)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6824)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6824)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6824)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v6824)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7063)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7063)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7063)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7063)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			buffer = null;
+            readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7063)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7063)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7063)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7825)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7825)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7825)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7825)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7825)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+            readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +391,7 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			int bytesCopied = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7825)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7825)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v7825)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8405)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8405)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8405)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8405)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8405)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8405)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8405)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v8840)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9876)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9876)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9876)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9876)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+            readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +423,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9876)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9876)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v9876)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,18 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			eof = true;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -382,7 +394,8 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10444)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10694)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10694)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10694)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10694)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,16 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			currentLinePos = 0;
+			eof = true;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -382,7 +392,8 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10694)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10694)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10694)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10801)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10801)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10801)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10801)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			x = x << 6;
+			{
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +424,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10801)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10801)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v10801)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,22 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,24 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			eof = true;
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			int bytesCopied = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12060)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12205)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12205)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12205)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12205)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,20 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12205)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12205)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12205)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12621)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12621)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12621)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12621)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,16 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12621)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12621)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v12621)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v13867)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v13867)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v13867)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v13867)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,36 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			eof = true;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v13867)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v13867)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v13867)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,18 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14469)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14469)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14469)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14469)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +438,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14469)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14469)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v14469)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15035)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15035)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15035)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15035)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			eof = true;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15035)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15035)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15035)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15613)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15613)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15613)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15613)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,16 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -421,6 +431,7 @@
             buffer = out;
             pos = outPos;
             readPos = outPos;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
         }
     }
     /**
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15613)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15613)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15613)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15925)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15925)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15925)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15925)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,27 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15925)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15925)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v15925)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,20 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			x = x << 6;
+			eof = true;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16228)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16228)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16228)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16228)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16228)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16228)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16228)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16876)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16876)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16876)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16876)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16876)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16876)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v16876)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18296)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18296)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18296)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18296)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,30 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18296)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18296)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18296)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18433)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18433)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18433)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18433)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,24 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +434,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18433)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18433)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18433)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18497)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18497)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18497)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18497)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,29 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18497)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18497)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18497)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18869)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18869)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18869)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18869)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,35 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			eof = true;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18869)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18869)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v18869)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19058)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19058)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19058)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19058)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,22 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			eof = true;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19058)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19058)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19058)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19820)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19820)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19820)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19820)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -417,7 +436,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (lineSeparator == null) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19820)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19820)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19820)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19847)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19847)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19847)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19847)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +433,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19847)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19847)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19847)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20293)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20293)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20293)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20293)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,29 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20293)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20293)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20293)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20423)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20423)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20423)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20423)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,27 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos += 4;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20423)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20423)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20423)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20601)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20601)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20601)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20601)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,23 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1043,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20601)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20601)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v20601)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v21461)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v21461)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v21461)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v21461)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,11 +439,8 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
-            buffer = out;
-            pos = outPos;
-            readPos = outPos;
-        }
+        if (out != null && out.length == outAvail)
+			buffer = null;
     }
     /**
      * <p>
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v21461)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v21461)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v21461)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22467)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22467)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22467)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22467)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,23 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1043,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22467)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22467)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22467)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22854)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22854)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22854)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22854)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,37 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			int startSrc = 0;
+			currentLinePos = 0;
+			eof = true;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22854)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22854)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v22854)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v24467)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v24467)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v24467)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v24467)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,34 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			lineLength = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v24467)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v24467)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v24467)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v25003)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v25003)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v25003)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v25003)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v25003)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,31 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v25003)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v25003)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v25003)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26096)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26096)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26096)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26096)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -420,7 +439,8 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
-            readPos = outPos;
+            resizeBuffer();
+			readPos = outPos;
         }
     }
     /**
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26096)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26096)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26096)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26807)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26807)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26807)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26807)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			{
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26807)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26807)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v26807)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28863)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28863)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28863)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28863)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,48 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28863)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28863)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28863)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28878)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28878)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28878)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28878)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,37 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28878)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28878)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v28878)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v29478)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v29478)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v29478)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v29478)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,36 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v29478)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v29478)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v29478)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v30898)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v30898)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v30898)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v30898)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,48 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1067,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v30898)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v30898)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v30898)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31227)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31227)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31227)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31227)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,42 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31227)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31227)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31227)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31821)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31821)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31821)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31821)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,44 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos += 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31821)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31821)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v31821)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32092)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32092)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32092)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32092)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1054,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32092)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32092)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32092)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32422)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32422)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32422)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32422)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,48 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos += 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			int readLen = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1023,10 +1064,18 @@
     private void reset() {
         buffer = null;
         pos = 0;
-        readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32422)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32422)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32422)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32811)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32811)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32811)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32811)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32811)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,46 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos += 4;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1065,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32811)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32811)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v32811)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33053)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33053)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33053)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33053)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,49 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			currentLinePos += 4;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1023,10 +1065,18 @@
     private void reset() {
         buffer = null;
         pos = 0;
-        readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33053)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33053)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33053)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33489)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33489)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33489)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33489)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,62 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				eof = true;
+			}
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1082,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33489)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33489)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v33489)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v34633)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v34633)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v34633)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v34633)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,66 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1022,8 +1081,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
-        readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v34633)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v34633)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v34633)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35029)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35029)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35029)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35029)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,55 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				reset();
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1023,10 +1070,18 @@
     private void reset() {
         buffer = null;
         pos = 0;
-        readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35029)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35029)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35029)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35464)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35464)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35464)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35464)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,66 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +477,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35464)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35464)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35464)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35857)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35857)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35857)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35857)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,55 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +466,7 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
+            pos += lineSeparator.length;
             pos = outPos;
             readPos = outPos;
         }
@@ -1026,7 +1074,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35857)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35857)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v35857)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37250)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37250)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37250)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37250)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,64 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			pos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				modulus = (++modulus) % 4;
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1024,7 +1081,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37250)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37250)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37250)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37469)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37469)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37469)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37469)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,38 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+			}
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos += 4;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1021,7 +1052,7 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        modulus = (++modulus) % 4;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37469)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37469)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37469)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,52 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				eof = true;
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			currentLinePos += 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38035)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38035)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38035)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38035)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,69 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				modulus = (++modulus) % 4;
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +480,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -1026,7 +1087,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38035)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38035)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38035)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38111)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38111)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38111)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38111)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,71 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				modulus = (++modulus) % 4;
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1023,7 +1087,6 @@
     private void reset() {
         buffer = null;
         pos = 0;
-        readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38111)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38111)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38111)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38406)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38406)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38406)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38406)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,61 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			eof = true;
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1080,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38406)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38406)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38406)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38486)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38486)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38486)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38486)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,49 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				reset();
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1068,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38486)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38486)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38486)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38625)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38625)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38625)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38625)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,56 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			eof = true;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos += 4;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				modulus = (++modulus) % 4;
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38625)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38625)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v38625)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,79 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			x = x << 6;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v39205)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v40464)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v40464)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v40464)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v40464)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,82 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				buffer = null;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			int readLen = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v40464)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v40464)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v40464)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41019)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41019)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41019)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41019)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,44 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer[pos++] = PAD;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			currentLinePos = 0;
+			{
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +454,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -1023,6 +1058,7 @@
     private void reset() {
         buffer = null;
         pos = 0;
+		buffer = new byte[DEFAULT_BUFFER_SIZE];
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41019)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41019)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41019)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41097)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41097)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41097)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41097)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,68 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			reset();
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +479,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -1024,9 +1084,17 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41097)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41097)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v41097)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43025)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43025)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43025)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43025)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,70 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				currentLinePos += 4;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43025)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43025)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43025)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43277)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43277)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43277)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43277)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,74 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			x = x << 6;
+			eof = true;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43277)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43277)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43277)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43420)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43420)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43420)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43420)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,79 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43420)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43420)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43420)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43657)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43657)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43657)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43657)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,78 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			{
+				pos = 0;
+				readPos = 0;
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1025,7 +1095,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43657)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43657)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43657)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43871)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43871)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43871)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43871)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,88 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			{
+				pos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos += 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1023,7 +1103,6 @@
     private void reset() {
         buffer = null;
         pos = 0;
-        readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43871)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43871)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v43871)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44051)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44051)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44051)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44051)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,98 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44051)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44051)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44051)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44805)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44805)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44805)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44805)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,86 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				readPos = 0;
+			}
+			currentLinePos += 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1106,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44805)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44805)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v44805)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45034)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45034)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45034)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45034)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,96 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			reset();
+			reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1115,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45034)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45034)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45034)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45801)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45801)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45801)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45801)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,77 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+				{
+					buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+					buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+					buffer[pos++] = (byte) (x & MASK_8BITS);
+				}
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			{
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1026,7 +1096,16 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        switch (modulus) {
+		case 2:
+			x = x << 6;
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			break;
+		case 3:
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			break;
+		}
     }
 
 }
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45801)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45801)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45801)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45852)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45852)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45852)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45852)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,79 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				eof = true;
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45852)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45852)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45852)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45876)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45876)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45876)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45876)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,75 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			reset();
+			reset();
+			reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				eof = true;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45876)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45876)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v45876)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46013)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46013)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46013)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46013)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,103 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				lineLength = 0;
+				eof = true;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46013)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46013)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46013)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46304)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46304)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46304)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46304)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,106 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			eof = true;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			x = x << 6;
+			{
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46304)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46304)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v46304)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47001)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47001)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47001)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47001)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,88 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47001)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47001)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47001)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47661)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47661)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47661)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47661)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,94 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			reset();
+			reset();
+			reset();
+			reset();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				eof = true;
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			x = x << 6;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			x = x << 6;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos += 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47661)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47661)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-06 02:57:24 [main] [INFO]  PatchLogExporter - patch (v47661)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-06 02:57:25 [main] [INFO]  KGenProgMain - Summary
Reached generation = 240
Generated variants = 47661
Syntax valid variants = 38863
Build succeeded variants = 22565
Time elapsed = 21 hours 5 minutes 8 seconds
Exit status = SUCCESS
