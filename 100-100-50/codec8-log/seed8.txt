2023-11-09 22:42:10 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-11-09 22:42:10 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-11-09 22:42:10 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-11-09 22:42:10 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 8 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-11-09 22:42:13 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-11-09 22:42:13 [main] [INFO]  KGenProgMain - GA started
2023-11-09 22:42:13 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-11-09 22:57:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 3 seconds
Variants: generated 100, build-succeeded 15, build-failed 48, syntax-invalid 9, redundant 28
Fitness: max 1(1), min 0.583(1), ave 0.833
Test execution time: sum 901147 ms, max 900035 ms, min 28 ms
----------------------------------------------------------------

2023-11-09 22:57:17 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-11-09 23:21:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 6 seconds
Variants: generated 100, build-succeeded 18, build-failed 56, syntax-invalid 13, redundant 13
Fitness: max 0.917(9), min 0.333(1), ave 0.81
Test execution time: sum 1441051 ms, max 1440029 ms, min 27 ms
----------------------------------------------------------------

2023-11-09 23:21:20 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-11-10 00:30:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 12 seconds
Variants: generated 200, build-succeeded 61, build-failed 50, syntax-invalid 15, redundant 74
Fitness: max 1(1), min 0.333(3), ave 0.776
Test execution time: sum 4142456 ms, max 1440023 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 00:30:26 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-11-10 00:45:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 18 seconds
Variants: generated 200, build-succeeded 53, build-failed 59, syntax-invalid 19, redundant 69
Fitness: max 0.917(22), min 0.583(1), ave 0.825
Test execution time: sum 902814 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 00:45:32 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-11-10 00:45:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 26 seconds
Variants: generated 200, build-succeeded 57, build-failed 56, syntax-invalid 23, redundant 64
Fitness: max 0.917(49), min 0.5(1), ave 0.892
Test execution time: sum 4386 ms, max 140 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 00:45:40 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-11-10 00:45:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 34 seconds
Variants: generated 200, build-succeeded 61, build-failed 53, syntax-invalid 24, redundant 62
Fitness: max 0.917(53), min 0.5(5), ave 0.874
Test execution time: sum 4584 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 00:45:48 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-11-10 00:45:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 41 seconds
Variants: generated 200, build-succeeded 48, build-failed 66, syntax-invalid 23, redundant 63
Fitness: max 0.917(39), min 0.333(3), ave 0.852
Test execution time: sum 3358 ms, max 115 ms, min 21 ms
----------------------------------------------------------------

2023-11-10 00:45:55 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-11-10 00:46:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 48 seconds
Variants: generated 200, build-succeeded 47, build-failed 50, syntax-invalid 36, redundant 67
Fitness: max 0.917(42), min 0.333(3), ave 0.872
Test execution time: sum 3472 ms, max 115 ms, min 21 ms
----------------------------------------------------------------

2023-11-10 00:46:02 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-11-10 00:46:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 56 seconds
Variants: generated 200, build-succeeded 46, build-failed 66, syntax-invalid 43, redundant 45
Fitness: max 0.917(42), min 0.5(1), ave 0.893
Test execution time: sum 3608 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 00:46:10 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-11-10 00:46:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 3 seconds
Variants: generated 200, build-succeeded 54, build-failed 49, syntax-invalid 41, redundant 56
Fitness: max 0.917(51), min 0.5(1), ave 0.904
Test execution time: sum 4083 ms, max 116 ms, min 21 ms
----------------------------------------------------------------

2023-11-10 00:46:17 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-11-10 00:46:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 13 seconds
Variants: generated 200, build-succeeded 63, build-failed 62, syntax-invalid 30, redundant 45
Fitness: max 0.917(63), min 0.917(63), ave 0.917
Test execution time: sum 5178 ms, max 155 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 00:46:27 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-11-10 01:01:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 24 seconds
Variants: generated 200, build-succeeded 82, build-failed 54, syntax-invalid 21, redundant 43
Fitness: max 0.917(78), min 0.583(1), ave 0.907
Test execution time: sum 906380 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 01:01:38 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-11-10 01:01:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 34 seconds
Variants: generated 200, build-succeeded 70, build-failed 53, syntax-invalid 34, redundant 43
Fitness: max 1(1), min 0.75(2), ave 0.913
Test execution time: sum 5500 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 01:01:48 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-11-10 01:01:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 44 seconds
Variants: generated 200, build-succeeded 74, build-failed 50, syntax-invalid 40, redundant 36
Fitness: max 0.917(70), min 0.75(3), ave 0.909
Test execution time: sum 5802 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 01:01:58 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-11-10 01:02:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 55 seconds
Variants: generated 200, build-succeeded 69, build-failed 56, syntax-invalid 40, redundant 35
Fitness: max 0.917(69), min 0.917(69), ave 0.917
Test execution time: sum 5679 ms, max 121 ms, min 67 ms
----------------------------------------------------------------

2023-11-10 01:02:09 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-11-10 01:26:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 5 seconds
Variants: generated 200, build-succeeded 69, build-failed 51, syntax-invalid 44, redundant 36
Fitness: max 0.917(68), min 0.333(1), ave 0.908
Test execution time: sum 1445583 ms, max 1440022 ms, min 67 ms
----------------------------------------------------------------

2023-11-10 01:26:19 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-11-10 01:26:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 16 seconds
Variants: generated 200, build-succeeded 76, build-failed 51, syntax-invalid 45, redundant 28
Fitness: max 0.917(71), min 0.75(5), ave 0.906
Test execution time: sum 5960 ms, max 122 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 01:26:30 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-11-10 01:44:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 27 seconds
Variants: generated 200, build-succeeded 77, build-failed 58, syntax-invalid 37, redundant 28
Fitness: max 0.917(76), min 0.333(1), ave 0.909
Test execution time: sum 1086491 ms, max 1080021 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 01:44:41 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-11-10 01:44:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 38 seconds
Variants: generated 200, build-succeeded 75, build-failed 50, syntax-invalid 44, redundant 31
Fitness: max 0.917(72), min 0.5(1), ave 0.908
Test execution time: sum 6024 ms, max 120 ms, min 21 ms
----------------------------------------------------------------

2023-11-10 01:44:52 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-11-10 01:45:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 48 seconds
Variants: generated 200, build-succeeded 66, build-failed 63, syntax-invalid 45, redundant 26
Fitness: max 0.917(64), min 0.75(2), ave 0.912
Test execution time: sum 5418 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 01:45:02 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-11-10 02:09:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 1 seconds
Variants: generated 200, build-succeeded 87, build-failed 55, syntax-invalid 36, redundant 22
Fitness: max 0.917(84), min 0.333(1), ave 0.906
Test execution time: sum 1446940 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 02:09:15 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-11-10 02:50:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 56 seconds
Variants: generated 200, build-succeeded 87, build-failed 55, syntax-invalid 35, redundant 23
Fitness: max 0.917(83), min 0.333(1), ave 0.899
Test execution time: sum 2449962 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 02:50:10 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-11-10 02:50:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 8 seconds
Variants: generated 200, build-succeeded 84, build-failed 49, syntax-invalid 40, redundant 27
Fitness: max 1(1), min 0.75(3), ave 0.911
Test execution time: sum 6696 ms, max 123 ms, min 21 ms
----------------------------------------------------------------

2023-11-10 02:50:22 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-11-10 02:50:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 21 seconds
Variants: generated 200, build-succeeded 84, build-failed 51, syntax-invalid 38, redundant 27
Fitness: max 0.917(80), min 0.75(4), ave 0.909
Test execution time: sum 6736 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 02:50:35 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-11-10 03:05:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 33 seconds
Variants: generated 200, build-succeeded 81, build-failed 52, syntax-invalid 44, redundant 23
Fitness: max 0.917(80), min 0.583(1), ave 0.913
Test execution time: sum 906410 ms, max 900022 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 03:05:47 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-11-10 03:06:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 47 seconds
Variants: generated 200, build-succeeded 92, build-failed 57, syntax-invalid 23, redundant 28
Fitness: max 0.917(90), min 0.75(2), ave 0.913
Test execution time: sum 7763 ms, max 137 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:06:01 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-11-10 03:30:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 2 seconds
Variants: generated 200, build-succeeded 105, build-failed 53, syntax-invalid 29, redundant 13
Fitness: max 0.917(98), min 0(1), ave 0.89
Test execution time: sum 1448406 ms, max 1440022 ms, min 20 ms
----------------------------------------------------------------

2023-11-10 03:30:15 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-11-10 03:30:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 17 seconds
Variants: generated 200, build-succeeded 108, build-failed 48, syntax-invalid 24, redundant 20
Fitness: max 1(1), min 0.75(3), ave 0.913
Test execution time: sum 8706 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:30:31 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-11-10 03:30:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 32 seconds
Variants: generated 200, build-succeeded 105, build-failed 56, syntax-invalid 23, redundant 16
Fitness: max 0.917(102), min 0.75(3), ave 0.912
Test execution time: sum 8330 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:30:46 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-11-10 03:31:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 46 seconds
Variants: generated 200, build-succeeded 99, build-failed 59, syntax-invalid 29, redundant 13
Fitness: max 0.917(99), min 0.917(99), ave 0.917
Test execution time: sum 7752 ms, max 127 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 03:31:00 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-11-10 03:31:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 1 seconds
Variants: generated 200, build-succeeded 102, build-failed 53, syntax-invalid 30, redundant 15
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 8080 ms, max 130 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 03:31:15 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-11-10 03:31:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 17 seconds
Variants: generated 200, build-succeeded 112, build-failed 54, syntax-invalid 21, redundant 13
Fitness: max 0.917(110), min 0.75(2), ave 0.914
Test execution time: sum 8702 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:31:31 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-11-10 03:31:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 32 seconds
Variants: generated 200, build-succeeded 102, build-failed 56, syntax-invalid 27, redundant 15
Fitness: max 0.917(99), min 0.5(2), ave 0.906
Test execution time: sum 7829 ms, max 121 ms, min 21 ms
----------------------------------------------------------------

2023-11-10 03:31:46 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-11-10 03:32:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 48 seconds
Variants: generated 200, build-succeeded 117, build-failed 50, syntax-invalid 23, redundant 10
Fitness: max 0.917(116), min 0.667(1), ave 0.915
Test execution time: sum 8871 ms, max 109 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:32:02 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-11-10 03:32:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 2 seconds
Variants: generated 200, build-succeeded 90, build-failed 63, syntax-invalid 35, redundant 12
Fitness: max 0.917(90), min 0.917(90), ave 0.917
Test execution time: sum 7029 ms, max 108 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 03:32:16 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-11-10 03:32:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 17 seconds
Variants: generated 200, build-succeeded 102, build-failed 51, syntax-invalid 34, redundant 13
Fitness: max 1(1), min 0.75(1), ave 0.916
Test execution time: sum 8016 ms, max 123 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:32:31 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-11-10 03:32:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 32 seconds
Variants: generated 200, build-succeeded 92, build-failed 61, syntax-invalid 42, redundant 5
Fitness: max 0.917(91), min 0.833(1), ave 0.916
Test execution time: sum 7320 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:32:46 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-11-10 03:33:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 47 seconds
Variants: generated 200, build-succeeded 97, build-failed 58, syntax-invalid 37, redundant 8
Fitness: max 0.917(97), min 0.917(97), ave 0.917
Test execution time: sum 8210 ms, max 138 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 03:33:01 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-11-10 03:33:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 3 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 31, redundant 6
Fitness: max 0.917(101), min 0.5(2), ave 0.906
Test execution time: sum 8367 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:33:17 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-11-10 03:33:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 19 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 28, redundant 12
Fitness: max 0.917(99), min 0.5(2), ave 0.908
Test execution time: sum 8054 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:33:33 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-11-10 03:33:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 34 seconds
Variants: generated 200, build-succeeded 101, build-failed 56, syntax-invalid 31, redundant 12
Fitness: max 1(1), min 0.75(1), ave 0.916
Test execution time: sum 8013 ms, max 124 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 03:33:48 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-11-10 03:34:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 50 seconds
Variants: generated 200, build-succeeded 96, build-failed 57, syntax-invalid 41, redundant 6
Fitness: max 1(1), min 0.75(2), ave 0.914
Test execution time: sum 7670 ms, max 126 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 03:34:04 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-11-10 03:58:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 5 seconds
Variants: generated 200, build-succeeded 97, build-failed 64, syntax-invalid 30, redundant 9
Fitness: max 1(2), min 0.333(1), ave 0.909
Test execution time: sum 1447521 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:58:19 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-11-10 03:58:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 23 seconds
Variants: generated 200, build-succeeded 114, build-failed 54, syntax-invalid 22, redundant 10
Fitness: max 1(1), min 0.5(3), ave 0.906
Test execution time: sum 8920 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:58:37 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-11-10 03:58:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 39 seconds
Variants: generated 200, build-succeeded 101, build-failed 51, syntax-invalid 39, redundant 9
Fitness: max 0.917(99), min 0.5(2), ave 0.908
Test execution time: sum 8059 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:58:53 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-11-10 03:59:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 56 seconds
Variants: generated 200, build-succeeded 108, build-failed 50, syntax-invalid 32, redundant 10
Fitness: max 0.917(106), min 0.667(1), ave 0.913
Test execution time: sum 8532 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 03:59:10 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-11-10 03:59:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 17 minutes 14 seconds
Variants: generated 200, build-succeeded 114, build-failed 51, syntax-invalid 25, redundant 10
Fitness: max 1(3), min 0.333(1), ave 0.914
Test execution time: sum 9069 ms, max 127 ms, min 21 ms
----------------------------------------------------------------

2023-11-10 03:59:27 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-11-10 03:59:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 17 minutes 30 seconds
Variants: generated 200, build-succeeded 96, build-failed 51, syntax-invalid 40, redundant 13
Fitness: max 0.917(96), min 0.917(96), ave 0.917
Test execution time: sum 7678 ms, max 132 ms, min 70 ms
----------------------------------------------------------------

2023-11-10 03:59:44 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-11-10 04:00:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 17 minutes 46 seconds
Variants: generated 200, build-succeeded 103, build-failed 49, syntax-invalid 39, redundant 9
Fitness: max 1(2), min 0.667(1), ave 0.914
Test execution time: sum 8144 ms, max 107 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:00:00 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-11-10 04:00:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 2 seconds
Variants: generated 200, build-succeeded 93, build-failed 50, syntax-invalid 45, redundant 12
Fitness: max 0.917(91), min 0.75(2), ave 0.913
Test execution time: sum 7258 ms, max 106 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 04:00:16 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-11-10 04:00:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 18 seconds
Variants: generated 200, build-succeeded 94, build-failed 48, syntax-invalid 48, redundant 10
Fitness: max 0.917(92), min 0.667(1), ave 0.913
Test execution time: sum 7247 ms, max 140 ms, min 56 ms
----------------------------------------------------------------

2023-11-10 04:00:32 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-11-10 04:24:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 33 seconds
Variants: generated 200, build-succeeded 86, build-failed 54, syntax-invalid 53, redundant 7
Fitness: max 1(1), min 0.333(1), ave 0.908
Test execution time: sum 1446506 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:24:47 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-11-10 04:25:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 48 seconds
Variants: generated 200, build-succeeded 83, build-failed 57, syntax-invalid 53, redundant 7
Fitness: max 1(1), min 0.917(82), ave 0.918
Test execution time: sum 6517 ms, max 127 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 04:25:02 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-11-10 04:25:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 4 seconds
Variants: generated 200, build-succeeded 96, build-failed 62, syntax-invalid 33, redundant 9
Fitness: max 1(2), min 0.5(1), ave 0.911
Test execution time: sum 7261 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:25:18 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-11-10 04:25:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 20 seconds
Variants: generated 200, build-succeeded 99, build-failed 60, syntax-invalid 33, redundant 8
Fitness: max 1(1), min 0.5(3), ave 0.903
Test execution time: sum 7496 ms, max 128 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:25:34 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-11-10 04:25:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 37 seconds
Variants: generated 200, build-succeeded 98, build-failed 57, syntax-invalid 38, redundant 7
Fitness: max 1(1), min 0.833(1), ave 0.917
Test execution time: sum 7624 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:25:51 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-11-10 04:26:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 54 seconds
Variants: generated 200, build-succeeded 98, build-failed 50, syntax-invalid 41, redundant 11
Fitness: max 0.917(95), min 0.5(1), ave 0.91
Test execution time: sum 7698 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:26:08 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-11-10 04:26:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 9 seconds
Variants: generated 200, build-succeeded 82, build-failed 65, syntax-invalid 48, redundant 5
Fitness: max 0.917(82), min 0.917(82), ave 0.917
Test execution time: sum 6511 ms, max 110 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 04:26:23 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-11-10 04:26:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 27 seconds
Variants: generated 200, build-succeeded 100, build-failed 62, syntax-invalid 30, redundant 8
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 8115 ms, max 146 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:26:41 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-11-10 04:26:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 45 seconds
Variants: generated 200, build-succeeded 108, build-failed 49, syntax-invalid 37, redundant 6
Fitness: max 0.917(105), min 0.667(1), ave 0.912
Test execution time: sum 8424 ms, max 121 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 04:26:59 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-11-10 04:27:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 3 seconds
Variants: generated 200, build-succeeded 104, build-failed 52, syntax-invalid 34, redundant 10
Fitness: max 1(2), min 0.583(1), ave 0.913
Test execution time: sum 8423 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:27:17 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-11-10 04:27:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 21 seconds
Variants: generated 200, build-succeeded 103, build-failed 65, syntax-invalid 24, redundant 8
Fitness: max 1(1), min 0.917(102), ave 0.917
Test execution time: sum 8291 ms, max 125 ms, min 67 ms
----------------------------------------------------------------

2023-11-10 04:27:35 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-11-10 04:27:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 41 seconds
Variants: generated 200, build-succeeded 114, build-failed 52, syntax-invalid 26, redundant 8
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 9292 ms, max 131 ms, min 34 ms
----------------------------------------------------------------

2023-11-10 04:27:55 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-11-10 04:28:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 59 seconds
Variants: generated 200, build-succeeded 106, build-failed 51, syntax-invalid 30, redundant 13
Fitness: max 1(1), min 0.75(3), ave 0.912
Test execution time: sum 8384 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:28:13 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-11-10 04:28:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 17 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 29, redundant 8
Fitness: max 1(4), min 0.333(1), ave 0.909
Test execution time: sum 8352 ms, max 127 ms, min 21 ms
----------------------------------------------------------------

2023-11-10 04:28:31 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-11-10 04:28:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 37 seconds
Variants: generated 200, build-succeeded 113, build-failed 46, syntax-invalid 34, redundant 7
Fitness: max 1(4), min 0.667(1), ave 0.917
Test execution time: sum 9215 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 04:28:51 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-11-10 04:53:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 10 minutes 56 seconds
Variants: generated 200, build-succeeded 111, build-failed 55, syntax-invalid 27, redundant 7
Fitness: max 1(2), min 0.333(1), ave 0.905
Test execution time: sum 1448814 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:53:10 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-11-10 04:53:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 11 minutes 15 seconds
Variants: generated 200, build-succeeded 110, build-failed 53, syntax-invalid 31, redundant 6
Fitness: max 0.917(99), min 0.5(7), ave 0.886
Test execution time: sum 8373 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:53:29 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-11-10 04:53:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 11 minutes 31 seconds
Variants: generated 200, build-succeeded 84, build-failed 72, syntax-invalid 42, redundant 2
Fitness: max 1(1), min 0.5(3), ave 0.903
Test execution time: sum 6660 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:53:45 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-11-10 04:54:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 11 minutes 50 seconds
Variants: generated 200, build-succeeded 109, build-failed 53, syntax-invalid 29, redundant 9
Fitness: max 0.917(99), min 0.5(7), ave 0.886
Test execution time: sum 8465 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:54:04 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-11-10 04:54:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 8 seconds
Variants: generated 200, build-succeeded 96, build-failed 53, syntax-invalid 41, redundant 10
Fitness: max 0.917(95), min 0.75(1), ave 0.915
Test execution time: sum 7710 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 04:54:22 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-11-10 04:54:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 24 seconds
Variants: generated 200, build-succeeded 81, build-failed 52, syntax-invalid 51, redundant 16
Fitness: max 1(1), min 0.75(2), ave 0.914
Test execution time: sum 6340 ms, max 120 ms, min 28 ms
----------------------------------------------------------------

2023-11-10 04:54:38 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-11-10 04:54:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 42 seconds
Variants: generated 200, build-succeeded 107, build-failed 51, syntax-invalid 36, redundant 6
Fitness: max 1(1), min 0.5(1), ave 0.912
Test execution time: sum 8267 ms, max 110 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:54:56 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-11-10 04:55:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 0 seconds
Variants: generated 200, build-succeeded 95, build-failed 61, syntax-invalid 41, redundant 3
Fitness: max 1(1), min 0.917(94), ave 0.918
Test execution time: sum 7607 ms, max 110 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 04:55:14 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-11-10 04:55:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 16 seconds
Variants: generated 200, build-succeeded 78, build-failed 63, syntax-invalid 50, redundant 9
Fitness: max 0.917(73), min 0.5(3), ave 0.896
Test execution time: sum 5855 ms, max 140 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:55:30 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-11-10 04:55:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 33 seconds
Variants: generated 200, build-succeeded 91, build-failed 60, syntax-invalid 43, redundant 6
Fitness: max 0.917(86), min 0.5(1), ave 0.906
Test execution time: sum 7185 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:55:47 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-11-10 04:56:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 50 seconds
Variants: generated 200, build-succeeded 84, build-failed 56, syntax-invalid 46, redundant 14
Fitness: max 0.917(81), min 0.75(2), ave 0.912
Test execution time: sum 6386 ms, max 111 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:56:04 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-11-10 04:56:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 14 minutes 7 seconds
Variants: generated 200, build-succeeded 94, build-failed 54, syntax-invalid 43, redundant 9
Fitness: max 0.917(92), min 0.75(1), ave 0.914
Test execution time: sum 7302 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:56:21 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-11-10 04:56:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 14 minutes 25 seconds
Variants: generated 200, build-succeeded 85, build-failed 66, syntax-invalid 41, redundant 8
Fitness: max 0.917(84), min 0.333(1), ave 0.91
Test execution time: sum 6760 ms, max 124 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 04:56:39 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-11-10 04:56:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 14 minutes 43 seconds
Variants: generated 200, build-succeeded 91, build-failed 63, syntax-invalid 37, redundant 9
Fitness: max 0.917(91), min 0.917(91), ave 0.917
Test execution time: sum 6972 ms, max 115 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 04:56:57 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-11-10 04:57:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 2 seconds
Variants: generated 200, build-succeeded 104, build-failed 52, syntax-invalid 33, redundant 11
Fitness: max 0.917(101), min 0.75(3), ave 0.912
Test execution time: sum 7821 ms, max 104 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 04:57:16 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-11-10 04:57:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 22 seconds
Variants: generated 200, build-succeeded 103, build-failed 63, syntax-invalid 25, redundant 9
Fitness: max 0.917(102), min 0.333(1), ave 0.911
Test execution time: sum 7761 ms, max 109 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 04:57:35 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-11-10 04:57:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 41 seconds
Variants: generated 200, build-succeeded 101, build-failed 60, syntax-invalid 34, redundant 5
Fitness: max 0.917(98), min 0.5(1), ave 0.909
Test execution time: sum 7585 ms, max 108 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 04:57:54 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-11-10 04:58:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 2 seconds
Variants: generated 200, build-succeeded 126, build-failed 49, syntax-invalid 19, redundant 6
Fitness: max 0.917(124), min 0.667(1), ave 0.913
Test execution time: sum 9406 ms, max 97 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 04:58:16 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-11-10 04:58:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 23 seconds
Variants: generated 200, build-succeeded 114, build-failed 54, syntax-invalid 26, redundant 6
Fitness: max 1(1), min 0.5(1), ave 0.912
Test execution time: sum 8799 ms, max 139 ms, min 21 ms
----------------------------------------------------------------

2023-11-10 04:58:37 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-11-10 04:58:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 44 seconds
Variants: generated 200, build-succeeded 108, build-failed 58, syntax-invalid 28, redundant 6
Fitness: max 0.917(107), min 0.75(1), ave 0.915
Test execution time: sum 8232 ms, max 110 ms, min 34 ms
----------------------------------------------------------------

2023-11-10 04:58:57 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-11-10 04:59:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 5 seconds
Variants: generated 200, build-succeeded 112, build-failed 49, syntax-invalid 27, redundant 12
Fitness: max 1(1), min 0.917(111), ave 0.917
Test execution time: sum 8620 ms, max 121 ms, min 67 ms
----------------------------------------------------------------

2023-11-10 04:59:19 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-11-10 04:59:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 24 seconds
Variants: generated 200, build-succeeded 97, build-failed 57, syntax-invalid 36, redundant 10
Fitness: max 0.917(97), min 0.917(97), ave 0.917
Test execution time: sum 7420 ms, max 122 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 04:59:38 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-11-10 04:59:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 45 seconds
Variants: generated 200, build-succeeded 104, build-failed 63, syntax-invalid 30, redundant 3
Fitness: max 0.917(104), min 0.917(104), ave 0.917
Test execution time: sum 7903 ms, max 110 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 04:59:59 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-11-10 05:00:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 5 seconds
Variants: generated 200, build-succeeded 101, build-failed 56, syntax-invalid 32, redundant 11
Fitness: max 0.917(101), min 0.917(101), ave 0.917
Test execution time: sum 7772 ms, max 117 ms, min 64 ms
----------------------------------------------------------------

2023-11-10 05:00:19 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-11-10 05:00:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 25 seconds
Variants: generated 200, build-succeeded 103, build-failed 58, syntax-invalid 29, redundant 10
Fitness: max 0.917(102), min 0.5(1), ave 0.913
Test execution time: sum 7679 ms, max 142 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:00:39 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-11-10 05:01:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 46 seconds
Variants: generated 200, build-succeeded 104, build-failed 51, syntax-invalid 35, redundant 10
Fitness: max 0.917(104), min 0.917(104), ave 0.917
Test execution time: sum 7883 ms, max 126 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:01:00 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-11-10 05:01:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 6 seconds
Variants: generated 200, build-succeeded 101, build-failed 64, syntax-invalid 33, redundant 2
Fitness: max 1(1), min 0.5(3), ave 0.905
Test execution time: sum 7596 ms, max 110 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:01:20 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-11-10 05:01:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 26 seconds
Variants: generated 200, build-succeeded 95, build-failed 55, syntax-invalid 43, redundant 7
Fitness: max 0.917(91), min 0.5(4), ave 0.899
Test execution time: sum 7091 ms, max 109 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:01:40 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-11-10 05:01:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 45 seconds
Variants: generated 200, build-succeeded 101, build-failed 50, syntax-invalid 43, redundant 6
Fitness: max 0.917(99), min 0.5(1), ave 0.911
Test execution time: sum 7596 ms, max 107 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:01:59 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-11-10 05:02:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 20 minutes 6 seconds
Variants: generated 200, build-succeeded 103, build-failed 57, syntax-invalid 33, redundant 7
Fitness: max 0.917(101), min 0.75(2), ave 0.913
Test execution time: sum 7967 ms, max 106 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:02:20 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-11-10 05:02:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 20 minutes 27 seconds
Variants: generated 200, build-succeeded 105, build-failed 53, syntax-invalid 35, redundant 7
Fitness: max 0.917(103), min 0.5(1), ave 0.911
Test execution time: sum 8119 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:02:41 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-11-10 05:03:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 20 minutes 47 seconds
Variants: generated 200, build-succeeded 93, build-failed 54, syntax-invalid 44, redundant 9
Fitness: max 0.917(92), min 0.75(1), ave 0.915
Test execution time: sum 7005 ms, max 108 ms, min 34 ms
----------------------------------------------------------------

2023-11-10 05:03:01 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-11-10 05:03:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 6 seconds
Variants: generated 200, build-succeeded 90, build-failed 58, syntax-invalid 45, redundant 7
Fitness: max 0.917(90), min 0.917(90), ave 0.917
Test execution time: sum 6994 ms, max 139 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:03:20 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-11-10 05:03:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 26 seconds
Variants: generated 200, build-succeeded 89, build-failed 62, syntax-invalid 45, redundant 4
Fitness: max 0.917(89), min 0.917(89), ave 0.917
Test execution time: sum 6944 ms, max 124 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:03:40 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-11-10 05:04:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 47 seconds
Variants: generated 200, build-succeeded 100, build-failed 55, syntax-invalid 35, redundant 10
Fitness: max 0.917(100), min 0.917(100), ave 0.917
Test execution time: sum 7645 ms, max 108 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:04:01 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-11-10 05:04:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 22 minutes 6 seconds
Variants: generated 200, build-succeeded 89, build-failed 59, syntax-invalid 44, redundant 8
Fitness: max 1(1), min 0.917(88), ave 0.918
Test execution time: sum 7064 ms, max 108 ms, min 71 ms
----------------------------------------------------------------

2023-11-10 05:04:20 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-11-10 05:04:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 22 minutes 27 seconds
Variants: generated 200, build-succeeded 90, build-failed 65, syntax-invalid 37, redundant 8
Fitness: max 0.917(90), min 0.917(90), ave 0.917
Test execution time: sum 6993 ms, max 114 ms, min 70 ms
----------------------------------------------------------------

2023-11-10 05:04:40 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-11-10 05:05:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 22 minutes 46 seconds
Variants: generated 200, build-succeeded 85, build-failed 56, syntax-invalid 45, redundant 14
Fitness: max 0.917(84), min 0.75(1), ave 0.915
Test execution time: sum 6536 ms, max 125 ms, min 34 ms
----------------------------------------------------------------

2023-11-10 05:05:00 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-11-10 05:05:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 23 minutes 5 seconds
Variants: generated 200, build-succeeded 87, build-failed 59, syntax-invalid 44, redundant 10
Fitness: max 0.917(86), min 0.75(1), ave 0.915
Test execution time: sum 6615 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:05:19 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-11-10 05:05:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 23 minutes 27 seconds
Variants: generated 200, build-succeeded 104, build-failed 53, syntax-invalid 36, redundant 7
Fitness: max 0.917(104), min 0.917(104), ave 0.917
Test execution time: sum 7964 ms, max 126 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:05:41 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-11-10 05:06:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 23 minutes 47 seconds
Variants: generated 200, build-succeeded 87, build-failed 56, syntax-invalid 49, redundant 8
Fitness: max 1(1), min 0.917(86), ave 0.918
Test execution time: sum 6815 ms, max 122 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:06:01 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-11-10 05:06:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 6 seconds
Variants: generated 200, build-succeeded 84, build-failed 58, syntax-invalid 46, redundant 12
Fitness: max 1(1), min 0.917(83), ave 0.918
Test execution time: sum 6426 ms, max 139 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:06:20 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-11-10 05:06:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 26 seconds
Variants: generated 200, build-succeeded 89, build-failed 56, syntax-invalid 44, redundant 11
Fitness: max 1(1), min 0.917(88), ave 0.918
Test execution time: sum 6774 ms, max 105 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:06:40 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-11-10 05:07:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 48 seconds
Variants: generated 200, build-succeeded 101, build-failed 51, syntax-invalid 40, redundant 8
Fitness: max 0.917(100), min 0.833(1), ave 0.916
Test execution time: sum 7814 ms, max 120 ms, min 55 ms
----------------------------------------------------------------

2023-11-10 05:07:02 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-11-10 05:07:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 8 seconds
Variants: generated 200, build-succeeded 92, build-failed 61, syntax-invalid 42, redundant 5
Fitness: max 0.917(86), min 0.5(6), ave 0.889
Test execution time: sum 6731 ms, max 105 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:07:22 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-11-10 05:07:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 30 seconds
Variants: generated 200, build-succeeded 105, build-failed 45, syntax-invalid 35, redundant 15
Fitness: max 0.917(103), min 0.667(1), ave 0.913
Test execution time: sum 8300 ms, max 124 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:07:44 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-11-10 05:08:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 52 seconds
Variants: generated 200, build-succeeded 93, build-failed 59, syntax-invalid 40, redundant 8
Fitness: max 0.917(91), min 0.5(2), ave 0.908
Test execution time: sum 7270 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:08:06 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-11-10 05:08:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 26 minutes 15 seconds
Variants: generated 200, build-succeeded 112, build-failed 52, syntax-invalid 29, redundant 7
Fitness: max 0.917(109), min 0.5(2), ave 0.908
Test execution time: sum 8530 ms, max 109 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:08:29 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-11-10 05:08:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 26 minutes 39 seconds
Variants: generated 200, build-succeeded 112, build-failed 56, syntax-invalid 26, redundant 6
Fitness: max 0.917(112), min 0.917(112), ave 0.917
Test execution time: sum 8787 ms, max 109 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:08:53 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-11-10 05:09:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 2 seconds
Variants: generated 200, build-succeeded 103, build-failed 66, syntax-invalid 25, redundant 6
Fitness: max 0.917(103), min 0.917(103), ave 0.917
Test execution time: sum 8091 ms, max 149 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:09:16 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-11-10 05:09:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 27 seconds
Variants: generated 200, build-succeeded 127, build-failed 54, syntax-invalid 16, redundant 3
Fitness: max 0.917(126), min 0.75(1), ave 0.915
Test execution time: sum 9850 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:09:41 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-11-10 05:10:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 52 seconds
Variants: generated 200, build-succeeded 113, build-failed 54, syntax-invalid 20, redundant 13
Fitness: max 0.917(112), min 0.75(1), ave 0.915
Test execution time: sum 8716 ms, max 126 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:10:06 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-11-10 05:10:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 28 minutes 14 seconds
Variants: generated 200, build-succeeded 106, build-failed 45, syntax-invalid 41, redundant 8
Fitness: max 0.917(105), min 0.667(1), ave 0.914
Test execution time: sum 8163 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:10:28 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-11-10 05:10:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 28 minutes 35 seconds
Variants: generated 200, build-succeeded 89, build-failed 63, syntax-invalid 40, redundant 8
Fitness: max 0.917(87), min 0.667(1), ave 0.912
Test execution time: sum 6715 ms, max 107 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:10:49 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-11-10 05:11:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 28 minutes 59 seconds
Variants: generated 200, build-succeeded 108, build-failed 49, syntax-invalid 31, redundant 12
Fitness: max 0.917(106), min 0.667(2), ave 0.912
Test execution time: sum 8203 ms, max 108 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:11:12 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-11-10 05:11:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 29 minutes 22 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 32, redundant 6
Fitness: max 0.917(101), min 0.5(1), ave 0.91
Test execution time: sum 7846 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:11:36 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-11-10 05:11:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 29 minutes 45 seconds
Variants: generated 200, build-succeeded 107, build-failed 47, syntax-invalid 37, redundant 9
Fitness: max 0.917(105), min 0.75(2), ave 0.914
Test execution time: sum 8165 ms, max 107 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:11:59 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-11-10 05:12:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 8 seconds
Variants: generated 200, build-succeeded 105, build-failed 60, syntax-invalid 29, redundant 6
Fitness: max 0.917(104), min 0.75(1), ave 0.915
Test execution time: sum 8054 ms, max 132 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:12:22 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-11-10 05:12:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 32 seconds
Variants: generated 200, build-succeeded 103, build-failed 61, syntax-invalid 28, redundant 8
Fitness: max 1(1), min 0.917(102), ave 0.917
Test execution time: sum 7945 ms, max 114 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:12:46 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-11-10 05:13:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 56 seconds
Variants: generated 200, build-succeeded 109, build-failed 55, syntax-invalid 28, redundant 8
Fitness: max 0.917(109), min 0.917(109), ave 0.917
Test execution time: sum 8478 ms, max 128 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:13:10 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-11-10 05:13:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 20 seconds
Variants: generated 200, build-succeeded 110, build-failed 52, syntax-invalid 25, redundant 13
Fitness: max 0.917(108), min 0.5(1), ave 0.911
Test execution time: sum 8555 ms, max 124 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:13:34 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-11-10 05:14:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 47 seconds
Variants: generated 200, build-succeeded 128, build-failed 43, syntax-invalid 17, redundant 12
Fitness: max 0.917(128), min 0.917(128), ave 0.917
Test execution time: sum 10033 ms, max 116 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:14:01 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-11-10 05:14:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 12 seconds
Variants: generated 200, build-succeeded 115, build-failed 54, syntax-invalid 19, redundant 12
Fitness: max 0.917(112), min 0.5(1), ave 0.91
Test execution time: sum 8867 ms, max 124 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:14:26 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-11-10 05:14:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 39 seconds
Variants: generated 200, build-succeeded 122, build-failed 56, syntax-invalid 15, redundant 7
Fitness: max 0.917(118), min 0.5(4), ave 0.903
Test execution time: sum 9282 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:14:53 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-11-10 05:15:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 6 seconds
Variants: generated 200, build-succeeded 128, build-failed 54, syntax-invalid 13, redundant 5
Fitness: max 0.917(125), min 0.5(3), ave 0.907
Test execution time: sum 9857 ms, max 138 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:15:20 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-11-10 05:15:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 30 seconds
Variants: generated 200, build-succeeded 101, build-failed 61, syntax-invalid 26, redundant 12
Fitness: max 0.917(99), min 0.5(2), ave 0.908
Test execution time: sum 7783 ms, max 131 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:15:44 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-11-10 05:16:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 56 seconds
Variants: generated 200, build-succeeded 117, build-failed 60, syntax-invalid 17, redundant 6
Fitness: max 1(1), min 0.5(8), ave 0.887
Test execution time: sum 8509 ms, max 107 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:16:10 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-11-10 05:16:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 21 seconds
Variants: generated 200, build-succeeded 108, build-failed 61, syntax-invalid 25, redundant 6
Fitness: max 0.917(102), min 0.5(6), ave 0.894
Test execution time: sum 8097 ms, max 112 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:16:35 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-11-10 05:17:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 48 seconds
Variants: generated 200, build-succeeded 114, build-failed 60, syntax-invalid 17, redundant 9
Fitness: max 0.917(111), min 0.5(2), ave 0.908
Test execution time: sum 8661 ms, max 128 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:17:02 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-11-10 05:17:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 14 seconds
Variants: generated 200, build-succeeded 119, build-failed 48, syntax-invalid 20, redundant 13
Fitness: max 0.917(118), min 0.5(1), ave 0.913
Test execution time: sum 9050 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:17:28 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-11-10 05:17:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 39 seconds
Variants: generated 200, build-succeeded 113, build-failed 52, syntax-invalid 23, redundant 12
Fitness: max 0.917(111), min 0.5(2), ave 0.909
Test execution time: sum 8537 ms, max 107 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:17:53 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-11-10 05:18:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 6 seconds
Variants: generated 200, build-succeeded 124, build-failed 47, syntax-invalid 22, redundant 7
Fitness: max 0.917(123), min 0.5(1), ave 0.913
Test execution time: sum 9490 ms, max 105 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:18:20 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-11-10 05:18:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 31 seconds
Variants: generated 200, build-succeeded 113, build-failed 53, syntax-invalid 25, redundant 9
Fitness: max 0.917(112), min 0.5(1), ave 0.913
Test execution time: sum 8660 ms, max 121 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:18:45 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-11-10 05:19:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 55 seconds
Variants: generated 200, build-succeeded 91, build-failed 70, syntax-invalid 33, redundant 6
Fitness: max 0.917(90), min 0.5(1), ave 0.912
Test execution time: sum 7195 ms, max 128 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:19:09 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-11-10 05:19:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 19 seconds
Variants: generated 200, build-succeeded 95, build-failed 57, syntax-invalid 41, redundant 7
Fitness: max 0.917(95), min 0.917(95), ave 0.917
Test execution time: sum 7859 ms, max 137 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:19:33 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-11-10 05:19:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 44 seconds
Variants: generated 200, build-succeeded 103, build-failed 57, syntax-invalid 33, redundant 7
Fitness: max 1(3), min 0.75(1), ave 0.917
Test execution time: sum 8086 ms, max 127 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:19:58 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-11-10 05:20:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 8 seconds
Variants: generated 200, build-succeeded 105, build-failed 45, syntax-invalid 37, redundant 13
Fitness: max 0.917(105), min 0.917(105), ave 0.917
Test execution time: sum 8183 ms, max 124 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:20:22 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-11-10 05:20:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 32 seconds
Variants: generated 200, build-succeeded 90, build-failed 55, syntax-invalid 43, redundant 12
Fitness: max 0.917(89), min 0.75(1), ave 0.915
Test execution time: sum 7120 ms, max 124 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:20:46 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-11-10 05:21:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 57 seconds
Variants: generated 200, build-succeeded 105, build-failed 51, syntax-invalid 34, redundant 10
Fitness: max 1(2), min 0.917(103), ave 0.918
Test execution time: sum 8313 ms, max 124 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:21:11 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-11-10 05:21:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 23 seconds
Variants: generated 200, build-succeeded 110, build-failed 55, syntax-invalid 26, redundant 9
Fitness: max 0.917(109), min 0.75(1), ave 0.915
Test execution time: sum 8599 ms, max 108 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 05:21:37 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-11-10 05:22:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 48 seconds
Variants: generated 200, build-succeeded 100, build-failed 53, syntax-invalid 37, redundant 10
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 7744 ms, max 112 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 05:22:01 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-11-10 05:22:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 13 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 34, redundant 6
Fitness: max 1(2), min 0.917(99), ave 0.918
Test execution time: sum 7978 ms, max 122 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:22:27 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-11-10 05:22:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 37 seconds
Variants: generated 200, build-succeeded 102, build-failed 54, syntax-invalid 39, redundant 5
Fitness: max 0.917(101), min 0.75(1), ave 0.915
Test execution time: sum 7881 ms, max 126 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:22:51 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-11-10 05:23:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 3 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 34, redundant 6
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 7852 ms, max 127 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:23:17 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-11-10 05:23:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 28 seconds
Variants: generated 200, build-succeeded 100, build-failed 61, syntax-invalid 31, redundant 8
Fitness: max 1(1), min 0.5(1), ave 0.912
Test execution time: sum 7566 ms, max 111 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:23:42 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-11-10 05:24:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 54 seconds
Variants: generated 200, build-succeeded 106, build-failed 48, syntax-invalid 37, redundant 9
Fitness: max 0.917(102), min 0.75(2), ave 0.912
Test execution time: sum 7913 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:24:08 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-11-10 05:24:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 20 seconds
Variants: generated 200, build-succeeded 106, build-failed 60, syntax-invalid 29, redundant 5
Fitness: max 1(1), min 0.917(105), ave 0.917
Test execution time: sum 8262 ms, max 124 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:24:34 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-11-10 05:24:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 45 seconds
Variants: generated 200, build-succeeded 94, build-failed 51, syntax-invalid 42, redundant 13
Fitness: max 0.917(94), min 0.917(94), ave 0.917
Test execution time: sum 7498 ms, max 108 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:24:59 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-11-10 05:25:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 12 seconds
Variants: generated 200, build-succeeded 113, build-failed 52, syntax-invalid 29, redundant 6
Fitness: max 0.917(113), min 0.917(113), ave 0.917
Test execution time: sum 8732 ms, max 155 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:25:26 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-11-10 05:25:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 37 seconds
Variants: generated 200, build-succeeded 93, build-failed 64, syntax-invalid 37, redundant 6
Fitness: max 0.917(93), min 0.917(93), ave 0.917
Test execution time: sum 7308 ms, max 112 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:25:51 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-11-10 05:26:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 4 seconds
Variants: generated 200, build-succeeded 101, build-failed 57, syntax-invalid 35, redundant 7
Fitness: max 0.917(100), min 0.833(1), ave 0.916
Test execution time: sum 7736 ms, max 128 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 05:26:18 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-11-10 05:26:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 31 seconds
Variants: generated 200, build-succeeded 106, build-failed 52, syntax-invalid 33, redundant 9
Fitness: max 0.917(105), min 0.333(1), ave 0.911
Test execution time: sum 8134 ms, max 135 ms, min 22 ms
----------------------------------------------------------------

2023-11-10 05:26:45 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-11-10 05:27:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 59 seconds
Variants: generated 200, build-succeeded 107, build-failed 52, syntax-invalid 34, redundant 7
Fitness: max 0.917(107), min 0.917(107), ave 0.917
Test execution time: sum 8469 ms, max 129 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:27:13 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-11-10 05:27:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 25 seconds
Variants: generated 200, build-succeeded 93, build-failed 62, syntax-invalid 40, redundant 5
Fitness: max 0.917(92), min 0.5(1), ave 0.912
Test execution time: sum 7293 ms, max 111 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 05:27:39 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-11-10 05:28:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 51 seconds
Variants: generated 200, build-succeeded 95, build-failed 54, syntax-invalid 41, redundant 10
Fitness: max 0.917(95), min 0.917(95), ave 0.917
Test execution time: sum 7493 ms, max 105 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:28:05 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-11-10 05:28:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 46 minutes 19 seconds
Variants: generated 200, build-succeeded 103, build-failed 56, syntax-invalid 32, redundant 9
Fitness: max 0.917(100), min 0.5(1), ave 0.908
Test execution time: sum 8209 ms, max 108 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:28:33 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-11-10 05:44:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 minutes 46 seconds
Variants: generated 200, build-succeeded 100, build-failed 58, syntax-invalid 32, redundant 10
Fitness: max 0.917(94), min 0.583(1), ave 0.902
Test execution time: sum 907750 ms, max 900024 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 05:44:00 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-11-10 05:44:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 2 minutes 13 seconds
Variants: generated 200, build-succeeded 98, build-failed 61, syntax-invalid 37, redundant 4
Fitness: max 0.917(98), min 0.917(98), ave 0.917
Test execution time: sum 8037 ms, max 132 ms, min 72 ms
----------------------------------------------------------------

2023-11-10 05:44:27 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-11-10 05:44:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 2 minutes 41 seconds
Variants: generated 200, build-succeeded 103, build-failed 61, syntax-invalid 29, redundant 7
Fitness: max 0.917(101), min 0.667(2), ave 0.912
Test execution time: sum 8385 ms, max 139 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 05:44:55 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-11-10 05:45:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 3 minutes 9 seconds
Variants: generated 200, build-succeeded 109, build-failed 49, syntax-invalid 33, redundant 9
Fitness: max 0.917(109), min 0.917(109), ave 0.917
Test execution time: sum 9002 ms, max 178 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:45:23 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-11-10 05:45:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 3 minutes 37 seconds
Variants: generated 200, build-succeeded 104, build-failed 55, syntax-invalid 27, redundant 14
Fitness: max 0.917(97), min 0.5(3), ave 0.897
Test execution time: sum 8089 ms, max 162 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:45:51 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-11-10 05:46:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 4 minutes 6 seconds
Variants: generated 200, build-succeeded 100, build-failed 65, syntax-invalid 29, redundant 6
Fitness: max 1(1), min 0.917(99), ave 0.917
Test execution time: sum 8372 ms, max 126 ms, min 68 ms
----------------------------------------------------------------

2023-11-10 05:46:20 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-11-10 05:46:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 4 minutes 36 seconds
Variants: generated 200, build-succeeded 110, build-failed 55, syntax-invalid 26, redundant 9
Fitness: max 0.917(108), min 0.5(1), ave 0.911
Test execution time: sum 9329 ms, max 143 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:46:50 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-11-10 05:47:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 5 minutes 3 seconds
Variants: generated 200, build-succeeded 97, build-failed 54, syntax-invalid 39, redundant 10
Fitness: max 0.917(97), min 0.917(97), ave 0.917
Test execution time: sum 8061 ms, max 129 ms, min 70 ms
----------------------------------------------------------------

2023-11-10 05:47:17 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-11-10 05:47:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 5 minutes 29 seconds
Variants: generated 200, build-succeeded 89, build-failed 55, syntax-invalid 45, redundant 11
Fitness: max 0.917(88), min 0.5(1), ave 0.912
Test execution time: sum 7383 ms, max 129 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:47:43 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-11-10 05:48:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 5 minutes 56 seconds
Variants: generated 200, build-succeeded 94, build-failed 60, syntax-invalid 37, redundant 9
Fitness: max 1(2), min 0.5(4), ave 0.901
Test execution time: sum 7941 ms, max 133 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 05:48:10 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-11-10 05:48:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 6 minutes 22 seconds
Variants: generated 200, build-succeeded 88, build-failed 56, syntax-invalid 50, redundant 6
Fitness: max 0.917(88), min 0.917(88), ave 0.917
Test execution time: sum 7515 ms, max 121 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 05:48:36 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-11-10 06:07:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 24 minutes 47 seconds
Variants: generated 200, build-succeeded 98, build-failed 56, syntax-invalid 38, redundant 8
Fitness: max 0.917(93), min 0.583(2), ave 0.906
Test execution time: sum 1084964 ms, max 539620 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 06:07:01 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-11-10 06:07:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 25 minutes 16 seconds
Variants: generated 200, build-succeeded 105, build-failed 50, syntax-invalid 33, redundant 12
Fitness: max 0.917(103), min 0.5(1), ave 0.912
Test execution time: sum 8569 ms, max 130 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 06:07:30 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-11-10 06:07:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 25 minutes 43 seconds
Variants: generated 200, build-succeeded 87, build-failed 64, syntax-invalid 43, redundant 6
Fitness: max 0.917(87), min 0.917(87), ave 0.917
Test execution time: sum 7308 ms, max 111 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 06:07:57 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-11-10 06:08:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 11 seconds
Variants: generated 200, build-succeeded 94, build-failed 55, syntax-invalid 42, redundant 9
Fitness: max 1(1), min 0.75(1), ave 0.916
Test execution time: sum 7733 ms, max 177 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 06:08:24 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-11-10 06:08:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 38 seconds
Variants: generated 200, build-succeeded 89, build-failed 70, syntax-invalid 35, redundant 6
Fitness: max 0.917(88), min 0.75(1), ave 0.915
Test execution time: sum 7578 ms, max 138 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 06:08:52 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-11-10 06:09:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 27 minutes 5 seconds
Variants: generated 200, build-succeeded 90, build-failed 58, syntax-invalid 45, redundant 7
Fitness: max 0.917(88), min 0.5(1), ave 0.91
Test execution time: sum 7740 ms, max 283 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 06:09:19 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-11-10 06:09:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 27 minutes 34 seconds
Variants: generated 200, build-succeeded 98, build-failed 58, syntax-invalid 36, redundant 8
Fitness: max 0.917(96), min 0.5(2), ave 0.908
Test execution time: sum 8706 ms, max 276 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 06:09:48 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-11-10 06:10:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 28 minutes 1 seconds
Variants: generated 200, build-succeeded 78, build-failed 65, syntax-invalid 48, redundant 9
Fitness: max 0.917(77), min 0.75(1), ave 0.915
Test execution time: sum 7164 ms, max 286 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 06:10:15 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-11-10 06:19:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 37 minutes 27 seconds
Variants: generated 200, build-succeeded 91, build-failed 60, syntax-invalid 43, redundant 6
Fitness: max 0.917(87), min 0.5(1), ave 0.906
Test execution time: sum 545861 ms, max 537678 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 06:19:41 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-11-10 06:20:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 37 minutes 55 seconds
Variants: generated 200, build-succeeded 91, build-failed 53, syntax-invalid 48, redundant 8
Fitness: max 0.917(89), min 0.5(1), ave 0.909
Test execution time: sum 8051 ms, max 272 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 06:20:09 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-11-10 06:47:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 5 minutes 16 seconds
Variants: generated 200, build-succeeded 99, build-failed 60, syntax-invalid 35, redundant 6
Fitness: max 0.917(95), min 0.583(3), ave 0.905
Test execution time: sum 1620233 ms, max 537517 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 06:47:30 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-11-10 06:47:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 5 minutes 45 seconds
Variants: generated 200, build-succeeded 95, build-failed 58, syntax-invalid 38, redundant 9
Fitness: max 0.917(92), min 0.5(2), ave 0.906
Test execution time: sum 8398 ms, max 134 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 06:47:59 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-11-10 06:57:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 11 seconds
Variants: generated 200, build-succeeded 92, build-failed 59, syntax-invalid 34, redundant 15
Fitness: max 0.917(91), min 0.583(1), ave 0.913
Test execution time: sum 544389 ms, max 536145 ms, min 71 ms
----------------------------------------------------------------

2023-11-10 06:57:25 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-11-10 06:57:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 40 seconds
Variants: generated 200, build-succeeded 93, build-failed 60, syntax-invalid 44, redundant 3
Fitness: max 0.917(90), min 0.5(3), ave 0.903
Test execution time: sum 8160 ms, max 202 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 06:57:54 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-11-10 06:58:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 16 minutes 8 seconds
Variants: generated 200, build-succeeded 79, build-failed 67, syntax-invalid 46, redundant 8
Fitness: max 0.917(79), min 0.917(79), ave 0.917
Test execution time: sum 7407 ms, max 220 ms, min 70 ms
----------------------------------------------------------------

2023-11-10 06:58:22 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-11-10 06:58:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 16 minutes 39 seconds
Variants: generated 200, build-succeeded 98, build-failed 56, syntax-invalid 41, redundant 5
Fitness: max 0.917(96), min 0.75(2), ave 0.913
Test execution time: sum 9338 ms, max 293 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 06:58:53 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-11-10 06:59:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 17 minutes 10 seconds
Variants: generated 200, build-succeeded 105, build-failed 49, syntax-invalid 35, redundant 11
Fitness: max 0.917(104), min 0.75(1), ave 0.915
Test execution time: sum 9717 ms, max 276 ms, min 30 ms
----------------------------------------------------------------

2023-11-10 06:59:24 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-11-10 06:59:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 17 minutes 40 seconds
Variants: generated 200, build-succeeded 98, build-failed 51, syntax-invalid 41, redundant 10
Fitness: max 0.917(95), min 0.5(1), ave 0.909
Test execution time: sum 8929 ms, max 239 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 06:59:54 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-11-10 07:00:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 18 minutes 9 seconds
Variants: generated 200, build-succeeded 88, build-failed 53, syntax-invalid 51, redundant 8
Fitness: max 0.917(88), min 0.917(88), ave 0.917
Test execution time: sum 8474 ms, max 289 ms, min 72 ms
----------------------------------------------------------------

2023-11-10 07:00:23 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-11-10 07:00:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 18 minutes 40 seconds
Variants: generated 200, build-succeeded 100, build-failed 48, syntax-invalid 44, redundant 8
Fitness: max 0.917(98), min 0.5(1), ave 0.911
Test execution time: sum 9340 ms, max 279 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 07:00:54 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-11-10 07:01:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 19 minutes 11 seconds
Variants: generated 200, build-succeeded 99, build-failed 55, syntax-invalid 42, redundant 4
Fitness: max 0.917(98), min 0.75(1), ave 0.915
Test execution time: sum 9493 ms, max 289 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 07:01:25 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-11-10 07:01:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 19 minutes 42 seconds
Variants: generated 200, build-succeeded 98, build-failed 54, syntax-invalid 39, redundant 9
Fitness: max 0.917(96), min 0.75(2), ave 0.913
Test execution time: sum 9379 ms, max 294 ms, min 35 ms
----------------------------------------------------------------

2023-11-10 07:01:56 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-11-10 07:02:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 20 minutes 13 seconds
Variants: generated 200, build-succeeded 98, build-failed 55, syntax-invalid 40, redundant 7
Fitness: max 0.917(98), min 0.917(98), ave 0.917
Test execution time: sum 8645 ms, max 306 ms, min 70 ms
----------------------------------------------------------------

2023-11-10 07:02:26 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-11-10 07:02:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 20 minutes 45 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 28, redundant 8
Fitness: max 1(1), min 0.5(1), ave 0.914
Test execution time: sum 9498 ms, max 178 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 07:02:59 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-11-10 07:03:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 21 minutes 17 seconds
Variants: generated 200, build-succeeded 99, build-failed 52, syntax-invalid 41, redundant 8
Fitness: max 1(2), min 0.917(97), ave 0.918
Test execution time: sum 9805 ms, max 796 ms, min 69 ms
----------------------------------------------------------------

2023-11-10 07:03:31 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-11-10 07:04:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 21 minutes 49 seconds
Variants: generated 200, build-succeeded 100, build-failed 57, syntax-invalid 35, redundant 8
Fitness: max 0.917(100), min 0.917(100), ave 0.917
Test execution time: sum 9323 ms, max 279 ms, min 71 ms
----------------------------------------------------------------

2023-11-10 07:04:03 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-11-10 07:04:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 22 minutes 18 seconds
Variants: generated 200, build-succeeded 82, build-failed 66, syntax-invalid 45, redundant 7
Fitness: max 0.917(82), min 0.917(82), ave 0.917
Test execution time: sum 7823 ms, max 260 ms, min 70 ms
----------------------------------------------------------------

2023-11-10 07:04:32 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-11-10 07:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 22 minutes 50 seconds
Variants: generated 200, build-succeeded 98, build-failed 54, syntax-invalid 42, redundant 6
Fitness: max 1(1), min 0.5(1), ave 0.913
Test execution time: sum 9446 ms, max 284 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 07:05:04 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-11-10 07:05:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 22 seconds
Variants: generated 200, build-succeeded 98, build-failed 55, syntax-invalid 40, redundant 7
Fitness: max 1(1), min 0.5(2), ave 0.909
Test execution time: sum 10029 ms, max 569 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 07:05:36 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-11-10 07:06:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 55 seconds
Variants: generated 200, build-succeeded 96, build-failed 57, syntax-invalid 34, redundant 13
Fitness: max 1(1), min 0.5(1), ave 0.911
Test execution time: sum 9699 ms, max 292 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 07:06:09 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-11-10 07:21:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 28 seconds
Variants: generated 200, build-succeeded 103, build-failed 53, syntax-invalid 38, redundant 6
Fitness: max 0.917(102), min 0.583(1), ave 0.913
Test execution time: sum 910907 ms, max 900025 ms, min 70 ms
----------------------------------------------------------------

2023-11-10 07:21:42 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-11-10 07:22:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 3 seconds
Variants: generated 200, build-succeeded 102, build-failed 53, syntax-invalid 31, redundant 14
Fitness: max 0.917(98), min 0.667(1), ave 0.909
Test execution time: sum 10856 ms, max 263 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 07:22:17 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-11-10 07:22:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 39 seconds
Variants: generated 200, build-succeeded 102, build-failed 52, syntax-invalid 34, redundant 12
Fitness: max 0.917(101), min 0.75(1), ave 0.915
Test execution time: sum 12140 ms, max 411 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 07:22:53 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-11-10 07:23:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 17 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 27, redundant 8
Fitness: max 0.917(109), min 0.917(109), ave 0.917
Test execution time: sum 13848 ms, max 530 ms, min 70 ms
----------------------------------------------------------------

2023-11-10 07:23:31 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-11-10 07:24:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 54 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 27, redundant 10
Fitness: max 0.917(104), min 0.833(1), ave 0.916
Test execution time: sum 12581 ms, max 284 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 07:24:08 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-11-10 07:24:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 31 seconds
Variants: generated 200, build-succeeded 106, build-failed 57, syntax-invalid 30, redundant 7
Fitness: max 1(1), min 0.5(2), ave 0.906
Test execution time: sum 12211 ms, max 300 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 07:24:45 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-11-10 07:25:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 43 minutes 8 seconds
Variants: generated 200, build-succeeded 110, build-failed 51, syntax-invalid 31, redundant 8
Fitness: max 0.917(109), min 0.5(1), ave 0.913
Test execution time: sum 12812 ms, max 291 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 07:25:22 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-11-10 07:25:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 43 minutes 45 seconds
Variants: generated 200, build-succeeded 100, build-failed 56, syntax-invalid 35, redundant 9
Fitness: max 0.917(98), min 0.5(2), ave 0.908
Test execution time: sum 12522 ms, max 289 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 07:25:59 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-11-10 07:26:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 44 minutes 23 seconds
Variants: generated 200, build-succeeded 105, build-failed 55, syntax-invalid 26, redundant 14
Fitness: max 0.917(104), min 0.667(1), ave 0.914
Test execution time: sum 12205 ms, max 266 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 07:26:37 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-11-10 07:27:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 45 minutes 4 seconds
Variants: generated 200, build-succeeded 112, build-failed 55, syntax-invalid 22, redundant 11
Fitness: max 0.917(110), min 0.75(1), ave 0.914
Test execution time: sum 14934 ms, max 276 ms, min 29 ms
----------------------------------------------------------------

2023-11-10 07:27:18 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-11-10 07:27:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 45 minutes 44 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 25, redundant 13
Fitness: max 0.917(102), min 0.5(2), ave 0.909
Test execution time: sum 14351 ms, max 290 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 07:27:58 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-11-10 07:28:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 46 minutes 28 seconds
Variants: generated 200, build-succeeded 119, build-failed 54, syntax-invalid 20, redundant 7
Fitness: max 0.917(117), min 0.5(2), ave 0.91
Test execution time: sum 17899 ms, max 278 ms, min 23 ms
----------------------------------------------------------------

2023-11-10 07:28:42 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-11-10 07:29:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 47 minutes 12 seconds
Variants: generated 200, build-succeeded 115, build-failed 61, syntax-invalid 21, redundant 3
Fitness: max 1(1), min 0.917(114), ave 0.917
Test execution time: sum 17235 ms, max 299 ms, min 73 ms
----------------------------------------------------------------

2023-11-10 07:29:26 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-11-10 07:30:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 47 minutes 51 seconds
Variants: generated 200, build-succeeded 106, build-failed 55, syntax-invalid 33, redundant 6
Fitness: max 1(1), min 0.5(1), ave 0.91
Test execution time: sum 14150 ms, max 277 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 07:30:05 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-11-10 07:48:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 20 seconds
Variants: generated 200, build-succeeded 113, build-failed 47, syntax-invalid 24, redundant 16
Fitness: max 1(1), min 0.583(2), ave 0.912
Test execution time: sum 1083688 ms, max 535012 ms, min 72 ms
----------------------------------------------------------------

2023-11-10 07:48:34 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-11-10 07:49:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 59 seconds
Variants: generated 200, build-succeeded 105, build-failed 45, syntax-invalid 35, redundant 15
Fitness: max 0.917(104), min 0.75(1), ave 0.915
Test execution time: sum 13786 ms, max 291 ms, min 36 ms
----------------------------------------------------------------

2023-11-10 07:49:13 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-11-10 07:49:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 37 seconds
Variants: generated 200, build-succeeded 101, build-failed 54, syntax-invalid 37, redundant 8
Fitness: max 0.917(98), min 0.583(1), ave 0.91
Test execution time: sum 12606 ms, max 265 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 07:49:51 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-11-10 07:50:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 15 seconds
Variants: generated 200, build-succeeded 103, build-failed 54, syntax-invalid 33, redundant 10
Fitness: max 0.917(102), min 0.833(1), ave 0.916
Test execution time: sum 12611 ms, max 271 ms, min 30 ms
----------------------------------------------------------------

2023-11-10 07:50:29 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-11-10 07:52:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 9 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 30, redundant 10
Fitness: max 0.917(97), min 0.5(2), ave 0.906
Test execution time: sum 87825 ms, max 74862 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 07:52:23 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-11-10 08:08:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 minutes 49 seconds
Variants: generated 200, build-succeeded 117, build-failed 50, syntax-invalid 25, redundant 8
Fitness: max 0.917(112), min 0.5(2), ave 0.904
Test execution time: sum 913409 ms, max 900025 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:08:03 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-11-10 08:08:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 26 minutes 32 seconds
Variants: generated 200, build-succeeded 121, build-failed 51, syntax-invalid 18, redundant 10
Fitness: max 0.917(120), min 0.5(1), ave 0.913
Test execution time: sum 15619 ms, max 304 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:08:46 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-11-10 08:09:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 11 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 26, redundant 7
Fitness: max 0.917(108), min 0.75(2), ave 0.914
Test execution time: sum 12412 ms, max 309 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:09:25 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-11-10 08:10:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 50 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 30, redundant 4
Fitness: max 1(1), min 0.333(1), ave 0.91
Test execution time: sum 12983 ms, max 700 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:10:04 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-11-10 08:10:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 28 minutes 31 seconds
Variants: generated 200, build-succeeded 122, build-failed 45, syntax-invalid 26, redundant 7
Fitness: max 0.917(120), min 0.5(1), ave 0.912
Test execution time: sum 13556 ms, max 306 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:10:45 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-11-10 08:11:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 29 minutes 8 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 35, redundant 5
Fitness: max 1(1), min 0.5(2), ave 0.908
Test execution time: sum 10969 ms, max 551 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:11:22 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-11-10 08:11:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 29 minutes 44 seconds
Variants: generated 200, build-succeeded 96, build-failed 59, syntax-invalid 37, redundant 8
Fitness: max 0.917(94), min 0.5(1), ave 0.911
Test execution time: sum 10674 ms, max 271 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:11:58 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-11-10 08:12:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 30 minutes 24 seconds
Variants: generated 200, build-succeeded 103, build-failed 65, syntax-invalid 24, redundant 8
Fitness: max 0.917(102), min 0.5(1), ave 0.913
Test execution time: sum 12569 ms, max 289 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:12:38 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-11-10 08:13:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 2 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 34, redundant 5
Fitness: max 0.917(101), min 0.5(6), ave 0.893
Test execution time: sum 11709 ms, max 289 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:13:16 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-11-10 08:13:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 41 seconds
Variants: generated 200, build-succeeded 106, build-failed 57, syntax-invalid 31, redundant 6
Fitness: max 0.917(104), min 0.5(1), ave 0.911
Test execution time: sum 12041 ms, max 485 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:13:55 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-11-10 08:14:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 17 seconds
Variants: generated 200, build-succeeded 96, build-failed 56, syntax-invalid 37, redundant 11
Fitness: max 0.917(94), min 0.5(2), ave 0.908
Test execution time: sum 10105 ms, max 268 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:14:31 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-11-10 08:15:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 54 seconds
Variants: generated 200, build-succeeded 97, build-failed 55, syntax-invalid 35, redundant 13
Fitness: max 0.917(95), min 0.5(2), ave 0.908
Test execution time: sum 10228 ms, max 293 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:15:08 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-11-10 08:15:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 33 minutes 29 seconds
Variants: generated 200, build-succeeded 91, build-failed 63, syntax-invalid 42, redundant 4
Fitness: max 0.917(86), min 0.5(4), ave 0.897
Test execution time: sum 9900 ms, max 288 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:15:43 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-11-10 08:16:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 8 seconds
Variants: generated 200, build-succeeded 112, build-failed 54, syntax-invalid 27, redundant 7
Fitness: max 0.917(101), min 0.5(9), ave 0.879
Test execution time: sum 10924 ms, max 281 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:16:22 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-11-10 08:16:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 45 seconds
Variants: generated 200, build-succeeded 98, build-failed 58, syntax-invalid 35, redundant 9
Fitness: max 0.917(95), min 0.5(3), ave 0.904
Test execution time: sum 10185 ms, max 282 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:16:59 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-11-10 08:17:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 35 minutes 25 seconds
Variants: generated 200, build-succeeded 110, build-failed 62, syntax-invalid 24, redundant 4
Fitness: max 0.917(109), min 0.5(1), ave 0.913
Test execution time: sum 10874 ms, max 179 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:17:38 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-11-10 08:18:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 36 minutes 1 seconds
Variants: generated 200, build-succeeded 93, build-failed 63, syntax-invalid 40, redundant 4
Fitness: max 0.917(92), min 0.75(1), ave 0.915
Test execution time: sum 9313 ms, max 284 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 08:18:15 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-11-10 08:18:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 36 minutes 42 seconds
Variants: generated 200, build-succeeded 121, build-failed 47, syntax-invalid 25, redundant 7
Fitness: max 0.917(116), min 0.5(4), ave 0.902
Test execution time: sum 12136 ms, max 260 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:18:56 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-11-10 08:19:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 37 minutes 19 seconds
Variants: generated 200, build-succeeded 98, build-failed 54, syntax-invalid 40, redundant 8
Fitness: max 0.917(94), min 0.5(2), ave 0.905
Test execution time: sum 10060 ms, max 293 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:19:33 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-11-10 08:20:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 37 minutes 56 seconds
Variants: generated 200, build-succeeded 100, build-failed 49, syntax-invalid 41, redundant 10
Fitness: max 0.917(97), min 0.5(3), ave 0.904
Test execution time: sum 9859 ms, max 244 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:20:10 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-11-10 08:20:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 38 minutes 34 seconds
Variants: generated 200, build-succeeded 102, build-failed 53, syntax-invalid 37, redundant 8
Fitness: max 1(1), min 0.5(2), ave 0.908
Test execution time: sum 10712 ms, max 265 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:20:48 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-11-10 08:36:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 54 minutes 10 seconds
Variants: generated 200, build-succeeded 88, build-failed 60, syntax-invalid 45, redundant 7
Fitness: max 0.917(86), min 0.5(1), ave 0.908
Test execution time: sum 909873 ms, max 900026 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:36:24 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-11-10 08:37:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 54 minutes 50 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 30, redundant 7
Fitness: max 0.917(103), min 0.833(1), ave 0.916
Test execution time: sum 11385 ms, max 281 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:37:04 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-11-10 08:37:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 55 minutes 30 seconds
Variants: generated 200, build-succeeded 108, build-failed 51, syntax-invalid 34, redundant 7
Fitness: max 0.917(108), min 0.917(108), ave 0.917
Test execution time: sum 12325 ms, max 266 ms, min 71 ms
----------------------------------------------------------------

2023-11-10 08:37:44 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-11-10 08:38:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 56 minutes 9 seconds
Variants: generated 200, build-succeeded 104, build-failed 49, syntax-invalid 35, redundant 12
Fitness: max 0.917(101), min 0.5(1), ave 0.909
Test execution time: sum 11901 ms, max 278 ms, min 28 ms
----------------------------------------------------------------

2023-11-10 08:38:23 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-11-10 08:39:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 56 minutes 48 seconds
Variants: generated 200, build-succeeded 92, build-failed 60, syntax-invalid 41, redundant 7
Fitness: max 0.917(91), min 0.5(1), ave 0.912
Test execution time: sum 11358 ms, max 274 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:39:02 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-11-10 08:39:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 57 minutes 29 seconds
Variants: generated 200, build-succeeded 109, build-failed 60, syntax-invalid 28, redundant 3
Fitness: max 1(1), min 0.5(1), ave 0.914
Test execution time: sum 12060 ms, max 272 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:39:43 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-11-10 08:40:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 58 minutes 6 seconds
Variants: generated 200, build-succeeded 97, build-failed 53, syntax-invalid 46, redundant 4
Fitness: max 0.917(94), min 0.75(2), ave 0.912
Test execution time: sum 10332 ms, max 286 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 08:40:20 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-11-10 08:41:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 58 minutes 47 seconds
Variants: generated 200, build-succeeded 116, build-failed 47, syntax-invalid 29, redundant 8
Fitness: max 0.917(115), min 0.75(1), ave 0.915
Test execution time: sum 12346 ms, max 295 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 08:41:01 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-11-10 08:41:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 59 minutes 26 seconds
Variants: generated 200, build-succeeded 103, build-failed 54, syntax-invalid 36, redundant 7
Fitness: max 0.917(102), min 0.5(1), ave 0.913
Test execution time: sum 10764 ms, max 296 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 08:41:40 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-11-10 08:42:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 3 seconds
Variants: generated 200, build-succeeded 90, build-failed 59, syntax-invalid 45, redundant 6
Fitness: max 1(1), min 0.5(1), ave 0.913
Test execution time: sum 8748 ms, max 272 ms, min 28 ms
----------------------------------------------------------------

2023-11-10 08:42:17 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-11-10 08:42:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 41 seconds
Variants: generated 200, build-succeeded 92, build-failed 60, syntax-invalid 39, redundant 9
Fitness: max 0.917(88), min 0.5(4), ave 0.899
Test execution time: sum 9634 ms, max 282 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:42:54 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-11-10 08:43:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 1 minutes 20 seconds
Variants: generated 200, build-succeeded 100, build-failed 48, syntax-invalid 41, redundant 11
Fitness: max 0.917(98), min 0.5(2), ave 0.908
Test execution time: sum 10952 ms, max 278 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:43:34 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-11-10 08:44:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 1 minutes 59 seconds
Variants: generated 200, build-succeeded 96, build-failed 58, syntax-invalid 36, redundant 10
Fitness: max 0.917(94), min 0.5(1), ave 0.911
Test execution time: sum 9894 ms, max 264 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 08:44:13 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-11-10 08:44:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 2 minutes 39 seconds
Variants: generated 200, build-succeeded 102, build-failed 52, syntax-invalid 34, redundant 12
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 10507 ms, max 284 ms, min 70 ms
----------------------------------------------------------------

2023-11-10 08:44:53 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-11-10 08:45:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 3 minutes 17 seconds
Variants: generated 200, build-succeeded 96, build-failed 55, syntax-invalid 43, redundant 6
Fitness: max 1(1), min 0.5(1), ave 0.913
Test execution time: sum 10215 ms, max 293 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:45:31 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-11-10 08:46:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 3 minutes 56 seconds
Variants: generated 200, build-succeeded 94, build-failed 62, syntax-invalid 39, redundant 5
Fitness: max 1(1), min 0.5(4), ave 0.898
Test execution time: sum 9912 ms, max 295 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:46:10 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-11-10 08:46:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 4 minutes 34 seconds
Variants: generated 200, build-succeeded 95, build-failed 56, syntax-invalid 42, redundant 7
Fitness: max 0.917(92), min 0.5(2), ave 0.905
Test execution time: sum 9969 ms, max 279 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:46:48 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-11-10 08:47:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 5 minutes 15 seconds
Variants: generated 200, build-succeeded 108, build-failed 47, syntax-invalid 30, redundant 15
Fitness: max 0.917(104), min 0.333(2), ave 0.898
Test execution time: sum 11364 ms, max 270 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 08:47:29 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-11-10 08:48:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 5 minutes 57 seconds
Variants: generated 200, build-succeeded 111, build-failed 50, syntax-invalid 30, redundant 9
Fitness: max 1(1), min 0.5(2), ave 0.908
Test execution time: sum 11990 ms, max 305 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 08:48:11 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-11-10 09:03:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 21 minutes 37 seconds
Variants: generated 200, build-succeeded 98, build-failed 60, syntax-invalid 37, redundant 5
Fitness: max 0.917(93), min 0.333(1), ave 0.897
Test execution time: sum 909949 ms, max 900026 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:03:51 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-11-10 09:04:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 22 minutes 18 seconds
Variants: generated 200, build-succeeded 103, build-failed 64, syntax-invalid 28, redundant 5
Fitness: max 1(1), min 0.333(1), ave 0.904
Test execution time: sum 10132 ms, max 274 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 09:04:32 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-11-10 09:05:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 22 minutes 55 seconds
Variants: generated 200, build-succeeded 84, build-failed 64, syntax-invalid 42, redundant 10
Fitness: max 0.917(81), min 0.333(1), ave 0.9
Test execution time: sum 8544 ms, max 295 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:05:09 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-11-10 09:20:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 38 minutes 35 seconds
Variants: generated 200, build-succeeded 97, build-failed 63, syntax-invalid 35, redundant 5
Fitness: max 0.917(93), min 0.333(2), ave 0.9
Test execution time: sum 910001 ms, max 900027 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 09:20:49 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-11-10 09:21:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 39 minutes 15 seconds
Variants: generated 200, build-succeeded 95, build-failed 56, syntax-invalid 43, redundant 6
Fitness: max 1(1), min 0.5(2), ave 0.909
Test execution time: sum 10308 ms, max 273 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 09:21:29 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-11-10 09:22:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 39 minutes 57 seconds
Variants: generated 200, build-succeeded 100, build-failed 62, syntax-invalid 30, redundant 8
Fitness: max 0.917(97), min 0.5(1), ave 0.909
Test execution time: sum 10917 ms, max 263 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 09:22:11 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-11-10 09:22:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 40 minutes 38 seconds
Variants: generated 200, build-succeeded 94, build-failed 64, syntax-invalid 38, redundant 4
Fitness: max 0.917(91), min 0.5(2), ave 0.907
Test execution time: sum 10476 ms, max 278 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:22:51 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-11-10 09:23:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 41 minutes 17 seconds
Variants: generated 200, build-succeeded 87, build-failed 55, syntax-invalid 44, redundant 14
Fitness: max 0.917(85), min 0.5(2), ave 0.907
Test execution time: sum 10496 ms, max 293 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:23:31 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-11-10 09:48:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 5 minutes 58 seconds
Variants: generated 200, build-succeeded 86, build-failed 57, syntax-invalid 50, redundant 7
Fitness: max 1(1), min 0.333(3), ave 0.892
Test execution time: sum 1450936 ms, max 1440022 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 09:48:12 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-11-10 09:48:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 6 minutes 40 seconds
Variants: generated 200, build-succeeded 91, build-failed 62, syntax-invalid 41, redundant 6
Fitness: max 0.917(89), min 0.5(2), ave 0.908
Test execution time: sum 11383 ms, max 297 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 09:48:54 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-11-10 09:49:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 7 minutes 22 seconds
Variants: generated 200, build-succeeded 93, build-failed 53, syntax-invalid 43, redundant 11
Fitness: max 1(1), min 0.333(3), ave 0.89
Test execution time: sum 11513 ms, max 300 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:49:36 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-11-10 09:50:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 7 seconds
Variants: generated 200, build-succeeded 103, build-failed 55, syntax-invalid 33, redundant 9
Fitness: max 0.917(99), min 0.333(1), ave 0.899
Test execution time: sum 12445 ms, max 291 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:50:21 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-11-10 09:51:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 49 seconds
Variants: generated 200, build-succeeded 93, build-failed 57, syntax-invalid 39, redundant 11
Fitness: max 1(1), min 0.5(6), ave 0.881
Test execution time: sum 11151 ms, max 292 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:51:03 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-11-10 09:51:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 35 seconds
Variants: generated 200, build-succeeded 106, build-failed 51, syntax-invalid 34, redundant 9
Fitness: max 0.917(99), min 0.333(3), ave 0.887
Test execution time: sum 13097 ms, max 307 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:51:49 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-11-10 09:52:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 10 minutes 19 seconds
Variants: generated 200, build-succeeded 97, build-failed 59, syntax-invalid 33, redundant 11
Fitness: max 0.917(89), min 0.333(4), ave 0.879
Test execution time: sum 11612 ms, max 565 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 09:52:33 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-11-10 09:53:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 11 minutes 2 seconds
Variants: generated 200, build-succeeded 93, build-failed 61, syntax-invalid 40, redundant 6
Fitness: max 1(1), min 0.333(2), ave 0.894
Test execution time: sum 11970 ms, max 282 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:53:16 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-11-10 09:54:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 11 minutes 46 seconds
Variants: generated 200, build-succeeded 96, build-failed 58, syntax-invalid 39, redundant 7
Fitness: max 0.917(90), min 0.333(1), ave 0.893
Test execution time: sum 12557 ms, max 298 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:54:00 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-11-10 09:54:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 12 minutes 31 seconds
Variants: generated 200, build-succeeded 97, build-failed 58, syntax-invalid 37, redundant 8
Fitness: max 1(1), min 0.333(2), ave 0.899
Test execution time: sum 12296 ms, max 279 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:54:45 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-11-10 09:55:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 13 minutes 14 seconds
Variants: generated 200, build-succeeded 95, build-failed 55, syntax-invalid 43, redundant 7
Fitness: max 0.917(93), min 0.5(1), ave 0.911
Test execution time: sum 11592 ms, max 263 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 09:55:28 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-11-10 09:56:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 13 minutes 58 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 35, redundant 5
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 11640 ms, max 281 ms, min 72 ms
----------------------------------------------------------------

2023-11-10 09:56:12 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-11-10 09:56:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 41 seconds
Variants: generated 200, build-succeeded 99, build-failed 59, syntax-invalid 36, redundant 6
Fitness: max 0.917(98), min 0.417(1), ave 0.912
Test execution time: sum 10786 ms, max 264 ms, min 24 ms
----------------------------------------------------------------

2023-11-10 09:56:55 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-11-10 09:57:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 15 minutes 24 seconds
Variants: generated 200, build-succeeded 93, build-failed 53, syntax-invalid 45, redundant 9
Fitness: max 0.917(91), min 0.5(1), ave 0.91
Test execution time: sum 11199 ms, max 290 ms, min 30 ms
----------------------------------------------------------------

2023-11-10 09:57:38 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-11-10 09:58:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 16 minutes 9 seconds
Variants: generated 200, build-succeeded 103, build-failed 53, syntax-invalid 39, redundant 5
Fitness: max 0.917(101), min 0.333(1), ave 0.909
Test execution time: sum 12782 ms, max 287 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 09:58:23 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-11-10 09:59:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 16 minutes 58 seconds
Variants: generated 200, build-succeeded 117, build-failed 45, syntax-invalid 29, redundant 9
Fitness: max 0.917(114), min 0.5(1), ave 0.91
Test execution time: sum 14480 ms, max 321 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 09:59:12 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-11-10 09:59:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 17 minutes 45 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 31, redundant 11
Fitness: max 0.917(102), min 0.75(2), ave 0.913
Test execution time: sum 12557 ms, max 272 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 09:59:59 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-11-10 10:00:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 18 minutes 27 seconds
Variants: generated 200, build-succeeded 86, build-failed 56, syntax-invalid 52, redundant 6
Fitness: max 0.917(86), min 0.917(86), ave 0.917
Test execution time: sum 10957 ms, max 271 ms, min 72 ms
----------------------------------------------------------------

2023-11-10 10:00:41 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-11-10 10:01:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 19 minutes 11 seconds
Variants: generated 200, build-succeeded 90, build-failed 53, syntax-invalid 44, redundant 13
Fitness: max 0.917(89), min 0.5(1), ave 0.912
Test execution time: sum 12199 ms, max 284 ms, min 50 ms
----------------------------------------------------------------

2023-11-10 10:01:25 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-11-10 10:02:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 19 minutes 54 seconds
Variants: generated 200, build-succeeded 84, build-failed 58, syntax-invalid 51, redundant 7
Fitness: max 0.917(81), min 0.5(3), ave 0.902
Test execution time: sum 12213 ms, max 310 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:02:08 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-11-10 10:02:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 20 minutes 40 seconds
Variants: generated 200, build-succeeded 89, build-failed 51, syntax-invalid 45, redundant 15
Fitness: max 0.917(88), min 0.5(1), ave 0.912
Test execution time: sum 13189 ms, max 291 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:02:54 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-11-10 10:03:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 21 minutes 28 seconds
Variants: generated 200, build-succeeded 100, build-failed 51, syntax-invalid 40, redundant 9
Fitness: max 0.917(94), min 0.25(1), ave 0.892
Test execution time: sum 13625 ms, max 296 ms, min 25 ms
----------------------------------------------------------------

2023-11-10 10:03:41 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-11-10 10:04:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 22 minutes 18 seconds
Variants: generated 200, build-succeeded 106, build-failed 56, syntax-invalid 29, redundant 9
Fitness: max 0.917(104), min 0.5(1), ave 0.911
Test execution time: sum 14998 ms, max 293 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:04:32 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-11-10 10:05:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 23 minutes 6 seconds
Variants: generated 200, build-succeeded 102, build-failed 56, syntax-invalid 38, redundant 4
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 14446 ms, max 303 ms, min 74 ms
----------------------------------------------------------------

2023-11-10 10:05:20 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-11-10 10:06:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 23 minutes 55 seconds
Variants: generated 200, build-succeeded 105, build-failed 51, syntax-invalid 40, redundant 4
Fitness: max 1(1), min 0.75(1), ave 0.916
Test execution time: sum 14786 ms, max 274 ms, min 28 ms
----------------------------------------------------------------

2023-11-10 10:06:09 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-11-10 10:06:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 24 minutes 45 seconds
Variants: generated 200, build-succeeded 105, build-failed 50, syntax-invalid 40, redundant 5
Fitness: max 0.917(105), min 0.917(105), ave 0.917
Test execution time: sum 15769 ms, max 301 ms, min 72 ms
----------------------------------------------------------------

2023-11-10 10:06:59 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-11-10 10:07:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 36 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 32, redundant 10
Fitness: max 0.917(102), min 0.5(1), ave 0.911
Test execution time: sum 15570 ms, max 295 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:07:50 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-11-10 10:08:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 minutes 24 seconds
Variants: generated 200, build-succeeded 93, build-failed 49, syntax-invalid 46, redundant 12
Fitness: max 0.917(93), min 0.917(93), ave 0.917
Test execution time: sum 14983 ms, max 301 ms, min 73 ms
----------------------------------------------------------------

2023-11-10 10:08:38 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-11-10 10:09:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 15 seconds
Variants: generated 200, build-succeeded 102, build-failed 53, syntax-invalid 34, redundant 11
Fitness: max 1(1), min 0.5(1), ave 0.913
Test execution time: sum 15721 ms, max 287 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:09:29 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-11-10 10:10:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 28 minutes 6 seconds
Variants: generated 200, build-succeeded 103, build-failed 56, syntax-invalid 34, redundant 7
Fitness: max 0.917(103), min 0.917(103), ave 0.917
Test execution time: sum 15308 ms, max 293 ms, min 75 ms
----------------------------------------------------------------

2023-11-10 10:10:20 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-11-10 10:11:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 28 minutes 52 seconds
Variants: generated 200, build-succeeded 88, build-failed 61, syntax-invalid 46, redundant 5
Fitness: max 0.917(86), min 0.75(2), ave 0.913
Test execution time: sum 13140 ms, max 292 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:11:06 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-11-10 10:11:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 29 minutes 44 seconds
Variants: generated 200, build-succeeded 104, build-failed 55, syntax-invalid 35, redundant 6
Fitness: max 0.917(102), min 0.667(1), ave 0.913
Test execution time: sum 16632 ms, max 313 ms, min 29 ms
----------------------------------------------------------------

2023-11-10 10:11:58 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-11-10 10:12:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 30 minutes 34 seconds
Variants: generated 200, build-succeeded 95, build-failed 53, syntax-invalid 37, redundant 15
Fitness: max 0.917(95), min 0.917(95), ave 0.917
Test execution time: sum 14646 ms, max 297 ms, min 75 ms
----------------------------------------------------------------

2023-11-10 10:12:48 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-11-10 10:13:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 31 minutes 28 seconds
Variants: generated 200, build-succeeded 113, build-failed 50, syntax-invalid 29, redundant 8
Fitness: max 0.917(112), min 0.75(1), ave 0.915
Test execution time: sum 17503 ms, max 295 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:13:41 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-11-10 10:14:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 32 minutes 19 seconds
Variants: generated 200, build-succeeded 108, build-failed 51, syntax-invalid 30, redundant 11
Fitness: max 0.917(108), min 0.917(108), ave 0.917
Test execution time: sum 15242 ms, max 272 ms, min 74 ms
----------------------------------------------------------------

2023-11-10 10:14:33 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-11-10 10:15:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 33 minutes 13 seconds
Variants: generated 200, build-succeeded 116, build-failed 52, syntax-invalid 25, redundant 7
Fitness: max 0.917(115), min 0.75(1), ave 0.915
Test execution time: sum 16507 ms, max 303 ms, min 30 ms
----------------------------------------------------------------

2023-11-10 10:15:27 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-11-10 10:16:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 34 minutes 9 seconds
Variants: generated 200, build-succeeded 114, build-failed 54, syntax-invalid 25, redundant 7
Fitness: max 0.917(113), min 0.75(1), ave 0.915
Test execution time: sum 17712 ms, max 305 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:16:23 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-11-10 10:17:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 35 minutes 2 seconds
Variants: generated 200, build-succeeded 102, build-failed 57, syntax-invalid 34, redundant 7
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 16617 ms, max 295 ms, min 74 ms
----------------------------------------------------------------

2023-11-10 10:17:16 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-11-10 10:18:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 35 minutes 58 seconds
Variants: generated 200, build-succeeded 116, build-failed 47, syntax-invalid 33, redundant 4
Fitness: max 0.917(116), min 0.917(116), ave 0.917
Test execution time: sum 19816 ms, max 288 ms, min 75 ms
----------------------------------------------------------------

2023-11-10 10:18:12 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-11-10 10:19:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 36 minutes 52 seconds
Variants: generated 200, build-succeeded 106, build-failed 51, syntax-invalid 36, redundant 7
Fitness: max 1(1), min 0.583(1), ave 0.913
Test execution time: sum 17116 ms, max 281 ms, min 38 ms
----------------------------------------------------------------

2023-11-10 10:19:05 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-11-10 10:34:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 52 minutes 45 seconds
Variants: generated 200, build-succeeded 100, build-failed 57, syntax-invalid 32, redundant 11
Fitness: max 0.917(97), min 0.5(2), ave 0.905
Test execution time: sum 916136 ms, max 900027 ms, min 29 ms
----------------------------------------------------------------

2023-11-10 10:34:59 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-11-10 10:35:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 38 seconds
Variants: generated 200, build-succeeded 102, build-failed 47, syntax-invalid 34, redundant 17
Fitness: max 0.917(101), min 0.5(1), ave 0.913
Test execution time: sum 16699 ms, max 286 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:35:52 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-11-10 10:36:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 54 minutes 29 seconds
Variants: generated 200, build-succeeded 99, build-failed 58, syntax-invalid 35, redundant 8
Fitness: max 0.917(97), min 0.5(1), ave 0.911
Test execution time: sum 15140 ms, max 302 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:36:43 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-11-10 10:37:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 55 minutes 23 seconds
Variants: generated 200, build-succeeded 105, build-failed 55, syntax-invalid 33, redundant 7
Fitness: max 0.917(104), min 0.5(1), ave 0.913
Test execution time: sum 16643 ms, max 278 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:37:37 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-11-10 10:38:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 56 minutes 18 seconds
Variants: generated 200, build-succeeded 116, build-failed 46, syntax-invalid 29, redundant 9
Fitness: max 0.917(116), min 0.917(116), ave 0.917
Test execution time: sum 16817 ms, max 286 ms, min 75 ms
----------------------------------------------------------------

2023-11-10 10:38:31 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-11-10 10:39:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 57 minutes 10 seconds
Variants: generated 200, build-succeeded 102, build-failed 54, syntax-invalid 33, redundant 11
Fitness: max 0.917(99), min 0.5(3), ave 0.904
Test execution time: sum 14920 ms, max 306 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:39:24 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-11-10 10:40:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 58 minutes 6 seconds
Variants: generated 200, build-succeeded 109, build-failed 63, syntax-invalid 26, redundant 2
Fitness: max 0.917(109), min 0.917(109), ave 0.917
Test execution time: sum 16307 ms, max 315 ms, min 72 ms
----------------------------------------------------------------

2023-11-10 10:40:20 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-11-10 10:41:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 58 minutes 58 seconds
Variants: generated 200, build-succeeded 100, build-failed 64, syntax-invalid 33, redundant 3
Fitness: max 0.917(99), min 0.333(1), ave 0.911
Test execution time: sum 14902 ms, max 287 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:41:12 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-11-10 10:42:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 59 minutes 53 seconds
Variants: generated 200, build-succeeded 109, build-failed 47, syntax-invalid 36, redundant 8
Fitness: max 0.917(107), min 0.5(1), ave 0.911
Test execution time: sum 17045 ms, max 288 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:42:07 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-11-10 10:43:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 48 seconds
Variants: generated 200, build-succeeded 111, build-failed 49, syntax-invalid 31, redundant 9
Fitness: max 0.917(109), min 0.333(2), ave 0.906
Test execution time: sum 16626 ms, max 284 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:43:02 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-11-10 10:43:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 1 minutes 40 seconds
Variants: generated 200, build-succeeded 96, build-failed 60, syntax-invalid 35, redundant 9
Fitness: max 0.917(92), min 0.333(1), ave 0.898
Test execution time: sum 14738 ms, max 283 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:43:54 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-11-10 10:44:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 2 minutes 37 seconds
Variants: generated 200, build-succeeded 109, build-failed 55, syntax-invalid 31, redundant 5
Fitness: max 0.917(106), min 0.5(3), ave 0.905
Test execution time: sum 17595 ms, max 298 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:44:51 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-11-10 10:45:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 3 minutes 35 seconds
Variants: generated 200, build-succeeded 112, build-failed 48, syntax-invalid 35, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.916
Test execution time: sum 19314 ms, max 286 ms, min 28 ms
----------------------------------------------------------------

2023-11-10 10:45:49 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-11-10 10:46:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 4 minutes 30 seconds
Variants: generated 200, build-succeeded 102, build-failed 52, syntax-invalid 37, redundant 9
Fitness: max 0.917(101), min 0.75(1), ave 0.915
Test execution time: sum 17747 ms, max 287 ms, min 70 ms
----------------------------------------------------------------

2023-11-10 10:46:44 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-11-10 10:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 5 minutes 28 seconds
Variants: generated 200, build-succeeded 110, build-failed 48, syntax-invalid 32, redundant 10
Fitness: max 0.917(109), min 0.75(1), ave 0.915
Test execution time: sum 18511 ms, max 285 ms, min 28 ms
----------------------------------------------------------------

2023-11-10 10:47:41 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-11-10 10:48:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 6 minutes 18 seconds
Variants: generated 200, build-succeeded 87, build-failed 67, syntax-invalid 43, redundant 3
Fitness: max 0.917(84), min 0.5(3), ave 0.902
Test execution time: sum 14124 ms, max 276 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:48:32 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-11-10 10:49:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 7 minutes 14 seconds
Variants: generated 200, build-succeeded 104, build-failed 55, syntax-invalid 34, redundant 7
Fitness: max 0.917(101), min 0.5(2), ave 0.907
Test execution time: sum 16825 ms, max 299 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:49:27 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-11-10 10:50:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 8 minutes 13 seconds
Variants: generated 200, build-succeeded 110, build-failed 56, syntax-invalid 25, redundant 9
Fitness: max 0.917(107), min 0.5(3), ave 0.905
Test execution time: sum 18757 ms, max 280 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:50:27 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-11-10 10:51:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 9 minutes 7 seconds
Variants: generated 200, build-succeeded 101, build-failed 56, syntax-invalid 33, redundant 10
Fitness: max 0.917(94), min 0.5(5), ave 0.891
Test execution time: sum 15562 ms, max 299 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:51:21 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-11-10 10:52:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 10 minutes 1 seconds
Variants: generated 200, build-succeeded 93, build-failed 63, syntax-invalid 38, redundant 6
Fitness: max 0.917(91), min 0.5(2), ave 0.908
Test execution time: sum 15299 ms, max 278 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:52:15 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-11-10 10:53:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 10 minutes 56 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 33, redundant 7
Fitness: max 1(1), min 0.5(6), ave 0.892
Test execution time: sum 16167 ms, max 276 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:53:10 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-11-10 10:54:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 11 minutes 47 seconds
Variants: generated 200, build-succeeded 89, build-failed 62, syntax-invalid 37, redundant 12
Fitness: max 0.917(84), min 0.5(5), ave 0.893
Test execution time: sum 13640 ms, max 295 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:54:01 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-11-10 10:54:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 12 minutes 42 seconds
Variants: generated 200, build-succeeded 103, build-failed 49, syntax-invalid 40, redundant 8
Fitness: max 1(1), min 0.917(102), ave 0.917
Test execution time: sum 16531 ms, max 277 ms, min 74 ms
----------------------------------------------------------------

2023-11-10 10:54:56 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-11-10 10:55:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 13 minutes 36 seconds
Variants: generated 200, build-succeeded 97, build-failed 63, syntax-invalid 35, redundant 5
Fitness: max 0.917(95), min 0.5(2), ave 0.908
Test execution time: sum 14558 ms, max 280 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:55:49 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-11-10 10:56:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 14 minutes 28 seconds
Variants: generated 200, build-succeeded 95, build-failed 62, syntax-invalid 37, redundant 6
Fitness: max 0.917(92), min 0.5(3), ave 0.904
Test execution time: sum 14194 ms, max 284 ms, min 30 ms
----------------------------------------------------------------

2023-11-10 10:56:42 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-11-10 10:57:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 15 minutes 19 seconds
Variants: generated 200, build-succeeded 96, build-failed 53, syntax-invalid 39, redundant 12
Fitness: max 0.917(89), min 0.5(6), ave 0.888
Test execution time: sum 12902 ms, max 279 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 10:57:33 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-11-10 10:58:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 16 minutes 15 seconds
Variants: generated 200, build-succeeded 107, build-failed 55, syntax-invalid 30, redundant 8
Fitness: max 0.917(102), min 0.5(5), ave 0.897
Test execution time: sum 15814 ms, max 289 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 10:58:29 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-11-10 10:59:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 17 minutes 12 seconds
Variants: generated 200, build-succeeded 113, build-failed 59, syntax-invalid 23, redundant 5
Fitness: max 0.917(111), min 0.5(2), ave 0.909
Test execution time: sum 15024 ms, max 287 ms, min 28 ms
----------------------------------------------------------------

2023-11-10 10:59:26 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-11-10 11:00:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 18 minutes 5 seconds
Variants: generated 200, build-succeeded 95, build-failed 67, syntax-invalid 36, redundant 2
Fitness: max 0.917(93), min 0.5(2), ave 0.908
Test execution time: sum 13609 ms, max 310 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 11:00:19 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-11-10 11:01:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 19 minutes 5 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 21, redundant 8
Fitness: max 0.917(115), min 0.917(115), ave 0.917
Test execution time: sum 16805 ms, max 307 ms, min 75 ms
----------------------------------------------------------------

2023-11-10 11:01:19 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-11-10 11:02:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 19 minutes 58 seconds
Variants: generated 200, build-succeeded 97, build-failed 65, syntax-invalid 31, redundant 7
Fitness: max 0.917(96), min 0.5(1), ave 0.912
Test execution time: sum 13425 ms, max 464 ms, min 28 ms
----------------------------------------------------------------

2023-11-10 11:02:12 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-11-10 11:03:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 20 minutes 52 seconds
Variants: generated 200, build-succeeded 99, build-failed 59, syntax-invalid 35, redundant 7
Fitness: max 0.917(97), min 0.5(1), ave 0.911
Test execution time: sum 13783 ms, max 308 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 11:03:06 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-11-10 11:04:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 21 minutes 48 seconds
Variants: generated 200, build-succeeded 104, build-failed 61, syntax-invalid 31, redundant 4
Fitness: max 0.917(104), min 0.917(104), ave 0.917
Test execution time: sum 15121 ms, max 280 ms, min 75 ms
----------------------------------------------------------------

2023-11-10 11:04:02 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-11-10 11:04:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 22 minutes 45 seconds
Variants: generated 200, build-succeeded 105, build-failed 59, syntax-invalid 25, redundant 11
Fitness: max 0.917(105), min 0.917(105), ave 0.917
Test execution time: sum 14750 ms, max 289 ms, min 73 ms
----------------------------------------------------------------

2023-11-10 11:04:59 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-11-10 11:05:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 23 minutes 41 seconds
Variants: generated 200, build-succeeded 104, build-failed 52, syntax-invalid 32, redundant 12
Fitness: max 0.917(104), min 0.917(104), ave 0.917
Test execution time: sum 14901 ms, max 280 ms, min 73 ms
----------------------------------------------------------------

2023-11-10 11:05:55 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-11-10 11:06:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 24 minutes 37 seconds
Variants: generated 200, build-succeeded 108, build-failed 52, syntax-invalid 32, redundant 8
Fitness: max 0.917(107), min 0.5(1), ave 0.913
Test execution time: sum 14606 ms, max 281 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 11:06:51 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-11-10 11:07:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 25 minutes 35 seconds
Variants: generated 200, build-succeeded 120, build-failed 49, syntax-invalid 24, redundant 7
Fitness: max 0.917(120), min 0.917(120), ave 0.917
Test execution time: sum 15978 ms, max 288 ms, min 75 ms
----------------------------------------------------------------

2023-11-10 11:07:49 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-11-10 11:08:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 26 minutes 30 seconds
Variants: generated 200, build-succeeded 111, build-failed 45, syntax-invalid 36, redundant 8
Fitness: max 0.917(109), min 0.5(1), ave 0.912
Test execution time: sum 13864 ms, max 275 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 11:08:44 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-11-10 11:09:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 27 minutes 30 seconds
Variants: generated 200, build-succeeded 117, build-failed 52, syntax-invalid 23, redundant 8
Fitness: max 0.917(117), min 0.917(117), ave 0.917
Test execution time: sum 16389 ms, max 280 ms, min 73 ms
----------------------------------------------------------------

2023-11-10 11:09:44 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-11-10 11:10:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 28 minutes 26 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 25, redundant 12
Fitness: max 0.917(100), min 0.5(1), ave 0.912
Test execution time: sum 13667 ms, max 269 ms, min 27 ms
----------------------------------------------------------------

2023-11-10 11:10:40 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-11-10 11:11:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 29 minutes 24 seconds
Variants: generated 200, build-succeeded 120, build-failed 52, syntax-invalid 19, redundant 9
Fitness: max 1(1), min 0.5(1), ave 0.912
Test execution time: sum 14147 ms, max 296 ms, min 26 ms
----------------------------------------------------------------

2023-11-10 11:11:38 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-11-10 11:12:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 29 minutes 53 seconds
Variants: generated 100, build-succeeded 36, build-failed 56, syntax-invalid 0, redundant 8
Fitness: max 1(1), min 0.917(35), ave 0.919
Test execution time: sum 3917 ms, max 281 ms, min 76 ms
----------------------------------------------------------------

2023-11-10 11:12:07 [main] [INFO]  KGenProgMain - GA stopped
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,8 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v221)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v221)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v221)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v221)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -386,7 +386,6 @@
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
-            System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
         }
     }
@@ -418,7 +417,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v221)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v221)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v221)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v2217)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v2217)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v2217)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v2217)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v2217)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
+			reset();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1022,7 +1026,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v2217)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v2217)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v2217)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v4289)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v4289)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v4289)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v4289)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v4289)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v4289)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v4289)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +423,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -1024,7 +1028,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v6980)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v6980)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v6980)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v6980)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,24 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v6980)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v6980)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v6980)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v7962)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v7962)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v7962)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v7962)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v7962)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v7962)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v7962)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,19 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			int bytesCopied = 0;
+			reset();
+			reset();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +429,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8308)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8308)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8308)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8308)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,23 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1036,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8308)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8308)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8308)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8361)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8361)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8361)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8361)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+            resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1040,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8361)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8361)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8361)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8549)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8549)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8549)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8549)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,23 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = false;
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8549)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8549)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v8549)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9139)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9139)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9139)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9139)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,22 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1022,6 +1036,7 @@
      */
     private void reset() {
         buffer = null;
+		int bytesCopied = 0;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9139)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9139)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9139)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9144)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9144)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9144)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9144)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9144)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9144)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9144)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9179)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9179)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9179)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9179)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1033,9 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9179)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9179)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9179)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9456)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9456)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9456)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9456)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,15 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
+			reset();
+			reset();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +425,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -1026,7 +1032,7 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        modulus = 0;
     }
 
 }
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9456)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9456)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9456)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9512)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9512)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9512)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9512)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9512)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9512)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v9512)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10137)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10137)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10137)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10137)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = false;
+            resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10137)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10137)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10137)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10325)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10325)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10325)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10325)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10325)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10325)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10325)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10570)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10570)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10570)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10570)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1040,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10570)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10570)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10570)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10579)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10579)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10579)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10579)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10579)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10579)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10579)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10729)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10729)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10729)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10729)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			pos = 0;
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1039,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10729)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10729)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10729)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,29 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11462)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11462)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11462)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11462)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,31 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11462)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11462)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11462)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11501)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11501)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11501)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11501)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+            resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +401,7 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11501)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11501)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11501)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11941)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11941)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11941)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11941)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1041,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11941)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11941)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11941)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11943)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11943)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11943)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11943)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11943)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11943)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v11943)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12138)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12138)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12138)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12138)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1041,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12138)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12138)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12138)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12334)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12334)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12334)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12334)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1039,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12334)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12334)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12334)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12538)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12538)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12538)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12538)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12538)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12538)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12538)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12724)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12724)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12724)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12724)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+            resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12724)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12724)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12724)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12761)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12761)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12761)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12761)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1040,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12761)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12761)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12761)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12771)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12771)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12771)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12771)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            x = x << 6;
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12771)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12771)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12771)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12776)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12776)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12776)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12776)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+            resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12776)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12776)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12776)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12904)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12904)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12904)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12904)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12904)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12904)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12904)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12905)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12905)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12905)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12905)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,32 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12905)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12905)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12905)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12993)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12993)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12993)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12993)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1041,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12993)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12993)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12993)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13120)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13120)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13120)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13120)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1039,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13120)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13120)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13120)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13151)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13151)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13151)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13151)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1041,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13151)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13151)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13151)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13508)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13508)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13508)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13508)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13508)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13508)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v13508)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14138)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14138)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14138)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14138)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1042,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14138)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14138)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14138)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14280)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14280)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14280)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14280)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14280)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14280)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14280)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14517)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14517)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14517)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14517)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1041,9 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14517)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14517)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v14517)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v16745)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v16745)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v16745)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v16745)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1041,9 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v16745)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v16745)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v16745)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v17057)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v17057)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v17057)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v17057)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			lineSeparator = CHUNK_SEPARATOR;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v17057)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v17057)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v17057)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v18377)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v18377)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v18377)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v18377)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v18377)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v18377)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v18377)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v20185)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v20185)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v20185)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v20185)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1048,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v20185)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v20185)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v20185)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21123)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21123)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21123)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21123)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,31 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1044,9 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21123)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21123)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21123)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21243)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21243)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21243)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21243)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,36 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = false;
+			eof = false;
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1049,9 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21243)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21243)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21243)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21477)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21477)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21477)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21477)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,40 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			resizeBuffer();
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			byte[] result = new byte[pos];
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1053,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21477)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21477)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v21477)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v24677)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v24677)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v24677)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v24677)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,37 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = false;
+            resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1050,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v24677)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v24677)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v24677)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v26389)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v26389)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v26389)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v26389)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = true;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1040,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v26389)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v26389)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v26389)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28001)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28001)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28001)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28001)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28001)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28001)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28001)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28060)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28060)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28060)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28060)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1043,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28060)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28060)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28060)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28194)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28194)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28194)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28194)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            modulus = 0;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1048,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28194)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28194)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28194)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28746)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28746)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28746)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28746)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,43 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1056,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28746)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28746)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28746)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28772)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28772)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28772)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28772)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,42 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = false;
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28772)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28772)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v28772)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29145)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29145)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29145)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29145)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1048,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29145)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29145)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29145)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29187)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29187)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29187)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29187)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,45 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1058,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29187)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29187)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29187)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29318)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29318)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29318)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29318)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,43 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = false;
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29318)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29318)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29318)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29370)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29370)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29370)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29370)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,38 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29370)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29370)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29370)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29973)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29973)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29973)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29973)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,40 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1053,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
+        readPos = 0;
+		buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29973)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29973)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v29973)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v30352)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v30352)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v30352)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v30352)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,36 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            eof = true;
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v30352)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v30352)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v30352)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v33212)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v33212)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v33212)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v33212)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,47 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v33212)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v33212)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v33212)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34054)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34054)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34054)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34054)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,47 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			x = x << 6;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34054)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34054)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34054)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34091)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34091)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34091)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34091)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			eof = true;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34091)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34091)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v34091)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v35063)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v35063)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v35063)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v35063)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,32 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			x = x << 6;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v35063)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v35063)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v35063)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39004)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39004)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39004)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39004)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,44 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39004)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39004)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39004)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39248)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39248)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39248)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39248)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,43 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            reset();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39248)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39248)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39248)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39297)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39297)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39297)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39297)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,41 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			reset();
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39297)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39297)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39297)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39928)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39928)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39928)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39928)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,47 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			eof = false;
+            resizeBuffer();
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineLength = 0;
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39928)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39928)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v39928)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40183)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40183)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40183)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40183)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,45 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            buffer = null;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1022,7 +1059,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40183)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40183)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40183)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40208)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40208)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40208)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40208)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,45 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            resizeBuffer();
+			eof = true;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40208)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40208)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v40208)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v41481)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v41481)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v41481)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v41481)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,42 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v41481)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v41481)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v41481)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v42944)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v42944)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v42944)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v42944)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,44 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v42944)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v42944)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v42944)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43167)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43167)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43167)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43167)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43167)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43167)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43167)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43282)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43282)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43282)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43282)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,42 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +452,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43282)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43282)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v43282)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v44898)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v44898)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v44898)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v44898)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,47 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+            reset();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v44898)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v44898)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v44898)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v45227)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v45227)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v45227)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v45227)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,51 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			eof = true;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v45227)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v45227)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v45227)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v48217)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v48217)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v48217)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v48217)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,48 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            reset();
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			reset();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v48217)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v48217)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v48217)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v49406)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v49406)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v49406)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v49406)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,46 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            reset();
+			reset();
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				eof = true;
+				readPos = 0;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v49406)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v49406)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v49406)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v50282)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v50282)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v50282)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v50282)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,50 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			x = x << 6;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v50282)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v50282)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v50282)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51276)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51276)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51276)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51276)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,48 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            reset();
+			resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51276)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51276)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51276)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51433)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51433)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51433)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51433)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,49 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            reset();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +459,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51433)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51433)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v51433)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52012)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52012)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52012)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52012)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,45 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			eof = true;
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52012)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52012)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52012)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52482)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52482)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52482)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52482)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,63 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            {
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			reset();
+			reset();
+			eof = true;
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52482)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52482)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v52482)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53033)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53033)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53033)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53033)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53033)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,59 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            {
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			reset();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53033)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53033)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53033)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53811)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53811)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53811)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53811)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,55 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			eof = true;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53811)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53811)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v53811)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54231)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54231)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54231)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54231)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54231)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,59 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			lineLength = 0;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				buffer[pos++] = PAD;
+				buffer[pos++] = PAD;
+			}
+			reset();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54231)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54231)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54231)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54670)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54670)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54670)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54670)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,49 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos += 4;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54670)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54670)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v54670)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55213)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55213)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55213)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55213)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,48 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos += 4;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55213)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55213)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55213)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55655)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55655)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55655)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55655)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,54 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			lineLength = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			lineLength = 0;
+			eof = false;
+			eof = false;
+			eof = false;
+			lineLength = 0;
+            reset();
+			resizeBuffer();
+			eof = true;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55655)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55655)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v55655)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v58687)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v58687)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v58687)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v58687)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,60 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v58687)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v58687)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v58687)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v59449)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v59449)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v59449)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v59449)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,60 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v59449)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v59449)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v59449)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v61680)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v61680)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v61680)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v61680)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,64 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            reset();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v61680)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v61680)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v61680)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v64299)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v64299)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v64299)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v64299)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,68 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            reset();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos += 4;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v64299)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v64299)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v64299)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v65819)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v65819)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v65819)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v65819)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,56 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos += 4;
+			currentLinePos += 4;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v65819)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v65819)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v65819)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v66245)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v66245)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v66245)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v66245)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,63 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            String sep = StringUtils.newStringUtf8(lineSeparator);
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos += 4;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v66245)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v66245)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v66245)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v69894)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v69894)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v69894)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v69894)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,68 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos += 4;
+			eof = true;
+			currentLinePos += 4;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v69894)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v69894)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v69894)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v70100)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v70100)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v70100)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v70100)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,67 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			currentLinePos = 0;
+			modulus = (++modulus) % 3;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos += 4;
+			currentLinePos += 4;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v70100)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v70100)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  PatchLogExporter - patch (v70100)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-10 11:12:07 [main] [INFO]  KGenProgMain - Summary
Reached generation = 352
Generated variants = 70100
Syntax valid variants = 58054
Build succeeded variants = 34691
Time elapsed = 12 hours 29 minutes 53 seconds
Exit status = SUCCESS
