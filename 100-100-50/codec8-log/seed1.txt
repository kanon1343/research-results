2023-11-04 06:21:25 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-11-04 06:21:25 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-11-04 06:21:25 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-11-04 06:21:25 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 1 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-11-04 06:21:28 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-11-04 06:21:28 [main] [INFO]  KGenProgMain - GA started
2023-11-04 06:21:28 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-11-04 07:18:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 4 seconds
Variants: generated 100, build-succeeded 18, build-failed 59, syntax-invalid 6, redundant 17
Fitness: max 0.917(7), min 0.333(2), ave 0.769
Test execution time: sum 3422366 ms, max 1440041 ms, min 26 ms
----------------------------------------------------------------

2023-11-04 07:18:32 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-11-04 08:06:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 7 seconds
Variants: generated 100, build-succeeded 16, build-failed 46, syntax-invalid 16, redundant 22
Fitness: max 0.917(4), min 0.333(2), ave 0.729
Test execution time: sum 2880663 ms, max 1440025 ms, min 25 ms
----------------------------------------------------------------

2023-11-04 08:06:35 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-11-04 10:51:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 13 seconds
Variants: generated 200, build-succeeded 57, build-failed 56, syntax-invalid 19, redundant 68
Fitness: max 0.917(9), min 0.333(6), ave 0.708
Test execution time: sum 9902518 ms, max 1440023 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 10:51:41 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-11-04 11:06:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 20 seconds
Variants: generated 200, build-succeeded 50, build-failed 52, syntax-invalid 19, redundant 79
Fitness: max 1(1), min 0.583(1), ave 0.813
Test execution time: sum 903835 ms, max 900024 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 11:06:48 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-11-04 11:40:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 32 seconds
Variants: generated 200, build-succeeded 52, build-failed 67, syntax-invalid 19, redundant 62
Fitness: max 0.917(25), min 0.5(2), ave 0.833
Test execution time: sum 1988555 ms, max 900024 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 11:40:00 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-11-04 11:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 40 seconds
Variants: generated 200, build-succeeded 51, build-failed 63, syntax-invalid 26, redundant 60
Fitness: max 0.917(43), min 0.333(1), ave 0.881
Test execution time: sum 544828 ms, max 540022 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 11:49:08 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-11-04 12:13:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 minutes 50 seconds
Variants: generated 200, build-succeeded 62, build-failed 55, syntax-invalid 24, redundant 59
Fitness: max 0.917(56), min 0.333(1), ave 0.897
Test execution time: sum 1446253 ms, max 1440023 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 12:13:18 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-11-04 12:37:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 0 seconds
Variants: generated 200, build-succeeded 54, build-failed 59, syntax-invalid 44, redundant 43
Fitness: max 0.917(46), min 0.333(2), ave 0.873
Test execution time: sum 1445999 ms, max 1440023 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 12:37:28 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-11-04 12:37:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 7 seconds
Variants: generated 200, build-succeeded 52, build-failed 61, syntax-invalid 40, redundant 47
Fitness: max 1(1), min 0.5(1), ave 0.904
Test execution time: sum 4152 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 12:37:36 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-11-04 13:01:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 17 seconds
Variants: generated 200, build-succeeded 74, build-failed 61, syntax-invalid 31, redundant 34
Fitness: max 0.917(66), min 0.583(2), ave 0.893
Test execution time: sum 1445509 ms, max 900022 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 13:01:45 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-11-04 13:01:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 26 seconds
Variants: generated 200, build-succeeded 61, build-failed 71, syntax-invalid 34, redundant 34
Fitness: max 0.917(53), min 0.5(3), ave 0.878
Test execution time: sum 4504 ms, max 122 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 13:01:54 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-11-04 13:02:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 36 seconds
Variants: generated 200, build-succeeded 77, build-failed 65, syntax-invalid 28, redundant 30
Fitness: max 0.917(68), min 0.5(2), ave 0.885
Test execution time: sum 5989 ms, max 135 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 13:02:04 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-11-04 13:26:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 4 minutes 48 seconds
Variants: generated 200, build-succeeded 92, build-failed 57, syntax-invalid 21, redundant 30
Fitness: max 0.917(84), min 0.333(1), ave 0.894
Test execution time: sum 1446957 ms, max 1440021 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 13:26:16 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-11-04 13:26:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 4 minutes 59 seconds
Variants: generated 200, build-succeeded 82, build-failed 58, syntax-invalid 27, redundant 33
Fitness: max 0.917(73), min 0.5(1), ave 0.895
Test execution time: sum 6201 ms, max 115 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 13:26:27 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-11-04 13:26:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 5 minutes 10 seconds
Variants: generated 200, build-succeeded 90, build-failed 58, syntax-invalid 24, redundant 28
Fitness: max 0.917(79), min 0.5(2), ave 0.884
Test execution time: sum 6791 ms, max 125 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 13:26:38 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-11-04 13:26:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 5 minutes 22 seconds
Variants: generated 200, build-succeeded 95, build-failed 65, syntax-invalid 26, redundant 14
Fitness: max 1(1), min 0.5(3), ave 0.878
Test execution time: sum 7082 ms, max 125 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 13:26:51 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-11-04 13:42:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 34 seconds
Variants: generated 200, build-succeeded 92, build-failed 66, syntax-invalid 20, redundant 22
Fitness: max 0.917(73), min 0.5(5), ave 0.857
Test execution time: sum 906525 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 13:42:02 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-11-04 13:42:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 47 seconds
Variants: generated 200, build-succeeded 106, build-failed 50, syntax-invalid 19, redundant 25
Fitness: max 0.917(90), min 0(1), ave 0.87
Test execution time: sum 7788 ms, max 120 ms, min 20 ms
----------------------------------------------------------------

2023-11-04 13:42:15 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-11-04 14:00:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 39 minutes 0 seconds
Variants: generated 200, build-succeeded 94, build-failed 63, syntax-invalid 22, redundant 21
Fitness: max 0.917(86), min 0.5(2), ave 0.895
Test execution time: sum 1087675 ms, max 1080022 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 14:00:28 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-11-04 14:00:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 39 minutes 13 seconds
Variants: generated 200, build-succeeded 94, build-failed 55, syntax-invalid 25, redundant 26
Fitness: max 0.917(89), min 0.667(2), ave 0.906
Test execution time: sum 7792 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 14:00:41 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-11-04 14:05:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 44 minutes 6 seconds
Variants: generated 200, build-succeeded 88, build-failed 57, syntax-invalid 26, redundant 29
Fitness: max 1(1), min 0.5(1), ave 0.891
Test execution time: sum 287349 ms, max 280449 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 14:05:34 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-11-04 14:29:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 8 minutes 18 seconds
Variants: generated 200, build-succeeded 90, build-failed 59, syntax-invalid 27, redundant 24
Fitness: max 1(3), min 0.333(1), ave 0.881
Test execution time: sum 1446889 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 14:29:46 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-11-04 14:29:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 8 minutes 31 seconds
Variants: generated 200, build-succeeded 92, build-failed 63, syntax-invalid 26, redundant 19
Fitness: max 1(1), min 0.667(1), ave 0.909
Test execution time: sum 7752 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 14:29:59 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-11-04 14:54:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 32 minutes 44 seconds
Variants: generated 200, build-succeeded 98, build-failed 67, syntax-invalid 19, redundant 16
Fitness: max 0.917(85), min 0.333(1), ave 0.886
Test execution time: sum 1447724 ms, max 1440021 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 14:54:12 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-11-04 15:33:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 11 minutes 57 seconds
Variants: generated 200, build-succeeded 92, build-failed 64, syntax-invalid 26, redundant 18
Fitness: max 0.917(77), min 0.333(1), ave 0.879
Test execution time: sum 2347002 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 15:33:25 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-11-04 15:48:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 10 seconds
Variants: generated 200, build-succeeded 95, build-failed 62, syntax-invalid 22, redundant 21
Fitness: max 0.917(87), min 0.583(1), ave 0.897
Test execution time: sum 907599 ms, max 900022 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 15:48:38 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-11-04 15:48:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 24 seconds
Variants: generated 200, build-succeeded 98, build-failed 66, syntax-invalid 21, redundant 15
Fitness: max 1(1), min 0.5(2), ave 0.884
Test execution time: sum 7769 ms, max 137 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 15:48:52 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-11-04 15:49:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 36 seconds
Variants: generated 200, build-succeeded 98, build-failed 53, syntax-invalid 28, redundant 21
Fitness: max 0.917(82), min 0.667(10), ave 0.882
Test execution time: sum 7129 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 15:49:05 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-11-04 15:49:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 48 seconds
Variants: generated 200, build-succeeded 83, build-failed 73, syntax-invalid 22, redundant 22
Fitness: max 0.917(74), min 0.5(1), ave 0.89
Test execution time: sum 6521 ms, max 129 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 15:49:17 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-11-04 15:49:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 28 minutes 2 seconds
Variants: generated 200, build-succeeded 99, build-failed 57, syntax-invalid 22, redundant 22
Fitness: max 0.917(90), min 0(1), ave 0.889
Test execution time: sum 8067 ms, max 123 ms, min 20 ms
----------------------------------------------------------------

2023-11-04 15:49:30 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-11-04 16:04:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 43 minutes 15 seconds
Variants: generated 200, build-succeeded 93, build-failed 63, syntax-invalid 28, redundant 16
Fitness: max 1(1), min 0.5(1), ave 0.894
Test execution time: sum 907212 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 16:04:43 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-11-04 16:52:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 31 minutes 29 seconds
Variants: generated 200, build-succeeded 98, build-failed 56, syntax-invalid 24, redundant 22
Fitness: max 1(1), min 0.333(2), ave 0.884
Test execution time: sum 2887596 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 16:52:57 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-11-04 16:53:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 31 minutes 43 seconds
Variants: generated 200, build-succeeded 95, build-failed 61, syntax-invalid 32, redundant 12
Fitness: max 1(1), min 0.667(6), ave 0.893
Test execution time: sum 7927 ms, max 566 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 16:53:11 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-11-04 16:53:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 31 minutes 56 seconds
Variants: generated 200, build-succeeded 98, build-failed 51, syntax-invalid 31, redundant 20
Fitness: max 0.917(87), min 0.5(2), ave 0.886
Test execution time: sum 7695 ms, max 132 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 16:53:24 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-11-04 16:53:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 32 minutes 10 seconds
Variants: generated 200, build-succeeded 96, build-failed 56, syntax-invalid 29, redundant 19
Fitness: max 1(1), min 0.667(14), ave 0.878
Test execution time: sum 7172 ms, max 131 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 16:53:38 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-11-04 16:53:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 32 minutes 23 seconds
Variants: generated 200, build-succeeded 92, build-failed 58, syntax-invalid 28, redundant 22
Fitness: max 1(1), min 0.5(1), ave 0.888
Test execution time: sum 7310 ms, max 128 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 16:53:51 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-11-04 17:18:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 56 minutes 37 seconds
Variants: generated 200, build-succeeded 100, build-failed 62, syntax-invalid 25, redundant 13
Fitness: max 1(1), min 0.333(1), ave 0.876
Test execution time: sum 1447632 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:18:06 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-11-04 17:18:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 56 minutes 53 seconds
Variants: generated 200, build-succeeded 109, build-failed 62, syntax-invalid 16, redundant 13
Fitness: max 1(1), min 0.5(1), ave 0.895
Test execution time: sum 8964 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:18:22 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-11-04 17:18:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 57 minutes 9 seconds
Variants: generated 200, build-succeeded 101, build-failed 67, syntax-invalid 18, redundant 14
Fitness: max 0.917(93), min 0.5(3), ave 0.892
Test execution time: sum 8119 ms, max 182 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 17:18:37 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-11-04 17:18:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 57 minutes 23 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 25, redundant 15
Fitness: max 0.917(86), min 0.5(4), ave 0.877
Test execution time: sum 7664 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:18:51 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-11-04 17:19:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 57 minutes 38 seconds
Variants: generated 200, build-succeeded 100, build-failed 67, syntax-invalid 15, redundant 18
Fitness: max 0.917(95), min 0.5(2), ave 0.902
Test execution time: sum 7926 ms, max 132 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 17:19:07 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-11-04 17:19:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 57 minutes 53 seconds
Variants: generated 200, build-succeeded 102, build-failed 65, syntax-invalid 22, redundant 11
Fitness: max 0.917(92), min 0.667(7), ave 0.895
Test execution time: sum 7734 ms, max 135 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:19:22 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-11-04 17:19:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 58 minutes 9 seconds
Variants: generated 200, build-succeeded 112, build-failed 61, syntax-invalid 17, redundant 10
Fitness: max 0.917(100), min 0.667(11), ave 0.891
Test execution time: sum 8249 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:19:37 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-11-04 17:19:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 58 minutes 24 seconds
Variants: generated 200, build-succeeded 94, build-failed 56, syntax-invalid 32, redundant 18
Fitness: max 0.917(87), min 0.667(6), ave 0.899
Test execution time: sum 7165 ms, max 109 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:19:52 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-11-04 17:26:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 4 minutes 39 seconds
Variants: generated 200, build-succeeded 104, build-failed 69, syntax-invalid 20, redundant 7
Fitness: max 0.917(99), min 0.333(1), ave 0.902
Test execution time: sum 368023 ms, max 360071 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:26:07 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-11-04 17:26:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 4 minutes 56 seconds
Variants: generated 200, build-succeeded 112, build-failed 46, syntax-invalid 26, redundant 16
Fitness: max 0.917(111), min 0.667(1), ave 0.914
Test execution time: sum 9041 ms, max 148 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:26:24 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-11-04 17:26:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 5 minutes 11 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 24, redundant 13
Fitness: max 0.917(99), min 0.667(4), ave 0.905
Test execution time: sum 8059 ms, max 110 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:26:39 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-11-04 17:26:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 5 minutes 28 seconds
Variants: generated 200, build-succeeded 108, build-failed 67, syntax-invalid 18, redundant 7
Fitness: max 1(1), min 0.667(4), ave 0.908
Test execution time: sum 8593 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:26:56 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-11-04 17:27:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 5 minutes 45 seconds
Variants: generated 200, build-succeeded 111, build-failed 62, syntax-invalid 21, redundant 6
Fitness: max 1(1), min 0.667(5), ave 0.9
Test execution time: sum 8626 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 17:27:13 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-11-04 17:51:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 30 minutes 3 seconds
Variants: generated 200, build-succeeded 121, build-failed 55, syntax-invalid 18, redundant 6
Fitness: max 0.917(112), min 0.333(1), ave 0.897
Test execution time: sum 1449621 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 17:51:31 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-11-04 18:09:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 20 seconds
Variants: generated 200, build-succeeded 118, build-failed 58, syntax-invalid 17, redundant 7
Fitness: max 0.917(100), min 0.5(1), ave 0.88
Test execution time: sum 1088861 ms, max 1080021 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 18:09:48 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-11-04 18:10:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 37 seconds
Variants: generated 200, build-succeeded 111, build-failed 58, syntax-invalid 23, redundant 8
Fitness: max 0.917(106), min 0.667(3), ave 0.907
Test execution time: sum 8942 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 18:10:05 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-11-04 18:10:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 55 seconds
Variants: generated 200, build-succeeded 111, build-failed 58, syntax-invalid 22, redundant 9
Fitness: max 0.917(100), min 0.5(2), ave 0.892
Test execution time: sum 9097 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 18:10:23 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-11-04 18:10:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 49 minutes 12 seconds
Variants: generated 200, build-succeeded 107, build-failed 61, syntax-invalid 23, redundant 9
Fitness: max 1(1), min 0.667(4), ave 0.908
Test execution time: sum 8976 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 18:10:40 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-11-04 18:10:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 49 minutes 29 seconds
Variants: generated 200, build-succeeded 116, build-failed 51, syntax-invalid 20, redundant 13
Fitness: max 0.917(103), min 0.667(9), ave 0.892
Test execution time: sum 9018 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 18:10:57 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-11-04 18:35:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 13 minutes 46 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 27, redundant 9
Fitness: max 0.917(92), min 0.333(1), ave 0.881
Test execution time: sum 1448179 ms, max 1440043 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 18:35:14 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-11-04 18:35:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 14 minutes 4 seconds
Variants: generated 200, build-succeeded 122, build-failed 54, syntax-invalid 14, redundant 10
Fitness: max 1(1), min 0.5(4), ave 0.881
Test execution time: sum 9366 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 18:35:32 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-11-04 18:59:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 38 minutes 23 seconds
Variants: generated 200, build-succeeded 127, build-failed 49, syntax-invalid 16, redundant 8
Fitness: max 1(3), min 0.333(2), ave 0.893
Test execution time: sum 1450138 ms, max 720022 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 18:59:51 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-11-04 19:24:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 2 minutes 40 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 28, redundant 11
Fitness: max 0.917(94), min 0.333(2), ave 0.882
Test execution time: sum 1448164 ms, max 720023 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 19:24:08 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-11-04 19:24:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 2 minutes 56 seconds
Variants: generated 200, build-succeeded 102, build-failed 57, syntax-invalid 33, redundant 8
Fitness: max 0.917(92), min 0.5(2), ave 0.889
Test execution time: sum 7961 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 19:24:25 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-11-04 19:24:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 3 minutes 15 seconds
Variants: generated 200, build-succeeded 120, build-failed 51, syntax-invalid 17, redundant 12
Fitness: max 0.917(105), min 0.667(13), ave 0.887
Test execution time: sum 9209 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 19:24:43 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-11-04 19:25:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 3 minutes 34 seconds
Variants: generated 200, build-succeeded 121, build-failed 57, syntax-invalid 15, redundant 7
Fitness: max 1(1), min 0.667(6), ave 0.899
Test execution time: sum 9890 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 19:25:02 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-11-04 19:40:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 18 minutes 52 seconds
Variants: generated 200, build-succeeded 107, build-failed 64, syntax-invalid 22, redundant 7
Fitness: max 0.917(102), min 0.583(1), ave 0.907
Test execution time: sum 908768 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 19:40:20 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-11-04 19:40:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 19 minutes 12 seconds
Variants: generated 200, build-succeeded 121, build-failed 56, syntax-invalid 16, redundant 7
Fitness: max 0.917(109), min 0.667(10), ave 0.893
Test execution time: sum 9822 ms, max 144 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 19:40:40 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-11-04 19:40:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 19 minutes 30 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 18, redundant 13
Fitness: max 0.917(107), min 0.5(3), ave 0.902
Test execution time: sum 9207 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 19:40:59 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-11-04 19:47:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 25 minutes 48 seconds
Variants: generated 200, build-succeeded 107, build-failed 66, syntax-invalid 18, redundant 9
Fitness: max 0.917(94), min 0.25(1), ave 0.879
Test execution time: sum 368216 ms, max 360022 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 19:47:16 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-11-04 19:53:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 7 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 19, redundant 10
Fitness: max 1(1), min 0.333(1), ave 0.894
Test execution time: sum 368961 ms, max 360022 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 19:53:35 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-11-04 20:11:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 50 minutes 25 seconds
Variants: generated 200, build-succeeded 114, build-failed 55, syntax-invalid 17, redundant 14
Fitness: max 1(1), min 0(1), ave 0.878
Test execution time: sum 1089063 ms, max 360022 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 20:11:54 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-11-04 20:12:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 50 minutes 45 seconds
Variants: generated 200, build-succeeded 116, build-failed 55, syntax-invalid 16, redundant 13
Fitness: max 0.917(108), min 0.667(6), ave 0.901
Test execution time: sum 9266 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 20:12:13 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-11-04 20:12:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 51 minutes 4 seconds
Variants: generated 200, build-succeeded 120, build-failed 55, syntax-invalid 19, redundant 6
Fitness: max 1(2), min 0.5(1), ave 0.906
Test execution time: sum 9543 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 20:12:32 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-11-04 20:12:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 51 minutes 23 seconds
Variants: generated 200, build-succeeded 120, build-failed 53, syntax-invalid 16, redundant 11
Fitness: max 0.917(111), min 0.5(2), ave 0.896
Test execution time: sum 9306 ms, max 122 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 20:12:51 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-11-04 20:13:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 51 minutes 42 seconds
Variants: generated 200, build-succeeded 117, build-failed 45, syntax-invalid 20, redundant 18
Fitness: max 0.917(112), min 0.5(1), ave 0.905
Test execution time: sum 9293 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 20:13:10 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-11-04 20:13:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 52 minutes 1 seconds
Variants: generated 200, build-succeeded 121, build-failed 56, syntax-invalid 15, redundant 8
Fitness: max 0.917(102), min 0.5(2), ave 0.876
Test execution time: sum 8756 ms, max 128 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 20:13:29 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-11-04 20:58:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 37 minutes 20 seconds
Variants: generated 200, build-succeeded 109, build-failed 63, syntax-invalid 22, redundant 6
Fitness: max 1(1), min 0.333(2), ave 0.869
Test execution time: sum 2707953 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 20:58:48 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-11-04 20:59:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 37 minutes 39 seconds
Variants: generated 200, build-succeeded 119, build-failed 53, syntax-invalid 15, redundant 13
Fitness: max 0.917(107), min 0.667(10), ave 0.893
Test execution time: sum 9037 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 20:59:07 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-11-04 20:59:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 37 minutes 56 seconds
Variants: generated 200, build-succeeded 101, build-failed 69, syntax-invalid 22, redundant 8
Fitness: max 0.917(85), min 0.667(16), ave 0.877
Test execution time: sum 7070 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 20:59:24 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-11-04 21:41:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 20 minutes 15 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 22, redundant 7
Fitness: max 0.917(102), min 0.333(1), ave 0.886
Test execution time: sum 2528771 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 21:41:43 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-11-04 21:42:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 20 minutes 35 seconds
Variants: generated 200, build-succeeded 118, build-failed 58, syntax-invalid 16, redundant 8
Fitness: max 0.917(110), min 0.667(6), ave 0.901
Test execution time: sum 9326 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 21:42:03 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-11-04 22:00:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 38 minutes 44 seconds
Variants: generated 200, build-succeeded 109, build-failed 63, syntax-invalid 20, redundant 8
Fitness: max 0.917(102), min 0.583(2), ave 0.899
Test execution time: sum 1078633 ms, max 537271 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:00:12 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-11-04 22:00:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 39 minutes 4 seconds
Variants: generated 200, build-succeeded 117, build-failed 56, syntax-invalid 16, redundant 11
Fitness: max 1(2), min 0.667(7), ave 0.903
Test execution time: sum 9211 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:00:32 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-11-04 22:00:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 39 minutes 23 seconds
Variants: generated 200, build-succeeded 110, build-failed 64, syntax-invalid 14, redundant 12
Fitness: max 0.917(106), min 0.667(3), ave 0.909
Test execution time: sum 9097 ms, max 132 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:00:52 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-11-04 22:01:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 39 minutes 44 seconds
Variants: generated 200, build-succeeded 123, build-failed 59, syntax-invalid 5, redundant 13
Fitness: max 0.917(118), min 0.667(3), ave 0.908
Test execution time: sum 9903 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:01:12 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-11-04 22:01:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 40 minutes 5 seconds
Variants: generated 200, build-succeeded 127, build-failed 51, syntax-invalid 11, redundant 11
Fitness: max 0.917(124), min 0.5(1), ave 0.911
Test execution time: sum 10324 ms, max 128 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:01:33 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-11-04 22:01:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 40 minutes 25 seconds
Variants: generated 200, build-succeeded 114, build-failed 62, syntax-invalid 15, redundant 9
Fitness: max 0.917(108), min 0.667(5), ave 0.904
Test execution time: sum 8956 ms, max 122 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:01:53 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-11-04 22:02:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 40 minutes 45 seconds
Variants: generated 200, build-succeeded 121, build-failed 55, syntax-invalid 16, redundant 8
Fitness: max 1(2), min 0.667(7), ave 0.901
Test execution time: sum 9320 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:02:14 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-11-04 22:02:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 41 minutes 7 seconds
Variants: generated 200, build-succeeded 129, build-failed 48, syntax-invalid 9, redundant 14
Fitness: max 0.917(127), min 0.667(1), ave 0.913
Test execution time: sum 10190 ms, max 127 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:02:35 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-11-04 22:02:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 41 minutes 27 seconds
Variants: generated 200, build-succeeded 122, build-failed 51, syntax-invalid 9, redundant 18
Fitness: max 0.917(114), min 0.667(7), ave 0.901
Test execution time: sum 9270 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:02:55 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-11-04 22:03:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 41 minutes 48 seconds
Variants: generated 200, build-succeeded 125, build-failed 51, syntax-invalid 14, redundant 10
Fitness: max 1(2), min 0.5(1), ave 0.898
Test execution time: sum 9446 ms, max 128 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 22:03:16 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-11-04 22:12:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 51 minutes 1 seconds
Variants: generated 200, build-succeeded 113, build-failed 56, syntax-invalid 17, redundant 14
Fitness: max 1(1), min 0.583(1), ave 0.9
Test execution time: sum 541957 ms, max 533612 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:12:29 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-11-04 22:12:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 51 minutes 22 seconds
Variants: generated 200, build-succeeded 124, build-failed 55, syntax-invalid 11, redundant 10
Fitness: max 1(2), min 0.667(4), ave 0.909
Test execution time: sum 9384 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:12:50 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-11-04 22:13:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 51 minutes 41 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 24, redundant 6
Fitness: max 1(2), min 0.667(6), ave 0.902
Test execution time: sum 8299 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:13:09 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-11-04 22:13:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 52 minutes 1 seconds
Variants: generated 200, build-succeeded 115, build-failed 54, syntax-invalid 21, redundant 10
Fitness: max 1(1), min 0.667(4), ave 0.907
Test execution time: sum 8715 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:13:29 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-11-04 22:13:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 52 minutes 21 seconds
Variants: generated 200, build-succeeded 116, build-failed 59, syntax-invalid 15, redundant 10
Fitness: max 0.917(115), min 0.667(1), ave 0.915
Test execution time: sum 8961 ms, max 111 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:13:49 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-11-04 22:14:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 52 minutes 41 seconds
Variants: generated 200, build-succeeded 109, build-failed 59, syntax-invalid 17, redundant 15
Fitness: max 0.917(109), min 0.917(109), ave 0.917
Test execution time: sum 8501 ms, max 128 ms, min 67 ms
----------------------------------------------------------------

2023-11-04 22:14:09 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-11-04 22:14:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 53 minutes 0 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 22, redundant 14
Fitness: max 0.917(106), min 0.667(2), ave 0.912
Test execution time: sum 8276 ms, max 121 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:14:28 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-11-04 22:14:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 53 minutes 20 seconds
Variants: generated 200, build-succeeded 119, build-failed 52, syntax-invalid 18, redundant 11
Fitness: max 0.917(114), min 0.667(5), ave 0.906
Test execution time: sum 9115 ms, max 123 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:14:49 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-11-04 22:30:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 8 minutes 41 seconds
Variants: generated 200, build-succeeded 119, build-failed 62, syntax-invalid 6, redundant 13
Fitness: max 0.917(114), min 0.5(1), ave 0.904
Test execution time: sum 909059 ms, max 900023 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:30:09 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-11-04 22:30:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 9 minutes 2 seconds
Variants: generated 200, build-succeeded 118, build-failed 57, syntax-invalid 15, redundant 10
Fitness: max 0.917(115), min 0.667(3), ave 0.91
Test execution time: sum 9174 ms, max 107 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:30:30 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-11-04 22:30:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 9 minutes 23 seconds
Variants: generated 200, build-succeeded 120, build-failed 56, syntax-invalid 17, redundant 7
Fitness: max 0.917(113), min 0.667(6), ave 0.903
Test execution time: sum 9031 ms, max 110 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:30:51 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-11-04 22:31:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 9 minutes 44 seconds
Variants: generated 200, build-succeeded 124, build-failed 56, syntax-invalid 9, redundant 11
Fitness: max 0.917(118), min 0.667(5), ave 0.906
Test execution time: sum 9379 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:31:12 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-11-04 22:55:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 34 minutes 3 seconds
Variants: generated 200, build-succeeded 104, build-failed 63, syntax-invalid 26, redundant 7
Fitness: max 0.917(98), min 0.333(1), ave 0.899
Test execution time: sum 1447878 ms, max 1440022 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:55:31 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-11-04 22:55:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 34 minutes 24 seconds
Variants: generated 200, build-succeeded 118, build-failed 50, syntax-invalid 18, redundant 14
Fitness: max 0.917(112), min 0.667(6), ave 0.904
Test execution time: sum 9098 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:55:52 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-11-04 22:56:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 34 minutes 43 seconds
Variants: generated 200, build-succeeded 110, build-failed 54, syntax-invalid 24, redundant 12
Fitness: max 0.917(90), min 0.5(3), ave 0.867
Test execution time: sum 7561 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:56:11 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-11-04 22:56:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 35 minutes 3 seconds
Variants: generated 200, build-succeeded 115, build-failed 45, syntax-invalid 22, redundant 18
Fitness: max 0.917(104), min 0.667(9), ave 0.894
Test execution time: sum 8401 ms, max 108 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:56:31 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-11-04 22:56:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 35 minutes 23 seconds
Variants: generated 200, build-succeeded 111, build-failed 55, syntax-invalid 23, redundant 11
Fitness: max 0.917(107), min 0.667(3), ave 0.908
Test execution time: sum 8461 ms, max 112 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:56:52 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-11-04 22:57:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 35 minutes 43 seconds
Variants: generated 200, build-succeeded 110, build-failed 54, syntax-invalid 26, redundant 10
Fitness: max 0.917(101), min 0.667(8), ave 0.897
Test execution time: sum 8037 ms, max 130 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:57:12 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-11-04 22:57:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 36 minutes 3 seconds
Variants: generated 200, build-succeeded 107, build-failed 55, syntax-invalid 26, redundant 12
Fitness: max 0.917(98), min 0.667(9), ave 0.896
Test execution time: sum 7844 ms, max 124 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:57:31 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-11-04 22:57:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 36 minutes 22 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 27, redundant 10
Fitness: max 0.917(93), min 0.667(9), ave 0.895
Test execution time: sum 7425 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:57:50 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-11-04 22:58:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 36 minutes 40 seconds
Variants: generated 200, build-succeeded 92, build-failed 58, syntax-invalid 33, redundant 17
Fitness: max 0.917(83), min 0.667(7), ave 0.894
Test execution time: sum 6526 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:58:08 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-11-04 22:58:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 37 minutes 0 seconds
Variants: generated 200, build-succeeded 107, build-failed 60, syntax-invalid 25, redundant 8
Fitness: max 0.917(98), min 0.5(1), ave 0.894
Test execution time: sum 7810 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-11-04 22:58:28 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-11-04 22:58:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 37 minutes 20 seconds
Variants: generated 200, build-succeeded 104, build-failed 52, syntax-invalid 32, redundant 12
Fitness: max 0.917(97), min 0.667(6), ave 0.901
Test execution time: sum 7816 ms, max 109 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:58:48 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-11-04 22:59:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 37 minutes 39 seconds
Variants: generated 200, build-succeeded 103, build-failed 54, syntax-invalid 29, redundant 14
Fitness: max 1(1), min 0.667(5), ave 0.905
Test execution time: sum 7732 ms, max 127 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:59:07 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-11-04 22:59:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 37 minutes 59 seconds
Variants: generated 200, build-succeeded 102, build-failed 55, syntax-invalid 31, redundant 12
Fitness: max 0.917(100), min 0.667(2), ave 0.912
Test execution time: sum 7698 ms, max 106 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 22:59:27 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-11-04 22:59:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 38 minutes 19 seconds
Variants: generated 200, build-succeeded 96, build-failed 61, syntax-invalid 34, redundant 9
Fitness: max 0.917(96), min 0.917(96), ave 0.917
Test execution time: sum 7458 ms, max 128 ms, min 67 ms
----------------------------------------------------------------

2023-11-04 22:59:47 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-11-04 23:00:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 38 minutes 39 seconds
Variants: generated 200, build-succeeded 99, build-failed 63, syntax-invalid 31, redundant 7
Fitness: max 0.917(97), min 0.667(2), ave 0.912
Test execution time: sum 7480 ms, max 127 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 23:00:07 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-11-04 23:00:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 38 minutes 59 seconds
Variants: generated 200, build-succeeded 94, build-failed 61, syntax-invalid 31, redundant 14
Fitness: max 0.917(90), min 0.667(4), ave 0.906
Test execution time: sum 6995 ms, max 110 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 23:00:27 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-11-04 23:00:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 39 minutes 18 seconds
Variants: generated 200, build-succeeded 89, build-failed 64, syntax-invalid 36, redundant 11
Fitness: max 0.917(86), min 0.667(3), ave 0.908
Test execution time: sum 6723 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 23:00:46 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-11-04 23:01:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 39 minutes 38 seconds
Variants: generated 200, build-succeeded 99, build-failed 71, syntax-invalid 21, redundant 9
Fitness: max 0.917(94), min 0.667(5), ave 0.904
Test execution time: sum 7271 ms, max 112 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 23:01:06 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-11-04 23:01:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 39 minutes 59 seconds
Variants: generated 200, build-succeeded 106, build-failed 71, syntax-invalid 18, redundant 5
Fitness: max 0.917(100), min 0(1), ave 0.896
Test execution time: sum 7898 ms, max 122 ms, min 21 ms
----------------------------------------------------------------

2023-11-04 23:01:27 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-11-04 23:01:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 40 minutes 20 seconds
Variants: generated 200, build-succeeded 99, build-failed 69, syntax-invalid 22, redundant 10
Fitness: max 1(1), min 0.667(2), ave 0.911
Test execution time: sum 7607 ms, max 150 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 23:01:48 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-11-04 23:02:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 40 minutes 41 seconds
Variants: generated 200, build-succeeded 110, build-failed 56, syntax-invalid 20, redundant 14
Fitness: max 0.917(107), min 0.667(3), ave 0.91
Test execution time: sum 8361 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 23:02:09 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-11-04 23:20:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 58 minutes 55 seconds
Variants: generated 200, build-succeeded 111, build-failed 52, syntax-invalid 16, redundant 21
Fitness: max 0.917(105), min 0.583(2), ave 0.902
Test execution time: sum 1080489 ms, max 536806 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 23:20:23 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-11-04 23:47:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 26 minutes 6 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 17, redundant 14
Fitness: max 1(1), min 0.333(1), ave 0.896
Test execution time: sum 1617776 ms, max 1075373 ms, min 23 ms
----------------------------------------------------------------

2023-11-04 23:47:35 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-11-05 00:41:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 20 minutes 7 seconds
Variants: generated 200, build-succeeded 107, build-failed 67, syntax-invalid 18, redundant 8
Fitness: max 1(1), min 0.583(6), ave 0.896
Test execution time: sum 3227324 ms, max 538605 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 00:41:35 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-11-05 01:08:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 47 minutes 18 seconds
Variants: generated 200, build-succeeded 120, build-failed 53, syntax-invalid 18, redundant 9
Fitness: max 0.917(112), min 0.583(3), ave 0.899
Test execution time: sum 1617683 ms, max 537037 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 01:08:47 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-11-05 01:09:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 47 minutes 40 seconds
Variants: generated 200, build-succeeded 103, build-failed 60, syntax-invalid 29, redundant 8
Fitness: max 1(1), min 0.667(1), ave 0.915
Test execution time: sum 8101 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 01:09:08 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-11-05 01:27:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 5 minutes 52 seconds
Variants: generated 200, build-succeeded 103, build-failed 58, syntax-invalid 32, redundant 7
Fitness: max 0.917(97), min 0.5(1), ave 0.9
Test execution time: sum 1079336 ms, max 536106 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 01:27:20 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-11-05 02:12:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 50 minutes 46 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 26, redundant 8
Fitness: max 0.917(98), min 0.583(5), ave 0.898
Test execution time: sum 2680381 ms, max 535888 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:12:14 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-11-05 02:27:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 6 minutes 4 seconds
Variants: generated 200, build-succeeded 100, build-failed 52, syntax-invalid 33, redundant 15
Fitness: max 0.917(91), min 0.5(2), ave 0.891
Test execution time: sum 905037 ms, max 537874 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:27:32 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-11-05 02:54:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 33 minutes 22 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 31, redundant 6
Fitness: max 1(1), min 0.5(1), ave 0.903
Test execution time: sum 1624079 ms, max 1080021 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:54:50 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-11-05 02:55:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 33 minutes 43 seconds
Variants: generated 200, build-succeeded 91, build-failed 63, syntax-invalid 34, redundant 12
Fitness: max 1(1), min 0.667(4), ave 0.905
Test execution time: sum 7705 ms, max 555 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:55:11 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-11-05 02:55:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 34 minutes 5 seconds
Variants: generated 200, build-succeeded 110, build-failed 58, syntax-invalid 24, redundant 8
Fitness: max 0.917(100), min 0.667(8), ave 0.895
Test execution time: sum 8228 ms, max 127 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:55:33 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-11-05 02:55:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 34 minutes 27 seconds
Variants: generated 200, build-succeeded 102, build-failed 56, syntax-invalid 28, redundant 14
Fitness: max 0.917(99), min 0.667(1), ave 0.911
Test execution time: sum 8203 ms, max 128 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:55:55 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-11-05 02:56:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 34 minutes 49 seconds
Variants: generated 200, build-succeeded 108, build-failed 54, syntax-invalid 26, redundant 12
Fitness: max 0.917(104), min 0.667(4), ave 0.907
Test execution time: sum 8409 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:56:17 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-11-05 02:56:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 35 minutes 11 seconds
Variants: generated 200, build-succeeded 104, build-failed 53, syntax-invalid 34, redundant 9
Fitness: max 1(1), min 0.667(7), ave 0.901
Test execution time: sum 7990 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:56:39 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-11-05 02:57:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 35 minutes 33 seconds
Variants: generated 200, build-succeeded 100, build-failed 67, syntax-invalid 27, redundant 6
Fitness: max 0.917(95), min 0.667(5), ave 0.904
Test execution time: sum 7817 ms, max 131 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 02:57:01 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-11-05 02:58:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 37 minutes 5 seconds
Variants: generated 200, build-succeeded 109, build-failed 65, syntax-invalid 20, redundant 6
Fitness: max 1(1), min 0.5(1), ave 0.911
Test execution time: sum 77520 ms, max 69088 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:58:34 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-11-05 02:58:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 37 minutes 29 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 20, redundant 13
Fitness: max 0.917(104), min 0.667(1), ave 0.913
Test execution time: sum 8373 ms, max 141 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:58:57 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-11-05 02:59:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 37 minutes 53 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 22, redundant 11
Fitness: max 0.917(109), min 0.75(1), ave 0.915
Test execution time: sum 8926 ms, max 149 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:59:21 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-11-05 02:59:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 38 minutes 17 seconds
Variants: generated 200, build-succeeded 114, build-failed 55, syntax-invalid 22, redundant 9
Fitness: max 0.917(107), min 0.667(5), ave 0.903
Test execution time: sum 8863 ms, max 116 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 02:59:45 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-11-05 03:00:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 38 minutes 42 seconds
Variants: generated 200, build-succeeded 119, build-failed 48, syntax-invalid 22, redundant 11
Fitness: max 1(1), min 0.667(1), ave 0.915
Test execution time: sum 9784 ms, max 129 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:00:10 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-11-05 03:00:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 39 minutes 5 seconds
Variants: generated 200, build-succeeded 105, build-failed 55, syntax-invalid 29, redundant 11
Fitness: max 0.917(104), min 0.667(1), ave 0.914
Test execution time: sum 8534 ms, max 134 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:00:33 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-11-05 03:00:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 39 minutes 28 seconds
Variants: generated 200, build-succeeded 101, build-failed 57, syntax-invalid 33, redundant 9
Fitness: max 0.917(98), min 0.667(1), ave 0.911
Test execution time: sum 8051 ms, max 133 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 03:00:56 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-11-05 03:01:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 39 minutes 54 seconds
Variants: generated 200, build-succeeded 122, build-failed 52, syntax-invalid 18, redundant 8
Fitness: max 1(1), min 0.75(2), ave 0.915
Test execution time: sum 10123 ms, max 129 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 03:01:22 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-11-05 03:01:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 40 minutes 19 seconds
Variants: generated 200, build-succeeded 106, build-failed 65, syntax-invalid 21, redundant 8
Fitness: max 0.917(102), min 0.667(1), ave 0.91
Test execution time: sum 8715 ms, max 186 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:01:47 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-11-05 03:02:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 40 minutes 43 seconds
Variants: generated 200, build-succeeded 109, build-failed 59, syntax-invalid 25, redundant 7
Fitness: max 0.917(108), min 0.75(1), ave 0.915
Test execution time: sum 9199 ms, max 126 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 03:02:11 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-11-05 03:02:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 41 minutes 10 seconds
Variants: generated 200, build-succeeded 125, build-failed 48, syntax-invalid 18, redundant 9
Fitness: max 0.917(124), min 0.667(1), ave 0.915
Test execution time: sum 10322 ms, max 133 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 03:02:38 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-11-05 03:03:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 41 minutes 35 seconds
Variants: generated 200, build-succeeded 110, build-failed 64, syntax-invalid 19, redundant 7
Fitness: max 0.917(110), min 0.917(110), ave 0.917
Test execution time: sum 9105 ms, max 133 ms, min 70 ms
----------------------------------------------------------------

2023-11-05 03:03:03 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-11-05 03:03:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 41 minutes 59 seconds
Variants: generated 200, build-succeeded 102, build-failed 67, syntax-invalid 20, redundant 11
Fitness: max 0.917(99), min 0.667(3), ave 0.909
Test execution time: sum 8125 ms, max 118 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:03:28 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-11-05 03:03:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 42 minutes 24 seconds
Variants: generated 200, build-succeeded 114, build-failed 56, syntax-invalid 21, redundant 9
Fitness: max 0.917(113), min 0.75(1), ave 0.915
Test execution time: sum 9024 ms, max 133 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 03:03:53 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-11-05 03:04:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 42 minutes 51 seconds
Variants: generated 200, build-succeeded 126, build-failed 57, syntax-invalid 11, redundant 6
Fitness: max 0.917(124), min 0.667(2), ave 0.913
Test execution time: sum 9892 ms, max 129 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:04:19 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-11-05 03:04:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 43 minutes 17 seconds
Variants: generated 200, build-succeeded 108, build-failed 65, syntax-invalid 20, redundant 7
Fitness: max 0.917(108), min 0.917(108), ave 0.917
Test execution time: sum 8934 ms, max 139 ms, min 69 ms
----------------------------------------------------------------

2023-11-05 03:04:45 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-11-05 03:05:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 43 minutes 43 seconds
Variants: generated 200, build-succeeded 117, build-failed 51, syntax-invalid 22, redundant 10
Fitness: max 0.917(115), min 0.75(2), ave 0.914
Test execution time: sum 9446 ms, max 120 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:05:11 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-11-05 03:05:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 44 minutes 8 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 15, redundant 15
Fitness: max 1(1), min 0.75(1), ave 0.916
Test execution time: sum 8897 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 03:05:36 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-11-05 03:06:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 44 minutes 33 seconds
Variants: generated 200, build-succeeded 105, build-failed 64, syntax-invalid 21, redundant 10
Fitness: max 0.917(104), min 0.75(1), ave 0.915
Test execution time: sum 8545 ms, max 142 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 03:06:01 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-11-05 03:06:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 44 minutes 59 seconds
Variants: generated 200, build-succeeded 117, build-failed 51, syntax-invalid 21, redundant 11
Fitness: max 0.917(111), min 0(1), ave 0.9
Test execution time: sum 9027 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 03:06:27 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-11-05 03:06:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 45 minutes 24 seconds
Variants: generated 200, build-succeeded 111, build-failed 49, syntax-invalid 23, redundant 17
Fitness: max 1(1), min 0.917(110), ave 0.917
Test execution time: sum 9145 ms, max 131 ms, min 69 ms
----------------------------------------------------------------

2023-11-05 03:06:52 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-11-05 03:08:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 46 minutes 56 seconds
Variants: generated 200, build-succeeded 101, build-failed 54, syntax-invalid 29, redundant 16
Fitness: max 0.917(98), min 0.5(1), ave 0.909
Test execution time: sum 76054 ms, max 68054 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 03:08:24 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-11-05 03:08:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 47 minutes 22 seconds
Variants: generated 200, build-succeeded 113, build-failed 54, syntax-invalid 19, redundant 14
Fitness: max 0.917(111), min 0(1), ave 0.907
Test execution time: sum 9288 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 03:08:50 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-11-05 03:09:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 47 minutes 48 seconds
Variants: generated 200, build-succeeded 112, build-failed 63, syntax-invalid 16, redundant 9
Fitness: max 0.917(112), min 0.917(112), ave 0.917
Test execution time: sum 9281 ms, max 141 ms, min 69 ms
----------------------------------------------------------------

2023-11-05 03:09:16 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-11-05 03:09:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 48 minutes 13 seconds
Variants: generated 200, build-succeeded 102, build-failed 52, syntax-invalid 31, redundant 15
Fitness: max 0.917(101), min 0.75(1), ave 0.915
Test execution time: sum 8184 ms, max 129 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:09:41 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-11-05 03:10:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 48 minutes 39 seconds
Variants: generated 200, build-succeeded 114, build-failed 60, syntax-invalid 15, redundant 11
Fitness: max 0.917(113), min 0.75(1), ave 0.915
Test execution time: sum 9347 ms, max 114 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:10:07 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-11-05 03:10:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 49 minutes 6 seconds
Variants: generated 200, build-succeeded 118, build-failed 48, syntax-invalid 20, redundant 14
Fitness: max 0.917(117), min 0.75(1), ave 0.915
Test execution time: sum 9616 ms, max 134 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:10:34 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-11-05 03:11:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 49 minutes 32 seconds
Variants: generated 200, build-succeeded 110, build-failed 62, syntax-invalid 20, redundant 8
Fitness: max 0.917(109), min 0.833(1), ave 0.916
Test execution time: sum 8874 ms, max 132 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:11:00 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-11-05 03:11:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 49 minutes 57 seconds
Variants: generated 200, build-succeeded 98, build-failed 66, syntax-invalid 30, redundant 6
Fitness: max 0.917(96), min 0.667(2), ave 0.912
Test execution time: sum 7907 ms, max 130 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:11:25 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-11-05 03:11:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 50 minutes 21 seconds
Variants: generated 200, build-succeeded 101, build-failed 56, syntax-invalid 31, redundant 12
Fitness: max 0.917(100), min 0.667(1), ave 0.914
Test execution time: sum 8212 ms, max 134 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:11:50 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-11-05 03:12:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 50 minutes 47 seconds
Variants: generated 200, build-succeeded 101, build-failed 64, syntax-invalid 27, redundant 8
Fitness: max 0.917(99), min 0.667(2), ave 0.912
Test execution time: sum 8505 ms, max 134 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:12:15 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-11-05 03:30:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 9 minutes 13 seconds
Variants: generated 200, build-succeeded 121, build-failed 52, syntax-invalid 14, redundant 13
Fitness: max 0.917(111), min 0.5(2), ave 0.893
Test execution time: sum 1087336 ms, max 539750 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:30:41 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-11-05 03:40:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 18 minutes 35 seconds
Variants: generated 200, build-succeeded 106, build-failed 60, syntax-invalid 25, redundant 9
Fitness: max 0.917(99), min 0.583(1), ave 0.899
Test execution time: sum 544210 ms, max 535846 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:40:03 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-11-05 03:40:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 19 minutes 2 seconds
Variants: generated 200, build-succeeded 112, build-failed 63, syntax-invalid 18, redundant 7
Fitness: max 0.917(105), min 0.667(4), ave 0.903
Test execution time: sum 8891 ms, max 128 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 03:40:30 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-11-05 04:13:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 52 minutes 19 seconds
Variants: generated 200, build-succeeded 109, build-failed 55, syntax-invalid 25, redundant 11
Fitness: max 1(2), min 0.583(2), ave 0.899
Test execution time: sum 1979754 ms, max 900024 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 04:13:48 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-11-05 04:14:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 52 minutes 47 seconds
Variants: generated 200, build-succeeded 117, build-failed 63, syntax-invalid 18, redundant 2
Fitness: max 1(4), min 0.667(3), ave 0.91
Test execution time: sum 9327 ms, max 108 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 04:14:15 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-11-05 04:29:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 8 minutes 14 seconds
Variants: generated 200, build-succeeded 108, build-failed 64, syntax-invalid 15, redundant 13
Fitness: max 1(5), min 0.5(1), ave 0.905
Test execution time: sum 908735 ms, max 900024 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 04:29:42 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-11-05 04:30:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 8 minutes 42 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 20, redundant 9
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 9853 ms, max 136 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 04:30:10 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-11-05 04:30:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 9 minutes 11 seconds
Variants: generated 200, build-succeeded 118, build-failed 49, syntax-invalid 19, redundant 14
Fitness: max 1(1), min 0.917(117), ave 0.917
Test execution time: sum 10085 ms, max 143 ms, min 51 ms
----------------------------------------------------------------

2023-11-05 04:30:39 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-11-05 04:31:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 9 minutes 38 seconds
Variants: generated 200, build-succeeded 105, build-failed 65, syntax-invalid 23, redundant 7
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 9175 ms, max 138 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 04:31:06 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-11-05 04:31:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 10 minutes 6 seconds
Variants: generated 200, build-succeeded 111, build-failed 54, syntax-invalid 19, redundant 16
Fitness: max 0.917(109), min 0.75(2), ave 0.914
Test execution time: sum 9897 ms, max 133 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 04:31:34 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-11-05 04:32:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 10 minutes 37 seconds
Variants: generated 200, build-succeeded 129, build-failed 52, syntax-invalid 12, redundant 7
Fitness: max 1(5), min 0.75(1), ave 0.918
Test execution time: sum 11653 ms, max 142 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 04:32:05 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-11-05 04:41:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 20 minutes 2 seconds
Variants: generated 200, build-succeeded 109, build-failed 61, syntax-invalid 19, redundant 11
Fitness: max 1(1), min 0.583(1), ave 0.911
Test execution time: sum 546758 ms, max 537250 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 04:41:31 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-11-05 04:41:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 20 minutes 29 seconds
Variants: generated 200, build-succeeded 105, build-failed 53, syntax-invalid 33, redundant 9
Fitness: max 1(2), min 0(1), ave 0.907
Test execution time: sum 9303 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-05 04:41:58 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-11-05 04:42:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 20 minutes 57 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 26, redundant 13
Fitness: max 0.917(100), min 0.333(2), ave 0.896
Test execution time: sum 9223 ms, max 136 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 04:42:25 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-11-05 04:42:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 21 minutes 25 seconds
Variants: generated 200, build-succeeded 110, build-failed 53, syntax-invalid 23, redundant 14
Fitness: max 0.917(106), min 0.333(1), ave 0.904
Test execution time: sum 9418 ms, max 136 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 04:42:53 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-11-05 04:43:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 21 minutes 55 seconds
Variants: generated 200, build-succeeded 123, build-failed 52, syntax-invalid 18, redundant 7
Fitness: max 0.917(123), min 0.917(123), ave 0.917
Test execution time: sum 10842 ms, max 133 ms, min 70 ms
----------------------------------------------------------------

2023-11-05 04:43:23 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-11-05 04:43:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 22 minutes 25 seconds
Variants: generated 200, build-succeeded 115, build-failed 63, syntax-invalid 15, redundant 7
Fitness: max 0.917(113), min 0.583(1), ave 0.912
Test execution time: sum 10066 ms, max 136 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 04:43:53 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-11-05 04:44:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 22 minutes 53 seconds
Variants: generated 200, build-succeeded 100, build-failed 68, syntax-invalid 23, redundant 9
Fitness: max 1(2), min 0.917(98), ave 0.918
Test execution time: sum 8868 ms, max 137 ms, min 70 ms
----------------------------------------------------------------

2023-11-05 04:44:21 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-11-05 05:23:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 2 minutes 21 seconds
Variants: generated 200, build-succeeded 108, build-failed 54, syntax-invalid 25, redundant 13
Fitness: max 1(1), min 0.333(1), ave 0.901
Test execution time: sum 2349475 ms, max 1440022 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 05:23:49 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-11-05 05:24:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 2 minutes 50 seconds
Variants: generated 200, build-succeeded 103, build-failed 68, syntax-invalid 22, redundant 7
Fitness: max 1(3), min 0.917(100), ave 0.919
Test execution time: sum 9651 ms, max 147 ms, min 72 ms
----------------------------------------------------------------

2023-11-05 05:24:18 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-11-05 05:24:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 3 minutes 20 seconds
Variants: generated 200, build-succeeded 117, build-failed 58, syntax-invalid 16, redundant 9
Fitness: max 0.917(117), min 0.917(117), ave 0.917
Test execution time: sum 10472 ms, max 132 ms, min 70 ms
----------------------------------------------------------------

2023-11-05 05:24:48 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-11-05 05:25:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 3 minutes 49 seconds
Variants: generated 200, build-succeeded 109, build-failed 65, syntax-invalid 18, redundant 8
Fitness: max 0.917(109), min 0.917(109), ave 0.917
Test execution time: sum 9630 ms, max 140 ms, min 71 ms
----------------------------------------------------------------

2023-11-05 05:25:17 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-11-05 05:25:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 4 minutes 18 seconds
Variants: generated 200, build-succeeded 108, build-failed 76, syntax-invalid 14, redundant 2
Fitness: max 0.917(108), min 0.917(108), ave 0.917
Test execution time: sum 9530 ms, max 137 ms, min 70 ms
----------------------------------------------------------------

2023-11-05 05:25:46 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-11-05 05:26:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 4 minutes 47 seconds
Variants: generated 200, build-succeeded 102, build-failed 68, syntax-invalid 21, redundant 9
Fitness: max 0.917(101), min 0.5(1), ave 0.913
Test execution time: sum 8783 ms, max 136 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 05:26:15 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-11-05 05:26:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 5 minutes 15 seconds
Variants: generated 200, build-succeeded 105, build-failed 60, syntax-invalid 23, redundant 12
Fitness: max 1(1), min 0.917(104), ave 0.917
Test execution time: sum 9269 ms, max 133 ms, min 70 ms
----------------------------------------------------------------

2023-11-05 05:26:43 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-11-05 05:27:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 5 minutes 46 seconds
Variants: generated 200, build-succeeded 113, build-failed 62, syntax-invalid 17, redundant 8
Fitness: max 0.917(111), min 0.667(2), ave 0.912
Test execution time: sum 10345 ms, max 138 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 05:27:14 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-11-05 05:42:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 21 minutes 16 seconds
Variants: generated 200, build-succeeded 120, build-failed 51, syntax-invalid 15, redundant 14
Fitness: max 1(1), min 0.583(1), ave 0.912
Test execution time: sum 910838 ms, max 900025 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 05:42:45 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-11-05 05:43:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 21 minutes 46 seconds
Variants: generated 200, build-succeeded 111, build-failed 55, syntax-invalid 21, redundant 13
Fitness: max 1(1), min 0.75(1), ave 0.916
Test execution time: sum 10253 ms, max 143 ms, min 25 ms
----------------------------------------------------------------

2023-11-05 05:43:15 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-11-05 05:43:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 22 minutes 17 seconds
Variants: generated 200, build-succeeded 114, build-failed 56, syntax-invalid 24, redundant 6
Fitness: max 1(1), min 0.75(3), ave 0.913
Test execution time: sum 10847 ms, max 148 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 05:43:45 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-11-05 05:44:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 22 minutes 49 seconds
Variants: generated 200, build-succeeded 123, build-failed 53, syntax-invalid 14, redundant 10
Fitness: max 1(1), min 0.917(122), ave 0.917
Test execution time: sum 11428 ms, max 133 ms, min 52 ms
----------------------------------------------------------------

2023-11-05 05:44:17 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-11-05 05:44:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 23 minutes 21 seconds
Variants: generated 200, build-succeeded 127, build-failed 44, syntax-invalid 17, redundant 12
Fitness: max 1(2), min 0.75(3), ave 0.913
Test execution time: sum 11625 ms, max 139 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 05:44:49 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-11-05 05:45:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 23 minutes 50 seconds
Variants: generated 200, build-succeeded 106, build-failed 66, syntax-invalid 21, redundant 7
Fitness: max 1(1), min 0.833(1), ave 0.917
Test execution time: sum 9794 ms, max 139 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 05:45:19 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-11-05 05:45:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 24 minutes 22 seconds
Variants: generated 200, build-succeeded 119, build-failed 49, syntax-invalid 14, redundant 18
Fitness: max 0.917(119), min 0.917(119), ave 0.917
Test execution time: sum 10958 ms, max 134 ms, min 70 ms
----------------------------------------------------------------

2023-11-05 05:45:50 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-11-05 05:46:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 24 minutes 53 seconds
Variants: generated 200, build-succeeded 114, build-failed 60, syntax-invalid 18, redundant 8
Fitness: max 0.917(113), min 0.667(1), ave 0.914
Test execution time: sum 10644 ms, max 136 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 05:46:21 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-11-05 05:46:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 25 minutes 25 seconds
Variants: generated 200, build-succeeded 116, build-failed 59, syntax-invalid 15, redundant 10
Fitness: max 0.917(115), min 0.75(1), ave 0.915
Test execution time: sum 11027 ms, max 136 ms, min 51 ms
----------------------------------------------------------------

2023-11-05 05:46:53 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-11-05 05:47:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 25 minutes 57 seconds
Variants: generated 200, build-succeeded 118, build-failed 58, syntax-invalid 18, redundant 6
Fitness: max 0.917(117), min 0.833(1), ave 0.916
Test execution time: sum 11379 ms, max 144 ms, min 25 ms
----------------------------------------------------------------

2023-11-05 05:47:25 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-11-05 05:47:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 26 minutes 29 seconds
Variants: generated 200, build-succeeded 117, build-failed 61, syntax-invalid 14, redundant 8
Fitness: max 1(3), min 0.75(1), ave 0.917
Test execution time: sum 11186 ms, max 137 ms, min 25 ms
----------------------------------------------------------------

2023-11-05 05:47:58 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-11-05 05:48:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 27 minutes 0 seconds
Variants: generated 200, build-succeeded 109, build-failed 63, syntax-invalid 20, redundant 8
Fitness: max 0.917(109), min 0.917(109), ave 0.917
Test execution time: sum 10291 ms, max 138 ms, min 71 ms
----------------------------------------------------------------

2023-11-05 05:48:29 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-11-05 05:49:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 27 minutes 33 seconds
Variants: generated 200, build-succeeded 125, build-failed 49, syntax-invalid 21, redundant 5
Fitness: max 1(2), min 0.333(1), ave 0.911
Test execution time: sum 11598 ms, max 138 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 05:49:01 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-11-05 05:49:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 28 minutes 5 seconds
Variants: generated 200, build-succeeded 118, build-failed 51, syntax-invalid 22, redundant 9
Fitness: max 0.917(117), min 0.5(1), ave 0.913
Test execution time: sum 10991 ms, max 141 ms, min 23 ms
----------------------------------------------------------------

2023-11-05 05:49:33 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-11-05 05:50:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 28 minutes 37 seconds
Variants: generated 200, build-succeeded 117, build-failed 56, syntax-invalid 17, redundant 10
Fitness: max 1(1), min 0.75(2), ave 0.915
Test execution time: sum 10650 ms, max 136 ms, min 30 ms
----------------------------------------------------------------

2023-11-05 05:50:05 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-11-05 05:50:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 29 minutes 8 seconds
Variants: generated 200, build-succeeded 110, build-failed 59, syntax-invalid 26, redundant 5
Fitness: max 0.917(109), min 0.75(1), ave 0.915
Test execution time: sum 10184 ms, max 136 ms, min 60 ms
----------------------------------------------------------------

2023-11-05 05:50:36 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-11-05 05:51:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 29 minutes 38 seconds
Variants: generated 200, build-succeeded 102, build-failed 67, syntax-invalid 25, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.916
Test execution time: sum 9489 ms, max 137 ms, min 25 ms
----------------------------------------------------------------

2023-11-05 05:51:06 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-11-05 05:51:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 30 minutes 10 seconds
Variants: generated 200, build-succeeded 113, build-failed 54, syntax-invalid 26, redundant 7
Fitness: max 0.917(111), min 0.667(2), ave 0.912
Test execution time: sum 10545 ms, max 141 ms, min 25 ms
----------------------------------------------------------------

2023-11-05 05:51:38 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-11-05 05:52:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 30 minutes 41 seconds
Variants: generated 200, build-succeeded 110, build-failed 58, syntax-invalid 20, redundant 12
Fitness: max 0.917(107), min 0.5(1), ave 0.91
Test execution time: sum 10480 ms, max 140 ms, min 24 ms
----------------------------------------------------------------

2023-11-05 05:52:10 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-11-05 05:52:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 30 minutes 43 seconds
Variants: generated 8, build-succeeded 4, build-failed 4, syntax-invalid 0, redundant 0
Fitness: max 1(1), min 0.917(3), ave 0.938
Test execution time: sum 371 ms, max 103 ms, min 73 ms
----------------------------------------------------------------

2023-11-05 05:52:11 [main] [INFO]  KGenProgMain - GA stopped
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,8 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +486,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v2856)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v2856)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v2856)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v2856)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +487,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					readPos = 0;
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v2856)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v2856)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v2856)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v3936)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v3936)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v3936)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v3936)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			x = x << 6;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v3936)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v3936)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v3936)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			eof = true;
+			int readLen = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +485,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4178)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4178)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4178)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4178)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +485,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					readPos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +572,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4178)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4178)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4178)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4178)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4365)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4365)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4365)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4365)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			eof = true;
+			int readLen = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +487,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4365)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4365)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v4365)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5093)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5093)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5093)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5093)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			pos = 0;
+			buffer = null;
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5093)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5093)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5093)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5858)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5858)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5858)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5858)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5858)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			String sep = StringUtils.newStringUtf8(lineSeparator);
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +488,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5858)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5858)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v5858)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6095)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6095)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6095)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6095)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			String sep = StringUtils.newStringUtf8(lineSeparator);
+			int readLen = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +423,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -570,7 +574,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6095)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6095)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6095)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +487,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6233)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6627)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6627)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6627)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6627)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			String sep = StringUtils.newStringUtf8(lineSeparator);
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			pos = 0;
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +490,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6627)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6627)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6627)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6810)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6810)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6810)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6810)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +421,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -484,6 +486,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6810)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6810)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v6810)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7132)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7132)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7132)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7132)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			currentLinePos = 0;
+            eof = true;
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7132)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7132)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7132)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7132)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7248)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7248)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7248)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7248)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			pos = 0;
+			x = x << 6;
+			eof = true;
+			lineLength = 0;  // disable chunk-separating
+			String sep = StringUtils.newStringUtf8(lineSeparator);
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +575,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7248)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7248)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v7248)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9226)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9226)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9226)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9226)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +488,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +575,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9226)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9226)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9226)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9484)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9484)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9484)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9484)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
+			lineSeparator = CHUNK_SEPARATOR;
+			pos = 0;
+			pos = 0;
+			x = x << 6;
+			x = x << 6;
+			pos = 0;
+			x = x << 6;
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +493,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +580,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9484)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9484)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v9484)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			eof = true;
+			x = x << 6;
+			pos = 0;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11111)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11111)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11111)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11111)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			eof = true;
+			pos = 0;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11111)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11111)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11111)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11310)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11310)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11310)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11310)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			eof = true;
+			pos = 0;
+			x = x << 6;
+			pos = 0;
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +491,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11310)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11310)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11310)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11323)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11323)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11323)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11323)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			pos = 0;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11323)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11323)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11323)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11331)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11331)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11331)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11331)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			pos = 0;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			eof = true;
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +494,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11331)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11331)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v11331)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			pos = 0;
+			eof = true;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +493,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13071)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13071)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13071)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13071)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +493,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +580,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13071)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13071)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13071)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13277)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13277)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13277)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13277)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13277)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13277)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13277)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13277)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13603)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13603)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13603)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13603)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,19 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			eof = true;
+			pos = 0;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +496,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13603)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13603)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13603)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13629)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13629)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13629)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13629)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,21 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			x = x << 6;
+			eof = true;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +583,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13629)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13629)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v13629)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v14473)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v14473)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v14473)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v14473)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +493,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v14473)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v14473)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v14473)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15673)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15673)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15673)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15673)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +493,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15673)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15673)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15673)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15792)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15792)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15792)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15792)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			pos = 0;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +581,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15792)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15792)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v15792)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16621)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16621)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16621)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16621)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16621)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +493,9 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +582,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16621)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16621)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16621)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16800)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16800)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16800)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16800)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+            eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +494,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16800)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16800)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v16800)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17330)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17330)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17330)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17330)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,20 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+            eof = true;
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +496,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17330)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17330)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17330)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17388)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17388)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17388)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17388)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +494,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17388)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17388)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17388)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17534)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17534)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17534)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17534)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,19 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +496,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17534)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17534)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17534)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17767)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17767)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17767)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17767)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17767)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17767)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17767)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17788)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17788)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17788)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17788)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +494,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17788)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17788)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17788)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17809)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17809)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17809)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17809)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			x = x << 6;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +579,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17809)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17809)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17809)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,19 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			pos = 0;
+			x = x << 6;
+			x = x << 6;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+            eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +495,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v18003)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v18003)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v18003)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v18003)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,19 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			x = x << 6;
+			pos = 0;
+			x = x << 6;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +496,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v18003)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v18003)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v18003)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v22004)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v22004)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v22004)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v22004)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,20 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            x = x << 6;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			pos = 0;
+			x = x << 6;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +496,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v22004)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v22004)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v22004)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v23708)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v23708)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v23708)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v23708)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,22 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +584,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v23708)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v23708)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v23708)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24363)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24363)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24363)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24363)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,21 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +584,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24363)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24363)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24363)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24566)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24566)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24566)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24566)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,21 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            readPos = 0;
+			eof = false;
+			eof = false;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +583,10 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24566)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24566)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24566)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24998)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24998)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24998)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24998)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,21 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +497,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +584,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24998)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24998)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v24998)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25773)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25773)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25773)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25773)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +579,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25773)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25773)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25773)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25842)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25842)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25842)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25842)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,22 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            x = x << 6;
+			eof = true;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25842)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25842)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v25842)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v26684)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v26684)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v26684)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v26684)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			eof = true;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v26684)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v26684)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v26684)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27087)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27087)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27087)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27087)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			eof = true;
+			lineLength = 0;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +502,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27087)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27087)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27087)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27891)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27891)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27891)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27891)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +589,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27891)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27891)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v27891)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v28423)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v28423)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v28423)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v28423)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v28423)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			eof = false;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			eof = false;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+            lineLength = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +503,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v28423)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v28423)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v28423)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v30453)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v30453)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v30453)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v30453)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v30453)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineLength = 0;
+			int startSrc = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			eof = false;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +502,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +590,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v30453)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v30453)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v30453)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v31066)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v31066)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v31066)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v31066)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +436,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -484,6 +501,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v31066)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v31066)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v31066)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33956)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33956)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33956)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33956)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33956)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33956)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33956)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33972)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33972)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33972)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33972)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +588,11 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33972)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33972)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v33972)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34072)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34072)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34072)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34072)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = false;
+			readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			eof = false;
+			x = x << 6;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +591,10 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34072)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34072)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34072)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34121)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34121)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34121)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34121)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +505,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +593,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34121)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34121)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34121)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34141)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34141)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34141)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34141)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,24 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = false;
+			eof = false;
+			x = x << 6;
+			eof = true;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +587,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34141)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34141)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34141)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34177)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34177)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34177)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34177)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			eof = true;
+			x = x << 6;
+			x = x << 6;
+			lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +505,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +592,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34177)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34177)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34177)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34299)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34299)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34299)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34299)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +507,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +594,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34299)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34299)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34299)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34352)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34352)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34352)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34352)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +588,10 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34352)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34352)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34352)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34354)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34354)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34354)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34354)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +591,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34354)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34354)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34354)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34379)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34379)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34379)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34379)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = false;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +588,11 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34379)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34379)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34379)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34384)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34384)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34384)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34384)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +503,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34384)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34384)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34384)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34559)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34559)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34559)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34559)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            {
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +592,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34559)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34559)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34559)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34591)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34591)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34591)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34591)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34591)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34591)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34591)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34730)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34730)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34730)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34730)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +591,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34730)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34730)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34730)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34946)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34946)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34946)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34946)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+            lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34946)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34946)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34946)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34987)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34987)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34987)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34987)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			lineLength = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +591,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34987)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34987)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v34987)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35333)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35333)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35333)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35333)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +505,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +592,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35333)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35333)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35333)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35363)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35363)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35363)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35363)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +506,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +593,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35363)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35363)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35363)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35371)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35371)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35371)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35371)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			x = x << 6;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+            readPos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +590,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35371)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35371)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35371)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35374)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35374)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35374)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35374)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = false;
+			resizeBuffer();
+			resizeBuffer();
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +588,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35374)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35374)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35374)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35386)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35386)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35386)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35386)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +505,9 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35386)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35386)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35386)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35505)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35505)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35505)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35505)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+            lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +506,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35505)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35505)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35505)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35760)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35760)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35760)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35760)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+            lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			lineLength = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +505,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35760)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35760)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35760)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35799)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35799)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35799)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35799)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			resizeBuffer();
+			x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +592,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35799)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35799)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v35799)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36730)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36730)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36730)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36730)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+            lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +506,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +593,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36730)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36730)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36730)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36769)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36769)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36769)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36769)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +510,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36769)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36769)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36769)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36947)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36947)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36947)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36947)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,32 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +509,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +596,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36947)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36947)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v36947)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37145)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37145)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37145)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37145)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = false;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			lineLength = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +591,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37145)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37145)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37145)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37176)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37176)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37176)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37176)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			eof = false;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			lineLength = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37176)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37176)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37176)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37194)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37194)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37194)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37194)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +505,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +592,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37194)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37194)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v37194)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38004)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38004)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38004)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38004)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineLength = 0;
+			buffer = null;
+			eof = true;
+			lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +507,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +594,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38004)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38004)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38004)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38481)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38481)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38481)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38481)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+            lineLength = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +592,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38481)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38481)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38481)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38632)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38632)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38632)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38632)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = false;
+			lineLength = 0;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +592,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38632)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38632)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38632)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38816)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38816)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38816)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38816)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,31 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +405,7 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
             pos = 0;
             readPos = 0;
         } else {
@@ -570,7 +594,10 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38816)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38816)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v38816)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39096)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39096)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39096)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39096)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +512,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +599,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39096)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39096)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39096)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39279)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39279)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39279)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39279)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +510,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +597,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39279)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39279)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39279)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39289)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39289)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39289)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39289)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -341,6 +360,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			lineSeparator = CHUNK_SEPARATOR;
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -484,6 +504,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +591,10 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39289)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39289)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39289)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39458)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39458)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39458)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39458)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -570,7 +589,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39458)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39458)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v39458)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40406)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40406)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40406)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -73,6 +73,7 @@
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
         this.doEncode = doEncode;
+		byte[] buf = new byte[doEncode ? 4096 : 8192];
         this.base64 = new Base64(false);
     }
 
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40406)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40406)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+            lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +505,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40406)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40406)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40406)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40436)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40436)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40436)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -73,6 +73,7 @@
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
         this.doEncode = doEncode;
+		byte[] buf = new byte[doEncode ? 4096 : 8192];
         this.base64 = new Base64(false);
     }
 
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40436)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40436)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+            lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +511,8 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40436)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40436)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40436)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40437)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40437)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40437)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40437)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+            lineLength = 0;
+			buffer = null;
+			lineLength = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +407,8 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
             pos = 0;
             readPos = 0;
         } else {
@@ -484,6 +511,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +598,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40437)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40437)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40437)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40802)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40802)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40802)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40802)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos = 0;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			pos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+            lineLength = 0;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +509,9 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +598,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40802)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40802)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40802)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40857)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40857)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40857)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40857)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = false;
+			lineSeparator = CHUNK_SEPARATOR;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +402,7 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
             pos = 0;
             readPos = 0;
         } else {
@@ -484,6 +505,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40857)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40857)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v40857)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41235)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41235)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41235)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41235)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +446,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -570,7 +597,9 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41235)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41235)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41235)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41634)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41634)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41634)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41634)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +510,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -570,7 +597,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41634)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41634)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v41634)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v42208)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v42208)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v42208)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v42208)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            lineLength = 0;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineSeparator = CHUNK_SEPARATOR;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+            lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -570,7 +595,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v42208)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v42208)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-05 05:52:11 [main] [INFO]  PatchLogExporter - patch (v42208)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-05 05:52:12 [main] [INFO]  KGenProgMain - Summary
Reached generation = 213
Generated variants = 42208
Syntax valid variants = 37623
Build succeeded variants = 22394
Time elapsed = 23 hours 30 minutes 43 seconds
Exit status = SUCCESS
