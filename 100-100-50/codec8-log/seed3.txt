2023-11-06 02:57:26 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-11-06 02:57:26 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-11-06 02:57:26 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-11-06 02:57:26 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 3 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-11-06 02:57:29 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-11-06 02:57:29 [main] [INFO]  KGenProgMain - GA started
2023-11-06 02:57:29 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-11-06 03:27:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 3 seconds
Variants: generated 100, build-succeeded 19, build-failed 53, syntax-invalid 8, redundant 20
Fitness: max 1(2), min 0.5(1), ave 0.798
Test execution time: sum 1801195 ms, max 900034 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 03:27:33 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-11-06 04:45:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 5 seconds
Variants: generated 100, build-succeeded 20, build-failed 53, syntax-invalid 11, redundant 16
Fitness: max 0.917(2), min 0.333(3), ave 0.658
Test execution time: sum 4680612 ms, max 1440025 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 04:45:35 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-11-06 07:09:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 11 seconds
Variants: generated 200, build-succeeded 66, build-failed 50, syntax-invalid 23, redundant 61
Fitness: max 0.917(4), min 0.333(5), ave 0.689
Test execution time: sum 8641860 ms, max 1440023 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 07:09:40 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-11-06 07:33:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 minutes 15 seconds
Variants: generated 200, build-succeeded 55, build-failed 49, syntax-invalid 19, redundant 77
Fitness: max 0.917(3), min 0.333(1), ave 0.756
Test execution time: sum 1441498 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 07:33:45 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-11-06 07:33:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 minutes 21 seconds
Variants: generated 200, build-succeeded 69, build-failed 54, syntax-invalid 21, redundant 56
Fitness: max 1(1), min 0.75(53), ave 0.777
Test execution time: sum 1878 ms, max 101 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 07:33:50 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-11-06 07:42:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 26 seconds
Variants: generated 200, build-succeeded 67, build-failed 57, syntax-invalid 23, redundant 53
Fitness: max 1(2), min 0.583(1), ave 0.792
Test execution time: sum 542028 ms, max 540022 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 07:42:56 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-11-06 07:43:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 32 seconds
Variants: generated 200, build-succeeded 63, build-failed 64, syntax-invalid 31, redundant 42
Fitness: max 1(6), min 0.75(17), ave 0.852
Test execution time: sum 2859 ms, max 117 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 07:43:02 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-11-06 07:43:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 38 seconds
Variants: generated 200, build-succeeded 41, build-failed 66, syntax-invalid 36, redundant 57
Fitness: max 1(4), min 0.75(11), ave 0.876
Test execution time: sum 2503 ms, max 108 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 07:43:08 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-11-06 07:43:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 44 seconds
Variants: generated 200, build-succeeded 43, build-failed 64, syntax-invalid 44, redundant 49
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 3246 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 07:43:14 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-11-06 07:43:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 51 seconds
Variants: generated 200, build-succeeded 48, build-failed 62, syntax-invalid 36, redundant 54
Fitness: max 1(3), min 0.75(1), ave 0.917
Test execution time: sum 3748 ms, max 111 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 07:43:21 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-11-06 07:43:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 58 seconds
Variants: generated 200, build-succeeded 46, build-failed 62, syntax-invalid 29, redundant 63
Fitness: max 1(4), min 0.75(1), ave 0.92
Test execution time: sum 3658 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 07:43:28 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-11-06 08:04:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 5 seconds
Variants: generated 200, build-succeeded 50, build-failed 55, syntax-invalid 38, redundant 57
Fitness: max 1(4), min 0.333(1), ave 0.905
Test execution time: sum 1263760 ms, max 1260022 ms, min 27 ms
----------------------------------------------------------------

2023-11-06 08:04:35 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-11-06 08:04:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 14 seconds
Variants: generated 200, build-succeeded 56, build-failed 60, syntax-invalid 33, redundant 51
Fitness: max 1(3), min 0.75(1), ave 0.918
Test execution time: sum 4420 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 08:04:43 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-11-06 08:19:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 22 seconds
Variants: generated 200, build-succeeded 60, build-failed 62, syntax-invalid 31, redundant 47
Fitness: max 1(4), min 0.583(1), ave 0.91
Test execution time: sum 904436 ms, max 900022 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 08:19:52 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-11-06 08:20:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 32 seconds
Variants: generated 200, build-succeeded 70, build-failed 60, syntax-invalid 25, redundant 45
Fitness: max 1(3), min 0.417(1), ave 0.899
Test execution time: sum 5348 ms, max 117 ms, min 20 ms
----------------------------------------------------------------

2023-11-06 08:20:01 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-11-06 08:20:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 42 seconds
Variants: generated 200, build-succeeded 71, build-failed 56, syntax-invalid 31, redundant 42
Fitness: max 1(2), min 0.833(1), ave 0.918
Test execution time: sum 5550 ms, max 115 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 08:20:11 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-11-06 08:20:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 51 seconds
Variants: generated 200, build-succeeded 67, build-failed 54, syntax-invalid 29, redundant 50
Fitness: max 1(3), min 0.5(1), ave 0.914
Test execution time: sum 5111 ms, max 103 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 08:20:21 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-11-06 08:20:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 1 seconds
Variants: generated 200, build-succeeded 69, build-failed 59, syntax-invalid 35, redundant 37
Fitness: max 1(6), min 0.333(2), ave 0.9
Test execution time: sum 5097 ms, max 104 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 08:20:30 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-11-06 08:20:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 10 seconds
Variants: generated 200, build-succeeded 66, build-failed 58, syntax-invalid 36, redundant 40
Fitness: max 1(2), min 0.5(1), ave 0.902
Test execution time: sum 4843 ms, max 105 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 08:20:40 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-11-06 08:20:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 22 seconds
Variants: generated 200, build-succeeded 84, build-failed 60, syntax-invalid 20, redundant 36
Fitness: max 1(1), min 0.917(83), ave 0.918
Test execution time: sum 6528 ms, max 112 ms, min 62 ms
----------------------------------------------------------------

2023-11-06 08:20:52 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-11-06 08:21:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 33 seconds
Variants: generated 200, build-succeeded 73, build-failed 58, syntax-invalid 36, redundant 33
Fitness: max 1(3), min 0.917(70), ave 0.92
Test execution time: sum 5721 ms, max 155 ms, min 67 ms
----------------------------------------------------------------

2023-11-06 08:21:03 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-11-06 08:21:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 44 seconds
Variants: generated 200, build-succeeded 76, build-failed 49, syntax-invalid 38, redundant 37
Fitness: max 1(5), min 0.917(71), ave 0.922
Test execution time: sum 6007 ms, max 117 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 08:21:14 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-11-06 08:21:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 55 seconds
Variants: generated 200, build-succeeded 76, build-failed 60, syntax-invalid 38, redundant 26
Fitness: max 1(4), min 0.75(1), ave 0.919
Test execution time: sum 5878 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 08:21:25 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-11-06 08:21:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 6 seconds
Variants: generated 200, build-succeeded 66, build-failed 66, syntax-invalid 43, redundant 25
Fitness: max 1(3), min 0.833(1), ave 0.919
Test execution time: sum 5096 ms, max 110 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 08:21:36 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-11-06 08:21:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 18 seconds
Variants: generated 200, build-succeeded 76, build-failed 64, syntax-invalid 39, redundant 21
Fitness: max 1(4), min 0.917(72), ave 0.921
Test execution time: sum 5894 ms, max 108 ms, min 67 ms
----------------------------------------------------------------

2023-11-06 08:21:47 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-11-06 08:22:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 30 seconds
Variants: generated 200, build-succeeded 84, build-failed 62, syntax-invalid 23, redundant 31
Fitness: max 1(2), min 0.917(82), ave 0.919
Test execution time: sum 6625 ms, max 120 ms, min 67 ms
----------------------------------------------------------------

2023-11-06 08:22:00 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-11-06 08:22:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 45 seconds
Variants: generated 200, build-succeeded 103, build-failed 51, syntax-invalid 29, redundant 17
Fitness: max 0.917(103), min 0.917(103), ave 0.917
Test execution time: sum 7972 ms, max 108 ms, min 66 ms
----------------------------------------------------------------

2023-11-06 08:22:15 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-11-06 08:22:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 59 seconds
Variants: generated 200, build-succeeded 93, build-failed 61, syntax-invalid 31, redundant 15
Fitness: max 1(2), min 0.917(91), ave 0.918
Test execution time: sum 7244 ms, max 123 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:22:28 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-11-06 08:22:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 10 seconds
Variants: generated 200, build-succeeded 73, build-failed 61, syntax-invalid 46, redundant 20
Fitness: max 0.917(73), min 0.917(73), ave 0.917
Test execution time: sum 5635 ms, max 109 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 08:22:40 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-11-06 08:22:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 25 seconds
Variants: generated 200, build-succeeded 104, build-failed 53, syntax-invalid 25, redundant 18
Fitness: max 1(1), min 0.917(103), ave 0.917
Test execution time: sum 7983 ms, max 127 ms, min 66 ms
----------------------------------------------------------------

2023-11-06 08:22:55 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-11-06 08:23:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 37 seconds
Variants: generated 200, build-succeeded 78, build-failed 63, syntax-invalid 41, redundant 18
Fitness: max 0.917(78), min 0.917(78), ave 0.917
Test execution time: sum 6033 ms, max 128 ms, min 67 ms
----------------------------------------------------------------

2023-11-06 08:23:07 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-11-06 08:23:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 51 seconds
Variants: generated 200, build-succeeded 90, build-failed 57, syntax-invalid 35, redundant 18
Fitness: max 1(1), min 0.917(89), ave 0.918
Test execution time: sum 6857 ms, max 110 ms, min 67 ms
----------------------------------------------------------------

2023-11-06 08:23:21 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-11-06 08:23:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 4 seconds
Variants: generated 200, build-succeeded 80, build-failed 63, syntax-invalid 43, redundant 14
Fitness: max 0.917(80), min 0.917(80), ave 0.917
Test execution time: sum 6185 ms, max 109 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:23:33 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-11-06 08:23:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 19 seconds
Variants: generated 200, build-succeeded 105, build-failed 56, syntax-invalid 26, redundant 13
Fitness: max 1(2), min 0.917(103), ave 0.918
Test execution time: sum 7992 ms, max 106 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:23:49 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-11-06 08:24:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 34 seconds
Variants: generated 200, build-succeeded 97, build-failed 55, syntax-invalid 33, redundant 15
Fitness: max 0.917(97), min 0.917(97), ave 0.917
Test execution time: sum 7446 ms, max 112 ms, min 67 ms
----------------------------------------------------------------

2023-11-06 08:24:03 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-11-06 08:24:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 48 seconds
Variants: generated 200, build-succeeded 94, build-failed 55, syntax-invalid 33, redundant 18
Fitness: max 0.917(94), min 0.917(94), ave 0.917
Test execution time: sum 7053 ms, max 105 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:24:17 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-11-06 08:24:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 1 seconds
Variants: generated 200, build-succeeded 86, build-failed 65, syntax-invalid 41, redundant 8
Fitness: max 0.917(86), min 0.917(86), ave 0.917
Test execution time: sum 6683 ms, max 111 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:24:31 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-11-06 08:24:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 17 seconds
Variants: generated 200, build-succeeded 98, build-failed 53, syntax-invalid 29, redundant 20
Fitness: max 0.917(98), min 0.917(98), ave 0.917
Test execution time: sum 7477 ms, max 105 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:24:46 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-11-06 08:25:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 32 seconds
Variants: generated 200, build-succeeded 101, build-failed 56, syntax-invalid 30, redundant 13
Fitness: max 0.917(101), min 0.917(101), ave 0.917
Test execution time: sum 7761 ms, max 108 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:25:02 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-11-06 08:25:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 48 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 23, redundant 15
Fitness: max 0.917(105), min 0.917(105), ave 0.917
Test execution time: sum 8094 ms, max 108 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:25:18 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-11-06 08:25:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 3 seconds
Variants: generated 200, build-succeeded 86, build-failed 65, syntax-invalid 38, redundant 11
Fitness: max 0.917(86), min 0.917(86), ave 0.917
Test execution time: sum 6630 ms, max 109 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:25:32 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-11-06 08:25:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 17 seconds
Variants: generated 200, build-succeeded 92, build-failed 64, syntax-invalid 34, redundant 10
Fitness: max 0.917(92), min 0.917(92), ave 0.917
Test execution time: sum 7034 ms, max 112 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:25:47 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-11-06 08:26:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 32 seconds
Variants: generated 200, build-succeeded 93, build-failed 55, syntax-invalid 40, redundant 12
Fitness: max 0.917(93), min 0.917(93), ave 0.917
Test execution time: sum 7145 ms, max 110 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 08:26:02 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-11-06 08:26:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 47 seconds
Variants: generated 200, build-succeeded 87, build-failed 59, syntax-invalid 43, redundant 11
Fitness: max 1(1), min 0.917(86), ave 0.918
Test execution time: sum 6570 ms, max 107 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:26:17 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-11-06 08:26:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 3 seconds
Variants: generated 200, build-succeeded 102, build-failed 54, syntax-invalid 28, redundant 16
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 7699 ms, max 137 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:26:32 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-11-06 08:26:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 19 seconds
Variants: generated 200, build-succeeded 102, build-failed 56, syntax-invalid 32, redundant 10
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 7862 ms, max 113 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 08:26:49 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-11-06 08:27:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 35 seconds
Variants: generated 200, build-succeeded 99, build-failed 58, syntax-invalid 34, redundant 9
Fitness: max 0.917(99), min 0.917(99), ave 0.917
Test execution time: sum 7586 ms, max 111 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:27:05 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-11-06 08:27:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 51 seconds
Variants: generated 200, build-succeeded 98, build-failed 56, syntax-invalid 37, redundant 9
Fitness: max 0.917(98), min 0.917(98), ave 0.917
Test execution time: sum 7473 ms, max 104 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 08:27:20 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-11-06 08:27:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 7 seconds
Variants: generated 200, build-succeeded 103, build-failed 53, syntax-invalid 26, redundant 18
Fitness: max 1(1), min 0.917(102), ave 0.917
Test execution time: sum 8033 ms, max 110 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:27:37 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-11-06 08:27:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 23 seconds
Variants: generated 200, build-succeeded 95, build-failed 60, syntax-invalid 34, redundant 11
Fitness: max 0.917(95), min 0.917(95), ave 0.917
Test execution time: sum 7247 ms, max 107 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:27:52 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-11-06 08:28:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 39 seconds
Variants: generated 200, build-succeeded 98, build-failed 62, syntax-invalid 31, redundant 9
Fitness: max 0.917(98), min 0.917(98), ave 0.917
Test execution time: sum 7517 ms, max 110 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:28:09 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-11-06 08:28:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 56 seconds
Variants: generated 200, build-succeeded 107, build-failed 45, syntax-invalid 27, redundant 21
Fitness: max 1(1), min 0.917(106), ave 0.917
Test execution time: sum 8185 ms, max 108 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 08:28:26 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-11-06 08:28:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 15 seconds
Variants: generated 200, build-succeeded 123, build-failed 56, syntax-invalid 11, redundant 10
Fitness: max 1(1), min 0.917(122), ave 0.917
Test execution time: sum 9469 ms, max 118 ms, min 67 ms
----------------------------------------------------------------

2023-11-06 08:28:45 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-11-06 08:29:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 33 seconds
Variants: generated 200, build-succeeded 107, build-failed 63, syntax-invalid 17, redundant 13
Fitness: max 1(2), min 0.667(1), ave 0.916
Test execution time: sum 8285 ms, max 112 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:29:02 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-11-06 08:29:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 51 seconds
Variants: generated 200, build-succeeded 120, build-failed 51, syntax-invalid 18, redundant 11
Fitness: max 1(1), min 0.917(119), ave 0.917
Test execution time: sum 9190 ms, max 109 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:29:21 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-11-06 08:29:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 32 minutes 8 seconds
Variants: generated 200, build-succeeded 100, build-failed 63, syntax-invalid 29, redundant 8
Fitness: max 0.917(96), min 0.5(3), ave 0.902
Test execution time: sum 7518 ms, max 111 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 08:29:37 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-11-06 08:29:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 32 minutes 25 seconds
Variants: generated 200, build-succeeded 112, build-failed 50, syntax-invalid 29, redundant 9
Fitness: max 0.917(108), min 0.5(3), ave 0.903
Test execution time: sum 8342 ms, max 107 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 08:29:55 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-11-06 08:30:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 32 minutes 43 seconds
Variants: generated 200, build-succeeded 105, build-failed 59, syntax-invalid 25, redundant 11
Fitness: max 1(1), min 0.917(104), ave 0.917
Test execution time: sum 8128 ms, max 110 ms, min 67 ms
----------------------------------------------------------------

2023-11-06 08:30:12 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-11-06 08:30:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 33 minutes 0 seconds
Variants: generated 200, build-succeeded 103, build-failed 55, syntax-invalid 32, redundant 10
Fitness: max 0.917(103), min 0.917(103), ave 0.917
Test execution time: sum 7906 ms, max 139 ms, min 67 ms
----------------------------------------------------------------

2023-11-06 08:30:30 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-11-06 08:30:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 33 minutes 16 seconds
Variants: generated 200, build-succeeded 90, build-failed 50, syntax-invalid 48, redundant 12
Fitness: max 0.917(90), min 0.917(90), ave 0.917
Test execution time: sum 6795 ms, max 106 ms, min 67 ms
----------------------------------------------------------------

2023-11-06 08:30:45 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-11-06 08:31:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 33 minutes 31 seconds
Variants: generated 200, build-succeeded 86, build-failed 55, syntax-invalid 44, redundant 15
Fitness: max 0.917(86), min 0.917(86), ave 0.917
Test execution time: sum 6587 ms, max 110 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:31:01 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-11-06 08:31:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 33 minutes 48 seconds
Variants: generated 200, build-succeeded 99, build-failed 51, syntax-invalid 35, redundant 15
Fitness: max 0.917(99), min 0.917(99), ave 0.917
Test execution time: sum 7751 ms, max 110 ms, min 64 ms
----------------------------------------------------------------

2023-11-06 08:31:18 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-11-06 08:31:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 34 minutes 5 seconds
Variants: generated 200, build-succeeded 97, build-failed 55, syntax-invalid 38, redundant 10
Fitness: max 0.917(96), min 0.667(1), ave 0.914
Test execution time: sum 7490 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:31:35 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-11-06 08:31:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 34 minutes 20 seconds
Variants: generated 200, build-succeeded 84, build-failed 56, syntax-invalid 47, redundant 13
Fitness: max 0.917(82), min 0.5(2), ave 0.907
Test execution time: sum 6297 ms, max 106 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 08:31:50 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-11-06 08:32:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 34 minutes 37 seconds
Variants: generated 200, build-succeeded 93, build-failed 58, syntax-invalid 40, redundant 9
Fitness: max 0.917(90), min 0.5(2), ave 0.905
Test execution time: sum 6943 ms, max 110 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:32:07 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-11-06 08:32:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 34 minutes 53 seconds
Variants: generated 200, build-succeeded 88, build-failed 62, syntax-invalid 40, redundant 10
Fitness: max 0.917(86), min 0.5(1), ave 0.909
Test execution time: sum 6638 ms, max 108 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 08:32:23 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-11-06 08:32:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 11 seconds
Variants: generated 200, build-succeeded 102, build-failed 48, syntax-invalid 39, redundant 11
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 7758 ms, max 103 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:32:41 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-11-06 08:32:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 27 seconds
Variants: generated 200, build-succeeded 84, build-failed 48, syntax-invalid 50, redundant 18
Fitness: max 0.917(84), min 0.917(84), ave 0.917
Test execution time: sum 6373 ms, max 104 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:32:57 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-11-06 08:33:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 44 seconds
Variants: generated 200, build-succeeded 93, build-failed 47, syntax-invalid 46, redundant 14
Fitness: max 0.917(93), min 0.917(93), ave 0.917
Test execution time: sum 7010 ms, max 106 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:33:14 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-11-06 08:33:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 1 seconds
Variants: generated 200, build-succeeded 98, build-failed 48, syntax-invalid 35, redundant 19
Fitness: max 0.917(97), min 0.5(1), ave 0.912
Test execution time: sum 7427 ms, max 105 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:33:31 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-11-06 08:33:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 20 seconds
Variants: generated 200, build-succeeded 103, build-failed 56, syntax-invalid 35, redundant 6
Fitness: max 0.917(103), min 0.917(103), ave 0.917
Test execution time: sum 7814 ms, max 107 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:33:50 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-11-06 08:34:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 37 seconds
Variants: generated 200, build-succeeded 87, build-failed 63, syntax-invalid 39, redundant 11
Fitness: max 0.917(87), min 0.917(87), ave 0.917
Test execution time: sum 6633 ms, max 107 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:34:06 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-11-06 08:34:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 55 seconds
Variants: generated 200, build-succeeded 107, build-failed 47, syntax-invalid 34, redundant 12
Fitness: max 0.917(107), min 0.917(107), ave 0.917
Test execution time: sum 8067 ms, max 106 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:34:25 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-11-06 08:34:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 15 seconds
Variants: generated 200, build-succeeded 104, build-failed 60, syntax-invalid 30, redundant 6
Fitness: max 0.917(103), min 0.667(1), ave 0.914
Test execution time: sum 7977 ms, max 110 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:34:44 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-11-06 08:35:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 31 seconds
Variants: generated 200, build-succeeded 83, build-failed 61, syntax-invalid 48, redundant 8
Fitness: max 0.917(83), min 0.917(83), ave 0.917
Test execution time: sum 6152 ms, max 100 ms, min 63 ms
----------------------------------------------------------------

2023-11-06 08:35:01 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-11-06 08:35:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 50 seconds
Variants: generated 200, build-succeeded 99, build-failed 55, syntax-invalid 32, redundant 14
Fitness: max 0.917(99), min 0.917(99), ave 0.917
Test execution time: sum 7606 ms, max 111 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:35:20 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-11-06 08:35:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 10 seconds
Variants: generated 200, build-succeeded 108, build-failed 55, syntax-invalid 29, redundant 8
Fitness: max 0.917(108), min 0.917(108), ave 0.917
Test execution time: sum 8295 ms, max 107 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:35:39 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-11-06 08:35:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 29 seconds
Variants: generated 200, build-succeeded 100, build-failed 61, syntax-invalid 28, redundant 11
Fitness: max 0.917(100), min 0.917(100), ave 0.917
Test execution time: sum 7635 ms, max 109 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:35:59 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-11-06 08:36:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 47 seconds
Variants: generated 200, build-succeeded 90, build-failed 68, syntax-invalid 35, redundant 7
Fitness: max 0.917(89), min 0.5(1), ave 0.912
Test execution time: sum 6884 ms, max 110 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 08:36:17 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-11-06 08:36:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 7 seconds
Variants: generated 200, build-succeeded 107, build-failed 60, syntax-invalid 26, redundant 7
Fitness: max 0.917(105), min 0.5(2), ave 0.909
Test execution time: sum 7875 ms, max 105 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 08:36:36 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-11-06 08:36:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 24 seconds
Variants: generated 200, build-succeeded 82, build-failed 67, syntax-invalid 39, redundant 12
Fitness: max 0.917(78), min 0.5(4), ave 0.896
Test execution time: sum 6097 ms, max 106 ms, min 21 ms
----------------------------------------------------------------

2023-11-06 08:36:53 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-11-06 08:37:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 42 seconds
Variants: generated 200, build-succeeded 85, build-failed 65, syntax-invalid 40, redundant 10
Fitness: max 0.917(85), min 0.917(85), ave 0.917
Test execution time: sum 6563 ms, max 141 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 08:37:11 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-11-06 08:37:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 40 minutes 2 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 25, redundant 8
Fitness: max 0.917(109), min 0.667(1), ave 0.914
Test execution time: sum 8338 ms, max 110 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:37:32 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-11-06 08:37:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 40 minutes 23 seconds
Variants: generated 200, build-succeeded 111, build-failed 53, syntax-invalid 23, redundant 13
Fitness: max 0.917(108), min 0.667(3), ave 0.91
Test execution time: sum 8350 ms, max 107 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:37:52 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-11-06 08:38:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 40 minutes 43 seconds
Variants: generated 200, build-succeeded 101, build-failed 65, syntax-invalid 24, redundant 10
Fitness: max 0.917(101), min 0.917(101), ave 0.917
Test execution time: sum 7856 ms, max 110 ms, min 66 ms
----------------------------------------------------------------

2023-11-06 08:38:13 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-11-06 08:38:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 5 seconds
Variants: generated 200, build-succeeded 114, build-failed 59, syntax-invalid 18, redundant 9
Fitness: max 0.917(114), min 0.917(114), ave 0.917
Test execution time: sum 8742 ms, max 109 ms, min 64 ms
----------------------------------------------------------------

2023-11-06 08:38:34 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-11-06 08:38:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 26 seconds
Variants: generated 200, build-succeeded 112, build-failed 55, syntax-invalid 23, redundant 10
Fitness: max 0.917(112), min 0.917(112), ave 0.917
Test execution time: sum 8537 ms, max 108 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:38:56 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-11-06 08:39:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 48 seconds
Variants: generated 200, build-succeeded 123, build-failed 56, syntax-invalid 13, redundant 8
Fitness: max 0.917(118), min 0.5(3), ave 0.902
Test execution time: sum 9202 ms, max 111 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:39:18 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-11-06 08:39:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 9 seconds
Variants: generated 200, build-succeeded 110, build-failed 59, syntax-invalid 18, redundant 13
Fitness: max 0.917(109), min 0.5(1), ave 0.913
Test execution time: sum 8291 ms, max 139 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:39:39 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-11-06 08:40:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 31 seconds
Variants: generated 200, build-succeeded 121, build-failed 52, syntax-invalid 22, redundant 5
Fitness: max 0.917(118), min 0.5(3), ave 0.906
Test execution time: sum 9143 ms, max 110 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 08:40:01 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-11-06 08:40:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 51 seconds
Variants: generated 200, build-succeeded 99, build-failed 57, syntax-invalid 34, redundant 10
Fitness: max 0.917(93), min 0.5(6), ave 0.891
Test execution time: sum 7215 ms, max 107 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:40:21 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-11-06 08:40:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 14 seconds
Variants: generated 200, build-succeeded 121, build-failed 58, syntax-invalid 15, redundant 6
Fitness: max 0.917(120), min 0.5(1), ave 0.913
Test execution time: sum 9224 ms, max 108 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:40:44 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-11-06 08:41:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 35 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 29, redundant 8
Fitness: max 0.917(104), min 0.917(104), ave 0.917
Test execution time: sum 7976 ms, max 108 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:41:05 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-11-06 08:41:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 56 seconds
Variants: generated 200, build-succeeded 102, build-failed 54, syntax-invalid 37, redundant 7
Fitness: max 0.917(99), min 0.5(3), ave 0.904
Test execution time: sum 7614 ms, max 109 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:41:26 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-11-06 08:41:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 17 seconds
Variants: generated 200, build-succeeded 102, build-failed 57, syntax-invalid 32, redundant 9
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 7866 ms, max 109 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:41:47 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-11-06 08:42:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 38 seconds
Variants: generated 200, build-succeeded 100, build-failed 58, syntax-invalid 35, redundant 7
Fitness: max 0.917(100), min 0.917(100), ave 0.917
Test execution time: sum 7559 ms, max 99 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:42:08 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-11-06 08:42:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 0 seconds
Variants: generated 200, build-succeeded 109, build-failed 62, syntax-invalid 23, redundant 6
Fitness: max 0.917(109), min 0.917(109), ave 0.917
Test execution time: sum 8501 ms, max 118 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:42:30 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-11-06 08:42:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 23 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 26, redundant 7
Fitness: max 0.917(110), min 0.917(110), ave 0.917
Test execution time: sum 8337 ms, max 106 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:42:52 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-11-06 08:43:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 43 seconds
Variants: generated 200, build-succeeded 93, build-failed 57, syntax-invalid 39, redundant 11
Fitness: max 0.917(92), min 0.667(1), ave 0.914
Test execution time: sum 7118 ms, max 106 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:43:13 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-11-06 08:43:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 6 seconds
Variants: generated 200, build-succeeded 119, build-failed 53, syntax-invalid 21, redundant 7
Fitness: max 0.917(119), min 0.917(119), ave 0.917
Test execution time: sum 9143 ms, max 108 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:43:36 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-11-06 08:43:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 28 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 31, redundant 9
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 7834 ms, max 107 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 08:43:58 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-11-06 08:44:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 49 seconds
Variants: generated 200, build-succeeded 97, build-failed 59, syntax-invalid 35, redundant 9
Fitness: max 0.917(96), min 0.75(1), ave 0.915
Test execution time: sum 7390 ms, max 108 ms, min 34 ms
----------------------------------------------------------------

2023-11-06 08:44:19 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-11-06 08:44:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 10 seconds
Variants: generated 200, build-succeeded 94, build-failed 59, syntax-invalid 37, redundant 10
Fitness: max 0.917(94), min 0.917(94), ave 0.917
Test execution time: sum 7088 ms, max 112 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:44:40 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-11-06 08:45:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 30 seconds
Variants: generated 200, build-succeeded 88, build-failed 61, syntax-invalid 43, redundant 8
Fitness: max 0.917(88), min 0.917(88), ave 0.917
Test execution time: sum 6742 ms, max 118 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:45:00 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-11-06 08:45:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 50 seconds
Variants: generated 200, build-succeeded 88, build-failed 67, syntax-invalid 36, redundant 9
Fitness: max 0.917(88), min 0.917(88), ave 0.917
Test execution time: sum 6737 ms, max 108 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:45:20 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-11-06 08:45:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 9 seconds
Variants: generated 200, build-succeeded 79, build-failed 63, syntax-invalid 45, redundant 13
Fitness: max 0.917(79), min 0.917(79), ave 0.917
Test execution time: sum 6074 ms, max 108 ms, min 64 ms
----------------------------------------------------------------

2023-11-06 08:45:39 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-11-06 08:45:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 30 seconds
Variants: generated 200, build-succeeded 95, build-failed 56, syntax-invalid 38, redundant 11
Fitness: max 0.917(95), min 0.917(95), ave 0.917
Test execution time: sum 7238 ms, max 106 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:45:59 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-11-06 08:46:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 50 seconds
Variants: generated 200, build-succeeded 89, build-failed 53, syntax-invalid 45, redundant 13
Fitness: max 0.917(89), min 0.917(89), ave 0.917
Test execution time: sum 6798 ms, max 107 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:46:19 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-11-06 08:46:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 49 minutes 10 seconds
Variants: generated 200, build-succeeded 93, build-failed 55, syntax-invalid 39, redundant 13
Fitness: max 0.917(92), min 0.5(1), ave 0.912
Test execution time: sum 7091 ms, max 105 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 08:46:40 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-11-06 08:47:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 49 minutes 30 seconds
Variants: generated 200, build-succeeded 83, build-failed 64, syntax-invalid 45, redundant 8
Fitness: max 0.917(82), min 0.5(1), ave 0.912
Test execution time: sum 6258 ms, max 109 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 08:47:00 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-11-06 08:47:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 49 minutes 50 seconds
Variants: generated 200, build-succeeded 84, build-failed 59, syntax-invalid 45, redundant 12
Fitness: max 0.917(83), min 0.5(1), ave 0.912
Test execution time: sum 6311 ms, max 139 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 08:47:19 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-11-06 08:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 50 minutes 11 seconds
Variants: generated 200, build-succeeded 94, build-failed 66, syntax-invalid 28, redundant 12
Fitness: max 0.917(92), min 0.5(2), ave 0.908
Test execution time: sum 7084 ms, max 109 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 08:47:41 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-11-06 08:48:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 50 minutes 33 seconds
Variants: generated 200, build-succeeded 97, build-failed 53, syntax-invalid 37, redundant 13
Fitness: max 0.917(95), min 0.5(2), ave 0.908
Test execution time: sum 7287 ms, max 107 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 08:48:03 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-11-06 08:48:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 50 minutes 56 seconds
Variants: generated 200, build-succeeded 109, build-failed 51, syntax-invalid 31, redundant 9
Fitness: max 0.917(109), min 0.917(109), ave 0.917
Test execution time: sum 8266 ms, max 108 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 08:48:26 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-11-06 08:48:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 minutes 18 seconds
Variants: generated 200, build-succeeded 99, build-failed 51, syntax-invalid 40, redundant 10
Fitness: max 0.917(99), min 0.917(99), ave 0.917
Test execution time: sum 7501 ms, max 107 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:48:48 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-11-06 08:49:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 minutes 41 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 30, redundant 7
Fitness: max 0.917(104), min 0.917(104), ave 0.917
Test execution time: sum 7996 ms, max 109 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:49:11 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-11-06 08:49:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 3 seconds
Variants: generated 200, build-succeeded 90, build-failed 64, syntax-invalid 33, redundant 13
Fitness: max 0.917(90), min 0.917(90), ave 0.917
Test execution time: sum 6854 ms, max 109 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 08:49:33 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-11-06 08:49:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 26 seconds
Variants: generated 200, build-succeeded 99, build-failed 54, syntax-invalid 27, redundant 20
Fitness: max 0.917(99), min 0.917(99), ave 0.917
Test execution time: sum 7540 ms, max 112 ms, min 64 ms
----------------------------------------------------------------

2023-11-06 08:49:56 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-11-06 08:50:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 50 seconds
Variants: generated 200, build-succeeded 110, build-failed 53, syntax-invalid 27, redundant 10
Fitness: max 0.917(110), min 0.917(110), ave 0.917
Test execution time: sum 8173 ms, max 96 ms, min 66 ms
----------------------------------------------------------------

2023-11-06 08:50:20 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-11-06 08:50:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 14 seconds
Variants: generated 200, build-succeeded 108, build-failed 54, syntax-invalid 30, redundant 8
Fitness: max 0.917(107), min 0.333(1), ave 0.911
Test execution time: sum 8141 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-11-06 08:50:44 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-11-06 09:00:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 37 seconds
Variants: generated 200, build-succeeded 99, build-failed 57, syntax-invalid 32, redundant 12
Fitness: max 0.917(98), min 0.583(1), ave 0.913
Test execution time: sum 547281 ms, max 540024 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 09:00:07 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-11-06 09:00:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 3 minutes 0 seconds
Variants: generated 200, build-succeeded 108, build-failed 48, syntax-invalid 33, redundant 11
Fitness: max 0.917(105), min 0.5(3), ave 0.905
Test execution time: sum 7967 ms, max 108 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 09:00:30 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-11-06 09:09:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 23 seconds
Variants: generated 200, build-succeeded 105, build-failed 52, syntax-invalid 31, redundant 12
Fitness: max 0.917(104), min 0.583(1), ave 0.913
Test execution time: sum 546759 ms, max 539039 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 09:09:53 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-11-06 09:28:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 42 seconds
Variants: generated 200, build-succeeded 96, build-failed 60, syntax-invalid 32, redundant 12
Fitness: max 0.917(94), min 0.583(2), ave 0.91
Test execution time: sum 1083389 ms, max 539968 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 09:28:12 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-11-06 09:28:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 7 seconds
Variants: generated 200, build-succeeded 111, build-failed 56, syntax-invalid 23, redundant 10
Fitness: max 0.917(111), min 0.917(111), ave 0.917
Test execution time: sum 8265 ms, max 109 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 09:28:37 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-11-06 09:29:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 32 seconds
Variants: generated 200, build-succeeded 114, build-failed 50, syntax-invalid 22, redundant 14
Fitness: max 0.917(114), min 0.917(114), ave 0.917
Test execution time: sum 8477 ms, max 106 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 09:29:02 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-11-06 09:29:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 57 seconds
Variants: generated 200, build-succeeded 108, build-failed 55, syntax-invalid 28, redundant 9
Fitness: max 0.917(108), min 0.917(108), ave 0.917
Test execution time: sum 8078 ms, max 106 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 09:29:27 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-11-06 09:56:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 59 minutes 14 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 27, redundant 8
Fitness: max 0.917(106), min 0.583(3), ave 0.907
Test execution time: sum 1620356 ms, max 538487 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 09:56:44 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-11-06 10:15:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 35 seconds
Variants: generated 200, build-succeeded 108, build-failed 62, syntax-invalid 22, redundant 8
Fitness: max 0.917(104), min 0.583(2), ave 0.907
Test execution time: sum 1083792 ms, max 539506 ms, min 35 ms
----------------------------------------------------------------

2023-11-06 10:15:04 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-11-06 10:15:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 59 seconds
Variants: generated 200, build-succeeded 110, build-failed 49, syntax-invalid 25, redundant 16
Fitness: max 0.917(109), min 0.833(1), ave 0.916
Test execution time: sum 8184 ms, max 101 ms, min 50 ms
----------------------------------------------------------------

2023-11-06 10:15:29 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-11-06 10:15:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 18 minutes 24 seconds
Variants: generated 200, build-succeeded 102, build-failed 52, syntax-invalid 28, redundant 18
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 7702 ms, max 106 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 10:15:53 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-11-06 10:16:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 18 minutes 48 seconds
Variants: generated 200, build-succeeded 102, build-failed 51, syntax-invalid 34, redundant 13
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 7666 ms, max 105 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 10:16:17 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-11-06 10:16:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 12 seconds
Variants: generated 200, build-succeeded 103, build-failed 52, syntax-invalid 38, redundant 7
Fitness: max 0.917(103), min 0.917(103), ave 0.917
Test execution time: sum 7702 ms, max 104 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 10:16:41 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-11-06 10:17:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 35 seconds
Variants: generated 200, build-succeeded 87, build-failed 69, syntax-invalid 37, redundant 7
Fitness: max 0.917(87), min 0.917(87), ave 0.917
Test execution time: sum 6523 ms, max 108 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 10:17:05 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-11-06 10:17:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 1 seconds
Variants: generated 200, build-succeeded 114, build-failed 51, syntax-invalid 21, redundant 14
Fitness: max 0.917(114), min 0.917(114), ave 0.917
Test execution time: sum 8600 ms, max 107 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 10:17:31 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-11-06 10:17:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 25 seconds
Variants: generated 200, build-succeeded 94, build-failed 64, syntax-invalid 32, redundant 10
Fitness: max 0.917(94), min 0.917(94), ave 0.917
Test execution time: sum 7140 ms, max 110 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 10:17:55 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-11-06 10:18:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 50 seconds
Variants: generated 200, build-succeeded 98, build-failed 53, syntax-invalid 31, redundant 18
Fitness: max 0.917(95), min 0.75(3), ave 0.912
Test execution time: sum 7232 ms, max 109 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 10:18:20 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-11-06 10:18:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 21 minutes 16 seconds
Variants: generated 200, build-succeeded 113, build-failed 51, syntax-invalid 22, redundant 14
Fitness: max 0.917(108), min 0.75(5), ave 0.909
Test execution time: sum 8290 ms, max 105 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 10:18:46 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-11-06 10:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 21 minutes 42 seconds
Variants: generated 200, build-succeeded 103, build-failed 64, syntax-invalid 27, redundant 6
Fitness: max 0.917(103), min 0.917(103), ave 0.917
Test execution time: sum 7866 ms, max 110 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 10:19:11 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-11-06 10:19:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 22 minutes 7 seconds
Variants: generated 200, build-succeeded 104, build-failed 60, syntax-invalid 27, redundant 9
Fitness: max 0.917(101), min 0.5(1), ave 0.909
Test execution time: sum 7710 ms, max 110 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 10:19:37 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-11-06 10:20:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 22 minutes 33 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 22, redundant 15
Fitness: max 0.917(103), min 0.333(1), ave 0.911
Test execution time: sum 7800 ms, max 106 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 10:20:03 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-11-06 10:20:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 22 minutes 58 seconds
Variants: generated 200, build-succeeded 99, build-failed 60, syntax-invalid 28, redundant 13
Fitness: max 0.917(97), min 0.333(1), ave 0.908
Test execution time: sum 7349 ms, max 109 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 10:20:28 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-11-06 10:20:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 23 minutes 23 seconds
Variants: generated 200, build-succeeded 97, build-failed 61, syntax-invalid 31, redundant 11
Fitness: max 0.917(97), min 0.917(97), ave 0.917
Test execution time: sum 7353 ms, max 109 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 10:20:53 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-11-06 10:21:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 23 minutes 48 seconds
Variants: generated 200, build-succeeded 96, build-failed 56, syntax-invalid 39, redundant 9
Fitness: max 0.917(96), min 0.917(96), ave 0.917
Test execution time: sum 7368 ms, max 108 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 10:21:17 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-11-06 10:21:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 24 minutes 12 seconds
Variants: generated 200, build-succeeded 87, build-failed 61, syntax-invalid 37, redundant 15
Fitness: max 0.917(85), min 0.667(2), ave 0.911
Test execution time: sum 6595 ms, max 129 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 10:21:42 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-11-06 10:22:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 24 minutes 38 seconds
Variants: generated 200, build-succeeded 104, build-failed 56, syntax-invalid 27, redundant 13
Fitness: max 0.917(102), min 0.667(2), ave 0.912
Test execution time: sum 7817 ms, max 105 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 10:22:08 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-11-06 10:22:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 25 minutes 3 seconds
Variants: generated 200, build-succeeded 92, build-failed 57, syntax-invalid 38, redundant 13
Fitness: max 0.917(91), min 0.667(1), ave 0.914
Test execution time: sum 6879 ms, max 107 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 10:22:33 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-11-06 10:22:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 25 minutes 29 seconds
Variants: generated 200, build-succeeded 102, build-failed 60, syntax-invalid 34, redundant 4
Fitness: max 0.917(99), min 0.667(3), ave 0.909
Test execution time: sum 7581 ms, max 114 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 10:22:59 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-11-06 10:23:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 25 minutes 56 seconds
Variants: generated 200, build-succeeded 108, build-failed 52, syntax-invalid 34, redundant 6
Fitness: max 0.917(107), min 0.667(1), ave 0.914
Test execution time: sum 8037 ms, max 108 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 10:23:26 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-11-06 10:23:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 23 seconds
Variants: generated 200, build-succeeded 103, build-failed 57, syntax-invalid 31, redundant 9
Fitness: max 0.917(102), min 0.667(1), ave 0.914
Test execution time: sum 7734 ms, max 106 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 10:23:53 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-11-06 10:33:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 35 minutes 47 seconds
Variants: generated 200, build-succeeded 93, build-failed 54, syntax-invalid 40, redundant 13
Fitness: max 0.917(91), min 0.583(1), ave 0.91
Test execution time: sum 544970 ms, max 538217 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 10:33:17 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-11-06 11:12:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 14 minutes 42 seconds
Variants: generated 200, build-succeeded 100, build-failed 56, syntax-invalid 33, redundant 11
Fitness: max 0.917(90), min 0.5(5), ave 0.88
Test execution time: sum 2316020 ms, max 539792 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 11:12:12 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-11-06 11:30:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 33 minutes 7 seconds
Variants: generated 200, build-succeeded 98, build-failed 51, syntax-invalid 34, redundant 17
Fitness: max 0.917(96), min 0.583(2), ave 0.91
Test execution time: sum 1085231 ms, max 539772 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 11:30:37 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-11-06 11:40:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 32 seconds
Variants: generated 200, build-succeeded 93, build-failed 54, syntax-invalid 37, redundant 16
Fitness: max 0.917(91), min 0.5(1), ave 0.909
Test execution time: sum 546546 ms, max 539742 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 11:40:02 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-11-06 11:40:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 59 seconds
Variants: generated 200, build-succeeded 97, build-failed 59, syntax-invalid 34, redundant 10
Fitness: max 0.917(97), min 0.917(97), ave 0.917
Test execution time: sum 7332 ms, max 106 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 11:40:29 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-11-06 11:40:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 43 minutes 25 seconds
Variants: generated 200, build-succeeded 97, build-failed 60, syntax-invalid 37, redundant 6
Fitness: max 0.917(97), min 0.917(97), ave 0.917
Test execution time: sum 7270 ms, max 106 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 11:40:55 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-11-06 11:41:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 43 minutes 51 seconds
Variants: generated 200, build-succeeded 96, build-failed 56, syntax-invalid 37, redundant 11
Fitness: max 0.917(96), min 0.917(96), ave 0.917
Test execution time: sum 7243 ms, max 106 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 11:41:21 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-11-06 11:41:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 44 minutes 21 seconds
Variants: generated 200, build-succeeded 116, build-failed 51, syntax-invalid 22, redundant 11
Fitness: max 0.917(116), min 0.917(116), ave 0.917
Test execution time: sum 8830 ms, max 107 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 11:41:51 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-11-06 12:09:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 11 minutes 43 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 33, redundant 9
Fitness: max 0.917(99), min 0.583(3), ave 0.902
Test execution time: sum 1623052 ms, max 540025 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 12:09:13 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-11-06 12:09:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 12 minutes 12 seconds
Variants: generated 200, build-succeeded 109, build-failed 51, syntax-invalid 31, redundant 9
Fitness: max 0.917(109), min 0.917(109), ave 0.917
Test execution time: sum 8301 ms, max 110 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 12:09:42 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-11-06 12:10:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 12 minutes 40 seconds
Variants: generated 200, build-succeeded 108, build-failed 52, syntax-invalid 28, redundant 12
Fitness: max 0.917(108), min 0.917(108), ave 0.917
Test execution time: sum 8265 ms, max 106 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 12:10:10 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-11-06 12:10:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 10 seconds
Variants: generated 200, build-succeeded 108, build-failed 57, syntax-invalid 25, redundant 10
Fitness: max 0.917(107), min 0.5(1), ave 0.913
Test execution time: sum 8108 ms, max 106 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 12:10:39 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-11-06 12:11:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 38 seconds
Variants: generated 200, build-succeeded 105, build-failed 52, syntax-invalid 27, redundant 16
Fitness: max 0.917(105), min 0.917(105), ave 0.917
Test execution time: sum 8018 ms, max 105 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 12:11:08 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-11-06 12:11:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 6 seconds
Variants: generated 200, build-succeeded 98, build-failed 63, syntax-invalid 27, redundant 12
Fitness: max 0.917(98), min 0.917(98), ave 0.917
Test execution time: sum 7518 ms, max 108 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 12:11:36 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-11-06 12:12:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 35 seconds
Variants: generated 200, build-succeeded 103, build-failed 59, syntax-invalid 25, redundant 13
Fitness: max 0.917(103), min 0.917(103), ave 0.917
Test execution time: sum 7859 ms, max 110 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 12:12:05 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-11-06 12:12:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 15 minutes 3 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 30, redundant 10
Fitness: max 0.917(102), min 0.917(102), ave 0.917
Test execution time: sum 7810 ms, max 109 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 12:12:33 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-11-06 12:13:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 15 minutes 32 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 22, redundant 16
Fitness: max 0.917(104), min 0.917(104), ave 0.917
Test execution time: sum 7965 ms, max 106 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 12:13:02 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-11-06 12:22:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 minutes 2 seconds
Variants: generated 200, build-succeeded 114, build-failed 49, syntax-invalid 29, redundant 8
Fitness: max 0.917(112), min 0(1), ave 0.906
Test execution time: sum 548305 ms, max 539742 ms, min 23 ms
----------------------------------------------------------------

2023-11-06 12:22:31 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-11-06 12:58:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 1 minutes 23 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 27, redundant 10
Fitness: max 0.917(97), min 0.5(2), ave 0.894
Test execution time: sum 2160541 ms, max 540025 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 12:58:53 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-11-06 12:59:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 1 minutes 53 seconds
Variants: generated 200, build-succeeded 109, build-failed 55, syntax-invalid 31, redundant 5
Fitness: max 0.917(108), min 0.5(1), ave 0.913
Test execution time: sum 8236 ms, max 105 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 12:59:22 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-11-06 13:17:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 20 minutes 15 seconds
Variants: generated 200, build-succeeded 92, build-failed 60, syntax-invalid 36, redundant 12
Fitness: max 0.917(88), min 0.583(2), ave 0.906
Test execution time: sum 1082382 ms, max 538572 ms, min 37 ms
----------------------------------------------------------------

2023-11-06 13:17:45 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-11-06 13:36:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 38 minutes 40 seconds
Variants: generated 200, build-succeeded 103, build-failed 55, syntax-invalid 31, redundant 11
Fitness: max 0.917(101), min 0.583(2), ave 0.91
Test execution time: sum 1084381 ms, max 540025 ms, min 69 ms
----------------------------------------------------------------

2023-11-06 13:36:10 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-11-06 13:45:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 48 minutes 4 seconds
Variants: generated 200, build-succeeded 102, build-failed 59, syntax-invalid 31, redundant 8
Fitness: max 0.917(101), min 0.583(1), ave 0.913
Test execution time: sum 542283 ms, max 534636 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 13:45:34 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-11-06 13:46:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 48 minutes 31 seconds
Variants: generated 200, build-succeeded 89, build-failed 66, syntax-invalid 41, redundant 4
Fitness: max 1(1), min 0.917(88), ave 0.918
Test execution time: sum 6778 ms, max 106 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 13:46:01 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-11-06 13:46:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 49 minutes 0 seconds
Variants: generated 200, build-succeeded 106, build-failed 56, syntax-invalid 32, redundant 6
Fitness: max 0.917(106), min 0.917(106), ave 0.917
Test execution time: sum 8109 ms, max 115 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 13:46:30 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-11-06 13:46:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 49 minutes 29 seconds
Variants: generated 200, build-succeeded 92, build-failed 68, syntax-invalid 34, redundant 6
Fitness: max 0.917(91), min 0.5(1), ave 0.912
Test execution time: sum 6955 ms, max 112 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 13:46:59 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-11-06 14:05:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 7 minutes 52 seconds
Variants: generated 200, build-succeeded 109, build-failed 51, syntax-invalid 28, redundant 12
Fitness: max 1(1), min 0.583(2), ave 0.909
Test execution time: sum 1081091 ms, max 536611 ms, min 26 ms
----------------------------------------------------------------

2023-11-06 14:05:22 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-11-06 14:05:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 19 seconds
Variants: generated 200, build-succeeded 87, build-failed 58, syntax-invalid 43, redundant 12
Fitness: max 0.917(87), min 0.917(87), ave 0.917
Test execution time: sum 6629 ms, max 112 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 14:05:49 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-11-06 14:06:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 49 seconds
Variants: generated 200, build-succeeded 103, build-failed 53, syntax-invalid 33, redundant 11
Fitness: max 0.917(103), min 0.917(103), ave 0.917
Test execution time: sum 7895 ms, max 112 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 14:06:19 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-11-06 14:06:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 18 seconds
Variants: generated 200, build-succeeded 105, build-failed 45, syntax-invalid 36, redundant 14
Fitness: max 0.917(105), min 0.917(105), ave 0.917
Test execution time: sum 7972 ms, max 104 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 14:06:48 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-11-06 14:07:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 47 seconds
Variants: generated 200, build-succeeded 87, build-failed 71, syntax-invalid 37, redundant 5
Fitness: max 0.917(87), min 0.917(87), ave 0.917
Test execution time: sum 6703 ms, max 113 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 14:07:16 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-11-06 14:16:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 19 minutes 13 seconds
Variants: generated 200, build-succeeded 95, build-failed 53, syntax-invalid 38, redundant 14
Fitness: max 0.917(94), min 0.583(1), ave 0.913
Test execution time: sum 544769 ms, max 537632 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 14:16:43 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-11-06 14:17:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 19 minutes 43 seconds
Variants: generated 200, build-succeeded 97, build-failed 65, syntax-invalid 26, redundant 12
Fitness: max 0.917(97), min 0.917(97), ave 0.917
Test execution time: sum 7449 ms, max 111 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 14:17:13 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-11-06 14:35:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 38 minutes 2 seconds
Variants: generated 200, build-succeeded 88, build-failed 60, syntax-invalid 43, redundant 9
Fitness: max 0.917(86), min 0.583(2), ave 0.909
Test execution time: sum 1078449 ms, max 537451 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 14:35:32 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-11-06 14:53:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 56 minutes 28 seconds
Variants: generated 200, build-succeeded 96, build-failed 60, syntax-invalid 33, redundant 11
Fitness: max 0.917(94), min 0.583(2), ave 0.91
Test execution time: sum 1082782 ms, max 537914 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 14:53:58 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-11-06 15:03:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 5 minutes 56 seconds
Variants: generated 200, build-succeeded 101, build-failed 56, syntax-invalid 31, redundant 12
Fitness: max 0.917(100), min 0.583(1), ave 0.913
Test execution time: sum 544881 ms, max 537316 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 15:03:25 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-11-06 15:30:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 33 minutes 14 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 29, redundant 8
Fitness: max 0.917(99), min 0.583(3), ave 0.907
Test execution time: sum 1615873 ms, max 538670 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 15:30:44 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-11-06 16:07:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 9 minutes 37 seconds
Variants: generated 200, build-succeeded 94, build-failed 64, syntax-invalid 33, redundant 9
Fitness: max 0.917(90), min 0.583(4), ave 0.902
Test execution time: sum 2159767 ms, max 539940 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 16:07:07 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-11-06 16:16:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 19 minutes 4 seconds
Variants: generated 200, build-succeeded 93, build-failed 57, syntax-invalid 35, redundant 15
Fitness: max 0.917(92), min 0.583(1), ave 0.913
Test execution time: sum 544520 ms, max 537579 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 16:16:34 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-11-06 16:26:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 28 minutes 34 seconds
Variants: generated 200, build-succeeded 92, build-failed 61, syntax-invalid 42, redundant 5
Fitness: max 0.917(91), min 0.583(1), ave 0.913
Test execution time: sum 547070 ms, max 540025 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 16:26:03 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-11-06 16:53:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 55 minutes 57 seconds
Variants: generated 200, build-succeeded 102, build-failed 65, syntax-invalid 26, redundant 7
Fitness: max 0.917(99), min 0.583(3), ave 0.907
Test execution time: sum 1618971 ms, max 538608 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 16:53:26 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-11-06 17:38:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 41 minutes 10 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 28, redundant 12
Fitness: max 0.917(96), min 0.5(1), ave 0.896
Test execution time: sum 2690244 ms, max 539428 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 17:38:40 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-11-06 18:41:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 44 minutes 23 seconds
Variants: generated 200, build-succeeded 106, build-failed 59, syntax-invalid 24, redundant 11
Fitness: max 0.917(99), min 0.583(7), ave 0.895
Test execution time: sum 3768151 ms, max 539774 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 18:41:53 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-11-06 18:51:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 53 minutes 52 seconds
Variants: generated 200, build-succeeded 103, build-failed 64, syntax-invalid 26, redundant 7
Fitness: max 0.917(101), min 0.5(1), ave 0.909
Test execution time: sum 545292 ms, max 537639 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 18:51:22 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-11-06 19:18:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 21 minutes 17 seconds
Variants: generated 200, build-succeeded 91, build-failed 68, syntax-invalid 28, redundant 13
Fitness: max 0.917(88), min 0.583(3), ave 0.906
Test execution time: sum 1621584 ms, max 540026 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 19:18:47 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-11-06 19:19:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 21 minutes 51 seconds
Variants: generated 200, build-succeeded 110, build-failed 53, syntax-invalid 24, redundant 13
Fitness: max 0.917(110), min 0.917(110), ave 0.917
Test execution time: sum 8384 ms, max 108 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 19:19:20 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-11-06 19:46:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 49 minutes 17 seconds
Variants: generated 200, build-succeeded 113, build-failed 50, syntax-invalid 26, redundant 11
Fitness: max 0.917(109), min 0.5(1), ave 0.904
Test execution time: sum 1621474 ms, max 538588 ms, min 26 ms
----------------------------------------------------------------

2023-11-06 19:46:47 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-11-06 20:23:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 25 minutes 40 seconds
Variants: generated 200, build-succeeded 107, build-failed 67, syntax-invalid 17, redundant 9
Fitness: max 0.917(103), min 0.583(4), ave 0.904
Test execution time: sum 2157799 ms, max 537899 ms, min 68 ms
----------------------------------------------------------------

2023-11-06 20:23:10 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-11-06 20:23:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 26 minutes 15 seconds
Variants: generated 200, build-succeeded 111, build-failed 63, syntax-invalid 19, redundant 7
Fitness: max 0.917(111), min 0.917(111), ave 0.917
Test execution time: sum 8560 ms, max 111 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 20:23:45 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-11-06 20:24:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 26 minutes 49 seconds
Variants: generated 200, build-succeeded 110, build-failed 61, syntax-invalid 21, redundant 8
Fitness: max 0.917(110), min 0.917(110), ave 0.917
Test execution time: sum 8470 ms, max 110 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 20:24:18 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-11-06 20:24:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 27 minutes 22 seconds
Variants: generated 200, build-succeeded 100, build-failed 63, syntax-invalid 28, redundant 9
Fitness: max 0.917(100), min 0.917(100), ave 0.917
Test execution time: sum 7763 ms, max 109 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 20:24:51 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-11-06 20:25:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 27 minutes 57 seconds
Variants: generated 200, build-succeeded 113, build-failed 64, syntax-invalid 16, redundant 7
Fitness: max 0.917(113), min 0.917(113), ave 0.917
Test execution time: sum 8806 ms, max 111 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 20:25:26 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-11-06 20:26:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 28 minutes 30 seconds
Variants: generated 200, build-succeeded 107, build-failed 61, syntax-invalid 24, redundant 8
Fitness: max 0.917(107), min 0.917(107), ave 0.917
Test execution time: sum 8274 ms, max 112 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 20:26:00 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-11-06 20:26:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 29 minutes 4 seconds
Variants: generated 200, build-succeeded 96, build-failed 73, syntax-invalid 24, redundant 7
Fitness: max 0.917(96), min 0.917(96), ave 0.917
Test execution time: sum 7434 ms, max 116 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 20:26:33 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-11-06 20:36:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 38 minutes 35 seconds
Variants: generated 200, build-succeeded 113, build-failed 53, syntax-invalid 25, redundant 9
Fitness: max 0.917(112), min 0.583(1), ave 0.914
Test execution time: sum 545872 ms, max 537348 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 20:36:05 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-11-06 20:54:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 56 minutes 59 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 29, redundant 8
Fitness: max 0.917(100), min 0.583(2), ave 0.91
Test execution time: sum 1078532 ms, max 535657 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 20:54:29 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-11-06 21:04:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 6 minutes 32 seconds
Variants: generated 200, build-succeeded 112, build-failed 52, syntax-invalid 26, redundant 10
Fitness: max 0.917(111), min 0.583(1), ave 0.914
Test execution time: sum 547024 ms, max 538512 ms, min 72 ms
----------------------------------------------------------------

2023-11-06 21:04:01 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-11-06 21:31:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 33 minutes 48 seconds
Variants: generated 200, build-succeeded 99, build-failed 59, syntax-invalid 34, redundant 8
Fitness: max 0.917(96), min 0.583(3), ave 0.907
Test execution time: sum 1611953 ms, max 536071 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 21:31:18 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-11-06 21:31:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 34 minutes 22 seconds
Variants: generated 200, build-succeeded 106, build-failed 65, syntax-invalid 22, redundant 7
Fitness: max 0.917(106), min 0.917(106), ave 0.917
Test execution time: sum 8246 ms, max 112 ms, min 73 ms
----------------------------------------------------------------

2023-11-06 21:31:52 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-11-06 21:32:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 34 minutes 55 seconds
Variants: generated 200, build-succeeded 100, build-failed 62, syntax-invalid 29, redundant 9
Fitness: max 0.917(100), min 0.917(100), ave 0.917
Test execution time: sum 7670 ms, max 113 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 21:32:25 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-11-06 21:32:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 35 minutes 29 seconds
Variants: generated 200, build-succeeded 106, build-failed 55, syntax-invalid 25, redundant 14
Fitness: max 0.917(105), min 0.5(1), ave 0.913
Test execution time: sum 8088 ms, max 112 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 21:32:59 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-11-06 21:33:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 36 minutes 3 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 25, redundant 10
Fitness: max 0.917(107), min 0.917(107), ave 0.917
Test execution time: sum 8291 ms, max 115 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 21:33:33 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-11-06 22:09:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 12 minutes 22 seconds
Variants: generated 200, build-succeeded 102, build-failed 56, syntax-invalid 33, redundant 9
Fitness: max 0.917(98), min 0.583(4), ave 0.904
Test execution time: sum 2153355 ms, max 538768 ms, min 72 ms
----------------------------------------------------------------

2023-11-06 22:09:51 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-11-06 22:10:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 12 minutes 56 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 28, redundant 6
Fitness: max 0.917(107), min 0.917(107), ave 0.917
Test execution time: sum 8253 ms, max 108 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 22:10:26 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-11-06 22:55:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 58 minutes 4 seconds
Variants: generated 200, build-succeeded 106, build-failed 57, syntax-invalid 29, redundant 8
Fitness: max 0.917(101), min 0.583(5), ave 0.901
Test execution time: sum 2682890 ms, max 537217 ms, min 70 ms
----------------------------------------------------------------

2023-11-06 22:55:34 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-11-06 23:04:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 7 minutes 29 seconds
Variants: generated 200, build-succeeded 86, build-failed 63, syntax-invalid 40, redundant 11
Fitness: max 0.917(85), min 0.583(1), ave 0.913
Test execution time: sum 540472 ms, max 533910 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 23:04:59 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-11-06 23:05:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 7 minutes 59 seconds
Variants: generated 200, build-succeeded 90, build-failed 53, syntax-invalid 44, redundant 13
Fitness: max 0.917(90), min 0.917(90), ave 0.917
Test execution time: sum 6863 ms, max 101 ms, min 73 ms
----------------------------------------------------------------

2023-11-06 23:05:29 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-11-06 23:06:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 8 minutes 32 seconds
Variants: generated 200, build-succeeded 94, build-failed 68, syntax-invalid 31, redundant 7
Fitness: max 0.917(92), min 0.667(2), ave 0.911
Test execution time: sum 7191 ms, max 113 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 23:06:02 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-11-06 23:15:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 18 minutes 1 seconds
Variants: generated 200, build-succeeded 94, build-failed 68, syntax-invalid 29, redundant 9
Fitness: max 0.917(90), min 0.583(1), ave 0.905
Test execution time: sum 542828 ms, max 535860 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 23:15:30 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-11-06 23:16:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 18 minutes 34 seconds
Variants: generated 200, build-succeeded 104, build-failed 53, syntax-invalid 34, redundant 9
Fitness: max 0.917(104), min 0.917(104), ave 0.917
Test execution time: sum 8000 ms, max 113 ms, min 71 ms
----------------------------------------------------------------

2023-11-06 23:16:04 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-11-06 23:16:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 19 minutes 8 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 30, redundant 12
Fitness: max 0.917(102), min 0.583(1), ave 0.912
Test execution time: sum 8027 ms, max 113 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 23:16:37 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-11-06 23:26:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 28 minutes 39 seconds
Variants: generated 200, build-succeeded 99, build-failed 62, syntax-invalid 28, redundant 11
Fitness: max 0.917(95), min 0.583(3), ave 0.905
Test execution time: sum 545206 ms, max 537813 ms, min 24 ms
----------------------------------------------------------------

2023-11-06 23:26:09 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-11-06 23:35:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 38 minutes 11 seconds
Variants: generated 200, build-succeeded 116, build-failed 53, syntax-invalid 23, redundant 8
Fitness: max 0.917(113), min 0.5(1), ave 0.907
Test execution time: sum 544819 ms, max 536099 ms, min 25 ms
----------------------------------------------------------------

2023-11-06 23:35:41 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-11-07 00:03:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 5 minutes 31 seconds
Variants: generated 200, build-succeeded 94, build-failed 68, syntax-invalid 29, redundant 9
Fitness: max 0.917(88), min 0.5(2), ave 0.894
Test execution time: sum 1612967 ms, max 537551 ms, min 25 ms
----------------------------------------------------------------

2023-11-07 00:03:00 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-11-07 00:48:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 50 minutes 39 seconds
Variants: generated 200, build-succeeded 93, build-failed 64, syntax-invalid 33, redundant 10
Fitness: max 0.917(88), min 0.583(5), ave 0.899
Test execution time: sum 2682168 ms, max 537813 ms, min 72 ms
----------------------------------------------------------------

2023-11-07 00:48:09 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-11-07 01:42:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 44 minutes 47 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 23, redundant 10
Fitness: max 0.917(100), min 0.583(6), ave 0.898
Test execution time: sum 3220846 ms, max 538488 ms, min 71 ms
----------------------------------------------------------------

2023-11-07 01:42:17 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-11-07 01:51:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 54 minutes 18 seconds
Variants: generated 200, build-succeeded 105, build-failed 63, syntax-invalid 26, redundant 6
Fitness: max 0.917(104), min 0.583(1), ave 0.913
Test execution time: sum 543859 ms, max 535948 ms, min 71 ms
----------------------------------------------------------------

2023-11-07 01:51:48 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-11-07 02:10:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 12 minutes 41 seconds
Variants: generated 200, build-succeeded 108, build-failed 63, syntax-invalid 22, redundant 7
Fitness: max 0.917(106), min 0.583(2), ave 0.91
Test execution time: sum 1075450 ms, max 534118 ms, min 71 ms
----------------------------------------------------------------

2023-11-07 02:10:11 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-11-07 02:19:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 22 minutes 13 seconds
Variants: generated 200, build-succeeded 101, build-failed 72, syntax-invalid 20, redundant 7
Fitness: max 0.917(98), min 0.583(3), ave 0.907
Test execution time: sum 544332 ms, max 536666 ms, min 26 ms
----------------------------------------------------------------

2023-11-07 02:19:43 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-11-07 02:56:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 58 minutes 32 seconds
Variants: generated 200, build-succeeded 110, build-failed 64, syntax-invalid 20, redundant 6
Fitness: max 0.917(106), min 0.583(4), ave 0.905
Test execution time: sum 2150634 ms, max 536900 ms, min 72 ms
----------------------------------------------------------------

2023-11-07 02:56:02 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-11-07 03:05:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 8 minutes 2 seconds
Variants: generated 200, build-succeeded 105, build-failed 60, syntax-invalid 24, redundant 11
Fitness: max 0.917(103), min 0.583(1), ave 0.911
Test execution time: sum 542358 ms, max 534411 ms, min 25 ms
----------------------------------------------------------------

2023-11-07 03:05:32 [main] [INFO]  KGenProgMain - GA stopped
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v977)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v977)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v977)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v977)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v977)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v977)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v977)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v977)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -387,7 +387,6 @@
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
-            buffer = b;
         }
     }
 
@@ -418,7 +417,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1169)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1169)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1169)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1169)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1169)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1169)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1169)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1169)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1172)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1172)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1172)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1172)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1172)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -386,8 +386,6 @@
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
-            System.arraycopy(buffer, 0, b, 0, buffer.length);
-            buffer = b;
         }
     }
 
@@ -421,6 +419,7 @@
             buffer = out;
             pos = outPos;
             readPos = outPos;
+			String sep = StringUtils.newStringUtf8(lineSeparator);
         }
     }
     /**
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1172)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1172)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1172)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1180)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1180)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1180)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1180)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1180)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -387,7 +387,6 @@
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
-            buffer = b;
         }
     }
 
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1180)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1180)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1180)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1195)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1195)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1195)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1195)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1195)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1195)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1195)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1195)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1200)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1200)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1200)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1200)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1200)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -421,6 +421,7 @@
             buffer = out;
             pos = outPos;
             readPos = outPos;
+			String sep = StringUtils.newStringUtf8(lineSeparator);
         }
     }
     /**
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1200)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1200)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1200)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1336)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1336)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1336)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1336)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1336)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1336)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1336)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1336)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1340)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1340)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1340)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1340)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1340)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +417,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1340)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1340)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1340)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1348)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1348)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1348)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1348)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +417,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1348)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1348)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1348)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1367)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1367)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1367)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1367)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -418,9 +418,9 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
+			String sep = StringUtils.newStringUtf8(lineSeparator);
         }
     }
     /**
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1367)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1367)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1367)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1500)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1500)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1500)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1500)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -387,7 +389,6 @@
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
-            buffer = b;
         }
     }
 
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1500)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1500)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1500)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -386,7 +387,6 @@
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
-            System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
         }
     }
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1570)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1714)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1714)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1714)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1714)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1714)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -386,7 +388,6 @@
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
-            System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1714)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1714)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1714)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1729)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -420,6 +421,7 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1760)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1979)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1979)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1979)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1979)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1979)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1979)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v1979)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2142)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2142)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2142)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2142)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2142)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2142)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2142)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2162)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2162)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2162)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2162)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2162)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2162)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2162)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2162)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2170)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2170)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2170)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2170)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2170)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2170)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2170)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2199)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2199)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2199)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2199)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2199)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2199)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2199)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2199)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2368)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2368)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2368)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2368)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,8 +419,8 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2368)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2368)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2368)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2373)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2373)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2373)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2373)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2373)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			pos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2373)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2373)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2373)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2379)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2379)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2379)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2379)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2379)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2379)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2379)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2379)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2502)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2502)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2502)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2502)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2502)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2502)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2502)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2502)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2532)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2532)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2532)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2532)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2532)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2532)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2532)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2532)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2593)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2593)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2593)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2593)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2593)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2593)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2593)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2593)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2600)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2688)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2688)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2688)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2688)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -330,10 +330,8 @@
      * @since 1.4
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
-        if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
-        }
+        if (lineSeparator == null)
+			lineSeparator = CHUNK_SEPARATOR;
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
@@ -418,8 +416,8 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2688)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2688)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2688)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,8 +418,8 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2772)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2772)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2772)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2772)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2772)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2772)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2772)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2772)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2908)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2908)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2908)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2908)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2908)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2908)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2908)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2908)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2935)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2935)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2935)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2935)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2935)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -420,6 +421,7 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2935)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2935)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v2935)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -420,6 +422,7 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3177)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3177)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3177)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3177)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,9 +420,9 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
+			String sep = StringUtils.newStringUtf8(lineSeparator);
         }
     }
     /**
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3177)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3177)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3177)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3323)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3323)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3323)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3323)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3323)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3323)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3323)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3323)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3359)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3359)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3359)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3359)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3359)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3359)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3359)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3389)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3389)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3389)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3389)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3389)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3389)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3389)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3389)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3391)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3391)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3391)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3391)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3391)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3391)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3391)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3391)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3399)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3399)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3399)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3399)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3399)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,6 +385,7 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3399)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3399)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3399)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3400)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3400)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3400)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3400)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			pos = 0;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3400)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3400)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3400)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3520)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3520)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3520)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3520)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3520)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3520)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3520)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3520)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3524)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3524)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3524)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3524)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,9 +419,9 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
+			String sep = StringUtils.newStringUtf8(lineSeparator);
         }
     }
     /**
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3524)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3524)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3524)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3744)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3744)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3744)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3744)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3744)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3744)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3744)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3744)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3944)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3944)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3944)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3944)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3944)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -420,6 +422,7 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3944)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3944)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3944)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3972)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3972)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3972)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3972)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3972)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3972)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3972)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3972)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +422,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4029)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4029)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4029)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4029)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4029)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4029)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4029)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,8 +420,8 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4141)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4184)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4184)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4184)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4184)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4184)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,6 +387,7 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4184)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4184)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4184)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4190)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4190)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4190)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4190)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +423,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4190)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4190)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4190)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4195)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4195)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4195)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4195)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4195)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4195)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4195)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4195)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4311)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4311)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4311)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4311)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4311)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -420,6 +423,7 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4311)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4311)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4311)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4325)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4325)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4325)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4325)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4325)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4325)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4325)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4325)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4339)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4339)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4339)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4339)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4339)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +422,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4339)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4339)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4339)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4360)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4360)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4360)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4360)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4360)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4360)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4360)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4360)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4503)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4503)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4503)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4503)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4503)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4503)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4503)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4503)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4584)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4584)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4584)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4584)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4584)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4584)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4584)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4584)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4702)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4702)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4702)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4702)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +424,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4702)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4702)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4702)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4711)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4711)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4711)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4711)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4711)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -420,6 +424,7 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4711)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4711)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4711)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4741)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4741)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4741)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4741)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4741)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4741)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4741)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4741)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4762)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4762)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4762)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4762)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +425,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4762)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4762)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4762)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4960)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4960)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4960)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4960)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4960)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4960)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4960)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4960)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -420,6 +425,7 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
+			int readLen = 0;
             readPos = outPos;
         }
     }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +424,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5314)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5789)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5789)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5789)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5789)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5789)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5789)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5789)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v5789)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6178)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6178)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6178)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6178)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6178)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6178)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6178)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6178)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6508)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6508)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6508)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6508)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6508)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6508)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6508)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6508)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6573)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6573)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6573)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6573)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6573)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            modulus = (++modulus) % 4;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6573)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6573)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v6573)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8589)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8589)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8589)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8589)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +425,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8589)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8589)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v8589)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v9533)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v9533)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v9533)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v9533)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v9533)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			byte[] result = new byte[pos];
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v9533)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v9533)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v9533)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10124)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10124)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10124)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10124)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			readPos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +421,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10124)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10124)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10124)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10396)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10396)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10396)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10396)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10396)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			readPos = 0;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10396)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10396)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10396)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10535)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10535)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10535)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10535)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10535)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10535)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10535)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10535)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10561)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10561)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10561)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10561)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10561)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			byte[] result = new byte[pos];
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10561)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10561)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10561)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10772)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10772)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10772)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10772)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10772)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			readPos = 0;
+			readPos = 0;
+			modulus = (++modulus) % 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10772)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10772)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v10772)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v11239)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v11239)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v11239)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v11239)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,34 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v11239)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v11239)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v11239)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v34490)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v34490)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v34490)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v34490)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,58 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			modulus = (++modulus) % 4;
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			modulus = (++modulus) % 4;
+			buffer[pos++] = (byte) (x & MASK_8BITS);
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			modulus = (++modulus) % 4;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v34490)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v34490)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v34490)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v35130)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v35130)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v35130)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v35130)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,82 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            lineSeparator = CHUNK_SEPARATOR;
+			buffer = null;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			lineLength = 0;
+			modulus = (++modulus) % 4;
+			buffer = null;
+			resizeBuffer();
+			modulus = (++modulus) % 4;
+			lineLength = 0;  // disable chunk-separating
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			modulus = (++modulus) % 4;
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			modulus = (++modulus) % 4;
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
+			modulus = (++modulus) % 4;
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v35130)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v35130)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  PatchLogExporter - patch (v35130)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-07 03:05:32 [main] [INFO]  KGenProgMain - Summary
Reached generation = 231
Generated variants = 46000
Syntax valid variants = 38852
Build succeeded variants = 22163
Time elapsed = 24 hours 8 minutes 2 seconds
Exit status = FAILURE (time limit)
