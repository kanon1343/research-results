2023-08-07 03:18:57 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-07 03:18:57 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-07 03:18:57 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-07 03:18:57 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 6 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-07 03:19:05 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-07 03:19:05 [main] [INFO]  KGenProgMain - GA started
2023-08-07 03:19:05 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-07 03:19:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, build-succeeded 5, build-failed 69, syntax-invalid 7, redundant 19
Fitness: max 1(1), min 0.923(4), ave 0.938
Test execution time: sum 762 ms, max 183 ms, min 126 ms
----------------------------------------------------------------

2023-08-07 03:19:08 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-07 03:22:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 5 seconds
Variants: generated 100, build-succeeded 11, build-failed 54, syntax-invalid 13, redundant 22
Fitness: max 1(2), min 0.846(4), ave 0.909
Test execution time: sum 181074 ms, max 180109 ms, min 88 ms
----------------------------------------------------------------

2023-08-07 03:22:10 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-07 03:40:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 9 seconds
Variants: generated 200, build-succeeded 22, build-failed 63, syntax-invalid 24, redundant 91
Fitness: max 1(1), min 0.462(1), ave 0.853
Test execution time: sum 1081961 ms, max 360079 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 03:40:14 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-07 04:19:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 seconds
Variants: generated 200, build-succeeded 32, build-failed 68, syntax-invalid 25, redundant 75
Fitness: max 1(1), min 0.385(1), ave 0.808
Test execution time: sum 2342658 ms, max 360090 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 04:19:19 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-07 05:19:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 seconds
Variants: generated 200, build-succeeded 41, build-failed 63, syntax-invalid 28, redundant 68
Fitness: max 0.923(7), min 0.769(4), ave 0.852
Test execution time: sum 3603511 ms, max 540088 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 05:19:25 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-07 07:11:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 4 seconds
Variants: generated 200, build-succeeded 57, build-failed 65, syntax-invalid 21, redundant 57
Fitness: max 1(1), min 0.385(1), ave 0.852
Test execution time: sum 6701896 ms, max 540086 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 07:11:09 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-07 08:05:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 10 seconds
Variants: generated 200, build-succeeded 43, build-failed 71, syntax-invalid 29, redundant 57
Fitness: max 1(1), min 0.769(1), ave 0.875
Test execution time: sum 3243703 ms, max 360100 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 08:05:15 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-07 08:08:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 14 seconds
Variants: generated 200, build-succeeded 25, build-failed 62, syntax-invalid 39, redundant 74
Fitness: max 1(1), min 0.846(3), ave 0.917
Test execution time: sum 182215 ms, max 180084 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 08:08:20 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-07 08:11:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 20 seconds
Variants: generated 200, build-succeeded 38, build-failed 64, syntax-invalid 35, redundant 63
Fitness: max 1(4), min 0.846(4), ave 0.923
Test execution time: sum 183353 ms, max 180073 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 08:11:25 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-07 08:11:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 26 seconds
Variants: generated 200, build-succeeded 39, build-failed 62, syntax-invalid 39, redundant 60
Fitness: max 1(2), min 0.923(37), ave 0.927
Test execution time: sum 3665 ms, max 119 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 08:11:31 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-07 08:11:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 33 seconds
Variants: generated 200, build-succeeded 52, build-failed 62, syntax-invalid 42, redundant 44
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 4841 ms, max 133 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 08:11:38 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-07 08:17:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 40 seconds
Variants: generated 200, build-succeeded 46, build-failed 70, syntax-invalid 43, redundant 41
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 364176 ms, max 360085 ms, min 78 ms
----------------------------------------------------------------

2023-08-07 08:17:45 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-07 08:17:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 47 seconds
Variants: generated 200, build-succeeded 52, build-failed 70, syntax-invalid 32, redundant 46
Fitness: max 1(1), min 0.846(4), ave 0.919
Test execution time: sum 4695 ms, max 124 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 08:17:52 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-07 08:18:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 54 seconds
Variants: generated 200, build-succeeded 52, build-failed 68, syntax-invalid 43, redundant 37
Fitness: max 1(3), min 0.923(49), ave 0.928
Test execution time: sum 4737 ms, max 113 ms, min 79 ms
----------------------------------------------------------------

2023-08-07 08:18:00 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-07 08:18:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 3 seconds
Variants: generated 200, build-succeeded 64, build-failed 63, syntax-invalid 31, redundant 42
Fitness: max 1(4), min 0.846(4), ave 0.923
Test execution time: sum 5866 ms, max 111 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 08:18:08 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-07 08:18:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 11 seconds
Variants: generated 200, build-succeeded 63, build-failed 55, syntax-invalid 44, redundant 38
Fitness: max 1(2), min 0.846(1), ave 0.924
Test execution time: sum 5756 ms, max 139 ms, min 80 ms
----------------------------------------------------------------

2023-08-07 08:18:16 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-07 08:18:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 18 seconds
Variants: generated 200, build-succeeded 51, build-failed 74, syntax-invalid 37, redundant 38
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 4541 ms, max 154 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 08:18:24 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-07 08:24:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 27 seconds
Variants: generated 200, build-succeeded 70, build-failed 70, syntax-invalid 31, redundant 29
Fitness: max 1(1), min 0.462(1), ave 0.914
Test execution time: sum 366245 ms, max 360091 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 08:24:32 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-07 08:27:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 36 seconds
Variants: generated 200, build-succeeded 70, build-failed 62, syntax-invalid 30, redundant 38
Fitness: max 1(5), min 0.846(3), ave 0.925
Test execution time: sum 186221 ms, max 180085 ms, min 77 ms
----------------------------------------------------------------

2023-08-07 08:27:41 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-07 08:27:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 43 seconds
Variants: generated 200, build-succeeded 53, build-failed 74, syntax-invalid 45, redundant 28
Fitness: max 1(3), min 0.846(2), ave 0.925
Test execution time: sum 4708 ms, max 125 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 08:27:48 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-07 08:39:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 52 seconds
Variants: generated 200, build-succeeded 66, build-failed 67, syntax-invalid 30, redundant 37
Fitness: max 0.923(61), min 0.615(1), ave 0.914
Test execution time: sum 725911 ms, max 360122 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 08:39:57 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-07 08:40:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 0 seconds
Variants: generated 200, build-succeeded 61, build-failed 82, syntax-invalid 30, redundant 27
Fitness: max 0.923(59), min 0.462(1), ave 0.914
Test execution time: sum 5486 ms, max 108 ms, min 80 ms
----------------------------------------------------------------

2023-08-07 08:40:05 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-07 08:43:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 9 seconds
Variants: generated 200, build-succeeded 74, build-failed 77, syntax-invalid 27, redundant 22
Fitness: max 1(1), min 0.846(7), ave 0.917
Test execution time: sum 186623 ms, max 180084 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 08:43:15 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-07 08:46:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 18 seconds
Variants: generated 200, build-succeeded 69, build-failed 68, syntax-invalid 41, redundant 22
Fitness: max 1(2), min 0.462(1), ave 0.912
Test execution time: sum 186270 ms, max 180085 ms, min 76 ms
----------------------------------------------------------------

2023-08-07 08:46:24 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-07 08:52:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 33 minutes 27 seconds
Variants: generated 200, build-succeeded 64, build-failed 73, syntax-invalid 31, redundant 32
Fitness: max 1(1), min 0.692(1), ave 0.918
Test execution time: sum 365925 ms, max 360085 ms, min 76 ms
----------------------------------------------------------------

2023-08-07 08:52:32 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-07 08:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 36 seconds
Variants: generated 200, build-succeeded 68, build-failed 63, syntax-invalid 31, redundant 38
Fitness: max 1(3), min 0.846(5), ave 0.921
Test execution time: sum 366249 ms, max 360088 ms, min 79 ms
----------------------------------------------------------------

2023-08-07 08:58:41 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-07 09:01:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 46 seconds
Variants: generated 200, build-succeeded 77, build-failed 74, syntax-invalid 18, redundant 31
Fitness: max 0.923(73), min 0.846(4), ave 0.919
Test execution time: sum 186847 ms, max 180091 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 09:01:51 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-07 09:02:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 55 seconds
Variants: generated 200, build-succeeded 78, build-failed 65, syntax-invalid 31, redundant 26
Fitness: max 1(2), min 0.462(1), ave 0.913
Test execution time: sum 6934 ms, max 131 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 09:02:01 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-07 09:02:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 5 seconds
Variants: generated 200, build-succeeded 73, build-failed 62, syntax-invalid 36, redundant 29
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 6440 ms, max 109 ms, min 81 ms
----------------------------------------------------------------

2023-08-07 09:02:10 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-07 09:11:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 14 seconds
Variants: generated 200, build-succeeded 73, build-failed 72, syntax-invalid 29, redundant 26
Fitness: max 0.923(69), min 0.846(4), ave 0.919
Test execution time: sum 546439 ms, max 360126 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 09:11:19 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-07 09:14:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 55 minutes 24 seconds
Variants: generated 200, build-succeeded 83, build-failed 66, syntax-invalid 24, redundant 27
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 187363 ms, max 180084 ms, min 85 ms
----------------------------------------------------------------

2023-08-07 09:14:30 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-07 09:27:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 46 seconds
Variants: generated 200, build-succeeded 82, build-failed 79, syntax-invalid 22, redundant 17
Fitness: max 1(1), min 0.462(2), ave 0.911
Test execution time: sum 798520 ms, max 360083 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 09:27:51 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-07 09:31:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 11 minutes 56 seconds
Variants: generated 200, build-succeeded 75, build-failed 86, syntax-invalid 21, redundant 18
Fitness: max 1(3), min 0.385(1), ave 0.916
Test execution time: sum 186810 ms, max 180082 ms, min 80 ms
----------------------------------------------------------------

2023-08-07 09:31:01 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-07 09:40:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 6 seconds
Variants: generated 200, build-succeeded 75, build-failed 80, syntax-invalid 22, redundant 23
Fitness: max 0.923(70), min 0.846(5), ave 0.918
Test execution time: sum 546655 ms, max 360100 ms, min 77 ms
----------------------------------------------------------------

2023-08-07 09:40:11 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-07 09:46:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 16 seconds
Variants: generated 200, build-succeeded 76, build-failed 70, syntax-invalid 28, redundant 26
Fitness: max 1(3), min 0.846(1), ave 0.925
Test execution time: sum 366672 ms, max 360085 ms, min 82 ms
----------------------------------------------------------------

2023-08-07 09:46:21 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-07 09:52:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 26 seconds
Variants: generated 200, build-succeeded 84, build-failed 76, syntax-invalid 18, redundant 22
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 367472 ms, max 360085 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 09:52:32 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-07 10:10:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 36 seconds
Variants: generated 200, build-succeeded 73, build-failed 73, syntax-invalid 33, redundant 21
Fitness: max 1(1), min 0.846(6), ave 0.918
Test execution time: sum 1086428 ms, max 360090 ms, min 77 ms
----------------------------------------------------------------

2023-08-07 10:10:41 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-07 10:10:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 44 seconds
Variants: generated 200, build-succeeded 60, build-failed 70, syntax-invalid 45, redundant 25
Fitness: max 1(3), min 0.846(1), ave 0.926
Test execution time: sum 5282 ms, max 122 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 10:10:50 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-07 10:10:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 54 seconds
Variants: generated 200, build-succeeded 69, build-failed 78, syntax-invalid 33, redundant 20
Fitness: max 1(2), min 0.923(67), ave 0.925
Test execution time: sum 6262 ms, max 149 ms, min 82 ms
----------------------------------------------------------------

2023-08-07 10:10:59 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-07 10:14:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 4 seconds
Variants: generated 200, build-succeeded 73, build-failed 74, syntax-invalid 35, redundant 18
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 186577 ms, max 180085 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 10:14:09 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-07 10:23:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 4 minutes 14 seconds
Variants: generated 200, build-succeeded 86, build-failed 70, syntax-invalid 20, redundant 24
Fitness: max 1(4), min 0.846(4), ave 0.923
Test execution time: sum 547678 ms, max 180088 ms, min 81 ms
----------------------------------------------------------------

2023-08-07 10:23:20 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-07 10:32:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 13 minutes 23 seconds
Variants: generated 200, build-succeeded 62, build-failed 82, syntax-invalid 36, redundant 20
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 545532 ms, max 180087 ms, min 85 ms
----------------------------------------------------------------

2023-08-07 10:32:29 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-07 10:32:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 13 minutes 33 seconds
Variants: generated 200, build-succeeded 73, build-failed 75, syntax-invalid 24, redundant 28
Fitness: max 1(3), min 0.846(1), ave 0.925
Test execution time: sum 6655 ms, max 137 ms, min 87 ms
----------------------------------------------------------------

2023-08-07 10:32:39 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-07 10:32:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 13 minutes 44 seconds
Variants: generated 200, build-succeeded 74, build-failed 78, syntax-invalid 23, redundant 25
Fitness: max 1(1), min 0.923(73), ave 0.924
Test execution time: sum 6768 ms, max 128 ms, min 86 ms
----------------------------------------------------------------

2023-08-07 10:32:49 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-07 10:32:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 13 minutes 54 seconds
Variants: generated 200, build-succeeded 77, build-failed 64, syntax-invalid 27, redundant 32
Fitness: max 1(2), min 0.538(1), ave 0.918
Test execution time: sum 7040 ms, max 119 ms, min 82 ms
----------------------------------------------------------------

2023-08-07 10:32:59 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-07 10:33:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 14 minutes 3 seconds
Variants: generated 200, build-succeeded 64, build-failed 77, syntax-invalid 28, redundant 31
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 5630 ms, max 112 ms, min 86 ms
----------------------------------------------------------------

2023-08-07 10:33:09 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-07 10:36:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 12 seconds
Variants: generated 200, build-succeeded 63, build-failed 70, syntax-invalid 41, redundant 26
Fitness: max 1(4), min 0.846(1), ave 0.927
Test execution time: sum 185640 ms, max 180085 ms, min 82 ms
----------------------------------------------------------------

2023-08-07 10:36:17 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-07 10:57:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 38 minutes 22 seconds
Variants: generated 200, build-succeeded 72, build-failed 84, syntax-invalid 25, redundant 19
Fitness: max 1(1), min 0.846(5), ave 0.919
Test execution time: sum 1266369 ms, max 360087 ms, min 83 ms
----------------------------------------------------------------

2023-08-07 10:57:27 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-07 10:57:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 38 minutes 31 seconds
Variants: generated 200, build-succeeded 67, build-failed 76, syntax-invalid 30, redundant 27
Fitness: max 0.923(65), min 0.846(2), ave 0.921
Test execution time: sum 6046 ms, max 148 ms, min 82 ms
----------------------------------------------------------------

2023-08-07 10:57:37 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-07 11:12:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 41 seconds
Variants: generated 200, build-succeeded 69, build-failed 85, syntax-invalid 17, redundant 29
Fitness: max 1(1), min 0.385(1), ave 0.912
Test execution time: sum 906069 ms, max 360091 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 11:12:46 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-07 11:15:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 56 minutes 50 seconds
Variants: generated 200, build-succeeded 58, build-failed 85, syntax-invalid 34, redundant 23
Fitness: max 1(3), min 0.846(1), ave 0.926
Test execution time: sum 185161 ms, max 180087 ms, min 87 ms
----------------------------------------------------------------

2023-08-07 11:15:55 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-07 11:16:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 56 minutes 59 seconds
Variants: generated 200, build-succeeded 59, build-failed 80, syntax-invalid 29, redundant 32
Fitness: max 1(4), min 0.923(55), ave 0.928
Test execution time: sum 5326 ms, max 132 ms, min 87 ms
----------------------------------------------------------------

2023-08-07 11:16:04 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-07 11:25:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 6 minutes 8 seconds
Variants: generated 200, build-succeeded 71, build-failed 78, syntax-invalid 34, redundant 17
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 546315 ms, max 360088 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 11:25:14 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-07 11:25:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 6 minutes 17 seconds
Variants: generated 200, build-succeeded 65, build-failed 75, syntax-invalid 30, redundant 30
Fitness: max 1(3), min 0.923(62), ave 0.927
Test execution time: sum 5850 ms, max 145 ms, min 85 ms
----------------------------------------------------------------

2023-08-07 11:25:23 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-07 11:25:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 6 minutes 27 seconds
Variants: generated 200, build-succeeded 71, build-failed 77, syntax-invalid 26, redundant 26
Fitness: max 0.923(70), min 0.846(1), ave 0.922
Test execution time: sum 6366 ms, max 142 ms, min 85 ms
----------------------------------------------------------------

2023-08-07 11:25:33 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-07 11:25:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 6 minutes 37 seconds
Variants: generated 200, build-succeeded 73, build-failed 76, syntax-invalid 26, redundant 25
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 6618 ms, max 148 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 11:25:43 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-07 11:25:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 6 minutes 38 seconds
Variants: generated 24, build-succeeded 5, build-failed 13, syntax-invalid 1, redundant 5
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 436 ms, max 88 ms, min 86 ms
----------------------------------------------------------------

2023-08-07 11:25:43 [main] [INFO]  KGenProgMain - GA stopped
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v81)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v81)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v81)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v135)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v135)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v135)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v135)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v143)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v143)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v143)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v143)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v266)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v266)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v266)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v266)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v438)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v438)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v438)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v438)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v853)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v853)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v853)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v853)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1057)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1288)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1288)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1288)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1288)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1288)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1288)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1404)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1404)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1404)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1404)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1404)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1438)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1442)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1442)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1442)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1442)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1490)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1490)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1490)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1490)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1490)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1631)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1631)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1631)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -192,16 +192,11 @@
             
             fb = function.value(b);
             numIterations++ ;
+			int i = 0;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1631)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1632)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1632)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1632)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1632)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1632)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1864)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1864)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1864)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v1864)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2055)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2055)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2055)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2055)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 0;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2055)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2401)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2401)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2401)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2401)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2401)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2612)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2612)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2612)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2612)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2612)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2665)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2665)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2665)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2665)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2665)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2665)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2686)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -64,7 +64,8 @@
                   "{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
-        // by default, do simple root finding using bracketing and default solver.
+        double ret;
+		// by default, do simple root finding using bracketing and default solver.
         // subclasses can override if there is a better method.
         UnivariateRealFunction rootFindingFunction =
             new UnivariateRealFunction() {
@@ -94,14 +95,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2833)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2833)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2833)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2833)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2833)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2864)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2864)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2864)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -192,16 +192,11 @@
             
             fb = function.value(b);
             numIterations++ ;
+			int i = 0;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2864)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v2864)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3058)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3058)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3058)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -192,16 +192,11 @@
             
             fb = function.value(b);
             numIterations++ ;
+			int i = 0;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3058)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3058)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3440)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3440)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3440)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3440)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3440)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3440)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3458)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3458)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3458)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3458)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3458)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3458)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3466)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3472)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3472)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3472)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3472)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3472)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3485)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3485)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3485)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3485)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -192,16 +192,11 @@
             
             fb = function.value(b);
             numIterations++ ;
+			int i = 0;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3485)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3637)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3637)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -64,7 +64,8 @@
                   "{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
-        // by default, do simple root finding using bracketing and default solver.
+        double ret;
+		// by default, do simple root finding using bracketing and default solver.
         // subclasses can override if there is a better method.
         UnivariateRealFunction rootFindingFunction =
             new UnivariateRealFunction() {
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3637)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3637)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3637)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -201,6 +202,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3667)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3667)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3667)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3667)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3667)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3667)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3689)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3689)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3689)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3689)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3689)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3689)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v3689)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4258)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4258)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4258)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4258)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4258)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4258)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4429)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4429)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4429)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4429)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4429)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4429)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -82,7 +82,7 @@
      * @return a message string
      */
     private static String buildMessage(Locale locale, String pattern, Object ... arguments) {
-        return (pattern == null) ? "" : new MessageFormat(translate(pattern, locale), locale).format(arguments);        
+        return buildMessage(Locale.getDefault(), pattern, arguments);        
     }
 
     /**
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -64,7 +64,8 @@
                   "{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
-        // by default, do simple root finding using bracketing and default solver.
+        double ret;
+		// by default, do simple root finding using bracketing and default solver.
         // subclasses can override if there is a better method.
         UnivariateRealFunction rootFindingFunction =
             new UnivariateRealFunction() {
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4662)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4662)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4662)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4662)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4662)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:44 [main] [INFO]  PatchLogExporter - patch (v4662)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -201,6 +202,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +133,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4894)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4894)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4894)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4894)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double delta;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4894)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v4894)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5224)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -82,7 +82,7 @@
      * @return a message string
      */
     private static String buildMessage(Locale locale, String pattern, Object ... arguments) {
-        return (pattern == null) ? "" : new MessageFormat(translate(pattern, locale), locale).format(arguments);        
+        return buildMessage(Locale.getDefault(), pattern, arguments);        
     }
 
     /**
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5224)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5224)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5224)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5224)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -201,6 +202,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5226)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5226)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5226)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5226)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5226)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5226)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5487)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5487)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5487)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5487)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5487)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5488)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5488)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5488)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5488)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5488)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5488)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5869)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5869)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5869)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5869)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5869)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5869)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5869)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -201,6 +202,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6061)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6061)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6061)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6061)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6061)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6061)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6061)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6061)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6061)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6205)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6205)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6205)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6205)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6205)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6205)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6205)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6253)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6253)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6253)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6253)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6253)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6253)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6300)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6300)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6300)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6300)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6300)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6300)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6300)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6604)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6604)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6604)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6604)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6604)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6604)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6604)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6652)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +133,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6652)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6652)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6652)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6652)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6652)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6652)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6661)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6661)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6661)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6661)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6661)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6661)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6661)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6661)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6888)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6888)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6888)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6888)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v6888)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,13 +94,14 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.0;
         }
         
         return ret;
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7203)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7203)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7203)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7203)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7203)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7203)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7203)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7230)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7230)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7230)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7230)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7230)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7230)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7230)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7245)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7245)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7245)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7245)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7245)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7245)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7449)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7449)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0.0;
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7449)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7449)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7449)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7449)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -220,7 +222,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < .5) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7474)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7474)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7474)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7474)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7474)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7474)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7474)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7653)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7653)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7653)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7653)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7653)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7653)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7653)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7803)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7803)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7803)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7803)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7803)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,10 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -201,6 +204,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			return Double.POSITIVE_INFINITY;
         }
         
         return ret;
@@ -220,7 +224,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < .5) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7818)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7818)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7818)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7818)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7818)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7838)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7838)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7838)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7838)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7838)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7838)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7838)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7870)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7870)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7870)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7870)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7870)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v7870)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8038)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8038)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8038)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,13 +94,14 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8038)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8038)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8038)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8086)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8086)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8086)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8086)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -195,7 +195,7 @@
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (function == null ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8086)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8086)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8086)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8086)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8230)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8230)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8230)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8230)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8230)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8230)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8230)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8230)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8281)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8281)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8281)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8281)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8281)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8281)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,11 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -220,7 +224,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < .5) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8495)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8495)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8495)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8495)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8495)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8495)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8495)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8609)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8609)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8609)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,10 +97,11 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8609)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8609)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8609)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,10 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8629)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8629)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8629)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,13 +94,14 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8629)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8629)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8629)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8629)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8629)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8871)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8871)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8871)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8871)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8871)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8871)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8877)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8877)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8877)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8877)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8877)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v8877)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9024)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9024)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9024)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9024)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9024)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9024)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,10 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9058)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9058)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9058)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,13 +94,14 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9058)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9058)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9058)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9058)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,10 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9065)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9065)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9065)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9065)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9065)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9065)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,12 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		double[] bracket = null;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9094)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9094)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9094)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9094)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9094)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9094)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9094)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9094)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9215)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        final String pattern = "internal error, please fill a bug report at {0}";
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9215)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9215)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9215)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9215)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9215)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9215)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9622)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9622)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9622)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9622)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9622)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9622)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9622)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,10 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9842)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9842)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9842)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9842)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9842)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:45 [main] [INFO]  PatchLogExporter - patch (v9842)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -220,7 +222,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < .5) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9857)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9857)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9857)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,10 +97,11 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9857)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9857)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9857)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9857)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9865)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9865)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9865)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9865)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9865)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v9865)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,10 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10001)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10001)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10001)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10001)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10001)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10001)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10001)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,10 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.0;
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -220,7 +222,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,10 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10067)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10067)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10067)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10067)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10067)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10067)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,10 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10089)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10089)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10089)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,10 +97,11 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10089)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10089)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10089)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10089)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10241)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10241)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,13 +94,14 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10241)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10241)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10241)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10294)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10294)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10294)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10294)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10294)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10294)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,9 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -220,7 +222,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10299)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10299)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10299)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10299)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10299)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,10 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -220,7 +223,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,10 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10491)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +133,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10491)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10491)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10491)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10491)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10491)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10491)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10496)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +133,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
@@ -169,7 +168,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10496)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10496)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10496)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10496)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10496)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10895)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10895)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10895)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10895)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			return ret;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10895)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10895)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v10895)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,10 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
@@ -220,7 +223,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < .5) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v11024)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v11024)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v11024)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v11024)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v11024)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactory
@@ -49,7 +49,8 @@
      * @return a new factory.
      */
     public static UnivariateRealSolverFactory newInstance() {
-        return new UnivariateRealSolverFactoryImpl();
+        int i = 1;
+		return new UnivariateRealSolverFactoryImpl();
     }
     
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v11024)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v11024)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 11:25:46 [main] [INFO]  PatchLogExporter - patch (v11024)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        ret = -Double.MAX_VALUE;
+		return ret;
     }
 
     /**
2023-08-07 11:25:48 [main] [INFO]  KGenProgMain - Summary
Reached generation = 57
Generated variants = 11024
Syntax valid variants = 9350
Build succeeded variants = 3448
Time elapsed = 8 hours 6 minutes 43 seconds
Exit status = SUCCESS
