2023-08-07 20:21:39 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-07 20:21:39 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-07 20:21:39 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-07 20:21:39 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 8 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-07 20:21:46 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-07 20:21:46 [main] [INFO]  KGenProgMain - GA started
2023-08-07 20:21:46 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-07 20:21:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, build-succeeded 7, build-failed 64, syntax-invalid 7, redundant 22
Fitness: max 1(1), min 0.846(2), ave 0.912
Test execution time: sum 902 ms, max 173 ms, min 105 ms
----------------------------------------------------------------

2023-08-07 20:21:50 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-07 20:33:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 5 seconds
Variants: generated 100, build-succeeded 12, build-failed 62, syntax-invalid 10, redundant 16
Fitness: max 1(3), min 0.615(1), ave 0.872
Test execution time: sum 721087 ms, max 360090 ms, min 77 ms
----------------------------------------------------------------

2023-08-07 20:33:52 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-07 21:48:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 12 seconds
Variants: generated 200, build-succeeded 48, build-failed 69, syntax-invalid 11, redundant 72
Fitness: max 1(1), min 0.385(1), ave 0.795
Test execution time: sum 4504134 ms, max 360089 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 21:48:59 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-07 22:07:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 17 seconds
Variants: generated 200, build-succeeded 30, build-failed 75, syntax-invalid 6, redundant 89
Fitness: max 0.923(8), min 0.692(1), ave 0.849
Test execution time: sum 1082569 ms, max 360086 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 22:07:04 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-07 22:46:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 59 seconds
Variants: generated 200, build-succeeded 32, build-failed 71, syntax-invalid 14, redundant 83
Fitness: max 1(1), min 0.692(1), ave 0.851
Test execution time: sum 2380060 ms, max 540076 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 22:46:46 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-07 23:22:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 4 seconds
Variants: generated 200, build-succeeded 38, build-failed 63, syntax-invalid 19, redundant 80
Fitness: max 0.923(18), min 0.462(1), ave 0.872
Test execution time: sum 2163336 ms, max 360091 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 23:22:51 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-07 23:37:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 10 seconds
Variants: generated 200, build-succeeded 48, build-failed 61, syntax-invalid 19, redundant 72
Fitness: max 1(4), min 0.846(11), ave 0.912
Test execution time: sum 904187 ms, max 360086 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 23:37:57 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-08 00:02:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 17 seconds
Variants: generated 200, build-succeeded 49, build-failed 69, syntax-invalid 19, redundant 63
Fitness: max 1(4), min 0.385(1), ave 0.904
Test execution time: sum 1444434 ms, max 1440068 ms, min 69 ms
----------------------------------------------------------------

2023-08-08 00:02:04 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-08 00:02:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 23 seconds
Variants: generated 200, build-succeeded 42, build-failed 59, syntax-invalid 20, redundant 79
Fitness: max 1(1), min 0.846(5), ave 0.916
Test execution time: sum 3920 ms, max 118 ms, min 84 ms
----------------------------------------------------------------

2023-08-08 00:02:10 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-08 00:14:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 30 seconds
Variants: generated 200, build-succeeded 50, build-failed 71, syntax-invalid 18, redundant 61
Fitness: max 1(4), min 0.846(6), ave 0.92
Test execution time: sum 724455 ms, max 360087 ms, min 84 ms
----------------------------------------------------------------

2023-08-08 00:14:17 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-08 00:14:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 38 seconds
Variants: generated 200, build-succeeded 60, build-failed 70, syntax-invalid 23, redundant 47
Fitness: max 1(4), min 0.846(4), ave 0.923
Test execution time: sum 5379 ms, max 165 ms, min 85 ms
----------------------------------------------------------------

2023-08-08 00:14:25 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-08 00:23:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 46 seconds
Variants: generated 200, build-succeeded 69, build-failed 63, syntax-invalid 20, redundant 48
Fitness: max 1(4), min 0.846(9), ave 0.918
Test execution time: sum 546099 ms, max 180086 ms, min 73 ms
----------------------------------------------------------------

2023-08-08 00:23:33 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-08 00:35:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 53 seconds
Variants: generated 200, build-succeeded 52, build-failed 64, syntax-invalid 27, redundant 57
Fitness: max 1(2), min 0.846(4), ave 0.92
Test execution time: sum 724690 ms, max 360112 ms, min 85 ms
----------------------------------------------------------------

2023-08-08 00:35:40 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-08 00:41:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 0 seconds
Variants: generated 200, build-succeeded 51, build-failed 71, syntax-invalid 24, redundant 54
Fitness: max 1(4), min 0.846(5), ave 0.922
Test execution time: sum 364596 ms, max 180085 ms, min 76 ms
----------------------------------------------------------------

2023-08-08 00:41:47 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-08 00:44:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 8 seconds
Variants: generated 200, build-succeeded 58, build-failed 81, syntax-invalid 25, redundant 36
Fitness: max 1(2), min 0.846(5), ave 0.919
Test execution time: sum 185194 ms, max 180085 ms, min 81 ms
----------------------------------------------------------------

2023-08-08 00:44:55 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-08 00:48:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 17 seconds
Variants: generated 200, build-succeeded 74, build-failed 62, syntax-invalid 24, redundant 40
Fitness: max 1(2), min 0.462(1), ave 0.913
Test execution time: sum 186588 ms, max 180091 ms, min 67 ms
----------------------------------------------------------------

2023-08-08 00:48:04 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-08 00:48:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 26 seconds
Variants: generated 200, build-succeeded 74, build-failed 67, syntax-invalid 20, redundant 39
Fitness: max 1(1), min 0.846(6), ave 0.918
Test execution time: sum 6609 ms, max 129 ms, min 77 ms
----------------------------------------------------------------

2023-08-08 00:48:13 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-08 00:48:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 35 seconds
Variants: generated 200, build-succeeded 74, build-failed 61, syntax-invalid 37, redundant 28
Fitness: max 1(2), min 0.923(72), ave 0.925
Test execution time: sum 6649 ms, max 130 ms, min 76 ms
----------------------------------------------------------------

2023-08-08 00:48:22 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-08 00:48:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 45 seconds
Variants: generated 200, build-succeeded 76, build-failed 67, syntax-invalid 24, redundant 33
Fitness: max 1(2), min 0.846(1), ave 0.924
Test execution time: sum 6912 ms, max 131 ms, min 83 ms
----------------------------------------------------------------

2023-08-08 00:48:32 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-08 00:57:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 35 minutes 54 seconds
Variants: generated 200, build-succeeded 73, build-failed 70, syntax-invalid 23, redundant 34
Fitness: max 1(1), min 0.615(1), ave 0.917
Test execution time: sum 546673 ms, max 360088 ms, min 75 ms
----------------------------------------------------------------

2023-08-08 00:57:41 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-08 01:06:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 3 seconds
Variants: generated 200, build-succeeded 71, build-failed 65, syntax-invalid 25, redundant 39
Fitness: max 1(1), min 0.538(1), ave 0.914
Test execution time: sum 546328 ms, max 360087 ms, min 71 ms
----------------------------------------------------------------

2023-08-08 01:06:50 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-08 01:12:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 11 seconds
Variants: generated 200, build-succeeded 66, build-failed 68, syntax-invalid 27, redundant 39
Fitness: max 1(2), min 0.846(4), ave 0.921
Test execution time: sum 365864 ms, max 180087 ms, min 73 ms
----------------------------------------------------------------

2023-08-08 01:12:58 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-08 01:16:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 54 minutes 21 seconds
Variants: generated 200, build-succeeded 74, build-failed 67, syntax-invalid 30, redundant 29
Fitness: max 1(1), min 0.846(10), ave 0.914
Test execution time: sum 186599 ms, max 180086 ms, min 83 ms
----------------------------------------------------------------

2023-08-08 01:16:08 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-08 01:25:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 3 minutes 30 seconds
Variants: generated 200, build-succeeded 75, build-failed 74, syntax-invalid 26, redundant 25
Fitness: max 0.923(69), min 0.846(6), ave 0.917
Test execution time: sum 546763 ms, max 360085 ms, min 85 ms
----------------------------------------------------------------

2023-08-08 01:25:17 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-08 01:31:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 9 minutes 38 seconds
Variants: generated 200, build-succeeded 64, build-failed 73, syntax-invalid 30, redundant 33
Fitness: max 1(1), min 0.846(4), ave 0.919
Test execution time: sum 365710 ms, max 360088 ms, min 85 ms
----------------------------------------------------------------

2023-08-08 01:31:25 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-08 01:31:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 9 minutes 47 seconds
Variants: generated 200, build-succeeded 71, build-failed 68, syntax-invalid 28, redundant 33
Fitness: max 1(2), min 0.692(1), ave 0.921
Test execution time: sum 6407 ms, max 161 ms, min 75 ms
----------------------------------------------------------------

2023-08-08 01:31:34 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-08 01:34:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 12 minutes 56 seconds
Variants: generated 200, build-succeeded 67, build-failed 68, syntax-invalid 27, redundant 38
Fitness: max 1(1), min 0.385(1), ave 0.91
Test execution time: sum 186051 ms, max 180086 ms, min 81 ms
----------------------------------------------------------------

2023-08-08 01:34:43 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-08 01:43:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 4 seconds
Variants: generated 200, build-succeeded 64, build-failed 67, syntax-invalid 38, redundant 31
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 545754 ms, max 360086 ms, min 85 ms
----------------------------------------------------------------

2023-08-08 01:43:51 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-08 01:44:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 13 seconds
Variants: generated 200, build-succeeded 73, build-failed 74, syntax-invalid 35, redundant 18
Fitness: max 1(1), min 0.846(3), ave 0.921
Test execution time: sum 6605 ms, max 122 ms, min 80 ms
----------------------------------------------------------------

2023-08-08 01:44:00 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-08 01:44:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 22 seconds
Variants: generated 200, build-succeeded 73, build-failed 65, syntax-invalid 30, redundant 32
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 6752 ms, max 134 ms, min 85 ms
----------------------------------------------------------------

2023-08-08 01:44:09 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-08 01:44:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 32 seconds
Variants: generated 200, build-succeeded 72, build-failed 68, syntax-invalid 41, redundant 19
Fitness: max 1(5), min 0.846(2), ave 0.926
Test execution time: sum 6772 ms, max 118 ms, min 81 ms
----------------------------------------------------------------

2023-08-08 01:44:19 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-08 01:44:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 41 seconds
Variants: generated 200, build-succeeded 68, build-failed 67, syntax-invalid 38, redundant 27
Fitness: max 0.923(64), min 0.385(1), ave 0.912
Test execution time: sum 6118 ms, max 120 ms, min 82 ms
----------------------------------------------------------------

2023-08-08 01:44:28 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-08 01:44:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 50 seconds
Variants: generated 200, build-succeeded 79, build-failed 65, syntax-invalid 27, redundant 29
Fitness: max 1(2), min 0.615(1), ave 0.92
Test execution time: sum 7087 ms, max 125 ms, min 68 ms
----------------------------------------------------------------

2023-08-08 01:44:37 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-08 01:50:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 59 seconds
Variants: generated 200, build-succeeded 62, build-failed 65, syntax-invalid 49, redundant 24
Fitness: max 0.923(57), min 0.846(5), ave 0.917
Test execution time: sum 365615 ms, max 360086 ms, min 85 ms
----------------------------------------------------------------

2023-08-08 01:50:46 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-08 01:50:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 9 seconds
Variants: generated 200, build-succeeded 79, build-failed 68, syntax-invalid 33, redundant 20
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 7170 ms, max 161 ms, min 85 ms
----------------------------------------------------------------

2023-08-08 01:50:56 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-08 01:57:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 19 seconds
Variants: generated 200, build-succeeded 84, build-failed 66, syntax-invalid 29, redundant 21
Fitness: max 1(2), min 0.462(1), ave 0.915
Test execution time: sum 367625 ms, max 360083 ms, min 68 ms
----------------------------------------------------------------

2023-08-08 01:57:06 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-08 02:27:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 5 minutes 29 seconds
Variants: generated 200, build-succeeded 79, build-failed 60, syntax-invalid 32, redundant 29
Fitness: max 1(1), min 0.385(1), ave 0.914
Test execution time: sum 1807266 ms, max 1440068 ms, min 87 ms
----------------------------------------------------------------

2023-08-08 02:27:16 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-08 02:39:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 40 seconds
Variants: generated 200, build-succeeded 84, build-failed 65, syntax-invalid 35, redundant 16
Fitness: max 0.923(74), min 0.846(10), ave 0.914
Test execution time: sum 727794 ms, max 360088 ms, min 86 ms
----------------------------------------------------------------

2023-08-08 02:39:27 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-08 02:42:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 20 minutes 51 seconds
Variants: generated 200, build-succeeded 92, build-failed 58, syntax-invalid 35, redundant 15
Fitness: max 1(4), min 0.462(1), ave 0.917
Test execution time: sum 188506 ms, max 180088 ms, min 68 ms
----------------------------------------------------------------

2023-08-08 02:42:38 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-08 02:45:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 2 seconds
Variants: generated 200, build-succeeded 84, build-failed 64, syntax-invalid 26, redundant 26
Fitness: max 1(1), min 0.846(5), ave 0.919
Test execution time: sum 187529 ms, max 180089 ms, min 82 ms
----------------------------------------------------------------

2023-08-08 02:45:49 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-08 02:52:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 13 seconds
Variants: generated 200, build-succeeded 90, build-failed 61, syntax-invalid 30, redundant 19
Fitness: max 1(3), min 0.462(1), ave 0.916
Test execution time: sum 368173 ms, max 360088 ms, min 84 ms
----------------------------------------------------------------

2023-08-08 02:52:00 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-08 02:58:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 24 seconds
Variants: generated 200, build-succeeded 91, build-failed 67, syntax-invalid 27, redundant 15
Fitness: max 0.923(85), min 0.846(6), ave 0.918
Test execution time: sum 368299 ms, max 360087 ms, min 86 ms
----------------------------------------------------------------

2023-08-08 02:58:11 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-08 03:04:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 34 seconds
Variants: generated 200, build-succeeded 78, build-failed 64, syntax-invalid 41, redundant 17
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 367160 ms, max 180111 ms, min 76 ms
----------------------------------------------------------------

2023-08-08 03:04:21 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-08 03:04:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 45 seconds
Variants: generated 200, build-succeeded 84, build-failed 57, syntax-invalid 31, redundant 28
Fitness: max 1(2), min 0.846(6), ave 0.919
Test execution time: sum 7621 ms, max 122 ms, min 81 ms
----------------------------------------------------------------

2023-08-08 03:04:32 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-08 03:04:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 56 seconds
Variants: generated 200, build-succeeded 83, build-failed 76, syntax-invalid 26, redundant 15
Fitness: max 1(2), min 0.923(81), ave 0.925
Test execution time: sum 7534 ms, max 142 ms, min 85 ms
----------------------------------------------------------------

2023-08-08 03:04:43 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-08 03:16:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 6 seconds
Variants: generated 200, build-succeeded 76, build-failed 70, syntax-invalid 30, redundant 24
Fitness: max 1(2), min 0.462(1), ave 0.917
Test execution time: sum 726959 ms, max 360109 ms, min 69 ms
----------------------------------------------------------------

2023-08-08 03:16:52 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-08 03:32:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 10 minutes 16 seconds
Variants: generated 200, build-succeeded 83, build-failed 72, syntax-invalid 30, redundant 15
Fitness: max 1(4), min 0.846(5), ave 0.922
Test execution time: sum 907555 ms, max 360088 ms, min 81 ms
----------------------------------------------------------------

2023-08-08 03:32:03 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-08 03:35:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 13 minutes 26 seconds
Variants: generated 200, build-succeeded 74, build-failed 62, syntax-invalid 29, redundant 35
Fitness: max 1(3), min 0.846(2), ave 0.924
Test execution time: sum 186797 ms, max 180096 ms, min 85 ms
----------------------------------------------------------------

2023-08-08 03:35:13 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-08 03:41:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 36 seconds
Variants: generated 200, build-succeeded 71, build-failed 75, syntax-invalid 39, redundant 15
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 366398 ms, max 360086 ms, min 87 ms
----------------------------------------------------------------

2023-08-08 03:41:23 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-08 03:53:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 31 minutes 46 seconds
Variants: generated 200, build-succeeded 77, build-failed 66, syntax-invalid 27, redundant 30
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 727026 ms, max 360087 ms, min 87 ms
----------------------------------------------------------------

2023-08-08 03:53:33 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-08 03:53:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 31 minutes 47 seconds
Variants: generated 36, build-succeeded 6, build-failed 21, syntax-invalid 3, redundant 6
Fitness: max 1(2), min 0.923(4), ave 0.949
Test execution time: sum 537 ms, max 90 ms, min 89 ms
----------------------------------------------------------------

2023-08-08 03:53:34 [main] [INFO]  KGenProgMain - GA stopped
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v123)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v123)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v123)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v123)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v142)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v142)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v142)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double q, A, B, C, delta, denominator, tolerance;
         }
         
         return new double[]{a, b};
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v142)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v176)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v176)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v176)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v176)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v215)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v215)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v215)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v215)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v215)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v692)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v692)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v692)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v692)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v692)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1047)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1047)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1047)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1047)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1047)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1066)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1066)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -99,9 +98,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1066)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1066)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                ret = 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-08 03:53:34 [main] [INFO]  PatchLogExporter - patch (v1066)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1154)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1154)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1154)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1154)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1154)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1281)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1281)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1281)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1281)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1281)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1281)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1306)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,8 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
@@ -103,7 +104,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1306)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1306)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1306)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1306)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1313)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1313)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1313)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1313)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1344)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1344)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1344)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1344)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1344)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1497)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1497)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1497)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1497)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1497)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1497)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1686)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1686)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1686)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1686)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1686)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1717)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1717)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1717)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1717)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1717)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1752)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1752)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1752)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1752)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1752)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,10 +170,9 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
-            } else {
+            } else if (Math.abs(yMax) <= functionValueAccuracy)
+				throw MathRuntimeException.createIllegalArgumentException("function is null");
+			else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         "function values at endpoints do not have different signs.  " +
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1841)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1841)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1841)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1841)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1841)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -186,7 +186,13 @@
         int numIterations = 0 ;
     
         do {
-            a = Math.max(a - 1.0, lowerBound);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1841)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1914)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1914)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1914)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1914)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1914)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,10 +170,9 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
-            } else {
+            } else if (Math.abs(yMax) <= functionValueAccuracy)
+				throw MathRuntimeException.createIllegalArgumentException("function is null");
+			else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         "function values at endpoints do not have different signs.  " +
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1959)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1959)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1959)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1959)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1959)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,10 +170,9 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
-            } else {
+            } else if (Math.abs(yMax) <= functionValueAccuracy)
+				throw MathRuntimeException.createIllegalArgumentException("function is null");
+			else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         "function values at endpoints do not have different signs.  " +
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1988)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1988)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1988)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1988)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                ret = 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1988)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v1988)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,10 +170,9 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
-            } else {
+            } else if (Math.abs(yMax) <= functionValueAccuracy)
+				throw MathRuntimeException.createIllegalArgumentException("function is null");
+			else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         "function values at endpoints do not have different signs.  " +
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2022)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2022)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2022)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2022)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2022)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2074)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2074)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2074)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2074)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2074)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2074)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2196)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2196)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2196)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2196)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2196)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2245)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2245)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2245)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2245)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2245)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2342)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2342)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2342)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2342)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -186,7 +186,8 @@
         int numIterations = 0 ;
     
         do {
-            a = Math.max(a - 1.0, lowerBound);
+            numIterations++;
+			a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2342)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2342)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2342)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -199,6 +199,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2342)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2433)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2433)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2433)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2433)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2433)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2433)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2482)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2482)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2482)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2482)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2482)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2490)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2490)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2490)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2490)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2490)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2490)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2496)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2496)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2496)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2496)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2496)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2496)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2668)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2668)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2668)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2668)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2668)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2668)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,7 +170,7 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+            } else if (f.value(max) == 0.0) {
                 setResult(max, 0);
                 ret = max;
             } else {
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2790)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2790)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2790)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,9 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2790)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2790)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2875)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2875)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2875)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2875)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2875)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2875)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2945)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2945)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2945)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v2945)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3282)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3282)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3282)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3282)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3282)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3282)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3354)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3354)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3354)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3354)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3354)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3354)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3413)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3413)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3413)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3413)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3413)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3413)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -199,6 +199,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3687)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3687)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3687)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3687)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3687)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3687)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -199,6 +199,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3877)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3877)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3877)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3877)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3877)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v3877)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,7 +170,7 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+            } else if (f.value(max) == 0.0) {
                 setResult(max, 0);
                 ret = max;
             } else {
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4065)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4065)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4065)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -100,8 +99,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4065)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4065)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4065)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,7 +170,7 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+            } else if (f.value(max) == 0.0) {
                 setResult(max, 0);
                 ret = max;
             } else {
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,9 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -94,10 +93,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -199,6 +199,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4676)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4676)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4676)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4676)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4676)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -94,14 +93,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			return ret;
         }
         
         return ret;
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4895)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4895)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -94,14 +93,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4895)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4895)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v4895)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			return ret;
         }
         
         return ret;
@@ -199,6 +200,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5267)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5267)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5267)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5267)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5267)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5292)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5292)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -94,10 +93,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5292)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:35 [main] [INFO]  PatchLogExporter - patch (v5292)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5294)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5294)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5294)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5294)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5294)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5294)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5428)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5428)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5428)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5428)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5428)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5428)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5630)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -103,7 +109,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5630)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5630)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5630)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5630)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5677)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -190,8 +196,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5677)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5677)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5677)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5677)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5692)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5692)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -94,7 +93,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5692)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5692)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5692)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5692)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5845)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -116,7 +122,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5845)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5845)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5845)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5845)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5845)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5852)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5852)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5852)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5852)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5852)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5852)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -170,7 +170,7 @@
             if (Math.abs(yMin) <= functionValueAccuracy) {
                 setResult(min, 0);
                 ret = min;
-            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+            } else if (f.value(max) == 0.0) {
                 setResult(max, 0);
                 ret = max;
             } else {
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5853)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -116,7 +122,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5853)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5853)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5853)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5853)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5873)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5873)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5873)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -99,9 +98,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5873)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5873)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -97,11 +96,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v5878)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			return ret;
         }
         
         return ret;
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6288)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6288)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6288)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6288)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6288)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6288)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6602)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -103,7 +115,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +127,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6602)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6602)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6602)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6602)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6635)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6635)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6635)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -94,10 +93,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6635)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6635)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6635)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6828)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6828)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6828)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            fb = function.value(b);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6828)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6828)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6837)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6837)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6837)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6837)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6837)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6837)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v6837)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -199,6 +199,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7034)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7407)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -190,8 +202,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7407)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7407)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7407)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7407)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7407)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -199,6 +199,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7417)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7417)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7417)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7417)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7417)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7417)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7436)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7436)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7436)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7436)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7436)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7455)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7455)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7455)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7455)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7455)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,9 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7455)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7694)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -190,8 +189,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7694)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7694)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7694)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7694)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7694)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7808)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -116,7 +117,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7808)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7808)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7808)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7808)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7808)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7808)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -190,8 +189,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7897)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7897)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7897)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7897)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7897)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7897)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v7897)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8243)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8243)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8243)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8243)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8243)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,9 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            double g = 607.0 / 128.0;
+			ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8243)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8243)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -199,6 +199,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8256)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8256)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8256)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double root = UnivariateRealSolverUtils.solve(rootFindingFunction, bracket[0], bracket[1]);
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8256)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8256)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8256)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8265)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8265)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8265)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8265)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8265)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8265)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8265)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8265)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8434)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8434)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8434)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8434)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8434)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,9 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8434)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8434)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8474)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8474)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8474)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8474)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -195,7 +195,7 @@
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8474)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8474)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8474)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double root = UnivariateRealSolverUtils.solve(rootFindingFunction, bracket[0], bracket[1]);
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8674)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8674)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8674)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8674)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8674)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,9 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            double g = 607.0 / 128.0;
+			ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8674)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8674)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -199,6 +199,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8819)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8819)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8819)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8819)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8819)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8819)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8819)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8869)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -116,7 +128,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -190,8 +201,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8869)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8869)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8869)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v8869)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -116,7 +122,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -31,7 +31,6 @@
      * Default constructor.
      */
     public ConvergenceException() {
-        super("Convergence failed");
     }
     
     /**
@@ -42,7 +41,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9037)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9037)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9037)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9037)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,9 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            double g = 607.0 / 128.0;
+			ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9037)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9037)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -199,6 +199,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9046)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9046)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9046)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -97,11 +96,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9046)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9046)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9046)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -116,7 +122,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9205)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9205)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9205)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9205)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9205)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9205)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9205)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9236)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9236)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double root = UnivariateRealSolverUtils.solve(rootFindingFunction, bracket[0], bracket[1]);
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9236)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9236)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9236)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9236)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9236)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -199,6 +199,7 @@
 
         if (p < .5) {
             ret = getMean();
+			return ret;
         } else {
             ret = Double.MAX_VALUE;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9266)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9266)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9266)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9266)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9266)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9266)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,9 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9266)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9459)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,13 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9459)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,6 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
+		double n = 0.0;
         if (x < 0) {
             ret = -ret;
         }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9459)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9459)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9459)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,10 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = Double.NaN;
+			ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9459)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9459)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9470)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -116,7 +128,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9470)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9470)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9470)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9470)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9470)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9470)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9644)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9644)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9644)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -97,11 +96,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9644)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9644)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9829)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,25 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -116,7 +134,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9829)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9829)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9829)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9829)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = Double.NaN;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-08 03:53:36 [main] [INFO]  PatchLogExporter - patch (v9829)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:37 [main] [INFO]  PatchLogExporter - patch (v9836)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,19 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            {
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			{
+				ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(s);
+				}
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -116,7 +128,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-08 03:53:37 [main] [INFO]  PatchLogExporter - patch (v9836)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-08 03:53:37 [main] [INFO]  PatchLogExporter - patch (v9836)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
@@ -94,10 +93,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-08 03:53:37 [main] [INFO]  PatchLogExporter - patch (v9836)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-08 03:53:37 [main] [INFO]  PatchLogExporter - patch (v9836)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-08 03:53:37 [main] [INFO]  PatchLogExporter - patch (v9836)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-08 03:53:39 [main] [INFO]  KGenProgMain - Summary
Reached generation = 51
Generated variants = 9836
Syntax valid variants = 8492
Build succeeded variants = 3311
Time elapsed = 7 hours 31 minutes 52 seconds
Exit status = SUCCESS
