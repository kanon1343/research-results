2023-08-07 11:25:48 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-07 11:25:48 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-07 11:25:48 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-07 11:25:49 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 7 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-07 11:25:56 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-07 11:25:56 [main] [INFO]  KGenProgMain - GA started
2023-08-07 11:25:56 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-07 11:35:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 3 seconds
Variants: generated 100, build-succeeded 13, build-failed 59, syntax-invalid 7, redundant 21
Fitness: max 1(1), min 0.846(3), ave 0.911
Test execution time: sum 541533 ms, max 360110 ms, min 83 ms
----------------------------------------------------------------

2023-08-07 11:35:00 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-07 11:59:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 6 seconds
Variants: generated 100, build-succeeded 12, build-failed 69, syntax-invalid 8, redundant 11
Fitness: max 1(2), min 0.846(7), ave 0.891
Test execution time: sum 1441082 ms, max 360090 ms, min 79 ms
----------------------------------------------------------------

2023-08-07 11:59:03 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-07 13:05:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 13 seconds
Variants: generated 200, build-succeeded 49, build-failed 61, syntax-invalid 28, redundant 62
Fitness: max 0.923(17), min 0.462(1), ave 0.865
Test execution time: sum 3964350 ms, max 360106 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 13:05:09 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-07 14:41:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 19 seconds
Variants: generated 200, build-succeeded 47, build-failed 58, syntax-invalid 19, redundant 76
Fitness: max 1(2), min 0.846(33), ave 0.872
Test execution time: sum 5764068 ms, max 360087 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 14:41:16 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-07 15:17:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 24 seconds
Variants: generated 200, build-succeeded 38, build-failed 63, syntax-invalid 17, redundant 82
Fitness: max 1(3), min 0.846(14), ave 0.901
Test execution time: sum 2163264 ms, max 360087 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 15:17:21 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-07 15:23:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 30 seconds
Variants: generated 200, build-succeeded 44, build-failed 68, syntax-invalid 12, redundant 76
Fitness: max 1(1), min 0.538(1), ave 0.911
Test execution time: sum 363900 ms, max 360086 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 15:23:27 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-07 15:23:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 37 seconds
Variants: generated 200, build-succeeded 46, build-failed 76, syntax-invalid 14, redundant 64
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 4042 ms, max 118 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 15:23:34 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-07 15:26:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 seconds
Variants: generated 200, build-succeeded 66, build-failed 55, syntax-invalid 20, redundant 59
Fitness: max 1(1), min 0.846(4), ave 0.92
Test execution time: sum 185825 ms, max 180085 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 15:26:42 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-07 15:30:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 26 seconds
Variants: generated 200, build-succeeded 67, build-failed 61, syntax-invalid 23, redundant 49
Fitness: max 1(1), min 0.462(1), ave 0.915
Test execution time: sum 218858 ms, max 212952 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 15:30:23 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-07 15:36:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 34 seconds
Variants: generated 200, build-succeeded 62, build-failed 72, syntax-invalid 21, redundant 45
Fitness: max 1(4), min 0.846(3), ave 0.924
Test execution time: sum 365703 ms, max 360121 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 15:36:31 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-07 15:36:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 43 seconds
Variants: generated 200, build-succeeded 73, build-failed 57, syntax-invalid 26, redundant 44
Fitness: max 1(3), min 0.385(2), ave 0.906
Test execution time: sum 6726 ms, max 113 ms, min 77 ms
----------------------------------------------------------------

2023-08-07 15:36:40 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-07 15:42:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 53 seconds
Variants: generated 200, build-succeeded 74, build-failed 67, syntax-invalid 14, redundant 45
Fitness: max 1(1), min 0.462(1), ave 0.917
Test execution time: sum 366581 ms, max 360085 ms, min 78 ms
----------------------------------------------------------------

2023-08-07 15:42:49 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-07 15:42:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 2 seconds
Variants: generated 200, build-succeeded 72, build-failed 68, syntax-invalid 23, redundant 37
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 6401 ms, max 130 ms, min 76 ms
----------------------------------------------------------------

2023-08-07 15:42:58 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-07 15:43:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 11 seconds
Variants: generated 200, build-succeeded 74, build-failed 70, syntax-invalid 20, redundant 36
Fitness: max 1(2), min 0.462(1), ave 0.918
Test execution time: sum 6562 ms, max 153 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:43:07 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-07 16:07:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 20 seconds
Variants: generated 200, build-succeeded 78, build-failed 71, syntax-invalid 17, redundant 34
Fitness: max 1(2), min 0.385(1), ave 0.918
Test execution time: sum 1446871 ms, max 1440068 ms, min 83 ms
----------------------------------------------------------------

2023-08-07 16:07:17 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-07 16:16:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 29 seconds
Variants: generated 200, build-succeeded 68, build-failed 69, syntax-invalid 29, redundant 34
Fitness: max 1(2), min 0.846(3), ave 0.922
Test execution time: sum 546127 ms, max 360084 ms, min 82 ms
----------------------------------------------------------------

2023-08-07 16:16:26 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-07 16:25:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 40 seconds
Variants: generated 200, build-succeeded 91, build-failed 64, syntax-invalid 17, redundant 28
Fitness: max 1(2), min 0.846(3), ave 0.922
Test execution time: sum 548155 ms, max 360105 ms, min 86 ms
----------------------------------------------------------------

2023-08-07 16:25:36 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-07 16:28:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 49 seconds
Variants: generated 200, build-succeeded 73, build-failed 78, syntax-invalid 32, redundant 17
Fitness: max 1(3), min 0.385(1), ave 0.91
Test execution time: sum 186624 ms, max 180085 ms, min 86 ms
----------------------------------------------------------------

2023-08-07 16:28:46 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-07 16:34:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 59 seconds
Variants: generated 200, build-succeeded 80, build-failed 67, syntax-invalid 28, redundant 25
Fitness: max 1(3), min 0.462(1), ave 0.919
Test execution time: sum 367082 ms, max 360086 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 16:34:56 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-07 16:38:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 12 minutes 8 seconds
Variants: generated 200, build-succeeded 75, build-failed 73, syntax-invalid 31, redundant 21
Fitness: max 1(1), min 0.462(1), ave 0.917
Test execution time: sum 186646 ms, max 180086 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:38:05 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-07 16:41:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 15 minutes 18 seconds
Variants: generated 200, build-succeeded 83, build-failed 66, syntax-invalid 35, redundant 16
Fitness: max 1(3), min 0.846(2), ave 0.924
Test execution time: sum 187424 ms, max 180085 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 16:41:15 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-07 17:08:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 28 seconds
Variants: generated 200, build-succeeded 82, build-failed 67, syntax-invalid 31, redundant 20
Fitness: max 0.923(79), min 0.385(1), ave 0.915
Test execution time: sum 1627311 ms, max 1440063 ms, min 81 ms
----------------------------------------------------------------

2023-08-07 17:08:25 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-07 17:19:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 11 seconds
Variants: generated 200, build-succeeded 89, build-failed 64, syntax-invalid 21, redundant 26
Fitness: max 1(2), min 0.462(1), ave 0.915
Test execution time: sum 639504 ms, max 360085 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 17:19:07 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-07 17:19:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 20 seconds
Variants: generated 200, build-succeeded 75, build-failed 72, syntax-invalid 33, redundant 20
Fitness: max 1(2), min 0.846(7), ave 0.918
Test execution time: sum 6596 ms, max 126 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:19:17 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-07 17:22:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 56 minutes 30 seconds
Variants: generated 200, build-succeeded 76, build-failed 73, syntax-invalid 30, redundant 21
Fitness: max 0.923(74), min 0.846(2), ave 0.921
Test execution time: sum 186677 ms, max 180085 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 17:22:26 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-07 17:28:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 39 seconds
Variants: generated 200, build-succeeded 72, build-failed 70, syntax-invalid 41, redundant 17
Fitness: max 1(2), min 0.462(1), ave 0.918
Test execution time: sum 366223 ms, max 360083 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 17:28:35 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-07 17:34:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 47 seconds
Variants: generated 200, build-succeeded 66, build-failed 78, syntax-invalid 36, redundant 20
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 365921 ms, max 180085 ms, min 86 ms
----------------------------------------------------------------

2023-08-07 17:34:44 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-07 17:43:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 58 seconds
Variants: generated 200, build-succeeded 82, build-failed 70, syntax-invalid 30, redundant 18
Fitness: max 1(2), min 0.385(1), ave 0.91
Test execution time: sum 547328 ms, max 360086 ms, min 80 ms
----------------------------------------------------------------

2023-08-07 17:43:54 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-07 17:50:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 6 seconds
Variants: generated 200, build-succeeded 69, build-failed 66, syntax-invalid 39, redundant 26
Fitness: max 1(4), min 0.462(1), ave 0.92
Test execution time: sum 366132 ms, max 360077 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 17:50:03 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-07 17:50:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 17 seconds
Variants: generated 200, build-succeeded 81, build-failed 75, syntax-invalid 34, redundant 10
Fitness: max 1(2), min 0.462(1), ave 0.918
Test execution time: sum 7245 ms, max 126 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 17:50:13 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-07 17:56:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 27 seconds
Variants: generated 200, build-succeeded 86, build-failed 69, syntax-invalid 26, redundant 19
Fitness: max 0.923(82), min 0.385(1), ave 0.914
Test execution time: sum 367683 ms, max 180099 ms, min 80 ms
----------------------------------------------------------------

2023-08-07 17:56:24 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-07 17:56:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 38 seconds
Variants: generated 200, build-succeeded 88, build-failed 69, syntax-invalid 27, redundant 16
Fitness: max 1(2), min 0.846(1), ave 0.924
Test execution time: sum 7932 ms, max 116 ms, min 78 ms
----------------------------------------------------------------

2023-08-07 17:56:35 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-07 18:02:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 48 seconds
Variants: generated 200, build-succeeded 84, build-failed 60, syntax-invalid 38, redundant 18
Fitness: max 1(3), min 0.538(1), ave 0.919
Test execution time: sum 367602 ms, max 180086 ms, min 87 ms
----------------------------------------------------------------

2023-08-07 18:02:45 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-07 18:11:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 58 seconds
Variants: generated 200, build-succeeded 74, build-failed 69, syntax-invalid 41, redundant 16
Fitness: max 1(3), min 0.462(1), ave 0.918
Test execution time: sum 546639 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-07 18:11:54 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-07 18:15:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 9 seconds
Variants: generated 200, build-succeeded 92, build-failed 62, syntax-invalid 32, redundant 14
Fitness: max 1(2), min 0.462(1), ave 0.919
Test execution time: sum 188222 ms, max 180086 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 18:15:06 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-07 18:15:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 18 seconds
Variants: generated 200, build-succeeded 70, build-failed 72, syntax-invalid 47, redundant 11
Fitness: max 1(2), min 0.923(68), ave 0.925
Test execution time: sum 6345 ms, max 118 ms, min 78 ms
----------------------------------------------------------------

2023-08-07 18:15:15 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-07 18:17:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 5 seconds
Variants: generated 200, build-succeeded 80, build-failed 63, syntax-invalid 43, redundant 14
Fitness: max 0.923(77), min 0.846(3), ave 0.92
Test execution time: sum 103845 ms, max 96707 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 18:17:01 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-07 18:17:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 14 seconds
Variants: generated 200, build-succeeded 79, build-failed 65, syntax-invalid 45, redundant 11
Fitness: max 1(1), min 0.462(1), ave 0.918
Test execution time: sum 7128 ms, max 158 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 18:17:11 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-07 18:26:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 24 seconds
Variants: generated 200, build-succeeded 76, build-failed 67, syntax-invalid 39, redundant 18
Fitness: max 1(2), min 0.615(1), ave 0.918
Test execution time: sum 546846 ms, max 360088 ms, min 80 ms
----------------------------------------------------------------

2023-08-07 18:26:21 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-07 18:32:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 6 minutes 34 seconds
Variants: generated 200, build-succeeded 74, build-failed 72, syntax-invalid 40, redundant 14
Fitness: max 1(3), min 0.846(1), ave 0.925
Test execution time: sum 366719 ms, max 360122 ms, min 87 ms
----------------------------------------------------------------

2023-08-07 18:32:31 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-07 18:41:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 15 minutes 43 seconds
Variants: generated 200, build-succeeded 66, build-failed 74, syntax-invalid 41, redundant 19
Fitness: max 1(1), min 0.462(1), ave 0.915
Test execution time: sum 545801 ms, max 360088 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 18:41:40 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-07 18:47:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 21 minutes 53 seconds
Variants: generated 200, build-succeeded 77, build-failed 67, syntax-invalid 41, redundant 15
Fitness: max 1(5), min 0.385(1), ave 0.92
Test execution time: sum 367090 ms, max 360086 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 18:47:49 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-07 18:59:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 34 minutes 1 seconds
Variants: generated 200, build-succeeded 63, build-failed 78, syntax-invalid 39, redundant 20
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 725745 ms, max 360087 ms, min 79 ms
----------------------------------------------------------------

2023-08-07 18:59:58 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-07 19:06:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 40 minutes 11 seconds
Variants: generated 200, build-succeeded 73, build-failed 69, syntax-invalid 33, redundant 25
Fitness: max 1(2), min 0.846(3), ave 0.922
Test execution time: sum 366639 ms, max 360117 ms, min 76 ms
----------------------------------------------------------------

2023-08-07 19:06:07 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-07 19:12:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 46 minutes 20 seconds
Variants: generated 200, build-succeeded 68, build-failed 64, syntax-invalid 43, redundant 25
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 366183 ms, max 180095 ms, min 86 ms
----------------------------------------------------------------

2023-08-07 19:12:16 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-07 19:26:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 19 seconds
Variants: generated 200, build-succeeded 67, build-failed 69, syntax-invalid 47, redundant 17
Fitness: max 0.923(64), min 0.846(3), ave 0.92
Test execution time: sum 836298 ms, max 360086 ms, min 87 ms
----------------------------------------------------------------

2023-08-07 19:26:15 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-07 19:29:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 3 minutes 27 seconds
Variants: generated 200, build-succeeded 67, build-failed 61, syntax-invalid 55, redundant 17
Fitness: max 1(1), min 0.462(1), ave 0.912
Test execution time: sum 186029 ms, max 180086 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 19:29:24 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-07 19:41:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 37 seconds
Variants: generated 200, build-succeeded 72, build-failed 72, syntax-invalid 43, redundant 13
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 726494 ms, max 360069 ms, min 85 ms
----------------------------------------------------------------

2023-08-07 19:41:34 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-07 19:41:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 45 seconds
Variants: generated 200, build-succeeded 61, build-failed 71, syntax-invalid 54, redundant 14
Fitness: max 1(2), min 0.462(1), ave 0.917
Test execution time: sum 5483 ms, max 125 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 19:41:42 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-07 19:55:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 29 minutes 6 seconds
Variants: generated 200, build-succeeded 72, build-failed 67, syntax-invalid 51, redundant 10
Fitness: max 1(2), min 0.769(1), ave 0.918
Test execution time: sum 797905 ms, max 360090 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 19:55:03 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-07 20:01:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 35 minutes 15 seconds
Variants: generated 200, build-succeeded 68, build-failed 75, syntax-invalid 45, redundant 12
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 366107 ms, max 360088 ms, min 85 ms
----------------------------------------------------------------

2023-08-07 20:01:12 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-07 20:07:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 24 seconds
Variants: generated 200, build-succeeded 68, build-failed 75, syntax-invalid 49, redundant 8
Fitness: max 1(1), min 0.846(4), ave 0.92
Test execution time: sum 366150 ms, max 180099 ms, min 84 ms
----------------------------------------------------------------

2023-08-07 20:07:21 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-07 20:15:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 49 minutes 23 seconds
Variants: generated 200, build-succeeded 56, build-failed 68, syntax-invalid 56, redundant 20
Fitness: max 1(1), min 0.846(5), ave 0.918
Test execution time: sum 475497 ms, max 180088 ms, min 81 ms
----------------------------------------------------------------

2023-08-07 20:15:19 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-07 20:18:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 52 minutes 30 seconds
Variants: generated 200, build-succeeded 55, build-failed 67, syntax-invalid 58, redundant 20
Fitness: max 0.923(52), min 0.846(3), ave 0.919
Test execution time: sum 185000 ms, max 180095 ms, min 85 ms
----------------------------------------------------------------

2023-08-07 20:18:27 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-07 20:21:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 37 seconds
Variants: generated 165, build-succeeded 44, build-failed 75, syntax-invalid 30, redundant 16
Fitness: max 1(2), min 0.385(1), ave 0.911
Test execution time: sum 184035 ms, max 180087 ms, min 78 ms
----------------------------------------------------------------

2023-08-07 20:21:34 [main] [INFO]  KGenProgMain - GA stopped
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v9)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v9)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v9)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v164)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v164)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v164)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v164)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v170)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v170)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v170)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v170)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v455)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v455)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v455)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v455)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v455)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v485)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v485)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v485)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v485)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v485)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v638)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v638)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v638)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,7 +80,8 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
-        double[] bracket = null;
+        double ret;
+		double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v638)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v638)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v696)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v696)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v696)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v699)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v699)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v699)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v699)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v894)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v894)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v894)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,7 +80,8 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
-        double[] bracket = null;
+        double ret;
+		double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
@@ -99,9 +100,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v894)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v894)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v894)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1027)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1027)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1027)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1027)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1213)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1213)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,7 +80,8 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
-        double[] bracket = null;
+        double ret;
+		double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
@@ -99,9 +100,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1213)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1213)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -31,7 +31,6 @@
      * Default constructor.
      */
     public ConvergenceException() {
-        super("Convergence failed");
     }
     
     /**
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1213)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			return Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1465)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1465)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1465)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1465)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1606)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1606)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1606)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1606)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1606)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1606)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1673)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1673)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1673)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1673)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1673)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			return Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1673)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -289,6 +289,7 @@
             // Save old X1, Y1 
             x0 = x1;
             y0 = y1;
+			setResult(x1, i);
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1675)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -289,6 +289,7 @@
             // Save old X1, Y1 
             x0 = x1;
             y0 = y1;
+			setResult(x1, i);
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1688)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1688)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1688)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1688)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1831)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1831)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1831)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1831)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1831)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1836)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1836)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1836)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1836)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1836)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -289,6 +289,7 @@
             // Save old X1, Y1 
             x0 = x1;
             y0 = y1;
+			setResult(x1, i);
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1861)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1861)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1861)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -170,7 +169,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -191,17 +190,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v1861)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2067)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2067)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2067)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2067)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2285)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2285)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2285)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2285)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -289,6 +289,7 @@
             // Save old X1, Y1 
             x0 = x1;
             y0 = y1;
+			setResult(x1, i);
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2413)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2413)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2413)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2413)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2413)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -289,6 +289,7 @@
             // Save old X1, Y1 
             x0 = x1;
             y0 = y1;
+			setResult(x1, i);
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2416)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2618)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2618)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,14 +170,11 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2618)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2649)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2649)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2649)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2649)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -31,7 +31,6 @@
      * Default constructor.
      */
     public ConvergenceException() {
-        super("Convergence failed");
     }
     
     /**
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2649)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2649)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2649)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -289,6 +289,7 @@
             // Save old X1, Y1 
             x0 = x1;
             y0 = y1;
+			setResult(x1, i);
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2803)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2803)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:34 [main] [INFO]  PatchLogExporter - patch (v2803)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -170,7 +169,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            a = Math.max(a - 1.0, lowerBound);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3018)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3018)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3018)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3018)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3018)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3215)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3215)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3215)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3215)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3215)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3249)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3249)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3249)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3249)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3249)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3249)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,7 +80,8 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
-        double[] bracket = null;
+        double ret;
+		double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
@@ -99,9 +100,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3402)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3402)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3402)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3402)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3402)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3402)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			return Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3458)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3458)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3458)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -191,17 +190,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3458)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3499)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3499)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MIN_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3499)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3499)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3499)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3499)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -289,6 +289,7 @@
             // Save old X1, Y1 
             x0 = x1;
             y0 = y1;
+			setResult(x1, i);
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3636)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3818)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3818)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3818)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -191,17 +188,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3818)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -170,7 +169,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3833)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3833)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3833)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v3833)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,10 +126,10 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4219)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4219)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,14 +170,11 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4219)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4219)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4219)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4254)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4254)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,7 +80,8 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
-        double[] bracket = null;
+        double ret;
+		double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4254)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -74,7 +73,6 @@
             double absoluteAccuracy) throws ConvergenceException, 
             FunctionEvaluationException {    
        
-        setup(f);
         UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();
         solver.setAbsoluteAccuracy(absoluteAccuracy);
         return solver.solve(f, x0, x1);
@@ -191,17 +189,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
+			numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4254)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4408)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4408)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4408)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4408)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4408)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4408)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4454)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -289,6 +289,7 @@
             // Save old X1, Y1 
             x0 = x1;
             y0 = y1;
+			setResult(x1, i);
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4885)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4885)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4885)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4885)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4885)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v4885)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5064)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5064)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5064)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5064)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5064)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5243)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5243)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5243)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5243)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -95,7 +95,8 @@
             
             double sum = 0.0;
             for (int i = lanczos.length - 1; i > 0; --i) {
-                sum = sum + (lanczos[i] / (x + i));
+                ret = Double.NaN;
+				sum = sum + (lanczos[i] / (x + i));
             }
             sum = sum + lanczos[0];
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5243)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5243)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5243)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,14 +170,11 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
@@ -97,11 +98,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +194,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            fb = function.value(b);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5466)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5468)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5468)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5468)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5468)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5468)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5533)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5533)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5533)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5533)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5533)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5619)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5619)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5619)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5619)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5619)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5619)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5619)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5680)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5680)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5680)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5680)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5680)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v5680)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6058)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6058)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -97,11 +98,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6058)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6058)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6058)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6230)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6230)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6230)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6230)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6235)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6235)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,14 +170,12 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -191,17 +189,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6235)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6235)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6235)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6265)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6265)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6265)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -170,7 +169,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -191,17 +190,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6265)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6414)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6414)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6414)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6414)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6414)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6414)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6433)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6433)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6433)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6433)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6433)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6448)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6448)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6448)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6448)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6448)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6631)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6631)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6631)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6631)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6631)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6677)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6677)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6677)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -94,14 +95,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6677)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -191,17 +190,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6677)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6854)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6854)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6854)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -170,14 +169,12 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6854)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6854)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6900)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6900)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6900)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6900)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6900)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v6900)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7440)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7440)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7440)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -191,17 +189,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7440)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7440)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7440)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7481)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7481)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7481)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7481)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7481)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7481)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7639)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7639)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7639)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7639)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double delta;
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7639)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7639)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7639)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7674)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7674)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7674)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7674)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7674)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7674)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7674)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7688)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7688)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7688)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7688)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:35 [main] [INFO]  PatchLogExporter - patch (v7688)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super();
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8002)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8002)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8002)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -97,11 +98,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8002)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -191,17 +190,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8002)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8002)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8060)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8060)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8060)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -191,17 +188,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8060)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8060)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8060)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8080)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super();
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8080)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8080)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -191,17 +188,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8080)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8080)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8080)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8091)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8091)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8091)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8091)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,13 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+        if ((fa * fb > 0.0) && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)) ) {
+            throw MathRuntimeException.createIllegalArgumentException(
+					"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}", lowerBound,
+					initial, upperBound);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8091)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8091)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return 1.0d;
         }
         
         return ret;
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8205)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8205)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8205)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -191,17 +188,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8205)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8205)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8376)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8376)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -191,17 +189,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8376)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8376)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8376)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8404)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8404)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8404)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -99,9 +100,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8404)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8404)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8404)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,15 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            {
+				if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+					return lowerBound;
+				}
+				if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+					return upperBound;
+				}
+				throw new MathException(ex);
+			}
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -74,7 +73,6 @@
             double absoluteAccuracy) throws ConvergenceException, 
             FunctionEvaluationException {    
        
-        setup(f);
         UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();
         solver.setAbsoluteAccuracy(absoluteAccuracy);
         return solver.solve(f, x0, x1);
@@ -191,17 +189,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return -1;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8658)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8658)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8658)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8658)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8658)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8658)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8661)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8661)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8661)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +192,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8661)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8661)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8661)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8672)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8672)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8672)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8672)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8672)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v8672)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9015)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9015)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9015)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9015)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9015)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9015)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9238)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super();
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9238)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9238)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9238)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9238)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9238)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9241)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9241)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9241)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9241)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +194,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9241)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9241)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9454)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9454)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9454)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9454)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -74,7 +73,6 @@
             double absoluteAccuracy) throws ConvergenceException, 
             FunctionEvaluationException {    
        
-        setup(f);
         UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();
         solver.setAbsoluteAccuracy(absoluteAccuracy);
         return solver.solve(f, x0, x1);
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9454)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9489)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super();
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9489)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9489)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -74,7 +73,6 @@
             double absoluteAccuracy) throws ConvergenceException, 
             FunctionEvaluationException {    
        
-        setup(f);
         UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();
         solver.setAbsoluteAccuracy(absoluteAccuracy);
         return solver.solve(f, x0, x1);
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9489)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9489)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9489)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super();
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -74,7 +73,6 @@
             double absoluteAccuracy) throws ConvergenceException, 
             FunctionEvaluationException {    
        
-        setup(f);
         UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();
         solver.setAbsoluteAccuracy(absoluteAccuracy);
         return solver.solve(f, x0, x1);
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9690)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9690)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9690)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9690)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -191,17 +187,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9690)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9690)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return 1.0;
             } else {
                 throw ex;
             }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -74,7 +73,6 @@
             double absoluteAccuracy) throws ConvergenceException, 
             FunctionEvaluationException {    
        
-        setup(f);
         UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();
         solver.setAbsoluteAccuracy(absoluteAccuracy);
         return solver.solve(f, x0, x1);
@@ -175,9 +173,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +192,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < .5) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9834)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9834)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9834)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9834)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9834)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9834)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9843)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -103,7 +102,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9843)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9843)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("the Poisson mean must be positive ({0})", p);
         }
 
         // find root
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9843)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9843)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v9843)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10051)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10051)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10051)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10051)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10051)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10051)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10212)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10212)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10212)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10212)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -74,7 +73,6 @@
             double absoluteAccuracy) throws ConvergenceException, 
             FunctionEvaluationException {    
        
-        setup(f);
         UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();
         solver.setAbsoluteAccuracy(absoluteAccuracy);
         return solver.solve(f, x0, x1);
@@ -175,9 +173,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -191,17 +187,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10212)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10212)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			double value = 0;
         }
         
         return ret;
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10693)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10693)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10693)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10693)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10693)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10693)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10765)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10765)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10765)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,7 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+            int i = 1;
         }
         double a = initial;
         double b = initial;
@@ -196,12 +194,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10765)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-07 20:21:36 [main] [INFO]  PatchLogExporter - patch (v10765)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 20:21:38 [main] [INFO]  KGenProgMain - Summary
Reached generation = 55
Generated variants = 10765
Syntax valid variants = 8966
Build succeeded variants = 3757
Time elapsed = 8 hours 55 minutes 41 seconds
Exit status = SUCCESS
