2023-08-06 01:59:19 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-06 01:59:19 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-06 01:59:19 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-06 01:59:19 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 2 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-06 01:59:26 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-06 01:59:26 [main] [INFO]  KGenProgMain - GA started
2023-08-06 01:59:26 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-06 02:02:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 3 seconds
Variants: generated 100, build-succeeded 10, build-failed 57, syntax-invalid 14, redundant 19
Fitness: max 0.923(8), min 0.846(2), ave 0.908
Test execution time: sum 181233 ms, max 180087 ms, min 106 ms
----------------------------------------------------------------

2023-08-06 02:02:30 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-06 02:02:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 5 seconds
Variants: generated 100, build-succeeded 8, build-failed 70, syntax-invalid 8, redundant 14
Fitness: max 0.923(5), min 0.846(3), ave 0.894
Test execution time: sum 749 ms, max 123 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 02:02:32 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-06 02:11:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 11 seconds
Variants: generated 200, build-succeeded 39, build-failed 62, syntax-invalid 15, redundant 84
Fitness: max 1(1), min 0.846(20), ave 0.886
Test execution time: sum 543471 ms, max 360090 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 02:11:38 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-06 02:20:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 16 seconds
Variants: generated 200, build-succeeded 31, build-failed 69, syntax-invalid 13, redundant 87
Fitness: max 0.923(18), min 0.846(13), ave 0.891
Test execution time: sum 542759 ms, max 360088 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 02:20:43 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-06 02:20:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 22 seconds
Variants: generated 200, build-succeeded 32, build-failed 76, syntax-invalid 20, redundant 72
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2786 ms, max 96 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 02:20:48 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-06 02:23:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 28 seconds
Variants: generated 200, build-succeeded 47, build-failed 61, syntax-invalid 29, redundant 63
Fitness: max 1(1), min 0.846(8), ave 0.912
Test execution time: sum 184146 ms, max 180085 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 02:23:55 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-06 02:24:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 35 seconds
Variants: generated 200, build-succeeded 52, build-failed 72, syntax-invalid 25, redundant 51
Fitness: max 1(1), min 0.462(1), ave 0.91
Test execution time: sum 4599 ms, max 114 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 02:24:02 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-06 02:30:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 44 seconds
Variants: generated 200, build-succeeded 71, build-failed 70, syntax-invalid 22, redundant 37
Fitness: max 1(2), min 0.769(1), ave 0.914
Test execution time: sum 366208 ms, max 180092 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 02:30:11 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-06 02:30:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 52 seconds
Variants: generated 200, build-succeeded 61, build-failed 71, syntax-invalid 28, redundant 40
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 5442 ms, max 143 ms, min 84 ms
----------------------------------------------------------------

2023-08-06 02:30:19 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-06 02:36:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 0 seconds
Variants: generated 200, build-succeeded 61, build-failed 64, syntax-invalid 26, redundant 49
Fitness: max 1(2), min 0.846(4), ave 0.921
Test execution time: sum 365374 ms, max 360084 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 02:36:27 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-06 02:48:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 8 seconds
Variants: generated 200, build-succeeded 65, build-failed 72, syntax-invalid 25, redundant 38
Fitness: max 1(1), min 0.846(9), ave 0.914
Test execution time: sum 725803 ms, max 360085 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 02:48:35 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-06 02:51:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 19 seconds
Variants: generated 200, build-succeeded 84, build-failed 74, syntax-invalid 10, redundant 32
Fitness: max 1(2), min 0.846(4), ave 0.921
Test execution time: sum 187553 ms, max 180084 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 02:51:46 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-06 02:54:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 27 seconds
Variants: generated 200, build-succeeded 60, build-failed 74, syntax-invalid 28, redundant 38
Fitness: max 1(2), min 0.846(3), ave 0.922
Test execution time: sum 185302 ms, max 180082 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 02:54:54 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-06 02:55:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 36 seconds
Variants: generated 200, build-succeeded 73, build-failed 64, syntax-invalid 32, redundant 31
Fitness: max 0.923(68), min 0.846(5), ave 0.918
Test execution time: sum 6453 ms, max 113 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 02:55:03 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-06 03:07:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 45 seconds
Variants: generated 200, build-succeeded 71, build-failed 58, syntax-invalid 30, redundant 41
Fitness: max 1(2), min 0.846(5), ave 0.92
Test execution time: sum 726270 ms, max 360117 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 03:07:12 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-06 03:16:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 54 seconds
Variants: generated 200, build-succeeded 74, build-failed 58, syntax-invalid 39, redundant 29
Fitness: max 1(1), min 0.846(4), ave 0.92
Test execution time: sum 546598 ms, max 360124 ms, min 84 ms
----------------------------------------------------------------

2023-08-06 03:16:21 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-06 03:16:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 3 seconds
Variants: generated 200, build-succeeded 72, build-failed 71, syntax-invalid 24, redundant 33
Fitness: max 1(2), min 0.846(4), ave 0.921
Test execution time: sum 6453 ms, max 140 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 03:16:30 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-06 03:55:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 11 seconds
Variants: generated 200, build-succeeded 69, build-failed 57, syntax-invalid 46, redundant 28
Fitness: max 1(1), min 0.385(1), ave 0.905
Test execution time: sum 2346084 ms, max 1440067 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 03:55:38 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-06 04:01:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 20 seconds
Variants: generated 200, build-succeeded 70, build-failed 71, syntax-invalid 26, redundant 33
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 366121 ms, max 360085 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 04:01:47 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-06 04:07:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 28 seconds
Variants: generated 200, build-succeeded 59, build-failed 72, syntax-invalid 30, redundant 39
Fitness: max 0.923(56), min 0.385(1), ave 0.911
Test execution time: sum 365196 ms, max 360082 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 04:07:55 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-06 04:17:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 35 seconds
Variants: generated 200, build-succeeded 60, build-failed 62, syntax-invalid 44, redundant 34
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 545352 ms, max 360082 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 04:17:02 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-06 04:17:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 44 seconds
Variants: generated 200, build-succeeded 61, build-failed 75, syntax-invalid 36, redundant 28
Fitness: max 1(2), min 0.385(1), ave 0.916
Test execution time: sum 5622 ms, max 128 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 04:17:11 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-06 04:20:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 52 seconds
Variants: generated 200, build-succeeded 63, build-failed 63, syntax-invalid 34, redundant 40
Fitness: max 0.923(60), min 0.846(3), ave 0.919
Test execution time: sum 185598 ms, max 180085 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 04:20:19 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-06 04:20:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 1 seconds
Variants: generated 200, build-succeeded 75, build-failed 65, syntax-invalid 36, redundant 24
Fitness: max 1(1), min 0.769(1), ave 0.921
Test execution time: sum 6713 ms, max 120 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 04:20:28 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-06 04:23:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 9 seconds
Variants: generated 200, build-succeeded 63, build-failed 69, syntax-invalid 35, redundant 33
Fitness: max 1(2), min 0.462(2), ave 0.91
Test execution time: sum 185672 ms, max 180118 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 04:23:36 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-06 04:23:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 18 seconds
Variants: generated 200, build-succeeded 65, build-failed 65, syntax-invalid 41, redundant 29
Fitness: max 1(3), min 0.923(62), ave 0.927
Test execution time: sum 5920 ms, max 123 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 04:23:45 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-06 04:23:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 28 seconds
Variants: generated 200, build-succeeded 79, build-failed 60, syntax-invalid 32, redundant 29
Fitness: max 1(1), min 0.846(4), ave 0.92
Test execution time: sum 7639 ms, max 377 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 04:23:55 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-06 04:27:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 38 seconds
Variants: generated 200, build-succeeded 81, build-failed 71, syntax-invalid 26, redundant 22
Fitness: max 1(5), min 0.846(1), ave 0.927
Test execution time: sum 187446 ms, max 180086 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 04:27:05 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-06 04:30:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 47 seconds
Variants: generated 200, build-succeeded 67, build-failed 58, syntax-invalid 42, redundant 33
Fitness: max 1(1), min 0.846(3), ave 0.921
Test execution time: sum 186186 ms, max 180088 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 04:30:14 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-06 04:30:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 56 seconds
Variants: generated 200, build-succeeded 66, build-failed 62, syntax-invalid 40, redundant 32
Fitness: max 1(1), min 0.538(1), ave 0.916
Test execution time: sum 6256 ms, max 117 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 04:30:23 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-06 04:30:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 4 seconds
Variants: generated 200, build-succeeded 67, build-failed 63, syntax-invalid 41, redundant 29
Fitness: max 1(1), min 0.615(1), ave 0.915
Test execution time: sum 5995 ms, max 150 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 04:30:31 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-06 04:30:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 14 seconds
Variants: generated 200, build-succeeded 73, build-failed 70, syntax-invalid 39, redundant 18
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 6506 ms, max 171 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 04:30:41 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-06 04:36:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 23 seconds
Variants: generated 200, build-succeeded 73, build-failed 85, syntax-invalid 25, redundant 17
Fitness: max 0.923(69), min 0.462(1), ave 0.913
Test execution time: sum 366411 ms, max 180087 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 04:36:50 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-06 04:42:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 32 seconds
Variants: generated 200, build-succeeded 67, build-failed 70, syntax-invalid 42, redundant 21
Fitness: max 0.923(65), min 0.846(2), ave 0.921
Test execution time: sum 366033 ms, max 360086 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 04:42:59 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-06 05:07:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 41 seconds
Variants: generated 200, build-succeeded 78, build-failed 70, syntax-invalid 30, redundant 22
Fitness: max 0.923(75), min 0.385(1), ave 0.912
Test execution time: sum 1446945 ms, max 1440064 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 05:07:08 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-06 05:09:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 43 seconds
Variants: generated 200, build-succeeded 84, build-failed 64, syntax-invalid 33, redundant 19
Fitness: max 0.923(80), min 0.385(1), ave 0.914
Test execution time: sum 118706 ms, max 111185 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 05:09:10 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-06 05:12:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 51 seconds
Variants: generated 200, build-succeeded 60, build-failed 74, syntax-invalid 45, redundant 21
Fitness: max 1(2), min 0.385(1), ave 0.909
Test execution time: sum 185334 ms, max 180066 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 05:12:18 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-06 05:15:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 0 seconds
Variants: generated 200, build-succeeded 70, build-failed 71, syntax-invalid 36, redundant 23
Fitness: max 0.923(69), min 0.846(1), ave 0.922
Test execution time: sum 186245 ms, max 180088 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 05:15:27 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-06 05:30:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 11 seconds
Variants: generated 200, build-succeeded 82, build-failed 60, syntax-invalid 39, redundant 19
Fitness: max 1(2), min 0.846(6), ave 0.919
Test execution time: sum 907308 ms, max 360081 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 05:30:38 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-06 05:36:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 20 seconds
Variants: generated 200, build-succeeded 76, build-failed 69, syntax-invalid 33, redundant 22
Fitness: max 1(1), min 0.538(1), ave 0.917
Test execution time: sum 366768 ms, max 360087 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 05:36:47 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-06 05:48:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 49 minutes 32 seconds
Variants: generated 200, build-succeeded 95, build-failed 69, syntax-invalid 23, redundant 13
Fitness: max 1(4), min 0.846(4), ave 0.923
Test execution time: sum 728480 ms, max 360086 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 05:48:59 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-06 05:52:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 42 seconds
Variants: generated 200, build-succeeded 76, build-failed 69, syntax-invalid 32, redundant 23
Fitness: max 1(1), min 0.923(75), ave 0.924
Test execution time: sum 186769 ms, max 180088 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 05:52:09 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-06 05:55:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 52 seconds
Variants: generated 200, build-succeeded 81, build-failed 63, syntax-invalid 41, redundant 15
Fitness: max 1(1), min 0.769(1), ave 0.915
Test execution time: sum 187228 ms, max 180085 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 05:55:19 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-06 05:58:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 2 seconds
Variants: generated 200, build-succeeded 76, build-failed 69, syntax-invalid 34, redundant 21
Fitness: max 1(1), min 0.846(3), ave 0.921
Test execution time: sum 186736 ms, max 180087 ms, min 84 ms
----------------------------------------------------------------

2023-08-06 05:58:29 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-06 06:01:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 12 seconds
Variants: generated 200, build-succeeded 80, build-failed 71, syntax-invalid 30, redundant 19
Fitness: max 0.923(77), min 0.615(1), ave 0.917
Test execution time: sum 187208 ms, max 180086 ms, min 84 ms
----------------------------------------------------------------

2023-08-06 06:01:39 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-06 06:01:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 23 seconds
Variants: generated 200, build-succeeded 85, build-failed 66, syntax-invalid 35, redundant 14
Fitness: max 1(1), min 0.923(84), ave 0.924
Test execution time: sum 7635 ms, max 139 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 06:01:50 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-06 06:05:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 33 seconds
Variants: generated 200, build-succeeded 81, build-failed 65, syntax-invalid 38, redundant 16
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 187239 ms, max 180088 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 06:05:00 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-06 06:08:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 44 seconds
Variants: generated 200, build-succeeded 84, build-failed 67, syntax-invalid 30, redundant 19
Fitness: max 0.923(77), min 0.462(1), ave 0.912
Test execution time: sum 187520 ms, max 180088 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 06:08:11 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-06 06:17:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 55 seconds
Variants: generated 200, build-succeeded 82, build-failed 59, syntax-invalid 43, redundant 16
Fitness: max 0.923(76), min 0.692(1), ave 0.916
Test execution time: sum 547381 ms, max 360096 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 06:17:22 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-06 06:20:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 5 seconds
Variants: generated 200, build-succeeded 80, build-failed 66, syntax-invalid 39, redundant 15
Fitness: max 1(1), min 0.462(1), ave 0.918
Test execution time: sum 187183 ms, max 180088 ms, min 84 ms
----------------------------------------------------------------

2023-08-06 06:20:32 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-06 06:20:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 16 seconds
Variants: generated 200, build-succeeded 84, build-failed 68, syntax-invalid 30, redundant 18
Fitness: max 1(3), min 0.538(1), ave 0.921
Test execution time: sum 7694 ms, max 135 ms, min 84 ms
----------------------------------------------------------------

2023-08-06 06:20:43 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-06 06:26:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 27 seconds
Variants: generated 200, build-succeeded 85, build-failed 64, syntax-invalid 37, redundant 14
Fitness: max 0.923(80), min 0.462(1), ave 0.911
Test execution time: sum 367754 ms, max 360086 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 06:26:54 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-06 06:27:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 38 seconds
Variants: generated 200, build-succeeded 84, build-failed 68, syntax-invalid 29, redundant 19
Fitness: max 1(2), min 0.385(1), ave 0.917
Test execution time: sum 7622 ms, max 112 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 06:27:05 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-06 06:30:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 49 seconds
Variants: generated 200, build-succeeded 83, build-failed 66, syntax-invalid 33, redundant 18
Fitness: max 0.923(78), min 0.846(5), ave 0.918
Test execution time: sum 187445 ms, max 180087 ms, min 84 ms
----------------------------------------------------------------

2023-08-06 06:30:16 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-06 06:33:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 0 seconds
Variants: generated 200, build-succeeded 86, build-failed 70, syntax-invalid 29, redundant 15
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 187737 ms, max 180085 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 06:33:27 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-06 06:33:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 10 seconds
Variants: generated 200, build-succeeded 72, build-failed 69, syntax-invalid 40, redundant 19
Fitness: max 0.923(71), min 0.846(1), ave 0.922
Test execution time: sum 6524 ms, max 137 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 06:33:37 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-06 06:33:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 21 seconds
Variants: generated 200, build-succeeded 86, build-failed 62, syntax-invalid 37, redundant 15
Fitness: max 0.923(82), min 0.385(1), ave 0.914
Test execution time: sum 7753 ms, max 132 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 06:33:48 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-06 06:41:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 42 minutes 22 seconds
Variants: generated 200, build-succeeded 81, build-failed 74, syntax-invalid 27, redundant 18
Fitness: max 0.923(77), min 0.846(4), ave 0.919
Test execution time: sum 477597 ms, max 180089 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 06:41:49 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-06 06:48:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 33 seconds
Variants: generated 200, build-succeeded 81, build-failed 70, syntax-invalid 28, redundant 21
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 367382 ms, max 360090 ms, min 88 ms
----------------------------------------------------------------

2023-08-06 06:48:00 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-06 06:51:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 45 seconds
Variants: generated 200, build-succeeded 90, build-failed 65, syntax-invalid 19, redundant 26
Fitness: max 1(4), min 0.846(2), ave 0.925
Test execution time: sum 188153 ms, max 180087 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 06:51:11 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-06 06:54:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 54 minutes 54 seconds
Variants: generated 200, build-succeeded 67, build-failed 64, syntax-invalid 36, redundant 33
Fitness: max 1(4), min 0.615(1), ave 0.921
Test execution time: sum 186055 ms, max 180088 ms, min 87 ms
----------------------------------------------------------------

2023-08-06 06:54:21 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-06 06:57:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 4 seconds
Variants: generated 200, build-succeeded 82, build-failed 67, syntax-invalid 25, redundant 26
Fitness: max 1(3), min 0.846(5), ave 0.921
Test execution time: sum 187418 ms, max 180086 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 06:57:31 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-06 07:03:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 15 seconds
Variants: generated 200, build-succeeded 81, build-failed 68, syntax-invalid 30, redundant 21
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 367240 ms, max 180085 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 07:03:42 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-06 07:06:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 26 seconds
Variants: generated 200, build-succeeded 81, build-failed 69, syntax-invalid 23, redundant 27
Fitness: max 1(4), min 0.385(1), ave 0.919
Test execution time: sum 187296 ms, max 180092 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 07:06:53 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-06 07:13:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 13 minutes 37 seconds
Variants: generated 200, build-succeeded 83, build-failed 66, syntax-invalid 29, redundant 22
Fitness: max 1(4), min 0.846(4), ave 0.923
Test execution time: sum 367445 ms, max 360086 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 07:13:04 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-06 07:22:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 47 seconds
Variants: generated 200, build-succeeded 78, build-failed 71, syntax-invalid 30, redundant 21
Fitness: max 1(1), min 0.846(3), ave 0.921
Test execution time: sum 547130 ms, max 360089 ms, min 87 ms
----------------------------------------------------------------

2023-08-06 07:22:14 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-06 07:28:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 58 seconds
Variants: generated 200, build-succeeded 82, build-failed 59, syntax-invalid 34, redundant 25
Fitness: max 1(1), min 0.462(1), ave 0.917
Test execution time: sum 367454 ms, max 180149 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 07:28:25 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-06 07:28:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 10 seconds
Variants: generated 200, build-succeeded 85, build-failed 67, syntax-invalid 33, redundant 15
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 7781 ms, max 125 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 07:28:37 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-06 07:34:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 21 seconds
Variants: generated 200, build-succeeded 90, build-failed 58, syntax-invalid 31, redundant 21
Fitness: max 0.923(87), min 0.462(1), ave 0.916
Test execution time: sum 368269 ms, max 180087 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 07:34:48 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-06 07:38:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 33 seconds
Variants: generated 200, build-succeeded 87, build-failed 63, syntax-invalid 35, redundant 15
Fitness: max 0.923(81), min 0.846(6), ave 0.918
Test execution time: sum 188085 ms, max 180087 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 07:38:00 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-06 07:46:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 6 seconds
Variants: generated 200, build-succeeded 85, build-failed 64, syntax-invalid 29, redundant 22
Fitness: max 1(3), min 0.462(1), ave 0.918
Test execution time: sum 509072 ms, max 321447 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 07:46:32 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-06 07:52:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 17 seconds
Variants: generated 200, build-succeeded 88, build-failed 64, syntax-invalid 32, redundant 16
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 368023 ms, max 180088 ms, min 87 ms
----------------------------------------------------------------

2023-08-06 07:52:44 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-06 08:04:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 5 minutes 28 seconds
Variants: generated 200, build-succeeded 83, build-failed 66, syntax-invalid 33, redundant 18
Fitness: max 1(2), min 0.385(1), ave 0.916
Test execution time: sum 727595 ms, max 360087 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 08:04:55 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-06 08:06:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 7 minutes 11 seconds
Variants: generated 200, build-succeeded 87, build-failed 68, syntax-invalid 34, redundant 11
Fitness: max 1(2), min 0.846(4), ave 0.921
Test execution time: sum 99275 ms, max 91450 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 08:06:38 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-06 08:06:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 7 minutes 16 seconds
Variants: generated 115, build-succeeded 23, build-failed 65, syntax-invalid 15, redundant 12
Fitness: max 1(1), min 0.462(1), ave 0.903
Test execution time: sum 2101 ms, max 129 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 08:06:43 [main] [INFO]  KGenProgMain - GA stopped
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v220)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v220)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v220)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v220)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v650)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v650)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v650)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v842)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v842)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v842)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v842)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v842)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1067)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1067)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -77,7 +77,8 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        double ret;
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
@@ -99,9 +100,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1067)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1067)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1067)
--- org.apache.commons.math.MathRuntimeException
+++ org.apache.commons.math.MathRuntimeException
@@ -69,7 +69,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1210)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1210)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1210)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -77,7 +77,8 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        double ret;
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1210)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int i = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1210)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1295)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1295)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1295)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1295)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1441)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1441)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1441)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1441)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1441)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1441)
--- org.apache.commons.math.MathRuntimeException
+++ org.apache.commons.math.MathRuntimeException
@@ -69,7 +69,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1618)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1618)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1618)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1618)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1618)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double fm;
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1691)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1871)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1871)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1871)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1871)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v1871)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = Double.MAX_VALUE;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2031)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2031)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2031)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2031)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2031)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			return ret;
         }
         
         return ret;
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2235)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2235)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2235)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2235)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2235)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2235)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2253)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2253)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2253)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2253)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2253)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2253)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2657)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2657)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2657)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,20 +188,15 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
+			int i = 1;
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2657)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2657)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2821)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2821)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2821)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2821)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2821)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2821)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v2821)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v3053)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v3053)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v3053)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int i = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v3053)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v3053)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v3057)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v3057)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double m;
         }
         
         return new double[]{a, b};
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v3057)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v3057)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:43 [main] [INFO]  PatchLogExporter - patch (v3057)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3248)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3248)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3248)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3248)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3248)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3801)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3801)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3801)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3801)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3801)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3801)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3898)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3898)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3898)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3898)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3898)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v3898)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4006)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4006)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4006)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4006)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4006)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4006)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,21 +187,15 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4481)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4481)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4481)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4481)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4481)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4633)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -117,6 +116,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4633)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4633)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4633)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4644)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4644)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4644)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4644)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4644)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +164,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,6 +188,7 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
+			int i = 1;
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4802)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,21 +187,15 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4832)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4847)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,7 +188,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4847)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4847)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4847)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4847)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4847)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v4847)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5094)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5094)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5094)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5094)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5094)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5255)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -189,7 +188,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5255)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5255)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5255)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5255)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5271)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5279)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5279)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5279)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,6 +188,7 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
+			int i = 1;
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            fb = function.value(b);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5279)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5279)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -221,7 +221,7 @@
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
-            ret = getMean() + getStandardDeviation();
+            ret = -getMean() * Math.log(1.0 - p);
         } else {
             ret = getMean();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5281)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5281)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5281)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5281)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5281)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5281)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5281)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5295)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5295)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5295)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5295)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double q, A, B, C, delta, denominator, tolerance;
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5295)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5295)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5295)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5421)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5421)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5421)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5421)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5421)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5421)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5421)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -221,7 +221,7 @@
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
-            ret = getMean() + getStandardDeviation();
+            ret = -getMean() * Math.log(1.0 - p);
         } else {
             ret = getMean();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5806)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +164,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
@@ -189,7 +190,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5806)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5806)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5806)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5806)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v5806)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v6075)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -189,7 +188,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v6075)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v6075)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v6075)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v6075)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7018)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7018)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7018)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7018)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -187,7 +184,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7018)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7018)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7097)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7097)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7097)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7097)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7097)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7454)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7454)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7454)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,21 +187,15 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7454)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7454)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7454)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7454)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7478)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -117,6 +116,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7478)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7478)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7478)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7478)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7478)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -221,7 +221,7 @@
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
-            ret = getMean() + getStandardDeviation();
+            ret = -getMean() * Math.log(1.0 - p);
         } else {
             ret = getMean();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7817)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7817)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7817)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7817)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7817)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7817)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7824)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,7 @@
      * detail message.
      */
     public MathException() {
-        super();
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7824)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7824)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7824)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -187,7 +184,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7824)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7824)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7864)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
+		this.arguments = new Object[0];
     }
     
     /**
@@ -117,6 +118,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,7 +191,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7864)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7864)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,6 +188,7 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
+			int i = 1;
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7864)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7864)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7874)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,7 +190,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7874)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7874)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7874)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7874)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7874)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v7874)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8075)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8075)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8075)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8075)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8075)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8075)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8246)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -177,7 +178,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8246)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8246)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8246)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8246)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8246)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8454)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8454)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8454)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8454)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8454)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,9 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
-        return ret;
+        return Double.NEGATIVE_INFINITY;
     }
 
     /**
@@ -221,7 +222,7 @@
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
-            ret = getMean() + getStandardDeviation();
+            ret = -getMean() * Math.log(1.0 - p);
         } else {
             ret = getMean();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8801)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,7 @@
      * detail message.
      */
     public MathException() {
-        super();
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8801)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8801)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8801)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -174,7 +174,7 @@
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
-        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
+        if (maximumIterations <= 0) {
             throw MathRuntimeException.createIllegalArgumentException(
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8801)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v8801)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9100)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -177,7 +178,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9100)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9100)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9100)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9100)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9100)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9100)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9640)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
@@ -224,6 +226,7 @@
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9839)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,8 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,7 +190,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9839)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9839)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9839)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9839)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9887)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9887)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9887)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -187,7 +184,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9887)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9887)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9892)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +164,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9892)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9892)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9892)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9892)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v9892)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10217)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,9 +190,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10217)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10217)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10217)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,6 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
+		printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +164,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
@@ -189,6 +190,7 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
+			printStackTrace(System.err);
             printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10648)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,9 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10648)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10648)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10648)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10648)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10648)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
@@ -220,7 +222,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10668)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10668)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10668)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10668)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10668)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v10668)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
@@ -224,6 +226,7 @@
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11467)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11467)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11467)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11467)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -187,7 +184,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11467)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11467)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11666)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11666)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11666)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11666)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11666)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11666)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11694)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -177,7 +177,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11694)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11694)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11694)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11694)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:44 [main] [INFO]  PatchLogExporter - patch (v11694)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11756)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -177,7 +177,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
@@ -189,7 +188,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11756)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11756)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11756)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11756)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11756)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11756)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11761)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11761)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11761)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -191,17 +188,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11761)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11761)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
@@ -224,6 +226,7 @@
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11808)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11808)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11808)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11808)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11808)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11808)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11820)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -177,7 +177,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
@@ -189,7 +188,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11820)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11820)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11820)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11820)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11820)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11836)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -177,7 +177,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
@@ -189,7 +188,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11836)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11836)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11836)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11836)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11836)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11914)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11914)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11914)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11914)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -174,7 +174,7 @@
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
-        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
+        if (maximumIterations <= 0) {
             throw MathRuntimeException.createIllegalArgumentException(
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11914)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v11914)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
@@ -189,7 +188,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12106)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12106)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12106)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12106)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12106)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12106)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12106)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12106)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12126)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,7 @@
      * detail message.
      */
     public MathException() {
-        super();
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12126)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12126)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12126)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12126)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
@@ -224,6 +227,7 @@
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12207)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,7 @@
      * detail message.
      */
     public MathException() {
-        super();
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12207)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12207)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12207)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12207)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12310)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -177,7 +177,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12310)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12310)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12310)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12310)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12310)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12361)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12361)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12361)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12361)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12361)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12469)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12469)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12469)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12469)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12469)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12469)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12489)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12489)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12489)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12489)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -174,7 +174,7 @@
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
-        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
+        if (maximumIterations <= 0) {
             throw MathRuntimeException.createIllegalArgumentException(
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12489)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12489)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12497)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
@@ -90,7 +97,7 @@
      * detail message.
      */
     public MathException() {
-        super();
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -163,7 +170,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12497)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12497)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12497)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12497)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12497)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12585)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12585)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12585)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12585)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -174,7 +174,7 @@
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
-        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
+        if (maximumIterations <= 0) {
             throw MathRuntimeException.createIllegalArgumentException(
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12585)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12585)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12585)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12614)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -177,7 +177,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12614)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12614)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12614)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12614)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12614)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12614)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12649)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
@@ -177,7 +184,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12649)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12649)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12649)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12649)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12649)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12659)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12659)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12659)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12659)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12659)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12659)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12659)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12751)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
@@ -177,7 +177,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12751)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12751)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -187,7 +184,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12751)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12751)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12890)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,7 @@
      * detail message.
      */
     public MathException() {
-        super();
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12890)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12890)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12890)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v12890)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13126)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13126)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13126)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13126)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13126)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13282)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,7 @@
      * detail message.
      */
     public MathException() {
-        super();
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13282)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13282)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13282)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -187,21 +184,15 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13282)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13282)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13809)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13809)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13809)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13809)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13809)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13809)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			double value = 0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13851)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13851)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13851)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13851)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13851)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13886)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
@@ -177,7 +184,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13886)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13886)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13886)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -174,7 +174,7 @@
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
-        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
+        if (maximumIterations <= 0) {
             throw MathRuntimeException.createIllegalArgumentException(
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13886)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13886)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v13886)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14016)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
@@ -177,7 +184,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14016)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14016)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14016)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14016)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14016)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14016)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,10 +220,11 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14040)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14040)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -167,7 +167,7 @@
             int maximumIterations) throws ConvergenceException, 
             FunctionEvaluationException {
         
-        if (function == null) {
+        if (maximumIterations <= 0) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
         if (maximumIterations <= 0)  {
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14040)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14040)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14040)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
         }
         
         return ret;
@@ -224,6 +225,7 @@
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14198)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,9 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14198)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14198)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14198)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14198)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14198)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14206)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
@@ -116,7 +123,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14206)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14206)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14206)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -167,7 +167,7 @@
             int maximumIterations) throws ConvergenceException, 
             FunctionEvaluationException {
         
-        if (function == null) {
+        if (maximumIterations <= 0) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
         if (maximumIterations <= 0)  {
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14206)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14206)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,8 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                double ret;
+				return 1.0d;
             } else {
                 throw ex;
             }
@@ -179,6 +180,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14312)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14312)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14312)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -174,10 +174,7 @@
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
-        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
+        if (maximumIterations <= 0) {
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14312)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14312)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
@@ -220,7 +222,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14514)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14514)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14514)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14514)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14514)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14514)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
@@ -224,6 +226,7 @@
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14566)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14566)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14566)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -174,7 +174,7 @@
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
-        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
+        if (maximumIterations <= 0) {
             throw MathRuntimeException.createIllegalArgumentException(
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14566)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14566)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14715)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,14 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        try {
+			ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+			if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+				return bundle.getString(s);
+			}
+		} catch (MissingResourceException mre) {
+		}
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
@@ -116,7 +123,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +170,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
@@ -189,7 +196,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14715)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14715)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,7 +187,8 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            int i = 1;
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14715)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 08:06:45 [main] [INFO]  PatchLogExporter - patch (v14715)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 1.0;
+			ret = 1.0;
         }
         
         return ret;
2023-08-06 08:06:47 [main] [INFO]  KGenProgMain - Summary
Reached generation = 75
Generated variants = 14715
Syntax valid variants = 12393
Build succeeded variants = 5353
Time elapsed = 6 hours 7 minutes 20 seconds
Exit status = SUCCESS
