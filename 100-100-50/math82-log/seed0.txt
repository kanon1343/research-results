2023-08-09 14:42:30 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-09 14:42:30 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-09 14:42:30 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-09 14:42:31 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82/kgenprog-82.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/src/main] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.optimization.linear.SimplexSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 0 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-09 14:42:38 [main] [INFO]  KGenProgMain - initial failed tests (1/14)
org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288: expected:<10.0> but was:<11.5>

2023-08-09 14:42:39 [main] [INFO]  KGenProgMain - GA started
2023-08-09 14:42:39 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-09 14:42:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, build-succeeded 14, build-failed 64, syntax-invalid 14, redundant 8
Fitness: max 0.929(3), min 0(3), ave 0.48
Test execution time: sum 2994 ms, max 399 ms, min 124 ms
----------------------------------------------------------------

2023-08-09 14:42:44 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-09 14:42:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, build-succeeded 13, build-failed 66, syntax-invalid 7, redundant 14
Fitness: max 0.929(3), min 0(2), ave 0.484
Test execution time: sum 2355 ms, max 205 ms, min 116 ms
----------------------------------------------------------------

2023-08-09 14:42:50 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-09 14:43:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 200, build-succeeded 49, build-failed 66, syntax-invalid 15, redundant 70
Fitness: max 1(2), min 0(10), ave 0.413
Test execution time: sum 8414 ms, max 229 ms, min 94 ms
----------------------------------------------------------------

2023-08-09 14:43:02 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-09 14:43:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 200, build-succeeded 44, build-failed 74, syntax-invalid 11, redundant 71
Fitness: max 1(1), min 0(6), ave 0.448
Test execution time: sum 7669 ms, max 226 ms, min 94 ms
----------------------------------------------------------------

2023-08-09 14:43:14 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-09 15:16:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 48 seconds
Variants: generated 200, build-succeeded 42, build-failed 79, syntax-invalid 17, redundant 62
Fitness: max 1(3), min 0(2), ave 0.668
Test execution time: sum 1987962 ms, max 1980132 ms, min 117 ms
----------------------------------------------------------------

2023-08-09 15:16:27 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-09 15:16:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 1 seconds
Variants: generated 200, build-succeeded 50, build-failed 68, syntax-invalid 18, redundant 64
Fitness: max 1(3), min 0(4), ave 0.766
Test execution time: sum 9339 ms, max 226 ms, min 117 ms
----------------------------------------------------------------

2023-08-09 15:16:40 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-09 15:16:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 15 seconds
Variants: generated 200, build-succeeded 51, build-failed 72, syntax-invalid 19, redundant 58
Fitness: max 1(4), min 0(4), ave 0.763
Test execution time: sum 9563 ms, max 229 ms, min 104 ms
----------------------------------------------------------------

2023-08-09 15:16:54 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-09 15:17:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 29 seconds
Variants: generated 200, build-succeeded 50, build-failed 72, syntax-invalid 13, redundant 65
Fitness: max 1(2), min 0(2), ave 0.85
Test execution time: sum 9536 ms, max 272 ms, min 130 ms
----------------------------------------------------------------

2023-08-09 15:17:08 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-09 15:50:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 44 seconds
Variants: generated 200, build-succeeded 60, build-failed 72, syntax-invalid 14, redundant 54
Fitness: max 1(2), min 0(10), ave 0.725
Test execution time: sum 1990814 ms, max 1980131 ms, min 94 ms
----------------------------------------------------------------

2023-08-09 15:50:23 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-09 16:23:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 58 seconds
Variants: generated 200, build-succeeded 51, build-failed 72, syntax-invalid 13, redundant 64
Fitness: max 1(1), min 0(5), ave 0.723
Test execution time: sum 1989289 ms, max 1980138 ms, min 107 ms
----------------------------------------------------------------

2023-08-09 16:23:37 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-09 17:29:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 14 seconds
Variants: generated 200, build-succeeded 57, build-failed 73, syntax-invalid 11, redundant 59
Fitness: max 1(1), min 0(2), ave 0.803
Test execution time: sum 3970509 ms, max 1980139 ms, min 116 ms
----------------------------------------------------------------

2023-08-09 17:29:53 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-09 17:30:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 29 seconds
Variants: generated 200, build-succeeded 57, build-failed 75, syntax-invalid 18, redundant 50
Fitness: max 1(1), min 0(2), ave 0.818
Test execution time: sum 10640 ms, max 245 ms, min 116 ms
----------------------------------------------------------------

2023-08-09 17:30:08 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-09 18:03:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 46 seconds
Variants: generated 200, build-succeeded 63, build-failed 72, syntax-invalid 10, redundant 55
Fitness: max 1(2), min 0(4), ave 0.808
Test execution time: sum 1991558 ms, max 1980129 ms, min 93 ms
----------------------------------------------------------------

2023-08-09 18:03:25 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-09 18:36:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 2 seconds
Variants: generated 200, build-succeeded 65, build-failed 71, syntax-invalid 22, redundant 42
Fitness: max 1(2), min 0(4), ave 0.841
Test execution time: sum 1991977 ms, max 1980129 ms, min 107 ms
----------------------------------------------------------------

2023-08-09 18:36:42 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-09 18:36:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 19 seconds
Variants: generated 200, build-succeeded 59, build-failed 76, syntax-invalid 24, redundant 41
Fitness: max 1(2), min 0(4), ave 0.833
Test execution time: sum 10949 ms, max 226 ms, min 117 ms
----------------------------------------------------------------

2023-08-09 18:36:58 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-09 18:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 38 seconds
Variants: generated 200, build-succeeded 77, build-failed 76, syntax-invalid 15, redundant 32
Fitness: max 0.929(62), min 0(3), ave 0.856
Test execution time: sum 14213 ms, max 232 ms, min 92 ms
----------------------------------------------------------------

2023-08-09 18:37:17 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-09 19:10:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 57 seconds
Variants: generated 200, build-succeeded 73, build-failed 76, syntax-invalid 11, redundant 40
Fitness: max 1(6), min 0(3), ave 0.83
Test execution time: sum 1993351 ms, max 1980131 ms, min 93 ms
----------------------------------------------------------------

2023-08-09 19:10:36 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-09 20:16:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 34 minutes 18 seconds
Variants: generated 200, build-succeeded 85, build-failed 66, syntax-invalid 16, redundant 33
Fitness: max 1(4), min 0(4), ave 0.831
Test execution time: sum 3975436 ms, max 1980129 ms, min 91 ms
----------------------------------------------------------------

2023-08-09 20:16:57 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-09 20:17:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 34 minutes 40 seconds
Variants: generated 200, build-succeeded 91, build-failed 72, syntax-invalid 11, redundant 26
Fitness: max 0.929(75), min 0(5), ave 0.847
Test execution time: sum 17318 ms, max 276 ms, min 116 ms
----------------------------------------------------------------

2023-08-09 20:17:19 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-09 20:17:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 2 seconds
Variants: generated 200, build-succeeded 84, build-failed 70, syntax-invalid 25, redundant 21
Fitness: max 0.929(66), min 0(6), ave 0.825
Test execution time: sum 15713 ms, max 226 ms, min 93 ms
----------------------------------------------------------------

2023-08-09 20:17:41 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-09 20:51:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 21 seconds
Variants: generated 200, build-succeeded 72, build-failed 81, syntax-invalid 16, redundant 31
Fitness: max 0.929(63), min 0(1), ave 0.879
Test execution time: sum 1993705 ms, max 1980131 ms, min 108 ms
----------------------------------------------------------------

2023-08-09 20:51:00 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-09 20:51:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 42 seconds
Variants: generated 200, build-succeeded 78, build-failed 77, syntax-invalid 15, redundant 30
Fitness: max 0.929(62), min 0(4), ave 0.831
Test execution time: sum 14711 ms, max 223 ms, min 146 ms
----------------------------------------------------------------

2023-08-09 20:51:21 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-09 21:24:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 4 seconds
Variants: generated 200, build-succeeded 86, build-failed 76, syntax-invalid 9, redundant 29
Fitness: max 0.929(75), min 0(2), ave 0.87
Test execution time: sum 1996338 ms, max 1980130 ms, min 94 ms
----------------------------------------------------------------

2023-08-09 21:24:43 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-09 21:58:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 15 minutes 27 seconds
Variants: generated 200, build-succeeded 85, build-failed 70, syntax-invalid 18, redundant 27
Fitness: max 0.929(71), min 0(3), ave 0.839
Test execution time: sum 1995899 ms, max 1980130 ms, min 94 ms
----------------------------------------------------------------

2023-08-09 21:58:06 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-09 21:58:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 15 minutes 48 seconds
Variants: generated 200, build-succeeded 81, build-failed 76, syntax-invalid 17, redundant 26
Fitness: max 0.929(70), min 0(5), ave 0.844
Test execution time: sum 15337 ms, max 228 ms, min 117 ms
----------------------------------------------------------------

2023-08-09 21:58:27 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-09 22:31:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 49 minutes 11 seconds
Variants: generated 200, build-succeeded 90, build-failed 66, syntax-invalid 17, redundant 27
Fitness: max 0.929(74), min 0(7), ave 0.821
Test execution time: sum 1996889 ms, max 1980133 ms, min 93 ms
----------------------------------------------------------------

2023-08-09 22:31:50 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-09 22:32:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 49 minutes 33 seconds
Variants: generated 200, build-succeeded 84, build-failed 73, syntax-invalid 21, redundant 22
Fitness: max 0.929(73), min 0(4), ave 0.849
Test execution time: sum 15966 ms, max 221 ms, min 112 ms
----------------------------------------------------------------

2023-08-09 22:32:12 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-09 22:32:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 49 minutes 56 seconds
Variants: generated 200, build-succeeded 83, build-failed 86, syntax-invalid 14, redundant 17
Fitness: max 0.929(70), min 0(3), ave 0.859
Test execution time: sum 15839 ms, max 247 ms, min 94 ms
----------------------------------------------------------------

2023-08-09 22:32:35 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-09 22:32:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 50 minutes 18 seconds
Variants: generated 200, build-succeeded 80, build-failed 87, syntax-invalid 16, redundant 17
Fitness: max 0.929(71), min 0(2), ave 0.885
Test execution time: sum 15578 ms, max 227 ms, min 135 ms
----------------------------------------------------------------

2023-08-09 22:32:57 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-09 22:33:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 50 minutes 41 seconds
Variants: generated 200, build-succeeded 89, build-failed 73, syntax-invalid 15, redundant 23
Fitness: max 0.929(71), min 0(4), ave 0.82
Test execution time: sum 16901 ms, max 246 ms, min 107 ms
----------------------------------------------------------------

2023-08-09 22:33:20 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-09 23:06:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 24 minutes 3 seconds
Variants: generated 200, build-succeeded 79, build-failed 82, syntax-invalid 21, redundant 18
Fitness: max 0.929(64), min 0(4), ave 0.822
Test execution time: sum 1994952 ms, max 1980129 ms, min 117 ms
----------------------------------------------------------------

2023-08-09 23:06:42 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-09 23:07:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 24 minutes 23 seconds
Variants: generated 200, build-succeeded 73, build-failed 77, syntax-invalid 15, redundant 35
Fitness: max 0.929(60), min 0(1), ave 0.834
Test execution time: sum 13883 ms, max 234 ms, min 142 ms
----------------------------------------------------------------

2023-08-09 23:07:02 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-09 23:07:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 24 minutes 43 seconds
Variants: generated 200, build-succeeded 73, build-failed 81, syntax-invalid 18, redundant 28
Fitness: max 0.929(65), min 0(4), ave 0.86
Test execution time: sum 13827 ms, max 275 ms, min 93 ms
----------------------------------------------------------------

2023-08-09 23:07:22 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-09 23:40:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 58 minutes 4 seconds
Variants: generated 200, build-succeeded 74, build-failed 88, syntax-invalid 13, redundant 25
Fitness: max 0.929(66), min 0(2), ave 0.866
Test execution time: sum 1994240 ms, max 1980131 ms, min 107 ms
----------------------------------------------------------------

2023-08-09 23:40:43 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-10 00:14:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 26 seconds
Variants: generated 200, build-succeeded 79, build-failed 79, syntax-invalid 18, redundant 24
Fitness: max 1(1), min 0(6), ave 0.837
Test execution time: sum 1994979 ms, max 1980130 ms, min 117 ms
----------------------------------------------------------------

2023-08-10 00:14:05 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-10 00:14:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 48 seconds
Variants: generated 200, build-succeeded 82, build-failed 84, syntax-invalid 13, redundant 21
Fitness: max 0.929(67), min 0(3), ave 0.847
Test execution time: sum 15711 ms, max 231 ms, min 108 ms
----------------------------------------------------------------

2023-08-10 00:14:27 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-10 00:14:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 10 seconds
Variants: generated 200, build-succeeded 80, build-failed 81, syntax-invalid 20, redundant 19
Fitness: max 0.929(70), min 0(4), ave 0.854
Test execution time: sum 15080 ms, max 241 ms, min 107 ms
----------------------------------------------------------------

2023-08-10 00:14:49 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-10 00:15:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 33 seconds
Variants: generated 200, build-succeeded 82, build-failed 91, syntax-invalid 14, redundant 13
Fitness: max 0.929(74), min 0(1), ave 0.875
Test execution time: sum 15830 ms, max 239 ms, min 142 ms
----------------------------------------------------------------

2023-08-10 00:15:12 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-10 00:15:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 57 seconds
Variants: generated 200, build-succeeded 84, build-failed 87, syntax-invalid 17, redundant 12
Fitness: max 0.929(73), min 0(4), ave 0.858
Test execution time: sum 16029 ms, max 228 ms, min 120 ms
----------------------------------------------------------------

2023-08-10 00:15:36 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-10 00:15:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 33 minutes 20 seconds
Variants: generated 200, build-succeeded 85, build-failed 84, syntax-invalid 21, redundant 10
Fitness: max 0.929(70), min 0(3), ave 0.824
Test execution time: sum 16100 ms, max 232 ms, min 93 ms
----------------------------------------------------------------

2023-08-10 00:15:59 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-10 00:16:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 33 minutes 43 seconds
Variants: generated 200, build-succeeded 84, build-failed 83, syntax-invalid 21, redundant 12
Fitness: max 0.929(72), min 0(3), ave 0.861
Test execution time: sum 16014 ms, max 239 ms, min 117 ms
----------------------------------------------------------------

2023-08-10 00:16:22 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-10 00:49:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 7 minutes 4 seconds
Variants: generated 200, build-succeeded 71, build-failed 88, syntax-invalid 25, redundant 16
Fitness: max 0.929(64), min 0(3), ave 0.872
Test execution time: sum 1993450 ms, max 1980130 ms, min 92 ms
----------------------------------------------------------------

2023-08-10 00:49:43 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-10 01:23:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 40 minutes 26 seconds
Variants: generated 200, build-succeeded 80, build-failed 88, syntax-invalid 19, redundant 13
Fitness: max 0.929(63), min 0(6), ave 0.816
Test execution time: sum 1994923 ms, max 1980163 ms, min 93 ms
----------------------------------------------------------------

2023-08-10 01:23:05 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-10 01:23:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 40 minutes 47 seconds
Variants: generated 200, build-succeeded 76, build-failed 85, syntax-invalid 20, redundant 19
Fitness: max 0.929(71), min 0(3), ave 0.886
Test execution time: sum 14425 ms, max 234 ms, min 93 ms
----------------------------------------------------------------

2023-08-10 01:23:26 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-10 01:23:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 41 minutes 11 seconds
Variants: generated 200, build-succeeded 84, build-failed 84, syntax-invalid 18, redundant 14
Fitness: max 0.929(72), min 0(4), ave 0.855
Test execution time: sum 16076 ms, max 257 ms, min 108 ms
----------------------------------------------------------------

2023-08-10 01:23:50 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-10 01:57:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 33 seconds
Variants: generated 200, build-succeeded 81, build-failed 85, syntax-invalid 19, redundant 15
Fitness: max 0.929(73), min 0(1), ave 0.894
Test execution time: sum 1995645 ms, max 1980129 ms, min 133 ms
----------------------------------------------------------------

2023-08-10 01:57:12 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-10 01:57:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 56 seconds
Variants: generated 200, build-succeeded 82, build-failed 82, syntax-invalid 19, redundant 17
Fitness: max 0.929(72), min 0(6), ave 0.839
Test execution time: sum 15433 ms, max 249 ms, min 109 ms
----------------------------------------------------------------

2023-08-10 01:57:35 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-10 02:30:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 18 seconds
Variants: generated 200, build-succeeded 82, build-failed 85, syntax-invalid 16, redundant 17
Fitness: max 0.929(71), min 0(2), ave 0.855
Test execution time: sum 1995807 ms, max 1980130 ms, min 153 ms
----------------------------------------------------------------

2023-08-10 02:30:57 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-10 02:31:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 42 seconds
Variants: generated 200, build-succeeded 86, build-failed 81, syntax-invalid 16, redundant 17
Fitness: max 0.929(75), min 0(4), ave 0.864
Test execution time: sum 16313 ms, max 267 ms, min 121 ms
----------------------------------------------------------------

2023-08-10 02:31:21 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-10 03:04:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 22 minutes 3 seconds
Variants: generated 200, build-succeeded 73, build-failed 90, syntax-invalid 26, redundant 11
Fitness: max 0.929(65), min 0(3), ave 0.856
Test execution time: sum 1993667 ms, max 1980130 ms, min 94 ms
----------------------------------------------------------------

2023-08-10 03:04:42 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-10 04:11:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 28 minutes 28 seconds
Variants: generated 200, build-succeeded 91, build-failed 79, syntax-invalid 17, redundant 13
Fitness: max 0.929(81), min 0(2), ave 0.876
Test execution time: sum 3977532 ms, max 1980129 ms, min 94 ms
----------------------------------------------------------------

2023-08-10 04:11:07 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-10 04:11:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 28 minutes 52 seconds
Variants: generated 200, build-succeeded 83, build-failed 82, syntax-invalid 19, redundant 16
Fitness: max 0.929(78), min 0(3), ave 0.892
Test execution time: sum 15977 ms, max 240 ms, min 121 ms
----------------------------------------------------------------

2023-08-10 04:11:31 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-10 04:11:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 29 minutes 16 seconds
Variants: generated 200, build-succeeded 86, build-failed 90, syntax-invalid 15, redundant 9
Fitness: max 0.929(79), min 0(3), ave 0.871
Test execution time: sum 16495 ms, max 232 ms, min 108 ms
----------------------------------------------------------------

2023-08-10 04:11:55 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-10 04:12:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 29 minutes 40 seconds
Variants: generated 200, build-succeeded 83, build-failed 85, syntax-invalid 18, redundant 14
Fitness: max 0.929(75), min 0(2), ave 0.887
Test execution time: sum 15882 ms, max 220 ms, min 131 ms
----------------------------------------------------------------

2023-08-10 04:12:19 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-10 04:12:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 30 minutes 6 seconds
Variants: generated 200, build-succeeded 97, build-failed 76, syntax-invalid 12, redundant 15
Fitness: max 0.929(83), min 0(4), ave 0.868
Test execution time: sum 18589 ms, max 268 ms, min 94 ms
----------------------------------------------------------------

2023-08-10 04:12:45 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-10 04:13:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 30 minutes 31 seconds
Variants: generated 200, build-succeeded 88, build-failed 84, syntax-invalid 15, redundant 13
Fitness: max 0.929(80), min 0(2), ave 0.877
Test execution time: sum 17059 ms, max 236 ms, min 94 ms
----------------------------------------------------------------

2023-08-10 04:13:10 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-10 04:13:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 30 minutes 56 seconds
Variants: generated 200, build-succeeded 84, build-failed 86, syntax-invalid 17, redundant 13
Fitness: max 0.929(72), min 0(3), ave 0.853
Test execution time: sum 16378 ms, max 267 ms, min 146 ms
----------------------------------------------------------------

2023-08-10 04:13:35 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-10 04:13:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 31 minutes 20 seconds
Variants: generated 200, build-succeeded 90, build-failed 81, syntax-invalid 11, redundant 18
Fitness: max 0.929(71), min 0(6), ave 0.817
Test execution time: sum 17128 ms, max 243 ms, min 97 ms
----------------------------------------------------------------

2023-08-10 04:13:59 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-10 04:14:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 31 minutes 44 seconds
Variants: generated 200, build-succeeded 82, build-failed 97, syntax-invalid 12, redundant 9
Fitness: max 0.929(70), min 0(5), ave 0.83
Test execution time: sum 15361 ms, max 245 ms, min 94 ms
----------------------------------------------------------------

2023-08-10 04:14:23 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-10 04:14:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 8 seconds
Variants: generated 200, build-succeeded 84, build-failed 90, syntax-invalid 13, redundant 13
Fitness: max 1(1), min 0(5), ave 0.84
Test execution time: sum 15927 ms, max 240 ms, min 94 ms
----------------------------------------------------------------

2023-08-10 04:14:47 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-10 04:15:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 31 seconds
Variants: generated 200, build-succeeded 76, build-failed 97, syntax-invalid 14, redundant 13
Fitness: max 1(1), min 0(2), ave 0.85
Test execution time: sum 14620 ms, max 259 ms, min 109 ms
----------------------------------------------------------------

2023-08-10 04:15:10 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-10 04:15:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 57 seconds
Variants: generated 200, build-succeeded 91, build-failed 84, syntax-invalid 16, redundant 9
Fitness: max 0.929(84), min 0(4), ave 0.883
Test execution time: sum 17497 ms, max 303 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 04:15:36 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-10 04:16:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 33 minutes 21 seconds
Variants: generated 200, build-succeeded 84, build-failed 85, syntax-invalid 15, redundant 16
Fitness: max 0.929(73), min 0(4), ave 0.849
Test execution time: sum 15927 ms, max 239 ms, min 117 ms
----------------------------------------------------------------

2023-08-10 04:16:00 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-10 04:49:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 6 minutes 44 seconds
Variants: generated 200, build-succeeded 79, build-failed 76, syntax-invalid 25, redundant 20
Fitness: max 0.929(69), min 0(2), ave 0.857
Test execution time: sum 1995254 ms, max 1980129 ms, min 109 ms
----------------------------------------------------------------

2023-08-10 04:49:23 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-10 04:49:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 7 minutes 10 seconds
Variants: generated 200, build-succeeded 100, build-failed 64, syntax-invalid 19, redundant 17
Fitness: max 1(1), min 0(6), ave 0.844
Test execution time: sum 19030 ms, max 219 ms, min 118 ms
----------------------------------------------------------------

2023-08-10 04:49:49 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-10 05:23:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 40 minutes 35 seconds
Variants: generated 200, build-succeeded 89, build-failed 79, syntax-invalid 24, redundant 8
Fitness: max 0.929(77), min 0(4), ave 0.845
Test execution time: sum 1997045 ms, max 1980145 ms, min 106 ms
----------------------------------------------------------------

2023-08-10 05:23:14 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-10 05:23:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 40 minutes 56 seconds
Variants: generated 200, build-succeeded 71, build-failed 80, syntax-invalid 31, redundant 18
Fitness: max 0.929(64), min 0(2), ave 0.886
Test execution time: sum 13713 ms, max 259 ms, min 122 ms
----------------------------------------------------------------

2023-08-10 05:23:35 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-10 05:23:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 41 minutes 20 seconds
Variants: generated 200, build-succeeded 84, build-failed 75, syntax-invalid 20, redundant 21
Fitness: max 1(1), min 0(3), ave 0.866
Test execution time: sum 16075 ms, max 246 ms, min 127 ms
----------------------------------------------------------------

2023-08-10 05:23:59 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-10 05:24:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 41 minutes 43 seconds
Variants: generated 200, build-succeeded 81, build-failed 71, syntax-invalid 27, redundant 21
Fitness: max 0.929(68), min 0(6), ave 0.823
Test execution time: sum 15361 ms, max 235 ms, min 94 ms
----------------------------------------------------------------

2023-08-10 05:24:22 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-10 05:24:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 42 minutes 8 seconds
Variants: generated 200, build-succeeded 91, build-failed 78, syntax-invalid 9, redundant 22
Fitness: max 1(1), min 0(4), ave 0.829
Test execution time: sum 17187 ms, max 240 ms, min 94 ms
----------------------------------------------------------------

2023-08-10 05:24:47 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-10 05:25:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 42 minutes 33 seconds
Variants: generated 200, build-succeeded 89, build-failed 74, syntax-invalid 19, redundant 18
Fitness: max 0.929(75), min 0(6), ave 0.825
Test execution time: sum 16806 ms, max 229 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 05:25:12 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-10 05:58:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 15 minutes 57 seconds
Variants: generated 200, build-succeeded 85, build-failed 70, syntax-invalid 24, redundant 21
Fitness: max 0.929(71), min 0(5), ave 0.823
Test execution time: sum 1996327 ms, max 1980130 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 05:58:36 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-10 05:59:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 16 minutes 21 seconds
Variants: generated 200, build-succeeded 83, build-failed 84, syntax-invalid 12, redundant 21
Fitness: max 0.929(75), min 0(2), ave 0.863
Test execution time: sum 15660 ms, max 233 ms, min 103 ms
----------------------------------------------------------------

2023-08-10 05:59:00 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-10 05:59:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 16 minutes 45 seconds
Variants: generated 200, build-succeeded 87, build-failed 76, syntax-invalid 18, redundant 19
Fitness: max 0.929(76), min 0(3), ave 0.858
Test execution time: sum 16755 ms, max 241 ms, min 146 ms
----------------------------------------------------------------

2023-08-10 05:59:24 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-10 05:59:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 17 minutes 10 seconds
Variants: generated 200, build-succeeded 86, build-failed 75, syntax-invalid 22, redundant 17
Fitness: max 0.929(71), min 0(6), ave 0.834
Test execution time: sum 16158 ms, max 236 ms, min 85 ms
----------------------------------------------------------------

2023-08-10 05:59:49 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-10 06:00:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 17 minutes 34 seconds
Variants: generated 200, build-succeeded 90, build-failed 73, syntax-invalid 16, redundant 21
Fitness: max 1(1), min 0(4), ave 0.85
Test execution time: sum 17121 ms, max 223 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 06:00:13 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-10 06:00:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 18 minutes 3 seconds
Variants: generated 200, build-succeeded 108, build-failed 60, syntax-invalid 15, redundant 17
Fitness: max 1(1), min 0(2), ave 0.86
Test execution time: sum 20665 ms, max 236 ms, min 94 ms
----------------------------------------------------------------

2023-08-10 06:00:42 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-10 06:01:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 18 minutes 31 seconds
Variants: generated 200, build-succeeded 107, build-failed 66, syntax-invalid 10, redundant 17
Fitness: max 1(1), min 0(6), ave 0.85
Test execution time: sum 20479 ms, max 241 ms, min 118 ms
----------------------------------------------------------------

2023-08-10 06:01:10 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-10 06:01:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 19 minutes 0 seconds
Variants: generated 200, build-succeeded 106, build-failed 65, syntax-invalid 15, redundant 14
Fitness: max 0.929(89), min 0(4), ave 0.837
Test execution time: sum 20287 ms, max 314 ms, min 109 ms
----------------------------------------------------------------

2023-08-10 06:01:39 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-10 06:02:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 19 minutes 26 seconds
Variants: generated 200, build-succeeded 95, build-failed 65, syntax-invalid 18, redundant 22
Fitness: max 0.929(81), min 0(2), ave 0.852
Test execution time: sum 18330 ms, max 240 ms, min 107 ms
----------------------------------------------------------------

2023-08-10 06:02:05 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-10 06:35:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 52 minutes 50 seconds
Variants: generated 200, build-succeeded 80, build-failed 78, syntax-invalid 25, redundant 17
Fitness: max 0.929(68), min 0(6), ave 0.825
Test execution time: sum 1995354 ms, max 1980152 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 06:35:29 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-10 07:41:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 59 minutes 16 seconds
Variants: generated 200, build-succeeded 95, build-failed 66, syntax-invalid 24, redundant 15
Fitness: max 0.929(82), min 0(4), ave 0.839
Test execution time: sum 3977937 ms, max 1980130 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 07:41:55 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-10 07:42:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 59 minutes 40 seconds
Variants: generated 200, build-succeeded 82, build-failed 76, syntax-invalid 23, redundant 19
Fitness: max 0.929(69), min 0(5), ave 0.842
Test execution time: sum 15804 ms, max 292 ms, min 101 ms
----------------------------------------------------------------

2023-08-10 07:42:19 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-10 08:15:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 33 minutes 7 seconds
Variants: generated 200, build-succeeded 100, build-failed 68, syntax-invalid 13, redundant 19
Fitness: max 0.929(83), min 0(5), ave 0.836
Test execution time: sum 1999037 ms, max 1980134 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 08:15:46 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-10 08:16:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 33 minutes 33 seconds
Variants: generated 200, build-succeeded 90, build-failed 80, syntax-invalid 12, redundant 18
Fitness: max 1(1), min 0(3), ave 0.865
Test execution time: sum 17232 ms, max 291 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 08:16:12 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-10 08:49:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 7 minutes 1 seconds
Variants: generated 200, build-succeeded 100, build-failed 61, syntax-invalid 14, redundant 25
Fitness: max 0.929(86), min 0(5), ave 0.849
Test execution time: sum 1999237 ms, max 1980133 ms, min 94 ms
----------------------------------------------------------------

2023-08-10 08:49:40 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-10 08:50:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 7 minutes 26 seconds
Variants: generated 200, build-succeeded 93, build-failed 62, syntax-invalid 23, redundant 22
Fitness: max 0.929(79), min 0(3), ave 0.845
Test execution time: sum 17894 ms, max 228 ms, min 107 ms
----------------------------------------------------------------

2023-08-10 08:50:05 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-10 08:50:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 7 minutes 52 seconds
Variants: generated 200, build-succeeded 88, build-failed 69, syntax-invalid 16, redundant 27
Fitness: max 0.929(75), min 0(3), ave 0.85
Test execution time: sum 16849 ms, max 224 ms, min 134 ms
----------------------------------------------------------------

2023-08-10 08:50:31 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-10 09:23:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 41 minutes 16 seconds
Variants: generated 200, build-succeeded 84, build-failed 76, syntax-invalid 17, redundant 23
Fitness: max 0.929(69), min 0(2), ave 0.834
Test execution time: sum 1996202 ms, max 1980130 ms, min 118 ms
----------------------------------------------------------------

2023-08-10 09:23:55 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-10 09:24:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 41 minutes 43 seconds
Variants: generated 200, build-succeeded 94, build-failed 76, syntax-invalid 12, redundant 18
Fitness: max 0.929(88), min 0(1), ave 0.895
Test execution time: sum 18311 ms, max 235 ms, min 123 ms
----------------------------------------------------------------

2023-08-10 09:24:22 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-10 09:24:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 42 minutes 11 seconds
Variants: generated 200, build-succeeded 98, build-failed 69, syntax-invalid 23, redundant 10
Fitness: max 1(1), min 0(3), ave 0.848
Test execution time: sum 18775 ms, max 239 ms, min 129 ms
----------------------------------------------------------------

2023-08-10 09:24:50 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-10 09:25:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 42 minutes 37 seconds
Variants: generated 200, build-succeeded 94, build-failed 74, syntax-invalid 15, redundant 17
Fitness: max 0.929(83), min 0(3), ave 0.88
Test execution time: sum 18155 ms, max 226 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 09:25:16 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-10 09:58:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 16 minutes 6 seconds
Variants: generated 200, build-succeeded 102, build-failed 70, syntax-invalid 17, redundant 11
Fitness: max 0.929(91), min 0.143(1), ave 0.883
Test execution time: sum 2000095 ms, max 1980129 ms, min 172 ms
----------------------------------------------------------------

2023-08-10 09:58:45 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-10 09:59:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 16 minutes 35 seconds
Variants: generated 200, build-succeeded 103, build-failed 75, syntax-invalid 8, redundant 14
Fitness: max 0.929(94), min 0(2), ave 0.872
Test execution time: sum 20043 ms, max 250 ms, min 124 ms
----------------------------------------------------------------

2023-08-10 09:59:14 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-10 09:59:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 17 minutes 2 seconds
Variants: generated 200, build-succeeded 96, build-failed 75, syntax-invalid 12, redundant 17
Fitness: max 0.929(83), min 0(5), ave 0.847
Test execution time: sum 18498 ms, max 233 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 09:59:41 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-10 10:33:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 50 minutes 31 seconds
Variants: generated 200, build-succeeded 101, build-failed 69, syntax-invalid 15, redundant 15
Fitness: max 1(1), min 0(2), ave 0.871
Test execution time: sum 1999590 ms, max 1980134 ms, min 124 ms
----------------------------------------------------------------

2023-08-10 10:33:10 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-10 10:33:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 50 minutes 59 seconds
Variants: generated 200, build-succeeded 97, build-failed 69, syntax-invalid 22, redundant 12
Fitness: max 0.929(85), min 0(4), ave 0.867
Test execution time: sum 18893 ms, max 277 ms, min 111 ms
----------------------------------------------------------------

2023-08-10 10:33:38 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-10 10:34:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 51 minutes 27 seconds
Variants: generated 200, build-succeeded 100, build-failed 75, syntax-invalid 16, redundant 9
Fitness: max 0.929(90), min 0(7), ave 0.841
Test execution time: sum 19231 ms, max 259 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 10:34:06 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-10 11:40:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 57 minutes 57 seconds
Variants: generated 200, build-succeeded 109, build-failed 72, syntax-invalid 13, redundant 6
Fitness: max 0.929(91), min 0(4), ave 0.849
Test execution time: sum 3981190 ms, max 1980130 ms, min 141 ms
----------------------------------------------------------------

2023-08-10 11:40:36 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-10 11:41:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 58 minutes 27 seconds
Variants: generated 200, build-succeeded 104, build-failed 77, syntax-invalid 13, redundant 6
Fitness: max 0.929(86), min 0(4), ave 0.836
Test execution time: sum 20182 ms, max 224 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 11:41:06 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-10 11:41:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 58 minutes 56 seconds
Variants: generated 200, build-succeeded 97, build-failed 78, syntax-invalid 10, redundant 15
Fitness: max 0.929(91), min 0(1), ave 0.905
Test execution time: sum 19042 ms, max 251 ms, min 110 ms
----------------------------------------------------------------

2023-08-10 11:41:35 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-10 11:42:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 59 minutes 23 seconds
Variants: generated 200, build-succeeded 96, build-failed 85, syntax-invalid 10, redundant 9
Fitness: max 0.929(84), min 0(7), ave 0.841
Test execution time: sum 18445 ms, max 243 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 11:42:02 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-10 12:15:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 32 minutes 52 seconds
Variants: generated 200, build-succeeded 101, build-failed 70, syntax-invalid 14, redundant 15
Fitness: max 0.929(90), min 0(4), ave 0.856
Test execution time: sum 1999725 ms, max 1980134 ms, min 136 ms
----------------------------------------------------------------

2023-08-10 12:15:31 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-10 12:15:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 33 minutes 20 seconds
Variants: generated 200, build-succeeded 100, build-failed 69, syntax-invalid 13, redundant 18
Fitness: max 0.929(88), min 0(5), ave 0.844
Test execution time: sum 19265 ms, max 243 ms, min 111 ms
----------------------------------------------------------------

2023-08-10 12:15:59 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-10 12:16:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 33 minutes 48 seconds
Variants: generated 200, build-succeeded 93, build-failed 82, syntax-invalid 13, redundant 12
Fitness: max 1(1), min 0(3), ave 0.887
Test execution time: sum 18115 ms, max 243 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 12:16:27 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-10 12:16:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 34 minutes 16 seconds
Variants: generated 200, build-succeeded 98, build-failed 70, syntax-invalid 17, redundant 15
Fitness: max 0.929(87), min 0(1), ave 0.883
Test execution time: sum 19102 ms, max 234 ms, min 120 ms
----------------------------------------------------------------

2023-08-10 12:16:55 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-10 12:50:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 7 minutes 46 seconds
Variants: generated 200, build-succeeded 101, build-failed 78, syntax-invalid 10, redundant 11
Fitness: max 0.929(87), min 0(5), ave 0.851
Test execution time: sum 1999568 ms, max 1980129 ms, min 95 ms
----------------------------------------------------------------

2023-08-10 12:50:25 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-10 12:50:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 8 minutes 15 seconds
Variants: generated 200, build-succeeded 97, build-failed 81, syntax-invalid 6, redundant 16
Fitness: max 0.929(87), min 0(2), ave 0.875
Test execution time: sum 19134 ms, max 225 ms, min 111 ms
----------------------------------------------------------------

2023-08-10 12:50:54 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-10 12:51:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 8 minutes 43 seconds
Variants: generated 200, build-succeeded 95, build-failed 74, syntax-invalid 19, redundant 12
Fitness: max 0.929(87), min 0(1), ave 0.893
Test execution time: sum 18605 ms, max 256 ms, min 124 ms
----------------------------------------------------------------

2023-08-10 12:51:22 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-10 12:51:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 9 minutes 12 seconds
Variants: generated 200, build-succeeded 97, build-failed 76, syntax-invalid 13, redundant 14
Fitness: max 0.929(88), min 0(1), ave 0.88
Test execution time: sum 19095 ms, max 254 ms, min 135 ms
----------------------------------------------------------------

2023-08-10 12:51:51 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-10 13:25:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 42 minutes 40 seconds
Variants: generated 200, build-succeeded 90, build-failed 79, syntax-invalid 17, redundant 14
Fitness: max 0.929(80), min 0(3), ave 0.871
Test execution time: sum 1997579 ms, max 1980131 ms, min 124 ms
----------------------------------------------------------------

2023-08-10 13:25:19 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-10 13:25:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 43 minutes 8 seconds
Variants: generated 200, build-succeeded 94, build-failed 80, syntax-invalid 8, redundant 18
Fitness: max 0.929(87), min 0(1), ave 0.902
Test execution time: sum 18438 ms, max 232 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 13:25:47 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-10 13:26:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 43 minutes 37 seconds
Variants: generated 200, build-succeeded 95, build-failed 79, syntax-invalid 13, redundant 13
Fitness: max 0.929(84), min 0(3), ave 0.88
Test execution time: sum 18618 ms, max 256 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 13:26:16 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-10 13:26:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 44 minutes 8 seconds
Variants: generated 200, build-succeeded 108, build-failed 73, syntax-invalid 6, redundant 13
Fitness: max 0.929(97), min 0.143(1), ave 0.895
Test execution time: sum 21298 ms, max 247 ms, min 150 ms
----------------------------------------------------------------

2023-08-10 13:26:47 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-10 14:00:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 17 minutes 37 seconds
Variants: generated 200, build-succeeded 95, build-failed 88, syntax-invalid 10, redundant 7
Fitness: max 0.929(87), min 0(2), ave 0.887
Test execution time: sum 1998758 ms, max 1980131 ms, min 152 ms
----------------------------------------------------------------

2023-08-10 14:00:16 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-10 14:00:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 18 minutes 4 seconds
Variants: generated 200, build-succeeded 91, build-failed 80, syntax-invalid 11, redundant 18
Fitness: max 0.929(82), min 0.071(3), ave 0.872
Test execution time: sum 17715 ms, max 226 ms, min 111 ms
----------------------------------------------------------------

2023-08-10 14:00:43 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-10 14:01:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 18 minutes 35 seconds
Variants: generated 200, build-succeeded 104, build-failed 79, syntax-invalid 9, redundant 8
Fitness: max 0.929(90), min 0(3), ave 0.852
Test execution time: sum 20283 ms, max 255 ms, min 121 ms
----------------------------------------------------------------

2023-08-10 14:01:14 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-10 14:01:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 19 minutes 3 seconds
Variants: generated 200, build-succeeded 96, build-failed 82, syntax-invalid 9, redundant 13
Fitness: max 0.929(91), min 0(2), ave 0.905
Test execution time: sum 18666 ms, max 231 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 14:01:42 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-10 14:02:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 19 minutes 32 seconds
Variants: generated 200, build-succeeded 92, build-failed 84, syntax-invalid 7, redundant 17
Fitness: max 0.929(80), min 0(2), ave 0.856
Test execution time: sum 18113 ms, max 285 ms, min 125 ms
----------------------------------------------------------------

2023-08-10 14:02:11 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-10 14:02:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 20 minutes 0 seconds
Variants: generated 200, build-succeeded 93, build-failed 87, syntax-invalid 7, redundant 13
Fitness: max 0.929(87), min 0(2), ave 0.893
Test execution time: sum 18330 ms, max 238 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 14:02:39 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-10 14:03:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 20 minutes 30 seconds
Variants: generated 200, build-succeeded 104, build-failed 74, syntax-invalid 9, redundant 13
Fitness: max 0.929(94), min 0(2), ave 0.863
Test execution time: sum 20192 ms, max 229 ms, min 112 ms
----------------------------------------------------------------

2023-08-10 14:03:09 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-10 14:36:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 54 minutes 0 seconds
Variants: generated 200, build-succeeded 104, build-failed 66, syntax-invalid 12, redundant 18
Fitness: max 0.929(89), min 0(3), ave 0.87
Test execution time: sum 2000071 ms, max 1980128 ms, min 97 ms
----------------------------------------------------------------

2023-08-10 14:36:39 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-10 14:37:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 54 minutes 28 seconds
Variants: generated 200, build-succeeded 94, build-failed 87, syntax-invalid 8, redundant 11
Fitness: max 0.929(83), min 0(3), ave 0.881
Test execution time: sum 18454 ms, max 247 ms, min 97 ms
----------------------------------------------------------------

2023-08-10 14:37:07 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-10 14:37:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 54 minutes 59 seconds
Variants: generated 200, build-succeeded 108, build-failed 73, syntax-invalid 9, redundant 10
Fitness: max 0.929(96), min 0(2), ave 0.87
Test execution time: sum 21130 ms, max 249 ms, min 112 ms
----------------------------------------------------------------

2023-08-10 14:37:38 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-10 14:38:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 55 minutes 27 seconds
Variants: generated 200, build-succeeded 95, build-failed 72, syntax-invalid 17, redundant 16
Fitness: max 0.929(86), min 0(2), ave 0.892
Test execution time: sum 18649 ms, max 306 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 14:38:06 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-10 14:38:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 55 minutes 58 seconds
Variants: generated 200, build-succeeded 108, build-failed 70, syntax-invalid 12, redundant 10
Fitness: max 0.929(99), min 0(3), ave 0.882
Test execution time: sum 21189 ms, max 242 ms, min 97 ms
----------------------------------------------------------------

2023-08-10 14:38:37 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-10 14:39:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 56 minutes 30 seconds
Variants: generated 200, build-succeeded 110, build-failed 74, syntax-invalid 8, redundant 8
Fitness: max 0.929(97), min 0(6), ave 0.853
Test execution time: sum 21226 ms, max 243 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 14:39:09 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-10 15:12:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 30 minutes 0 seconds
Variants: generated 200, build-succeeded 100, build-failed 83, syntax-invalid 12, redundant 5
Fitness: max 0.929(89), min 0(3), ave 0.869
Test execution time: sum 1999709 ms, max 1980132 ms, min 96 ms
----------------------------------------------------------------

2023-08-10 15:12:39 [main] [INFO]  KGenProgMain - GA stopped
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v321)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v321)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v321)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v375)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v375)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v375)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v375)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v503)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v503)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v503)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v637)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v637)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
@@ -166,7 +166,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v637)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -352,6 +352,7 @@
               coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
+			int height = constraints.size() + getNumObjectiveFunctions();
           }
       }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v637)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v731)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v731)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v731)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -352,6 +352,7 @@
               coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
+			int height = constraints.size() + getNumObjectiveFunctions();
           }
       }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v731)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v740)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v740)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -81,6 +80,7 @@
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
+				double sum = 0;
                 if (ratio < minRatio) {
                     minRatio = ratio;
                     minRatioPos = i; 
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v740)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v931)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v931)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
@@ -166,7 +166,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v931)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v983)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v983)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v983)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v983)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v998)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v998)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v998)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -81,6 +80,7 @@
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
+				double sum = 0;
                 if (ratio < minRatio) {
                     minRatio = ratio;
                     minRatioPos = i; 
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v998)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1054)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1054)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
@@ -166,7 +166,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1054)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,7 +100,7 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
+        this.maxIterations = maxIterations;
 
         // solve the problem
         return doOptimize();
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1054)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1118)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1118)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1118)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -352,6 +351,7 @@
               coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
+			int height = constraints.size() + getNumObjectiveFunctions();
           }
       }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1118)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1139)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1139)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1139)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -292,7 +292,8 @@
         int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
-                row = i;
+                double minRatio = Double.MAX_VALUE;
+				row = i;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 return null;
             }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1139)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1153)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1153)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1153)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,7 +100,7 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
+        this.maxIterations = maxIterations;
 
         // solve the problem
         return doOptimize();
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1153)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1354)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1354)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1354)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1354)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1393)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1393)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1393)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -292,7 +292,8 @@
         int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
-                row = i;
+                double minRatio = Double.MAX_VALUE;
+				row = i;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 return null;
             }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1393)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1532)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1532)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1532)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -289,7 +289,8 @@
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
         Integer row = null;
-        int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
+        double minValue = 0;
+		int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1532)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1565)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1565)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1565)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -289,10 +289,12 @@
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
         Integer row = null;
-        int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
+        double minValue = 0;
+		int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
-                row = i;
+                double minRatio = Double.MAX_VALUE;
+				row = i;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 return null;
             }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1565)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1779)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1779)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1779)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1779)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1934)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1934)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1934)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v1934)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2122)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2122)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2122)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2122)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,7 +100,7 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
+        this.maxIterations = maxIterations;
 
         // solve the problem
         return doOptimize();
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2122)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2323)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2323)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2323)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -289,7 +288,8 @@
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
         Integer row = null;
-        int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
+        double minValue = 0;
+		int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2323)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2396)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2396)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2396)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,8 +100,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2396)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2540)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2540)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2540)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,7 +100,7 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
+        this.maxIterations = maxIterations;
 
         // solve the problem
         return doOptimize();
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2540)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2559)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2559)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2559)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2559)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,7 +100,7 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
+        this.maxIterations = maxIterations;
 
         // solve the problem
         return doOptimize();
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2559)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2744)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2744)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -81,6 +80,7 @@
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
+				double sum = 0;
                 if (ratio < minRatio) {
                     minRatio = ratio;
                     minRatioPos = i; 
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2744)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -289,7 +288,8 @@
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
         Integer row = null;
-        int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
+        double minValue = 0;
+		int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2744)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2797)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2797)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2797)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -138,10 +138,7 @@
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
-            matrix[zIndex][width - 1] =
-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
-
-                if (!restrictToNonNegative) {
+            if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
@@ -293,6 +290,7 @@
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
+				int height = getHeight() - 1;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 return null;
             }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2797)
--- org.apache.commons.math.optimization.OptimizationException
+++ org.apache.commons.math.optimization.OptimizationException
@@ -39,7 +39,6 @@
      * @param parts to insert in the format (no translation)
      */
     public OptimizationException(String specifier, Object ... parts) {
-        super(specifier, parts);
     }
 
     /**
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2797)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,7 +100,7 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
+        this.maxIterations = maxIterations;
 
         // solve the problem
         return doOptimize();
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v2797)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -293,6 +292,7 @@
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
+				int height = getHeight() - 1;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 return null;
             }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.optimization.OptimizationException
+++ org.apache.commons.math.optimization.OptimizationException
@@ -39,7 +39,6 @@
      * @param parts to insert in the format (no translation)
      */
     public OptimizationException(String specifier, Object ... parts) {
-        super(specifier, parts);
     }
 
     /**
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,7 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
+        double sum = 0;
     }
 
     /**
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3112)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3112)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -100,8 +99,6 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
-
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
         if (pivotRow == null) {
@@ -166,7 +163,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3112)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3112)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3128)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3128)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3128)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3128)
--- org.apache.commons.math.optimization.OptimizationException
+++ org.apache.commons.math.optimization.OptimizationException
@@ -39,7 +39,6 @@
      * @param parts to insert in the format (no translation)
      */
     public OptimizationException(String specifier, Object ... parts) {
-        super(specifier, parts);
     }
 
     /**
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3128)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3152)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3152)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -81,6 +80,7 @@
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
+				double sum = 0;
                 if (ratio < minRatio) {
                     minRatio = ratio;
                     minRatioPos = i; 
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3152)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,8 +100,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3152)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -339,6 +339,7 @@
     protected RealPointValuePair getSolution() {
       double[] coefficients = new double[getOriginalNumDecisionVariables()];
       Integer negativeVarBasicRow = getBasicRowForSolution(getNegativeDecisionVariableOffset());
+	double minRatio = Double.MAX_VALUE;
       double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
       Set<Integer> basicRows = new HashSet<Integer>();
       for (int i = 0; i < coefficients.length; i++) {
@@ -352,6 +353,7 @@
               coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
+			int height = constraints.size() + getNumObjectiveFunctions();
           }
       }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.math.optimization.OptimizationException
+++ org.apache.commons.math.optimization.OptimizationException
@@ -39,7 +39,6 @@
      * @param parts to insert in the format (no translation)
      */
     public OptimizationException(String specifier, Object ... parts) {
-        super(specifier, parts);
     }
 
     /**
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3154)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3168)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3168)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3168)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -289,7 +289,8 @@
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
         Integer row = null;
-        int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
+        double minValue = 0;
+		int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3168)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,7 +100,7 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
+        this.maxIterations = maxIterations;
 
         // solve the problem
         return doOptimize();
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3168)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3261)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3261)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3261)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -289,7 +289,8 @@
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
         Integer row = null;
-        int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
+        double minValue = 0;
+		int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
@@ -339,6 +340,7 @@
     protected RealPointValuePair getSolution() {
       double[] coefficients = new double[getOriginalNumDecisionVariables()];
       Integer negativeVarBasicRow = getBasicRowForSolution(getNegativeDecisionVariableOffset());
+	double minRatio = Double.MAX_VALUE;
       double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
       Set<Integer> basicRows = new HashSet<Integer>();
       for (int i = 0; i < coefficients.length; i++) {
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3261)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3328)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3328)
--- org.apache.commons.math.linear.Array2DRowRealMatrix
+++ org.apache.commons.math.linear.Array2DRowRealMatrix
@@ -322,7 +322,8 @@
                         "first {0} columns are not initialized yet",
                         column);
             }
-            final int nRows = subMatrix.length;
+            double alpha = 0;
+			final int nRows = subMatrix.length;
             if (nRows == 0) {
                 throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row"); 
             }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3328)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3328)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3328)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,7 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
+        double sum = 0;
     }
 
     /**
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3351)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3351)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -81,6 +80,7 @@
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
+				double sum = 0;
                 if (ratio < minRatio) {
                     minRatio = ratio;
                     minRatioPos = i; 
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3351)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3351)
--- org.apache.commons.math.optimization.OptimizationException
+++ org.apache.commons.math.optimization.OptimizationException
@@ -39,7 +39,6 @@
      * @param parts to insert in the format (no translation)
      */
     public OptimizationException(String specifier, Object ... parts) {
-        super(specifier, parts);
     }
 
     /**
2023-08-10 15:12:39 [main] [INFO]  PatchLogExporter - patch (v3351)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v3398)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v3398)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -100,8 +99,6 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
-
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
         if (pivotRow == null) {
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v3398)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -293,6 +293,7 @@
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
+				int height = getHeight() - 1;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 return null;
             }
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v3398)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v6618)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v6618)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v6618)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -138,10 +138,7 @@
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
-            matrix[zIndex][width - 1] =
-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
-
-                if (!restrictToNonNegative) {
+            if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v6618)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -154,7 +154,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v6618)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11660)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11660)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -132,7 +131,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11660)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,7 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
+        int count = 0;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -222,7 +222,8 @@
      * @return 2 for Phase 1.  1 for Phase 2.
      */
     protected final int getNumObjectiveFunctions() {
-        return this.numArtificialVariables > 0 ? 2 : 1;
+        Integer minPos = null;
+		return this.numArtificialVariables > 0 ? 2 : 1;
     }
 
     /**
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11660)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11660)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,8 +100,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11660)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11806)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11806)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,7 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
+                Integer row = null;
                 minPos = i;
             }
         }
@@ -132,7 +132,8 @@
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
-                return false;
+                int count = 0;
+				return false;
             }
         }
         return true;
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11806)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -297,7 +297,8 @@
                 return null;
             }
         }
-        return row;
+        int height = getHeight() - 1;
+		return row;
     }
 
     /**
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11806)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11806)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,8 +100,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v11806)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v12619)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v12619)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v12619)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,9 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
+            this.restrictToNonNegative = restrictToNonNegative;
+			Integer row = null;
+			return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v12619)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -297,7 +297,8 @@
                 return null;
             }
         }
-        return row;
+        int height = getHeight() - 1;
+		return row;
     }
 
     /**
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v12619)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v12619)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,8 +100,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v12619)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v13244)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v13244)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -83,7 +82,9 @@
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;
-                    minRatioPos = i; 
+                    this.constraints = constraints;
+					this.constraints = constraints;
+					minRatioPos = i; 
                 }
             }
         }
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v13244)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -305,7 +305,8 @@
      */
     protected void discardArtificialVariables() {
         if (numArtificialVariables == 0) {
-            return;
+            int height = getHeight() - 1;
+			return;
         }
         int width = getWidth() - numArtificialVariables - 1;
         int height = getHeight() - 1;
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v13244)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v13244)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v13646)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v13646)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -59,7 +59,7 @@
         double minValue = 0;
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
-            if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
+            if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
                 minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v13646)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -138,10 +138,7 @@
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
-            matrix[zIndex][width - 1] =
-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
-
-                if (!restrictToNonNegative) {
+            if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
@@ -297,7 +294,8 @@
                 return null;
             }
         }
-        return row;
+        int height = getHeight() - 1;
+		return row;
     }
 
     /**
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v13646)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
@@ -793,7 +791,6 @@
     /** {@inheritDoc} */
     public RealVector ebeMultiply(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] * v[i];
@@ -830,7 +827,6 @@
     /** {@inheritDoc} */
     public RealVector ebeDivide(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
                 out[i] = data[i] / v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v13646)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v14845)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v14845)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,8 +60,8 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
+                minPos = i;
             }
         }
         return minPos;
@@ -166,7 +166,9 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
+            this.restrictToNonNegative = restrictToNonNegative;
+			this.restrictToNonNegative = restrictToNonNegative;
+			return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v14845)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -135,13 +135,12 @@
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
         matrix[zIndex][zIndex] = maximize ? 1 : -1;
+		matrix[zIndex][zIndex] = maximize ? 1 : -1;
+		matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
-            matrix[zIndex][width - 1] =
-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
-
-                if (!restrictToNonNegative) {
+            if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v14845)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v14845)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,9 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
+            Integer row = null;
+			this.restrictToNonNegative = restrictToNonNegative;
+			return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v15225)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v15225)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -79,6 +78,7 @@
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
+			this.constraints = constraints;
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
@@ -166,7 +166,9 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
+            Integer row = null;
+			this.restrictToNonNegative = restrictToNonNegative;
+			return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v15225)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v15225)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,8 +100,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v15225)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v16642)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v16642)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v16642)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,8 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
+            Integer row = null;
+			this.restrictToNonNegative = restrictToNonNegative;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v16642)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -106,7 +106,9 @@
         this.constraints            = constraints;
         this.restrictToNonNegative  = restrictToNonNegative;
         this.epsilon                = epsilon;
-        this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
+        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
         this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v16642)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v16642)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v17805)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v17805)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v17805)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,8 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
+            Integer row = null;
+			return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v17805)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -106,7 +106,11 @@
         this.constraints            = constraints;
         this.restrictToNonNegative  = restrictToNonNegative;
         this.epsilon                = epsilon;
-        this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
+        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
         this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
@@ -135,6 +139,7 @@
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
         matrix[zIndex][zIndex] = maximize ? 1 : -1;
+		matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -222,7 +227,8 @@
      * @return 2 for Phase 1.  1 for Phase 2.
      */
     protected final int getNumObjectiveFunctions() {
-        return this.numArtificialVariables > 0 ? 2 : 1;
+        Integer minPos = null;
+		return this.numArtificialVariables > 0 ? 2 : 1;
     }
 
     /**
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v17805)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v17805)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v18845)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v18845)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -83,7 +82,8 @@
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;
-                    minRatioPos = i; 
+                    this.constraints = constraints;
+					minRatioPos = i; 
                 }
             }
         }
@@ -166,7 +166,7 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
+            Integer row = null;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v18845)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -154,7 +154,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
@@ -793,7 +791,6 @@
     /** {@inheritDoc} */
     public RealVector ebeMultiply(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] * v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v18845)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v20658)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v20658)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -83,7 +82,8 @@
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;
-                    minRatioPos = i; 
+                    this.constraints = constraints;
+					minRatioPos = i; 
                 }
             }
         }
@@ -166,7 +166,9 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
+            Integer row = null;
+			this.restrictToNonNegative = restrictToNonNegative;
+			return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v20658)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -106,7 +106,9 @@
         this.constraints            = constraints;
         this.restrictToNonNegative  = restrictToNonNegative;
         this.epsilon                = epsilon;
-        this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
+        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
         this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
@@ -135,6 +137,8 @@
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
         matrix[zIndex][zIndex] = maximize ? 1 : -1;
+		matrix[zIndex][zIndex] = maximize ? 1 : -1;
+		matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -222,7 +226,8 @@
      * @return 2 for Phase 1.  1 for Phase 2.
      */
     protected final int getNumObjectiveFunctions() {
-        return this.numArtificialVariables > 0 ? 2 : 1;
+        Integer minPos = null;
+		return this.numArtificialVariables > 0 ? 2 : 1;
     }
 
     /**
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v20658)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-10 15:12:40 [main] [INFO]  PatchLogExporter - patch (v20658)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-10 15:12:41 [main] [INFO]  KGenProgMain - Summary
Reached generation = 128
Generated variants = 25400
Syntax valid variants = 23409
Build succeeded variants = 10869
Time elapsed = 24 hours 30 minutes 2 seconds
Exit status = FAILURE (time limit)
