2023-08-13 15:41:09 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-13 15:41:09 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-13 15:41:09 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-13 15:41:09 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82/kgenprog-82.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/src/main] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.optimization.linear.SimplexSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 4 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-13 15:41:17 [main] [INFO]  KGenProgMain - initial failed tests (1/14)
org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288: expected:<10.0> but was:<11.5>

2023-08-13 15:41:17 [main] [INFO]  KGenProgMain - GA started
2023-08-13 15:41:17 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-13 15:41:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, build-succeeded 14, build-failed 63, syntax-invalid 2, redundant 21
Fitness: max 0.929(3), min 0(1), ave 0.5
Test execution time: sum 3152 ms, max 371 ms, min 141 ms
----------------------------------------------------------------

2023-08-13 15:41:23 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-13 15:41:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, build-succeeded 12, build-failed 74, syntax-invalid 10, redundant 4
Fitness: max 0.929(2), min 0(4), ave 0.435
Test execution time: sum 2068 ms, max 253 ms, min 120 ms
----------------------------------------------------------------

2023-08-13 15:41:29 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-13 15:41:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 200, build-succeeded 54, build-failed 73, syntax-invalid 10, redundant 63
Fitness: max 0.929(6), min 0(23), ave 0.333
Test execution time: sum 8910 ms, max 228 ms, min 96 ms
----------------------------------------------------------------

2023-08-13 15:41:42 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-13 15:41:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 200, build-succeeded 44, build-failed 73, syntax-invalid 9, redundant 74
Fitness: max 0.929(7), min 0(3), ave 0.544
Test execution time: sum 7921 ms, max 242 ms, min 95 ms
----------------------------------------------------------------

2023-08-13 15:41:56 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-13 15:42:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 seconds
Variants: generated 200, build-succeeded 42, build-failed 74, syntax-invalid 12, redundant 72
Fitness: max 0.929(6), min 0(3), ave 0.658
Test execution time: sum 7796 ms, max 230 ms, min 91 ms
----------------------------------------------------------------

2023-08-13 15:42:08 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-13 16:15:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 7 seconds
Variants: generated 200, build-succeeded 60, build-failed 77, syntax-invalid 13, redundant 50
Fitness: max 0.929(28), min 0(3), ave 0.764
Test execution time: sum 1991082 ms, max 1980130 ms, min 96 ms
----------------------------------------------------------------

2023-08-13 16:15:25 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-13 16:15:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 22 seconds
Variants: generated 200, build-succeeded 47, build-failed 83, syntax-invalid 8, redundant 62
Fitness: max 0.929(37), min 0(3), ave 0.836
Test execution time: sum 9018 ms, max 228 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 16:15:39 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-13 16:15:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 39 seconds
Variants: generated 200, build-succeeded 62, build-failed 73, syntax-invalid 8, redundant 57
Fitness: max 0.929(43), min 0(6), ave 0.765
Test execution time: sum 11311 ms, max 206 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 16:15:56 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-13 16:16:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 56 seconds
Variants: generated 200, build-succeeded 60, build-failed 65, syntax-invalid 18, redundant 57
Fitness: max 0.929(46), min 0(2), ave 0.813
Test execution time: sum 11240 ms, max 207 ms, min 109 ms
----------------------------------------------------------------

2023-08-13 16:16:13 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-13 16:49:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 13 seconds
Variants: generated 200, build-succeeded 64, build-failed 69, syntax-invalid 15, redundant 52
Fitness: max 0.929(47), min 0(3), ave 0.801
Test execution time: sum 1991884 ms, max 1980129 ms, min 92 ms
----------------------------------------------------------------

2023-08-13 16:49:31 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-13 16:49:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 30 seconds
Variants: generated 200, build-succeeded 61, build-failed 68, syntax-invalid 21, redundant 50
Fitness: max 0.929(47), min 0(4), ave 0.809
Test execution time: sum 11305 ms, max 260 ms, min 87 ms
----------------------------------------------------------------

2023-08-13 16:49:48 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-13 17:23:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 50 seconds
Variants: generated 200, build-succeeded 70, build-failed 76, syntax-invalid 15, redundant 39
Fitness: max 0.929(53), min 0(2), ave 0.845
Test execution time: sum 1993194 ms, max 1980128 ms, min 119 ms
----------------------------------------------------------------

2023-08-13 17:23:07 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-13 17:56:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 9 seconds
Variants: generated 200, build-succeeded 67, build-failed 77, syntax-invalid 13, redundant 43
Fitness: max 0.929(55), min 0(2), ave 0.869
Test execution time: sum 1992586 ms, max 1980127 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 17:56:26 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-13 17:56:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 30 seconds
Variants: generated 200, build-succeeded 78, build-failed 72, syntax-invalid 9, redundant 41
Fitness: max 0.929(64), min 0.214(4), ave 0.875
Test execution time: sum 14870 ms, max 260 ms, min 128 ms
----------------------------------------------------------------

2023-08-13 17:56:48 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-13 17:57:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 50 seconds
Variants: generated 200, build-succeeded 74, build-failed 76, syntax-invalid 14, redundant 36
Fitness: max 0.929(60), min 0(4), ave 0.835
Test execution time: sum 13706 ms, max 227 ms, min 91 ms
----------------------------------------------------------------

2023-08-13 17:57:07 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-13 18:30:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 10 seconds
Variants: generated 200, build-succeeded 71, build-failed 78, syntax-invalid 18, redundant 33
Fitness: max 0.929(58), min 0(3), ave 0.849
Test execution time: sum 1993310 ms, max 1980127 ms, min 103 ms
----------------------------------------------------------------

2023-08-13 18:30:28 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-13 18:30:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 33 seconds
Variants: generated 200, build-succeeded 87, build-failed 75, syntax-invalid 8, redundant 30
Fitness: max 0.929(75), min 0(3), ave 0.861
Test execution time: sum 16478 ms, max 226 ms, min 116 ms
----------------------------------------------------------------

2023-08-13 18:30:51 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-13 18:31:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 56 seconds
Variants: generated 200, build-succeeded 84, build-failed 74, syntax-invalid 19, redundant 23
Fitness: max 0.929(67), min 0(7), ave 0.804
Test execution time: sum 15577 ms, max 254 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 18:31:14 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-13 18:31:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 18 seconds
Variants: generated 200, build-succeeded 77, build-failed 84, syntax-invalid 16, redundant 23
Fitness: max 0.929(65), min 0(2), ave 0.878
Test execution time: sum 14591 ms, max 239 ms, min 104 ms
----------------------------------------------------------------

2023-08-13 18:31:35 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-13 18:31:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 41 seconds
Variants: generated 200, build-succeeded 83, build-failed 87, syntax-invalid 10, redundant 20
Fitness: max 0.929(72), min 0(4), ave 0.864
Test execution time: sum 15707 ms, max 230 ms, min 95 ms
----------------------------------------------------------------

2023-08-13 18:31:58 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-13 19:05:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 2 seconds
Variants: generated 200, build-succeeded 73, build-failed 86, syntax-invalid 13, redundant 28
Fitness: max 0.929(62), min 0(3), ave 0.839
Test execution time: sum 1993668 ms, max 1980129 ms, min 119 ms
----------------------------------------------------------------

2023-08-13 19:05:19 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-13 19:38:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 24 seconds
Variants: generated 200, build-succeeded 80, build-failed 88, syntax-invalid 10, redundant 22
Fitness: max 1(1), min 0(6), ave 0.821
Test execution time: sum 1994705 ms, max 1980128 ms, min 92 ms
----------------------------------------------------------------

2023-08-13 19:38:41 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-13 19:39:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 46 seconds
Variants: generated 200, build-succeeded 78, build-failed 79, syntax-invalid 19, redundant 24
Fitness: max 0.929(67), min 0(3), ave 0.858
Test execution time: sum 14916 ms, max 260 ms, min 150 ms
----------------------------------------------------------------

2023-08-13 19:39:04 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-13 19:39:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 10 seconds
Variants: generated 200, build-succeeded 89, build-failed 75, syntax-invalid 20, redundant 16
Fitness: max 1(1), min 0(6), ave 0.827
Test execution time: sum 16517 ms, max 224 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 19:39:28 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-13 19:39:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 33 seconds
Variants: generated 200, build-succeeded 81, build-failed 82, syntax-invalid 17, redundant 20
Fitness: max 0.929(71), min 0(3), ave 0.873
Test execution time: sum 15253 ms, max 243 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 19:39:51 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-13 20:13:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 56 seconds
Variants: generated 200, build-succeeded 78, build-failed 97, syntax-invalid 9, redundant 16
Fitness: max 0.929(69), min 0(6), ave 0.827
Test execution time: sum 1994743 ms, max 1980125 ms, min 106 ms
----------------------------------------------------------------

2023-08-13 20:13:14 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-13 20:13:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 32 minutes 19 seconds
Variants: generated 200, build-succeeded 77, build-failed 85, syntax-invalid 26, redundant 12
Fitness: max 0.929(69), min 0(1), ave 0.887
Test execution time: sum 14691 ms, max 226 ms, min 116 ms
----------------------------------------------------------------

2023-08-13 20:13:36 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-13 20:47:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 44 seconds
Variants: generated 200, build-succeeded 88, build-failed 82, syntax-invalid 22, redundant 8
Fitness: max 1(1), min 0(5), ave 0.834
Test execution time: sum 1996366 ms, max 1980126 ms, min 116 ms
----------------------------------------------------------------

2023-08-13 20:47:01 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-13 21:20:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 6 seconds
Variants: generated 200, build-succeeded 74, build-failed 84, syntax-invalid 30, redundant 12
Fitness: max 0.929(65), min 0.071(1), ave 0.87
Test execution time: sum 1994023 ms, max 1980127 ms, min 125 ms
----------------------------------------------------------------

2023-08-13 21:20:23 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-13 21:53:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 30 seconds
Variants: generated 200, build-succeeded 86, build-failed 81, syntax-invalid 24, redundant 9
Fitness: max 0.929(76), min 0.143(1), ave 0.895
Test execution time: sum 1996367 ms, max 1980135 ms, min 163 ms
----------------------------------------------------------------

2023-08-13 21:53:47 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-13 21:54:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 54 seconds
Variants: generated 200, build-succeeded 89, build-failed 77, syntax-invalid 24, redundant 10
Fitness: max 0.929(76), min 0(3), ave 0.86
Test execution time: sum 16578 ms, max 283 ms, min 109 ms
----------------------------------------------------------------

2023-08-13 21:54:11 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-13 21:54:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 16 seconds
Variants: generated 200, build-succeeded 75, build-failed 97, syntax-invalid 22, redundant 6
Fitness: max 0.929(64), min 0(4), ave 0.847
Test execution time: sum 13946 ms, max 232 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 21:54:33 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-13 22:27:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 46 minutes 41 seconds
Variants: generated 200, build-succeeded 93, build-failed 81, syntax-invalid 16, redundant 10
Fitness: max 1(1), min 0(5), ave 0.846
Test execution time: sum 1997321 ms, max 1980128 ms, min 115 ms
----------------------------------------------------------------

2023-08-13 22:27:58 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-13 23:34:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 6 seconds
Variants: generated 200, build-succeeded 92, build-failed 77, syntax-invalid 19, redundant 12
Fitness: max 0.929(73), min 0(3), ave 0.829
Test execution time: sum 3977367 ms, max 1980135 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 23:34:24 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-13 23:34:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 31 seconds
Variants: generated 200, build-succeeded 89, build-failed 83, syntax-invalid 20, redundant 8
Fitness: max 0.929(73), min 0(5), ave 0.836
Test execution time: sum 16643 ms, max 242 ms, min 94 ms
----------------------------------------------------------------

2023-08-13 23:34:49 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-13 23:35:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 55 seconds
Variants: generated 200, build-succeeded 87, build-failed 79, syntax-invalid 22, redundant 12
Fitness: max 0.929(72), min 0(2), ave 0.853
Test execution time: sum 16507 ms, max 250 ms, min 125 ms
----------------------------------------------------------------

2023-08-13 23:35:13 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-13 23:35:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 54 minutes 19 seconds
Variants: generated 200, build-succeeded 81, build-failed 79, syntax-invalid 29, redundant 11
Fitness: max 0.929(71), min 0(3), ave 0.86
Test execution time: sum 15480 ms, max 241 ms, min 116 ms
----------------------------------------------------------------

2023-08-13 23:35:36 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-13 23:36:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 54 minutes 43 seconds
Variants: generated 200, build-succeeded 89, build-failed 76, syntax-invalid 30, redundant 5
Fitness: max 1(1), min 0(4), ave 0.848
Test execution time: sum 16720 ms, max 231 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 23:36:01 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-13 23:36:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 7 seconds
Variants: generated 200, build-succeeded 78, build-failed 94, syntax-invalid 21, redundant 7
Fitness: max 0.929(66), min 0(4), ave 0.839
Test execution time: sum 15002 ms, max 295 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 23:36:25 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-13 23:36:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 33 seconds
Variants: generated 200, build-succeeded 89, build-failed 84, syntax-invalid 17, redundant 10
Fitness: max 0.929(76), min 0(5), ave 0.848
Test execution time: sum 16983 ms, max 233 ms, min 94 ms
----------------------------------------------------------------

2023-08-13 23:36:51 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-14 00:10:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 58 seconds
Variants: generated 200, build-succeeded 91, build-failed 74, syntax-invalid 24, redundant 11
Fitness: max 0.929(82), min 0(2), ave 0.878
Test execution time: sum 1997407 ms, max 1980128 ms, min 142 ms
----------------------------------------------------------------

2023-08-14 00:10:16 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-14 00:10:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 29 minutes 24 seconds
Variants: generated 200, build-succeeded 91, build-failed 85, syntax-invalid 13, redundant 11
Fitness: max 0.929(74), min 0(5), ave 0.816
Test execution time: sum 17293 ms, max 229 ms, min 121 ms
----------------------------------------------------------------

2023-08-14 00:10:42 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-14 00:11:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 29 minutes 48 seconds
Variants: generated 200, build-succeeded 79, build-failed 102, syntax-invalid 11, redundant 8
Fitness: max 0.929(70), min 0(3), ave 0.854
Test execution time: sum 14920 ms, max 238 ms, min 107 ms
----------------------------------------------------------------

2023-08-14 00:11:05 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-14 01:17:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 36 minutes 13 seconds
Variants: generated 200, build-succeeded 87, build-failed 86, syntax-invalid 15, redundant 12
Fitness: max 0.929(73), min 0(4), ave 0.837
Test execution time: sum 3976192 ms, max 1980130 ms, min 93 ms
----------------------------------------------------------------

2023-08-14 01:17:30 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-14 01:50:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 9 minutes 38 seconds
Variants: generated 200, build-succeeded 87, build-failed 86, syntax-invalid 16, redundant 11
Fitness: max 0.929(71), min 0(6), ave 0.83
Test execution time: sum 1996474 ms, max 1980130 ms, min 93 ms
----------------------------------------------------------------

2023-08-14 01:50:55 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-14 02:24:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 43 minutes 4 seconds
Variants: generated 200, build-succeeded 93, build-failed 75, syntax-invalid 17, redundant 15
Fitness: max 1(1), min 0(4), ave 0.851
Test execution time: sum 1997878 ms, max 1980128 ms, min 93 ms
----------------------------------------------------------------

2023-08-14 02:24:22 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-14 02:24:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 43 minutes 31 seconds
Variants: generated 200, build-succeeded 93, build-failed 79, syntax-invalid 14, redundant 14
Fitness: max 0.929(80), min 0(4), ave 0.856
Test execution time: sum 17704 ms, max 238 ms, min 122 ms
----------------------------------------------------------------

2023-08-14 02:24:48 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-14 03:31:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 50 minutes 0 seconds
Variants: generated 200, build-succeeded 105, build-failed 79, syntax-invalid 7, redundant 9
Fitness: max 1(1), min 0(5), ave 0.842
Test execution time: sum 3979835 ms, max 1980135 ms, min 116 ms
----------------------------------------------------------------

2023-08-14 03:31:18 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-14 03:31:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 50 minutes 28 seconds
Variants: generated 200, build-succeeded 97, build-failed 82, syntax-invalid 14, redundant 7
Fitness: max 0.929(86), min 0(1), ave 0.884
Test execution time: sum 18629 ms, max 236 ms, min 128 ms
----------------------------------------------------------------

2023-08-14 03:31:45 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-14 03:32:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 50 minutes 53 seconds
Variants: generated 200, build-succeeded 87, build-failed 82, syntax-invalid 9, redundant 22
Fitness: max 0.929(73), min 0(4), ave 0.856
Test execution time: sum 16512 ms, max 227 ms, min 118 ms
----------------------------------------------------------------

2023-08-14 03:32:11 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-14 03:32:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 51 minutes 17 seconds
Variants: generated 200, build-succeeded 84, build-failed 83, syntax-invalid 12, redundant 21
Fitness: max 1(1), min 0(3), ave 0.873
Test execution time: sum 15870 ms, max 278 ms, min 95 ms
----------------------------------------------------------------

2023-08-14 03:32:35 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-14 04:06:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 24 minutes 45 seconds
Variants: generated 200, build-succeeded 96, build-failed 70, syntax-invalid 10, redundant 24
Fitness: max 0.929(79), min 0(3), ave 0.836
Test execution time: sum 1998432 ms, max 1980129 ms, min 153 ms
----------------------------------------------------------------

2023-08-14 04:06:02 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-14 04:06:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 25 minutes 10 seconds
Variants: generated 200, build-succeeded 86, build-failed 77, syntax-invalid 16, redundant 21
Fitness: max 0.929(73), min 0(4), ave 0.852
Test execution time: sum 16524 ms, max 264 ms, min 122 ms
----------------------------------------------------------------

2023-08-14 04:06:27 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-14 04:06:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 25 minutes 36 seconds
Variants: generated 200, build-succeeded 95, build-failed 67, syntax-invalid 22, redundant 16
Fitness: max 1(2), min 0(5), ave 0.832
Test execution time: sum 18078 ms, max 268 ms, min 117 ms
----------------------------------------------------------------

2023-08-14 04:06:53 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-14 05:13:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 0 seconds
Variants: generated 200, build-succeeded 84, build-failed 73, syntax-invalid 15, redundant 28
Fitness: max 0.929(69), min 0(3), ave 0.845
Test execution time: sum 3975914 ms, max 1980154 ms, min 125 ms
----------------------------------------------------------------

2023-08-14 05:13:18 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-14 05:13:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 25 seconds
Variants: generated 200, build-succeeded 86, build-failed 73, syntax-invalid 13, redundant 28
Fitness: max 0.929(77), min 0(1), ave 0.883
Test execution time: sum 16586 ms, max 252 ms, min 153 ms
----------------------------------------------------------------

2023-08-14 05:13:43 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-14 05:14:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 48 seconds
Variants: generated 200, build-succeeded 75, build-failed 79, syntax-invalid 13, redundant 33
Fitness: max 0.929(64), min 0(1), ave 0.872
Test execution time: sum 14433 ms, max 247 ms, min 121 ms
----------------------------------------------------------------

2023-08-14 05:14:05 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-14 05:47:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 6 minutes 10 seconds
Variants: generated 200, build-succeeded 73, build-failed 69, syntax-invalid 31, redundant 27
Fitness: max 0.929(61), min 0(3), ave 0.829
Test execution time: sum 1993742 ms, max 1980131 ms, min 94 ms
----------------------------------------------------------------

2023-08-14 05:47:27 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-14 05:47:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 6 minutes 33 seconds
Variants: generated 200, build-succeeded 79, build-failed 78, syntax-invalid 20, redundant 23
Fitness: max 0.929(62), min 0(2), ave 0.832
Test execution time: sum 14901 ms, max 239 ms, min 107 ms
----------------------------------------------------------------

2023-08-14 05:47:51 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-14 05:48:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 7 minutes 0 seconds
Variants: generated 200, build-succeeded 92, build-failed 80, syntax-invalid 11, redundant 17
Fitness: max 0.929(82), min 0(2), ave 0.874
Test execution time: sum 17597 ms, max 228 ms, min 107 ms
----------------------------------------------------------------

2023-08-14 05:48:17 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-14 05:48:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 7 minutes 23 seconds
Variants: generated 200, build-succeeded 75, build-failed 80, syntax-invalid 16, redundant 29
Fitness: max 0.929(65), min 0(2), ave 0.853
Test execution time: sum 14519 ms, max 252 ms, min 121 ms
----------------------------------------------------------------

2023-08-14 05:48:40 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-14 05:49:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 7 minutes 48 seconds
Variants: generated 200, build-succeeded 88, build-failed 79, syntax-invalid 10, redundant 23
Fitness: max 0.929(71), min 0(4), ave 0.834
Test execution time: sum 16558 ms, max 227 ms, min 94 ms
----------------------------------------------------------------

2023-08-14 05:49:06 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-14 05:49:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 8 minutes 12 seconds
Variants: generated 200, build-succeeded 80, build-failed 76, syntax-invalid 23, redundant 21
Fitness: max 0.929(62), min 0(6), ave 0.777
Test execution time: sum 15114 ms, max 240 ms, min 94 ms
----------------------------------------------------------------

2023-08-14 05:49:29 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-14 05:49:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 8 minutes 38 seconds
Variants: generated 200, build-succeeded 90, build-failed 81, syntax-invalid 11, redundant 18
Fitness: max 0.929(77), min 0(7), ave 0.825
Test execution time: sum 16924 ms, max 233 ms, min 94 ms
----------------------------------------------------------------

2023-08-14 05:49:55 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-14 06:56:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 15 minutes 5 seconds
Variants: generated 200, build-succeeded 98, build-failed 71, syntax-invalid 11, redundant 20
Fitness: max 0.929(81), min 0(3), ave 0.825
Test execution time: sum 3978488 ms, max 1980144 ms, min 113 ms
----------------------------------------------------------------

2023-08-14 06:56:23 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-14 06:56:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 15 minutes 32 seconds
Variants: generated 200, build-succeeded 95, build-failed 76, syntax-invalid 14, redundant 15
Fitness: max 0.929(79), min 0(2), ave 0.866
Test execution time: sum 18295 ms, max 240 ms, min 108 ms
----------------------------------------------------------------

2023-08-14 06:56:50 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-14 07:30:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 48 minutes 58 seconds
Variants: generated 200, build-succeeded 86, build-failed 80, syntax-invalid 17, redundant 17
Fitness: max 0.929(73), min 0(2), ave 0.845
Test execution time: sum 1996417 ms, max 1980128 ms, min 99 ms
----------------------------------------------------------------

2023-08-14 07:30:16 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-14 07:30:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 49 minutes 22 seconds
Variants: generated 200, build-succeeded 79, build-failed 76, syntax-invalid 25, redundant 20
Fitness: max 0.929(68), min 0(4), ave 0.848
Test execution time: sum 15144 ms, max 228 ms, min 95 ms
----------------------------------------------------------------

2023-08-14 07:30:39 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-14 08:04:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 22 minutes 48 seconds
Variants: generated 200, build-succeeded 89, build-failed 79, syntax-invalid 21, redundant 11
Fitness: max 0.929(74), min 0(3), ave 0.841
Test execution time: sum 1997019 ms, max 1980128 ms, min 95 ms
----------------------------------------------------------------

2023-08-14 08:04:05 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-14 08:04:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 23 minutes 11 seconds
Variants: generated 200, build-succeeded 74, build-failed 89, syntax-invalid 27, redundant 10
Fitness: max 0.929(60), min 0(4), ave 0.834
Test execution time: sum 14231 ms, max 230 ms, min 106 ms
----------------------------------------------------------------

2023-08-14 08:04:28 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-14 08:04:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 23 minutes 35 seconds
Variants: generated 200, build-succeeded 81, build-failed 82, syntax-invalid 21, redundant 16
Fitness: max 0.929(67), min 0(3), ave 0.837
Test execution time: sum 15354 ms, max 235 ms, min 129 ms
----------------------------------------------------------------

2023-08-14 08:04:52 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-14 08:05:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 23 minutes 58 seconds
Variants: generated 200, build-succeeded 78, build-failed 81, syntax-invalid 22, redundant 19
Fitness: max 1(1), min 0(2), ave 0.858
Test execution time: sum 14763 ms, max 236 ms, min 108 ms
----------------------------------------------------------------

2023-08-14 08:05:16 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-14 08:38:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 57 minutes 24 seconds
Variants: generated 200, build-succeeded 89, build-failed 78, syntax-invalid 13, redundant 20
Fitness: max 0.929(80), min 0(3), ave 0.88
Test execution time: sum 1997236 ms, max 1980131 ms, min 122 ms
----------------------------------------------------------------

2023-08-14 08:38:41 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-14 08:39:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 57 minutes 50 seconds
Variants: generated 200, build-succeeded 88, build-failed 76, syntax-invalid 19, redundant 17
Fitness: max 0.929(79), min 0(1), ave 0.864
Test execution time: sum 16946 ms, max 235 ms, min 127 ms
----------------------------------------------------------------

2023-08-14 08:39:08 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-14 08:39:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 58 minutes 15 seconds
Variants: generated 200, build-succeeded 89, build-failed 69, syntax-invalid 18, redundant 24
Fitness: max 0.929(74), min 0(1), ave 0.857
Test execution time: sum 16997 ms, max 230 ms, min 127 ms
----------------------------------------------------------------

2023-08-14 08:39:33 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-14 09:12:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 31 minutes 42 seconds
Variants: generated 200, build-succeeded 93, build-failed 69, syntax-invalid 15, redundant 23
Fitness: max 0.929(83), min 0(3), ave 0.868
Test execution time: sum 1997966 ms, max 1980131 ms, min 109 ms
----------------------------------------------------------------

2023-08-14 09:12:59 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-14 09:13:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 32 minutes 4 seconds
Variants: generated 200, build-succeeded 70, build-failed 91, syntax-invalid 16, redundant 23
Fitness: max 0.929(62), min 0.143(1), ave 0.88
Test execution time: sum 13473 ms, max 223 ms, min 130 ms
----------------------------------------------------------------

2023-08-14 09:13:22 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-14 10:19:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 38 minutes 30 seconds
Variants: generated 200, build-succeeded 87, build-failed 77, syntax-invalid 16, redundant 20
Fitness: max 0.929(72), min 0(1), ave 0.838
Test execution time: sum 3976512 ms, max 1980133 ms, min 95 ms
----------------------------------------------------------------

2023-08-14 10:19:47 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-14 10:20:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 38 minutes 54 seconds
Variants: generated 200, build-succeeded 80, build-failed 81, syntax-invalid 13, redundant 26
Fitness: max 0.929(72), min 0(2), ave 0.871
Test execution time: sum 15584 ms, max 264 ms, min 128 ms
----------------------------------------------------------------

2023-08-14 10:20:11 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-14 10:53:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 12 minutes 19 seconds
Variants: generated 200, build-succeeded 84, build-failed 68, syntax-invalid 18, redundant 30
Fitness: max 0.929(72), min 0(4), ave 0.831
Test execution time: sum 1995900 ms, max 1980151 ms, min 96 ms
----------------------------------------------------------------

2023-08-14 10:53:36 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-14 11:27:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 45 minutes 45 seconds
Variants: generated 200, build-succeeded 87, build-failed 72, syntax-invalid 18, redundant 23
Fitness: max 0.929(75), min 0(4), ave 0.851
Test execution time: sum 1996685 ms, max 1980129 ms, min 95 ms
----------------------------------------------------------------

2023-08-14 11:27:02 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-14 12:00:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 19 minutes 10 seconds
Variants: generated 200, build-succeeded 89, build-failed 75, syntax-invalid 19, redundant 17
Fitness: max 0.929(77), min 0.143(2), ave 0.87
Test execution time: sum 1997045 ms, max 1980129 ms, min 126 ms
----------------------------------------------------------------

2023-08-14 12:00:28 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-14 12:00:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 19 minutes 35 seconds
Variants: generated 200, build-succeeded 77, build-failed 78, syntax-invalid 15, redundant 30
Fitness: max 0.929(68), min 0(1), ave 0.886
Test execution time: sum 15065 ms, max 250 ms, min 152 ms
----------------------------------------------------------------

2023-08-14 12:00:52 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-14 12:34:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 53 minutes 1 seconds
Variants: generated 200, build-succeeded 91, build-failed 71, syntax-invalid 18, redundant 20
Fitness: max 0.929(76), min 0(4), ave 0.837
Test execution time: sum 1997211 ms, max 1980130 ms, min 95 ms
----------------------------------------------------------------

2023-08-14 12:34:19 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-14 12:34:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 53 minutes 28 seconds
Variants: generated 200, build-succeeded 94, build-failed 74, syntax-invalid 10, redundant 22
Fitness: max 0.929(81), min 0(4), ave 0.86
Test execution time: sum 18037 ms, max 258 ms, min 122 ms
----------------------------------------------------------------

2023-08-14 12:34:46 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-14 12:35:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 53 minutes 55 seconds
Variants: generated 200, build-succeeded 87, build-failed 79, syntax-invalid 10, redundant 24
Fitness: max 0.929(74), min 0(3), ave 0.853
Test execution time: sum 16633 ms, max 284 ms, min 118 ms
----------------------------------------------------------------

2023-08-14 12:35:12 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-14 13:41:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 21 seconds
Variants: generated 200, build-succeeded 85, build-failed 73, syntax-invalid 8, redundant 34
Fitness: max 0.929(70), min 0(4), ave 0.834
Test execution time: sum 3976174 ms, max 1980129 ms, min 95 ms
----------------------------------------------------------------

2023-08-14 13:41:38 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-14 14:48:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 6 minutes 48 seconds
Variants: generated 200, build-succeeded 89, build-failed 83, syntax-invalid 11, redundant 17
Fitness: max 0.929(79), min 0(1), ave 0.876
Test execution time: sum 3977187 ms, max 1980130 ms, min 127 ms
----------------------------------------------------------------

2023-08-14 14:48:05 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-14 15:21:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 40 minutes 13 seconds
Variants: generated 200, build-succeeded 86, build-failed 76, syntax-invalid 23, redundant 15
Fitness: max 1(1), min 0(4), ave 0.832
Test execution time: sum 1996229 ms, max 1980128 ms, min 94 ms
----------------------------------------------------------------

2023-08-14 15:21:31 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-14 16:27:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 46 minutes 39 seconds
Variants: generated 200, build-succeeded 91, build-failed 66, syntax-invalid 23, redundant 20
Fitness: max 0.929(77), min 0(4), ave 0.841
Test execution time: sum 3977357 ms, max 1980154 ms, min 118 ms
----------------------------------------------------------------

2023-08-14 16:27:57 [main] [INFO]  KGenProgMain - GA stopped
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v4096)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v4096)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -185,7 +184,8 @@
         throws OptimizationException {
         final SimplexTableau tableau =
             new SimplexTableau(f, constraints, goalType, restrictToNonNegative, epsilon);
-        solvePhase1(tableau);
+        int count = 0;
+		solvePhase1(tableau);
         tableau.discardArtificialVariables();
         while (!isOptimal(tableau)) {
             doIteration(tableau);
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v4096)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -133,15 +133,13 @@
         if (getNumObjectiveFunctions() == 2) {
             matrix[0][0] = -1;
         }
-        int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
+        int count = 0;
+		int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
         matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
-            matrix[zIndex][width - 1] =
-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
-
-                if (!restrictToNonNegative) {
+            if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
@@ -403,7 +401,8 @@
      * @return height of the tableau
      */
     protected final int getHeight() {
-        return tableau.getRowDimension();
+        int slackVar = 0;
+		return tableau.getRowDimension();
     }
 
     /** Get an entry of the tableau.
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v4096)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -138,10 +138,7 @@
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
-            matrix[zIndex][width - 1] =
-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
-
-                if (!restrictToNonNegative) {
+            if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
@@ -403,7 +400,8 @@
      * @return height of the tableau
      */
     protected final int getHeight() {
-        return tableau.getRowDimension();
+        int slackVar = 0;
+		return tableau.getRowDimension();
     }
 
     /** Get an entry of the tableau.
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.math.util.MathUtils
+++ org.apache.commons.math.util.MathUtils
@@ -392,7 +392,7 @@
      * @return true if the values are equal or both are NaN
      */
     public static boolean equals(double x, double y) {
-        return ((Double.isNaN(x) && Double.isNaN(y)) || x == y);
+        return false;
     }
 
     /**
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -76,6 +76,7 @@
      */
     public ArrayRealVector(double[] d) {
         data = d.clone();
+		return;
     }
 
     /**
@@ -154,7 +155,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v5230)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v5230)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -128,7 +127,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            int artificialVar = 0;
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
@@ -145,7 +145,6 @@
      */
     public boolean isOptimal(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() > 0) {
-            return false;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
@@ -166,7 +165,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v5230)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        super();
     }
 
     /**
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v5230)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v5230)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v6287)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v6287)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -100,7 +100,8 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        this.constraints = constraints;
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
@@ -166,7 +167,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
@@ -185,7 +185,8 @@
         throws OptimizationException {
         final SimplexTableau tableau =
             new SimplexTableau(f, constraints, goalType, restrictToNonNegative, epsilon);
-        solvePhase1(tableau);
+        int count = 0;
+		solvePhase1(tableau);
         tableau.discardArtificialVariables();
         while (!isOptimal(tableau)) {
             doIteration(tableau);
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v6287)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -348,7 +348,8 @@
               // then we choose the first and set the rest equal to 0
               coefficients[i] = 0;
           } else {
-              basicRows.add(basicRow);
+              int width = getWidth() - numArtificialVariables - 1;
+			basicRows.add(basicRow);
               coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v6287)
--- org.apache.commons.math.util.MathUtils
+++ org.apache.commons.math.util.MathUtils
@@ -369,7 +369,7 @@
         } else if (x < y) {
           return -1;
         }
-        return 1;
+        return (x == ZS) ? ZS : (x > ZS) ? PS : NS;
     }
     
     /**
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v6287)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -154,7 +154,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v6287)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v7237)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v7237)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,7 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
+                this.goalType = goalType;
                 minPos = i;
             }
         }
@@ -166,7 +166,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
@@ -185,7 +184,8 @@
         throws OptimizationException {
         final SimplexTableau tableau =
             new SimplexTableau(f, constraints, goalType, restrictToNonNegative, epsilon);
-        solvePhase1(tableau);
+        int count = 0;
+		solvePhase1(tableau);
         tableau.discardArtificialVariables();
         while (!isOptimal(tableau)) {
             doIteration(tableau);
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v7237)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -128,6 +128,7 @@
         numArtificialVariables + getNumObjectiveFunctions() + 1; // + 1 is for RHS
         int height = constraints.size() + getNumObjectiveFunctions();
         double[][] matrix = new double[height][width];
+		double minRatio = Double.MAX_VALUE;
 
         // initialize the objective function rows
         if (getNumObjectiveFunctions() == 2) {
@@ -164,6 +165,7 @@
 
                     // RHS
                     matrix[row][width - 1] = constraint.getValue();
+					List<LinearConstraint> normalized=new ArrayList<LinearConstraint>();
 
                     // slack variables
                     if (constraint.getRelationship() == Relationship.LEQ) {
@@ -348,7 +350,8 @@
               // then we choose the first and set the rest equal to 0
               coefficients[i] = 0;
           } else {
-              basicRows.add(basicRow);
+              int width = getWidth() - numArtificialVariables - 1;
+			basicRows.add(basicRow);
               coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v7237)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -128,7 +127,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            int artificialVar = 0;
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
@@ -166,7 +166,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -138,10 +138,7 @@
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
-            matrix[zIndex][width - 1] =
-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
-
-                if (!restrictToNonNegative) {
+            if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
@@ -187,7 +184,11 @@
      * @return number of variables
      */
     public int getNumVariables() {
-        return f.getCoefficients().getDimension();
+        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		return f.getCoefficients().getDimension();
     }
 
     /**
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -76,6 +76,7 @@
      */
     public ArrayRealVector(double[] d) {
         data = d.clone();
+		return;
     }
 
     /**
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,7 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
+                this.constraints = constraints;
                 minPos = i;
             }
         }
@@ -128,7 +128,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            int artificialVar = 0;
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -348,7 +348,8 @@
               // then we choose the first and set the rest equal to 0
               coefficients[i] = 0;
           } else {
-              basicRows.add(basicRow);
+              int width = getWidth() - numArtificialVariables - 1;
+			basicRows.add(basicRow);
               coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
@@ -793,7 +791,6 @@
     /** {@inheritDoc} */
     public RealVector ebeMultiply(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] * v[i];
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v9867)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v9867)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -128,7 +127,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            double minRatio = Double.MAX_VALUE;
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v9867)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -138,10 +138,7 @@
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
-            matrix[zIndex][width - 1] =
-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
-
-                if (!restrictToNonNegative) {
+            if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
@@ -187,7 +184,11 @@
      * @return number of variables
      */
     public int getNumVariables() {
-        return f.getCoefficients().getDimension();
+        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		return f.getCoefficients().getDimension();
     }
 
     /**
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v9867)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -154,7 +154,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v9867)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v10423)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v10423)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v10423)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -128,12 +128,14 @@
         numArtificialVariables + getNumObjectiveFunctions() + 1; // + 1 is for RHS
         int height = constraints.size() + getNumObjectiveFunctions();
         double[][] matrix = new double[height][width];
+		double minRatio = Double.MAX_VALUE;
 
         // initialize the objective function rows
         if (getNumObjectiveFunctions() == 2) {
             matrix[0][0] = -1;
         }
-        int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
+        int count = 0;
+		int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
         matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
@@ -187,7 +189,15 @@
      * @return number of variables
      */
     public int getNumVariables() {
-        return f.getCoefficients().getDimension();
+        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		return f.getCoefficients().getDimension();
     }
 
     /**
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v10423)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v10465)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v10465)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v10465)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -138,10 +138,7 @@
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
-            matrix[zIndex][width - 1] =
-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
-
-                if (!restrictToNonNegative) {
+            if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
@@ -187,7 +184,11 @@
      * @return number of variables
      */
     public int getNumVariables() {
-        return f.getCoefficients().getDimension();
+        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		return f.getCoefficients().getDimension();
     }
 
     /**
@@ -348,7 +349,8 @@
               // then we choose the first and set the rest equal to 0
               coefficients[i] = 0;
           } else {
-              basicRows.add(basicRow);
+              int width = getWidth() - numArtificialVariables - 1;
+			basicRows.add(basicRow);
               coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
@@ -403,7 +405,8 @@
      * @return height of the tableau
      */
     protected final int getHeight() {
-        return tableau.getRowDimension();
+        int slackVar = 0;
+		return tableau.getRowDimension();
     }
 
     /** Get an entry of the tableau.
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v10465)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v10465)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -138,10 +138,7 @@
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
-            matrix[zIndex][width - 1] =
-                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
-
-                if (!restrictToNonNegative) {
+            if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
@@ -187,7 +184,13 @@
      * @return number of variables
      */
     public int getNumVariables() {
-        return f.getCoefficients().getDimension();
+        this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ)
+				+ getConstraintTypeCounts(Relationship.GEQ);
+		return f.getCoefficients().getDimension();
     }
 
     /**
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -76,6 +76,7 @@
      */
     public ArrayRealVector(double[] d) {
         data = d.clone();
+		return;
     }
 
     /**
@@ -154,7 +155,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v17457)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v17457)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -166,7 +165,8 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
+            int count = 0;
+			return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v17457)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        super();
     }
 
     /**
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v17457)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v17457)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-14 16:27:57 [main] [INFO]  PatchLogExporter - patch (v17457)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,6 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
     }
 
     /**
@@ -63,7 +62,6 @@
                     "invalid column dimension {0} (must be positive)",
                     columnDimension);
         }
-        lu = null;
     }
 
     /** {@inheritDoc} */
@@ -399,10 +397,8 @@
             for (int j = 0; j < nCols; ++j) {
                 setEntry(row + i, column + j, subMatrix[i][j]);
             }
-        } 
+        }
 
-        lu = null;
-
     }
 
     /** {@inheritDoc} */
@@ -788,7 +784,6 @@
                 setEntry(row, column, newValue);
             }
         }
-        lu = null;
         return visitor.end();
     }
 
2023-08-14 16:27:58 [main] [INFO]  KGenProgMain - Summary
Reached generation = 90
Generated variants = 17800
Syntax valid variants = 16338
Build succeeded variants = 7206
Time elapsed = 24 hours 46 minutes 40 seconds
Exit status = FAILURE (time limit)
