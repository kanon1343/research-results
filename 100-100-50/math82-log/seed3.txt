2023-08-12 15:18:59 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-12 15:18:59 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-12 15:18:59 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-12 15:18:59 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82/kgenprog-82.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/src/main] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.optimization.linear.SimplexSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 3 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-12 15:19:07 [main] [INFO]  KGenProgMain - initial failed tests (1/14)
org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288: expected:<10.0> but was:<11.5>

2023-08-12 15:19:07 [main] [INFO]  KGenProgMain - GA started
2023-08-12 15:19:07 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-12 15:19:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, build-succeeded 15, build-failed 61, syntax-invalid 11, redundant 13
Fitness: max 0.929(3), min 0(6), ave 0.381
Test execution time: sum 3041 ms, max 299 ms, min 140 ms
----------------------------------------------------------------

2023-08-12 15:19:13 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-12 15:19:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, build-succeeded 19, build-failed 69, syntax-invalid 3, redundant 9
Fitness: max 0.929(5), min 0(3), ave 0.5
Test execution time: sum 3427 ms, max 206 ms, min 94 ms
----------------------------------------------------------------

2023-08-12 15:19:20 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-12 15:19:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 200, build-succeeded 54, build-failed 71, syntax-invalid 13, redundant 62
Fitness: max 0.929(5), min 0(14), ave 0.374
Test execution time: sum 8678 ms, max 234 ms, min 93 ms
----------------------------------------------------------------

2023-08-12 15:19:33 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-12 15:19:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 200, build-succeeded 43, build-failed 67, syntax-invalid 12, redundant 78
Fitness: max 0.929(8), min 0(5), ave 0.563
Test execution time: sum 7828 ms, max 209 ms, min 93 ms
----------------------------------------------------------------

2023-08-12 15:19:46 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-12 15:19:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 seconds
Variants: generated 200, build-succeeded 46, build-failed 65, syntax-invalid 19, redundant 70
Fitness: max 0.929(17), min 0(7), ave 0.683
Test execution time: sum 8512 ms, max 230 ms, min 94 ms
----------------------------------------------------------------

2023-08-12 15:19:58 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-12 15:20:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 4 seconds
Variants: generated 200, build-succeeded 48, build-failed 73, syntax-invalid 13, redundant 66
Fitness: max 0.929(29), min 0(1), ave 0.845
Test execution time: sum 8985 ms, max 225 ms, min 129 ms
----------------------------------------------------------------

2023-08-12 15:20:11 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-12 16:26:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 17 seconds
Variants: generated 200, build-succeeded 48, build-failed 69, syntax-invalid 18, redundant 65
Fitness: max 0.929(39), min 0(2), ave 0.827
Test execution time: sum 3968957 ms, max 1980158 ms, min 116 ms
----------------------------------------------------------------

2023-08-12 16:26:24 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-12 16:26:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 32 seconds
Variants: generated 200, build-succeeded 58, build-failed 61, syntax-invalid 18, redundant 63
Fitness: max 0.929(49), min 0(1), ave 0.85
Test execution time: sum 10897 ms, max 207 ms, min 139 ms
----------------------------------------------------------------

2023-08-12 16:26:40 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-12 16:59:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 47 seconds
Variants: generated 200, build-succeeded 55, build-failed 72, syntax-invalid 22, redundant 51
Fitness: max 0.929(45), min 0(5), ave 0.809
Test execution time: sum 1990148 ms, max 1980138 ms, min 92 ms
----------------------------------------------------------------

2023-08-12 16:59:55 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-12 17:00:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 7 seconds
Variants: generated 200, build-succeeded 79, build-failed 64, syntax-invalid 21, redundant 36
Fitness: max 1(1), min 0(3), ave 0.839
Test execution time: sum 14644 ms, max 221 ms, min 106 ms
----------------------------------------------------------------

2023-08-12 17:00:14 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-12 17:00:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 23 seconds
Variants: generated 200, build-succeeded 61, build-failed 79, syntax-invalid 20, redundant 40
Fitness: max 0.929(55), min 0(2), ave 0.867
Test execution time: sum 11469 ms, max 227 ms, min 108 ms
----------------------------------------------------------------

2023-08-12 17:00:31 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-12 17:00:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 41 seconds
Variants: generated 200, build-succeeded 70, build-failed 72, syntax-invalid 21, redundant 37
Fitness: max 0.929(56), min 0(6), ave 0.83
Test execution time: sum 12822 ms, max 209 ms, min 90 ms
----------------------------------------------------------------

2023-08-12 17:00:49 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-12 17:34:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 2 seconds
Variants: generated 200, build-succeeded 83, build-failed 75, syntax-invalid 23, redundant 19
Fitness: max 0.929(69), min 0(5), ave 0.809
Test execution time: sum 1995376 ms, max 1980167 ms, min 94 ms
----------------------------------------------------------------

2023-08-12 17:34:10 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-12 17:34:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 24 seconds
Variants: generated 200, build-succeeded 83, build-failed 73, syntax-invalid 17, redundant 27
Fitness: max 0.929(73), min 0(2), ave 0.87
Test execution time: sum 15673 ms, max 244 ms, min 115 ms
----------------------------------------------------------------

2023-08-12 17:34:31 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-12 17:34:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 45 seconds
Variants: generated 200, build-succeeded 85, build-failed 71, syntax-invalid 20, redundant 24
Fitness: max 0.929(74), min 0(4), ave 0.856
Test execution time: sum 15872 ms, max 226 ms, min 92 ms
----------------------------------------------------------------

2023-08-12 17:34:53 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-12 17:35:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 8 seconds
Variants: generated 200, build-succeeded 95, build-failed 61, syntax-invalid 13, redundant 31
Fitness: max 0.929(74), min 0(4), ave 0.836
Test execution time: sum 17803 ms, max 224 ms, min 92 ms
----------------------------------------------------------------

2023-08-12 17:35:16 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-12 17:35:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 30 seconds
Variants: generated 200, build-succeeded 87, build-failed 71, syntax-invalid 17, redundant 25
Fitness: max 0.929(70), min 0(5), ave 0.838
Test execution time: sum 16190 ms, max 223 ms, min 91 ms
----------------------------------------------------------------

2023-08-12 17:35:38 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-12 17:35:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 50 seconds
Variants: generated 200, build-succeeded 79, build-failed 75, syntax-invalid 11, redundant 35
Fitness: max 0.929(68), min 0(5), ave 0.835
Test execution time: sum 14665 ms, max 215 ms, min 93 ms
----------------------------------------------------------------

2023-08-12 17:35:58 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-12 18:09:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 12 seconds
Variants: generated 200, build-succeeded 87, build-failed 70, syntax-invalid 15, redundant 28
Fitness: max 0.929(70), min 0(4), ave 0.83
Test execution time: sum 1996572 ms, max 1980139 ms, min 93 ms
----------------------------------------------------------------

2023-08-12 18:09:20 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-12 18:09:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 36 seconds
Variants: generated 200, build-succeeded 95, build-failed 70, syntax-invalid 8, redundant 27
Fitness: max 0.929(79), min 0(5), ave 0.836
Test execution time: sum 17879 ms, max 228 ms, min 71 ms
----------------------------------------------------------------

2023-08-12 18:09:44 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-12 18:43:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 58 seconds
Variants: generated 200, build-succeeded 79, build-failed 75, syntax-invalid 13, redundant 33
Fitness: max 0.929(67), min 0(4), ave 0.851
Test execution time: sum 1995353 ms, max 1980128 ms, min 115 ms
----------------------------------------------------------------

2023-08-12 18:43:05 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-12 19:16:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 21 seconds
Variants: generated 200, build-succeeded 86, build-failed 75, syntax-invalid 17, redundant 22
Fitness: max 0.929(75), min 0(2), ave 0.866
Test execution time: sum 1996606 ms, max 1980128 ms, min 92 ms
----------------------------------------------------------------

2023-08-12 19:16:29 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-12 19:16:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 45 seconds
Variants: generated 200, build-succeeded 94, build-failed 72, syntax-invalid 13, redundant 21
Fitness: max 0.929(91), min 0(1), ave 0.91
Test execution time: sum 17786 ms, max 231 ms, min 116 ms
----------------------------------------------------------------

2023-08-12 19:16:53 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-12 19:50:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 9 seconds
Variants: generated 200, build-succeeded 90, build-failed 74, syntax-invalid 16, redundant 20
Fitness: max 0.929(77), min 0(2), ave 0.839
Test execution time: sum 1996928 ms, max 1980128 ms, min 116 ms
----------------------------------------------------------------

2023-08-12 19:50:16 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-12 19:50:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 31 seconds
Variants: generated 200, build-succeeded 82, build-failed 70, syntax-invalid 25, redundant 23
Fitness: max 0.929(74), min 0(2), ave 0.876
Test execution time: sum 15465 ms, max 212 ms, min 119 ms
----------------------------------------------------------------

2023-08-12 19:50:39 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-12 20:24:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 56 seconds
Variants: generated 200, build-succeeded 98, build-failed 68, syntax-invalid 18, redundant 16
Fitness: max 0.929(85), min 0(3), ave 0.857
Test execution time: sum 1998294 ms, max 1980113 ms, min 99 ms
----------------------------------------------------------------

2023-08-12 20:24:03 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-12 20:57:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 20 seconds
Variants: generated 200, build-succeeded 96, build-failed 71, syntax-invalid 15, redundant 18
Fitness: max 0.929(83), min 0(3), ave 0.853
Test execution time: sum 1998010 ms, max 1980124 ms, min 116 ms
----------------------------------------------------------------

2023-08-12 20:57:28 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-12 20:57:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 43 seconds
Variants: generated 200, build-succeeded 88, build-failed 71, syntax-invalid 19, redundant 22
Fitness: max 0.929(82), min 0(2), ave 0.878
Test execution time: sum 16874 ms, max 221 ms, min 127 ms
----------------------------------------------------------------

2023-08-12 20:57:51 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-12 21:31:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 8 seconds
Variants: generated 200, build-succeeded 95, build-failed 84, syntax-invalid 8, redundant 13
Fitness: max 0.929(85), min 0(6), ave 0.835
Test execution time: sum 1997803 ms, max 1980134 ms, min 102 ms
----------------------------------------------------------------

2023-08-12 21:31:15 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-12 21:31:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 33 seconds
Variants: generated 200, build-succeeded 97, build-failed 68, syntax-invalid 13, redundant 22
Fitness: max 0.929(84), min 0(5), ave 0.84
Test execution time: sum 18272 ms, max 247 ms, min 105 ms
----------------------------------------------------------------

2023-08-12 21:31:40 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-12 21:32:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 56 seconds
Variants: generated 200, build-succeeded 89, build-failed 68, syntax-invalid 17, redundant 26
Fitness: max 0.929(79), min 0(2), ave 0.884
Test execution time: sum 16957 ms, max 238 ms, min 93 ms
----------------------------------------------------------------

2023-08-12 21:32:04 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-12 22:05:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 46 minutes 19 seconds
Variants: generated 200, build-succeeded 93, build-failed 71, syntax-invalid 17, redundant 19
Fitness: max 1(1), min 0(6), ave 0.828
Test execution time: sum 1997113 ms, max 1980124 ms, min 116 ms
----------------------------------------------------------------

2023-08-12 22:05:27 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-12 22:05:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 46 minutes 44 seconds
Variants: generated 200, build-succeeded 96, build-failed 76, syntax-invalid 10, redundant 18
Fitness: max 0.929(88), min 0(3), ave 0.879
Test execution time: sum 18235 ms, max 253 ms, min 97 ms
----------------------------------------------------------------

2023-08-12 22:05:51 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-12 22:39:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 8 seconds
Variants: generated 200, build-succeeded 95, build-failed 71, syntax-invalid 20, redundant 14
Fitness: max 0.929(85), min 0(4), ave 0.85
Test execution time: sum 1997882 ms, max 1980126 ms, min 93 ms
----------------------------------------------------------------

2023-08-12 22:39:16 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-12 23:12:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 30 seconds
Variants: generated 200, build-succeeded 79, build-failed 78, syntax-invalid 25, redundant 18
Fitness: max 0.929(67), min 0(1), ave 0.87
Test execution time: sum 1994859 ms, max 1980137 ms, min 116 ms
----------------------------------------------------------------

2023-08-12 23:12:37 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-12 23:13:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 55 seconds
Variants: generated 200, build-succeeded 100, build-failed 77, syntax-invalid 12, redundant 11
Fitness: max 0.929(88), min 0(4), ave 0.856
Test execution time: sum 18848 ms, max 241 ms, min 116 ms
----------------------------------------------------------------

2023-08-12 23:13:03 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-12 23:46:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 20 seconds
Variants: generated 200, build-succeeded 97, build-failed 71, syntax-invalid 15, redundant 17
Fitness: max 1(1), min 0(5), ave 0.838
Test execution time: sum 1997887 ms, max 1980127 ms, min 92 ms
----------------------------------------------------------------

2023-08-12 23:46:28 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-13 00:19:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 42 seconds
Variants: generated 200, build-succeeded 76, build-failed 87, syntax-invalid 25, redundant 12
Fitness: max 0.929(65), min 0(3), ave 0.849
Test execution time: sum 1994345 ms, max 1980125 ms, min 130 ms
----------------------------------------------------------------

2023-08-13 00:19:49 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-13 00:20:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 1 minutes 8 seconds
Variants: generated 200, build-succeeded 102, build-failed 77, syntax-invalid 13, redundant 8
Fitness: max 0.929(85), min 0(3), ave 0.877
Test execution time: sum 19425 ms, max 238 ms, min 116 ms
----------------------------------------------------------------

2023-08-13 00:20:15 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-13 00:53:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 33 seconds
Variants: generated 200, build-succeeded 96, build-failed 77, syntax-invalid 21, redundant 6
Fitness: max 0.929(86), min 0(4), ave 0.871
Test execution time: sum 1998224 ms, max 1980128 ms, min 117 ms
----------------------------------------------------------------

2023-08-13 00:53:41 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-13 00:54:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 56 seconds
Variants: generated 200, build-succeeded 81, build-failed 90, syntax-invalid 16, redundant 13
Fitness: max 0.929(73), min 0(3), ave 0.871
Test execution time: sum 15522 ms, max 254 ms, min 150 ms
----------------------------------------------------------------

2023-08-13 00:54:03 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-13 01:27:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 8 minutes 18 seconds
Variants: generated 200, build-succeeded 85, build-failed 87, syntax-invalid 17, redundant 11
Fitness: max 0.929(69), min 0(4), ave 0.824
Test execution time: sum 1995841 ms, max 1980129 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 01:27:26 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-13 01:27:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 8 minutes 43 seconds
Variants: generated 200, build-succeeded 92, build-failed 82, syntax-invalid 14, redundant 12
Fitness: max 0.929(82), min 0(1), ave 0.88
Test execution time: sum 17591 ms, max 232 ms, min 133 ms
----------------------------------------------------------------

2023-08-13 01:27:51 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-13 01:28:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 9 minutes 6 seconds
Variants: generated 200, build-succeeded 80, build-failed 82, syntax-invalid 17, redundant 21
Fitness: max 0.929(69), min 0(1), ave 0.862
Test execution time: sum 15396 ms, max 250 ms, min 142 ms
----------------------------------------------------------------

2023-08-13 01:28:13 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-13 01:28:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 9 minutes 27 seconds
Variants: generated 200, build-succeeded 76, build-failed 90, syntax-invalid 14, redundant 20
Fitness: max 0.929(68), min 0(2), ave 0.867
Test execution time: sum 14442 ms, max 223 ms, min 116 ms
----------------------------------------------------------------

2023-08-13 01:28:35 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-13 02:01:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 42 minutes 51 seconds
Variants: generated 200, build-succeeded 90, build-failed 73, syntax-invalid 16, redundant 21
Fitness: max 0.929(76), min 0(4), ave 0.825
Test execution time: sum 1996972 ms, max 1980128 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 02:01:59 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-13 02:02:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 43 minutes 17 seconds
Variants: generated 200, build-succeeded 99, build-failed 80, syntax-invalid 6, redundant 15
Fitness: max 0.929(85), min 0(2), ave 0.872
Test execution time: sum 18706 ms, max 241 ms, min 92 ms
----------------------------------------------------------------

2023-08-13 02:02:24 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-13 02:02:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 43 minutes 42 seconds
Variants: generated 200, build-succeeded 92, build-failed 82, syntax-invalid 12, redundant 14
Fitness: max 0.929(80), min 0(3), ave 0.875
Test execution time: sum 17517 ms, max 260 ms, min 105 ms
----------------------------------------------------------------

2023-08-13 02:02:49 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-13 02:03:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 44 minutes 6 seconds
Variants: generated 200, build-succeeded 93, build-failed 77, syntax-invalid 14, redundant 16
Fitness: max 0.929(82), min 0(3), ave 0.856
Test execution time: sum 17667 ms, max 256 ms, min 119 ms
----------------------------------------------------------------

2023-08-13 02:03:14 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-13 02:03:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 44 minutes 32 seconds
Variants: generated 200, build-succeeded 99, build-failed 75, syntax-invalid 9, redundant 17
Fitness: max 0.929(86), min 0(2), ave 0.872
Test execution time: sum 18857 ms, max 232 ms, min 146 ms
----------------------------------------------------------------

2023-08-13 02:03:39 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-13 02:04:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 44 minutes 58 seconds
Variants: generated 200, build-succeeded 103, build-failed 64, syntax-invalid 11, redundant 22
Fitness: max 1(1), min 0(6), ave 0.854
Test execution time: sum 19279 ms, max 236 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 02:04:06 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-13 03:10:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 51 minutes 22 seconds
Variants: generated 200, build-succeeded 94, build-failed 71, syntax-invalid 10, redundant 25
Fitness: max 0.929(78), min 0(4), ave 0.845
Test execution time: sum 3977518 ms, max 1980131 ms, min 116 ms
----------------------------------------------------------------

2023-08-13 03:10:30 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-13 03:10:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 51 minutes 42 seconds
Variants: generated 200, build-succeeded 70, build-failed 85, syntax-invalid 14, redundant 31
Fitness: max 0.929(65), min 0(3), ave 0.885
Test execution time: sum 13290 ms, max 306 ms, min 119 ms
----------------------------------------------------------------

2023-08-13 03:10:49 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-13 04:17:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 58 minutes 5 seconds
Variants: generated 200, build-succeeded 88, build-failed 74, syntax-invalid 18, redundant 20
Fitness: max 0.929(76), min 0(2), ave 0.851
Test execution time: sum 3976533 ms, max 1980125 ms, min 124 ms
----------------------------------------------------------------

2023-08-13 04:17:12 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-13 04:17:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 58 minutes 27 seconds
Variants: generated 200, build-succeeded 81, build-failed 74, syntax-invalid 26, redundant 19
Fitness: max 0.929(71), min 0(4), ave 0.834
Test execution time: sum 15217 ms, max 274 ms, min 117 ms
----------------------------------------------------------------

2023-08-13 04:17:34 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-13 04:17:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 58 minutes 50 seconds
Variants: generated 200, build-succeeded 87, build-failed 73, syntax-invalid 18, redundant 22
Fitness: max 1(1), min 0(2), ave 0.864
Test execution time: sum 16278 ms, max 239 ms, min 106 ms
----------------------------------------------------------------

2023-08-13 04:17:57 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-13 04:18:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 59 minutes 14 seconds
Variants: generated 200, build-succeeded 89, build-failed 76, syntax-invalid 16, redundant 19
Fitness: max 0.929(78), min 0(3), ave 0.877
Test execution time: sum 16899 ms, max 247 ms, min 130 ms
----------------------------------------------------------------

2023-08-13 04:18:21 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-13 04:51:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 37 seconds
Variants: generated 200, build-succeeded 86, build-failed 84, syntax-invalid 19, redundant 11
Fitness: max 0.929(75), min 0(2), ave 0.87
Test execution time: sum 1996325 ms, max 1980126 ms, min 152 ms
----------------------------------------------------------------

2023-08-13 04:51:45 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-13 04:52:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 33 minutes 1 seconds
Variants: generated 200, build-succeeded 91, build-failed 73, syntax-invalid 18, redundant 18
Fitness: max 0.929(78), min 0(4), ave 0.856
Test execution time: sum 17288 ms, max 292 ms, min 95 ms
----------------------------------------------------------------

2023-08-13 04:52:09 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-13 04:52:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 33 minutes 27 seconds
Variants: generated 200, build-succeeded 98, build-failed 73, syntax-invalid 16, redundant 13
Fitness: max 0.929(89), min 0(3), ave 0.876
Test execution time: sum 18556 ms, max 287 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 04:52:34 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-13 04:52:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 33 minutes 48 seconds
Variants: generated 200, build-succeeded 78, build-failed 80, syntax-invalid 24, redundant 18
Fitness: max 0.929(75), min 0.643(1), ave 0.919
Test execution time: sum 14884 ms, max 309 ms, min 144 ms
----------------------------------------------------------------

2023-08-13 04:52:56 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-13 04:53:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 34 minutes 14 seconds
Variants: generated 200, build-succeeded 99, build-failed 71, syntax-invalid 21, redundant 9
Fitness: max 0.929(86), min 0(3), ave 0.867
Test execution time: sum 18753 ms, max 304 ms, min 117 ms
----------------------------------------------------------------

2023-08-13 04:53:22 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-13 04:53:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 34 minutes 38 seconds
Variants: generated 200, build-succeeded 91, build-failed 64, syntax-invalid 30, redundant 15
Fitness: max 1(1), min 0(6), ave 0.819
Test execution time: sum 17064 ms, max 272 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 04:53:46 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-13 05:27:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 8 minutes 3 seconds
Variants: generated 200, build-succeeded 95, build-failed 76, syntax-invalid 11, redundant 18
Fitness: max 0.929(84), min 0(4), ave 0.853
Test execution time: sum 1997948 ms, max 1980126 ms, min 115 ms
----------------------------------------------------------------

2023-08-13 05:27:11 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-13 05:27:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 8 minutes 29 seconds
Variants: generated 200, build-succeeded 97, build-failed 80, syntax-invalid 12, redundant 11
Fitness: max 0.929(84), min 0(2), ave 0.863
Test execution time: sum 18459 ms, max 299 ms, min 117 ms
----------------------------------------------------------------

2023-08-13 05:27:37 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-13 06:01:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 41 minutes 55 seconds
Variants: generated 200, build-succeeded 92, build-failed 73, syntax-invalid 15, redundant 20
Fitness: max 0.929(81), min 0(1), ave 0.885
Test execution time: sum 1997457 ms, max 1980126 ms, min 116 ms
----------------------------------------------------------------

2023-08-13 06:01:02 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-13 06:01:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 42 minutes 20 seconds
Variants: generated 200, build-succeeded 93, build-failed 79, syntax-invalid 13, redundant 15
Fitness: max 0.929(82), min 0(4), ave 0.863
Test execution time: sum 17611 ms, max 258 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 06:01:27 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-13 06:34:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 15 minutes 46 seconds
Variants: generated 200, build-succeeded 95, build-failed 78, syntax-invalid 15, redundant 12
Fitness: max 0.929(85), min 0(4), ave 0.861
Test execution time: sum 1997886 ms, max 1980127 ms, min 116 ms
----------------------------------------------------------------

2023-08-13 06:34:53 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-13 06:35:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 16 minutes 11 seconds
Variants: generated 200, build-succeeded 88, build-failed 82, syntax-invalid 16, redundant 14
Fitness: max 0.929(78), min 0(3), ave 0.873
Test execution time: sum 16856 ms, max 306 ms, min 107 ms
----------------------------------------------------------------

2023-08-13 06:35:18 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-13 06:35:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 16 minutes 38 seconds
Variants: generated 200, build-succeeded 100, build-failed 76, syntax-invalid 13, redundant 11
Fitness: max 0.929(86), min 0(2), ave 0.873
Test execution time: sum 19256 ms, max 246 ms, min 124 ms
----------------------------------------------------------------

2023-08-13 06:35:46 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-13 07:09:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 50 minutes 6 seconds
Variants: generated 200, build-succeeded 107, build-failed 67, syntax-invalid 11, redundant 15
Fitness: max 0.929(95), min 0(4), ave 0.858
Test execution time: sum 2000240 ms, max 1980127 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 07:09:14 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-13 07:09:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 50 minutes 33 seconds
Variants: generated 200, build-succeeded 95, build-failed 81, syntax-invalid 15, redundant 9
Fitness: max 0.929(84), min 0(3), ave 0.865
Test execution time: sum 17859 ms, max 256 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 07:09:40 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-13 07:43:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 24 minutes 0 seconds
Variants: generated 200, build-succeeded 101, build-failed 69, syntax-invalid 17, redundant 13
Fitness: max 0.929(90), min 0(1), ave 0.883
Test execution time: sum 1999339 ms, max 1980128 ms, min 147 ms
----------------------------------------------------------------

2023-08-13 07:43:08 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-13 07:43:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 24 minutes 26 seconds
Variants: generated 200, build-succeeded 93, build-failed 82, syntax-invalid 11, redundant 14
Fitness: max 0.929(83), min 0(3), ave 0.87
Test execution time: sum 17778 ms, max 307 ms, min 132 ms
----------------------------------------------------------------

2023-08-13 07:43:34 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-13 07:44:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 24 minutes 54 seconds
Variants: generated 200, build-succeeded 109, build-failed 57, syntax-invalid 21, redundant 13
Fitness: max 0.929(91), min 0(6), ave 0.826
Test execution time: sum 20192 ms, max 246 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 07:44:02 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-13 07:44:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 25 minutes 22 seconds
Variants: generated 200, build-succeeded 107, build-failed 65, syntax-invalid 17, redundant 11
Fitness: max 0.929(93), min 0(3), ave 0.876
Test execution time: sum 20299 ms, max 267 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 07:44:30 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-13 07:44:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 25 minutes 51 seconds
Variants: generated 200, build-succeeded 106, build-failed 69, syntax-invalid 14, redundant 11
Fitness: max 1(1), min 0(5), ave 0.869
Test execution time: sum 19939 ms, max 238 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 07:44:58 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-13 08:51:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 32 minutes 17 seconds
Variants: generated 200, build-succeeded 98, build-failed 74, syntax-invalid 15, redundant 13
Fitness: max 0.929(87), min 0(3), ave 0.856
Test execution time: sum 3978510 ms, max 1980133 ms, min 96 ms
----------------------------------------------------------------

2023-08-13 08:51:25 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-13 09:24:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 5 minutes 45 seconds
Variants: generated 200, build-succeeded 99, build-failed 79, syntax-invalid 13, redundant 9
Fitness: max 0.929(91), min 0(1), ave 0.87
Test execution time: sum 1999049 ms, max 1980126 ms, min 150 ms
----------------------------------------------------------------

2023-08-13 09:24:53 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-13 09:58:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 39 minutes 15 seconds
Variants: generated 200, build-succeeded 110, build-failed 71, syntax-invalid 11, redundant 8
Fitness: max 0.929(94), min 0(5), ave 0.847
Test execution time: sum 2000717 ms, max 1980125 ms, min 95 ms
----------------------------------------------------------------

2023-08-13 09:58:23 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-13 09:58:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 39 minutes 45 seconds
Variants: generated 200, build-succeeded 108, build-failed 69, syntax-invalid 14, redundant 9
Fitness: max 0.929(91), min 0(5), ave 0.845
Test execution time: sum 20434 ms, max 238 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 09:58:52 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-13 10:32:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 13 minutes 13 seconds
Variants: generated 200, build-succeeded 99, build-failed 82, syntax-invalid 10, redundant 9
Fitness: max 0.929(86), min 0(3), ave 0.869
Test execution time: sum 1998962 ms, max 1980152 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 10:32:20 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-13 10:32:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 13 minutes 41 seconds
Variants: generated 200, build-succeeded 101, build-failed 74, syntax-invalid 16, redundant 9
Fitness: max 1(1), min 0(5), ave 0.847
Test execution time: sum 18996 ms, max 296 ms, min 91 ms
----------------------------------------------------------------

2023-08-13 10:32:48 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-13 10:33:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 14 minutes 9 seconds
Variants: generated 200, build-succeeded 103, build-failed 66, syntax-invalid 9, redundant 22
Fitness: max 1(1), min 0(6), ave 0.827
Test execution time: sum 19458 ms, max 247 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 10:33:17 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-13 11:06:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 47 minutes 39 seconds
Variants: generated 200, build-succeeded 110, build-failed 69, syntax-invalid 10, redundant 11
Fitness: max 0.929(98), min 0(4), ave 0.855
Test execution time: sum 2000784 ms, max 1980128 ms, min 93 ms
----------------------------------------------------------------

2023-08-13 11:06:47 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-13 11:07:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 48 minutes 9 seconds
Variants: generated 200, build-succeeded 106, build-failed 75, syntax-invalid 8, redundant 11
Fitness: max 1(1), min 0(2), ave 0.873
Test execution time: sum 20248 ms, max 285 ms, min 95 ms
----------------------------------------------------------------

2023-08-13 11:07:16 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-13 11:07:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 48 minutes 36 seconds
Variants: generated 200, build-succeeded 92, build-failed 80, syntax-invalid 13, redundant 15
Fitness: max 0.929(83), min 0(1), ave 0.898
Test execution time: sum 17729 ms, max 235 ms, min 127 ms
----------------------------------------------------------------

2023-08-13 11:07:43 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-13 11:08:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 49 minutes 2 seconds
Variants: generated 200, build-succeeded 93, build-failed 74, syntax-invalid 14, redundant 19
Fitness: max 0.929(84), min 0(3), ave 0.869
Test execution time: sum 17503 ms, max 249 ms, min 116 ms
----------------------------------------------------------------

2023-08-13 11:08:10 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-13 11:41:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 22 minutes 30 seconds
Variants: generated 200, build-succeeded 96, build-failed 72, syntax-invalid 10, redundant 22
Fitness: max 0.929(82), min 0(1), ave 0.878
Test execution time: sum 1998414 ms, max 1980140 ms, min 145 ms
----------------------------------------------------------------

2023-08-13 11:41:38 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-13 11:42:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 22 minutes 59 seconds
Variants: generated 200, build-succeeded 103, build-failed 70, syntax-invalid 14, redundant 13
Fitness: max 0.929(87), min 0(4), ave 0.84
Test execution time: sum 19404 ms, max 239 ms, min 94 ms
----------------------------------------------------------------

2023-08-13 11:42:07 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-13 11:42:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 23 minutes 28 seconds
Variants: generated 200, build-succeeded 102, build-failed 71, syntax-invalid 7, redundant 20
Fitness: max 0.929(84), min 0(5), ave 0.844
Test execution time: sum 19054 ms, max 247 ms, min 108 ms
----------------------------------------------------------------

2023-08-13 11:42:36 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-13 11:43:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 23 minutes 57 seconds
Variants: generated 200, build-succeeded 99, build-failed 75, syntax-invalid 9, redundant 17
Fitness: max 0.929(87), min 0(4), ave 0.869
Test execution time: sum 18761 ms, max 234 ms, min 108 ms
----------------------------------------------------------------

2023-08-13 11:43:04 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-13 11:43:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 24 minutes 26 seconds
Variants: generated 200, build-succeeded 102, build-failed 72, syntax-invalid 13, redundant 13
Fitness: max 0.929(95), min 0(2), ave 0.891
Test execution time: sum 19537 ms, max 236 ms, min 94 ms
----------------------------------------------------------------

2023-08-13 11:43:33 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-13 11:44:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 24 minutes 54 seconds
Variants: generated 200, build-succeeded 98, build-failed 73, syntax-invalid 18, redundant 11
Fitness: max 0.929(88), min 0(4), ave 0.864
Test execution time: sum 18691 ms, max 290 ms, min 94 ms
----------------------------------------------------------------

2023-08-13 11:44:01 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-13 11:44:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 25 minutes 21 seconds
Variants: generated 200, build-succeeded 94, build-failed 75, syntax-invalid 16, redundant 15
Fitness: max 0.929(80), min 0(3), ave 0.873
Test execution time: sum 18137 ms, max 298 ms, min 132 ms
----------------------------------------------------------------

2023-08-13 11:44:29 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-13 11:44:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 25 minutes 49 seconds
Variants: generated 200, build-succeeded 93, build-failed 76, syntax-invalid 12, redundant 19
Fitness: max 0.929(80), min 0(1), ave 0.871
Test execution time: sum 17772 ms, max 237 ms, min 136 ms
----------------------------------------------------------------

2023-08-13 11:44:57 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-13 11:45:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 26 minutes 17 seconds
Variants: generated 200, build-succeeded 94, build-failed 72, syntax-invalid 13, redundant 21
Fitness: max 0.929(83), min 0(3), ave 0.856
Test execution time: sum 18194 ms, max 413 ms, min 94 ms
----------------------------------------------------------------

2023-08-13 11:45:24 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-13 12:18:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 59 minutes 45 seconds
Variants: generated 200, build-succeeded 94, build-failed 77, syntax-invalid 12, redundant 17
Fitness: max 1(1), min 0(3), ave 0.879
Test execution time: sum 1998270 ms, max 1980127 ms, min 149 ms
----------------------------------------------------------------

2023-08-13 12:18:53 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-13 12:52:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 33 minutes 13 seconds
Variants: generated 200, build-succeeded 94, build-failed 81, syntax-invalid 13, redundant 12
Fitness: max 0.929(82), min 0(5), ave 0.839
Test execution time: sum 1997981 ms, max 1980129 ms, min 94 ms
----------------------------------------------------------------

2023-08-13 12:52:21 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-13 13:25:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 6 minutes 41 seconds
Variants: generated 200, build-succeeded 93, build-failed 73, syntax-invalid 12, redundant 22
Fitness: max 0.929(79), min 0(3), ave 0.855
Test execution time: sum 1997581 ms, max 1980126 ms, min 119 ms
----------------------------------------------------------------

2023-08-13 13:25:49 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-13 13:26:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 7 minutes 11 seconds
Variants: generated 200, build-succeeded 104, build-failed 73, syntax-invalid 9, redundant 14
Fitness: max 0.929(94), min 0(3), ave 0.88
Test execution time: sum 19871 ms, max 237 ms, min 121 ms
----------------------------------------------------------------

2023-08-13 13:26:19 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-13 13:26:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 7 minutes 38 seconds
Variants: generated 200, build-succeeded 86, build-failed 84, syntax-invalid 15, redundant 15
Fitness: max 0.929(76), min 0(6), ave 0.844
Test execution time: sum 16185 ms, max 248 ms, min 84 ms
----------------------------------------------------------------

2023-08-13 13:26:45 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-13 14:33:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 14 minutes 7 seconds
Variants: generated 200, build-succeeded 94, build-failed 73, syntax-invalid 15, redundant 18
Fitness: max 0.929(85), min 0(1), ave 0.892
Test execution time: sum 3978192 ms, max 1980129 ms, min 132 ms
----------------------------------------------------------------

2023-08-13 14:33:14 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-13 14:33:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 14 minutes 36 seconds
Variants: generated 200, build-succeeded 96, build-failed 72, syntax-invalid 17, redundant 15
Fitness: max 0.929(80), min 0(4), ave 0.849
Test execution time: sum 18322 ms, max 246 ms, min 94 ms
----------------------------------------------------------------

2023-08-13 14:33:43 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-13 15:07:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 48 minutes 3 seconds
Variants: generated 200, build-succeeded 87, build-failed 87, syntax-invalid 10, redundant 16
Fitness: max 0.929(78), min 0(1), ave 0.888
Test execution time: sum 1996772 ms, max 1980127 ms, min 146 ms
----------------------------------------------------------------

2023-08-13 15:07:11 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-13 15:07:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 48 minutes 33 seconds
Variants: generated 200, build-succeeded 96, build-failed 72, syntax-invalid 8, redundant 24
Fitness: max 1(1), min 0(5), ave 0.853
Test execution time: sum 18118 ms, max 238 ms, min 94 ms
----------------------------------------------------------------

2023-08-13 15:07:41 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-13 15:41:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 22 minutes 0 seconds
Variants: generated 200, build-succeeded 80, build-failed 92, syntax-invalid 6, redundant 22
Fitness: max 0.929(74), min 0(1), ave 0.89
Test execution time: sum 1995432 ms, max 1980128 ms, min 109 ms
----------------------------------------------------------------

2023-08-13 15:41:07 [main] [INFO]  KGenProgMain - GA stopped
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v1602)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v1602)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -78,6 +77,7 @@
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
+			int count = 0;
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v1602)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -128,7 +127,9 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,8 +100,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v6043)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,6 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
     }
 
     /**
@@ -63,7 +62,6 @@
                     "invalid column dimension {0} (must be positive)",
                     columnDimension);
         }
-        lu = null;
     }
 
     /** {@inheritDoc} */
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.linear.Array2DRowRealMatrix
+++ org.apache.commons.math.linear.Array2DRowRealMatrix
@@ -364,7 +364,8 @@
     public void setEntry(final int row, final int column, final double value)
         throws MatrixIndexException {
         try {
-            data[row][column] = value;
+            final int nCols = getColumnDimension();
+			data[row][column] = value;
         } catch (ArrayIndexOutOfBoundsException e) {
             throw new MatrixIndexException(
                     "no entry at indices ({0}, {1}) in a {2}x{3} matrix",
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -100,7 +99,8 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
@@ -128,7 +128,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -288,7 +288,8 @@
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
-        Integer row = null;
+        int count = 0;
+		Integer row = null;
         int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,8 +100,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v7080)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v9883)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v9883)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -100,7 +99,8 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
@@ -128,7 +128,9 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v9883)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -337,7 +337,8 @@
      * @return current solution
      */
     protected RealPointValuePair getSolution() {
-      double[] coefficients = new double[getOriginalNumDecisionVariables()];
+      int width = numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;
+	double[] coefficients = new double[getOriginalNumDecisionVariables()];
       Integer negativeVarBasicRow = getBasicRowForSolution(getNegativeDecisionVariableOffset());
       double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
       Set<Integer> basicRows = new HashSet<Integer>();
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v9883)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,7 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v9883)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v9883)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,6 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
     }
 
     /**
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -100,7 +99,8 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
@@ -128,7 +128,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.optimization.OptimizationException
+++ org.apache.commons.math.optimization.OptimizationException
@@ -39,7 +39,6 @@
      * @param parts to insert in the format (no translation)
      */
     public OptimizationException(String specifier, Object ... parts) {
-        super(specifier, parts);
     }
 
     /**
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -65,6 +65,7 @@
     /** {@inheritDoc} */
     public void setMaxIterations(int maxIterations) {
         this.maxIterations = maxIterations;
+		int artificialVar = 0;
     }
 
     /** {@inheritDoc} */
@@ -100,8 +101,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v12251)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v12251)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -74,7 +73,8 @@
      * @return row with the minimum ratio
      */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
-        double minRatio = Double.MAX_VALUE;
+        this.goalType = goalType;
+		double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
@@ -100,7 +100,8 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
@@ -128,7 +129,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
@@ -166,7 +168,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v12251)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -107,7 +107,8 @@
         this.restrictToNonNegative  = restrictToNonNegative;
         this.epsilon                = epsilon;
         this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
-        this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
+        double minRatio = Double.MAX_VALUE;
+		this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v12251)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,7 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +280,7 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v12251)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v12251)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,6 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
     }
 
     /**
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v15086)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v15086)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -74,7 +73,8 @@
      * @return row with the minimum ratio
      */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
-        double minRatio = Double.MAX_VALUE;
+        this.goalType = goalType;
+		double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
@@ -100,7 +100,9 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
@@ -128,7 +130,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v15086)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -107,7 +107,8 @@
         this.restrictToNonNegative  = restrictToNonNegative;
         this.epsilon                = epsilon;
         this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
-        this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
+        double minRatio = Double.MAX_VALUE;
+		this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
@@ -137,7 +138,8 @@
         matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
-            copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
+            Integer minPos = null;
+			copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
             matrix[zIndex][width - 1] =
                 maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
 
@@ -288,7 +290,8 @@
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
-        Integer row = null;
+        int count = 0;
+		Integer row = null;
         int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v15086)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,7 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v15086)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -100,7 +99,8 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
@@ -128,7 +128,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
@@ -166,7 +167,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,10 +134,10 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
-            copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
+            Integer minPos = null;
+			copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
             matrix[zIndex][width - 1] =
                 maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
 
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,7 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,6 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
     }
 
     /**
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16496)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16496)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -74,7 +73,8 @@
      * @return row with the minimum ratio
      */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
-        double minRatio = Double.MAX_VALUE;
+        this.goalType = goalType;
+		double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
@@ -100,7 +100,8 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
@@ -128,14 +129,16 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
                 return false;
             }
         }
-        return true;
+        Integer minRatioPos = null;
+		return true;
     }
 
     /**
@@ -166,7 +169,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16496)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -288,7 +288,8 @@
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
-        Integer row = null;
+        int count = 0;
+		Integer row = null;
         int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
@@ -305,7 +306,8 @@
      */
     protected void discardArtificialVariables() {
         if (numArtificialVariables == 0) {
-            return;
+            double sum = 0;
+			return;
         }
         int width = getWidth() - numArtificialVariables - 1;
         int height = getHeight() - 1;
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16496)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16496)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,6 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
     }
 
     /**
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16893)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16893)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -47,7 +47,8 @@
      * @param epsilon the amount of error to accept in floating point comparisons
      */
     public SimplexSolver(final double epsilon) {
-        this.epsilon = epsilon;
+        int artificialVar = 0;
+		this.epsilon = epsilon;
     }
 
     /**
@@ -60,7 +61,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -100,7 +100,8 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
@@ -166,7 +167,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16893)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16893)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,7 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +280,7 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
@@ -793,7 +793,7 @@
     /** {@inheritDoc} */
     public RealVector ebeMultiply(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] * v[i];
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16893)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v16893)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,6 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
     }
 
     /**
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v19267)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v19267)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -128,7 +127,10 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v19267)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -107,7 +107,8 @@
         this.restrictToNonNegative  = restrictToNonNegative;
         this.epsilon                = epsilon;
         this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
-        this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
+        double minRatio = Double.MAX_VALUE;
+		this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
@@ -288,7 +289,8 @@
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
-        Integer row = null;
+        int count = 0;
+		Integer row = null;
         int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
@@ -337,7 +339,8 @@
      * @return current solution
      */
     protected RealPointValuePair getSolution() {
-      double[] coefficients = new double[getOriginalNumDecisionVariables()];
+      int width = numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;
+	double[] coefficients = new double[getOriginalNumDecisionVariables()];
       Integer negativeVarBasicRow = getBasicRowForSolution(getNegativeDecisionVariableOffset());
       double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
       Set<Integer> basicRows = new HashSet<Integer>();
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v19267)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v19267)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,7 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +280,7 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
@@ -793,7 +793,7 @@
     /** {@inheritDoc} */
     public RealVector ebeMultiply(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] * v[i];
2023-08-13 15:41:07 [main] [INFO]  PatchLogExporter - patch (v19267)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:08 [main] [INFO]  PatchLogExporter - patch (v20810)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-13 15:41:08 [main] [INFO]  PatchLogExporter - patch (v20810)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -74,7 +73,8 @@
      * @return row with the minimum ratio
      */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
-        double minRatio = Double.MAX_VALUE;
+        int artificialVar = 0;
+		double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
@@ -128,7 +128,10 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-08-13 15:41:08 [main] [INFO]  PatchLogExporter - patch (v20810)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -107,7 +107,8 @@
         this.restrictToNonNegative  = restrictToNonNegative;
         this.epsilon                = epsilon;
         this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
-        this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
+        double minRatio = Double.MAX_VALUE;
+		this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
2023-08-13 15:41:08 [main] [INFO]  PatchLogExporter - patch (v20810)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,7 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +280,7 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
@@ -793,7 +793,7 @@
     /** {@inheritDoc} */
     public RealVector ebeMultiply(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] * v[i];
@@ -830,7 +830,7 @@
     /** {@inheritDoc} */
     public RealVector ebeDivide(double[] v)
         throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
+        int outIndex = 0;
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
                 out[i] = data[i] / v[i];
2023-08-13 15:41:08 [main] [INFO]  PatchLogExporter - patch (v20810)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-13 15:41:08 [main] [INFO]  KGenProgMain - Summary
Reached generation = 107
Generated variants = 21200
Syntax valid variants = 19614
Build succeeded variants = 9462
Time elapsed = 24 hours 22 minutes 0 seconds
Exit status = FAILURE (time limit)
