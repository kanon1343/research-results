2023-08-06 17:54:30 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-06 17:54:30 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-06 17:54:30 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-06 17:54:30 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/kgenprog-72.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 5 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/research
version = 1.8.2
================================================================
2023-08-06 17:54:48 [main] [INFO]  KGenProgMain - initial failed tests (1/6)
org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints: null

2023-08-06 17:54:48 [main] [INFO]  KGenProgMain - GA started
2023-08-06 17:54:48 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-06 17:54:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, build-succeeded 21, build-failed 61, syntax-invalid 2, redundant 16
Fitness: max 0.833(14), min 0.167(4), ave 0.683
Test execution time: sum 2934 ms, max 249 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 17:54:58 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-06 17:55:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, build-succeeded 33, build-failed 47, syntax-invalid 7, redundant 13
Fitness: max 0.833(17), min 0.167(9), ave 0.611
Test execution time: sum 2567 ms, max 215 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 17:55:05 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-06 17:55:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 200, build-succeeded 75, build-failed 55, syntax-invalid 14, redundant 56
Fitness: max 0.833(41), min 0.167(8), ave 0.68
Test execution time: sum 5111 ms, max 192 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 17:55:16 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-06 17:55:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 seconds
Variants: generated 200, build-succeeded 64, build-failed 61, syntax-invalid 21, redundant 54
Fitness: max 0.833(58), min 0(1), ave 0.792
Test execution time: sum 4202 ms, max 207 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 17:55:27 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-06 17:55:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 seconds
Variants: generated 200, build-succeeded 78, build-failed 57, syntax-invalid 16, redundant 49
Fitness: max 0.833(71), min 0(1), ave 0.784
Test execution time: sum 4987 ms, max 201 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 17:55:39 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-06 17:55:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 1 seconds
Variants: generated 200, build-succeeded 78, build-failed 51, syntax-invalid 21, redundant 50
Fitness: max 0.833(73), min 0.167(3), ave 0.803
Test execution time: sum 4848 ms, max 205 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 17:55:50 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-06 17:56:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 14 seconds
Variants: generated 200, build-succeeded 79, build-failed 56, syntax-invalid 25, redundant 40
Fitness: max 0.833(73), min 0.167(1), ave 0.814
Test execution time: sum 5151 ms, max 211 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 17:56:02 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-06 17:56:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 26 seconds
Variants: generated 200, build-succeeded 86, build-failed 52, syntax-invalid 24, redundant 38
Fitness: max 0.833(76), min 0.167(3), ave 0.797
Test execution time: sum 5484 ms, max 161 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 17:56:14 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-06 17:56:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 38 seconds
Variants: generated 200, build-succeeded 85, build-failed 52, syntax-invalid 19, redundant 44
Fitness: max 1(1), min 0.167(6), ave 0.784
Test execution time: sum 5309 ms, max 205 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 17:56:26 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-06 17:56:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 51 seconds
Variants: generated 200, build-succeeded 106, build-failed 50, syntax-invalid 17, redundant 27
Fitness: max 1(1), min 0.167(3), ave 0.805
Test execution time: sum 6728 ms, max 176 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 17:56:39 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-06 17:56:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 4 seconds
Variants: generated 200, build-succeeded 102, build-failed 47, syntax-invalid 22, redundant 29
Fitness: max 1(1), min 0.167(3), ave 0.799
Test execution time: sum 6456 ms, max 204 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 17:56:53 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-06 17:57:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 18 seconds
Variants: generated 200, build-succeeded 101, build-failed 57, syntax-invalid 18, redundant 24
Fitness: max 0.833(87), min 0.167(3), ave 0.792
Test execution time: sum 6451 ms, max 189 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 17:57:07 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-06 17:57:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 30 seconds
Variants: generated 200, build-succeeded 94, build-failed 53, syntax-invalid 32, redundant 21
Fitness: max 0.833(87), min 0.167(1), ave 0.812
Test execution time: sum 5767 ms, max 96 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 17:57:19 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-06 17:57:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 45 seconds
Variants: generated 200, build-succeeded 108, build-failed 61, syntax-invalid 18, redundant 13
Fitness: max 0.833(94), min 0.167(4), ave 0.789
Test execution time: sum 6495 ms, max 134 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 17:57:34 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-06 17:57:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 0 seconds
Variants: generated 200, build-succeeded 120, build-failed 46, syntax-invalid 21, redundant 13
Fitness: max 0.833(105), min 0.167(7), ave 0.781
Test execution time: sum 7237 ms, max 136 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 17:57:49 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-06 17:58:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 14 seconds
Variants: generated 200, build-succeeded 104, build-failed 60, syntax-invalid 18, redundant 18
Fitness: max 0.833(95), min 0.167(4), ave 0.8
Test execution time: sum 6375 ms, max 140 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 17:58:03 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-06 17:58:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 29 seconds
Variants: generated 200, build-succeeded 112, build-failed 51, syntax-invalid 22, redundant 15
Fitness: max 0.833(99), min 0.333(5), ave 0.799
Test execution time: sum 6937 ms, max 193 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 17:58:17 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-06 17:58:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 43 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 22, redundant 17
Fitness: max 0.833(91), min 0.167(5), ave 0.783
Test execution time: sum 6411 ms, max 126 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 17:58:32 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-06 17:58:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 58 seconds
Variants: generated 200, build-succeeded 109, build-failed 62, syntax-invalid 20, redundant 9
Fitness: max 0.833(97), min 0.167(3), ave 0.797
Test execution time: sum 6645 ms, max 196 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 17:58:47 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-06 17:59:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 13 seconds
Variants: generated 200, build-succeeded 103, build-failed 61, syntax-invalid 26, redundant 10
Fitness: max 0.833(97), min 0.167(3), ave 0.807
Test execution time: sum 6401 ms, max 191 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 17:59:02 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-06 17:59:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 29 seconds
Variants: generated 200, build-succeeded 122, build-failed 52, syntax-invalid 17, redundant 9
Fitness: max 0.833(111), min 0.167(7), ave 0.788
Test execution time: sum 7375 ms, max 141 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 17:59:18 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-06 18:14:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 45 seconds
Variants: generated 200, build-succeeded 114, build-failed 50, syntax-invalid 24, redundant 12
Fitness: max 1(1), min 0.167(5), ave 0.795
Test execution time: sum 907199 ms, max 900127 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 18:14:33 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-06 18:14:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 0 seconds
Variants: generated 200, build-succeeded 111, build-failed 57, syntax-invalid 19, redundant 13
Fitness: max 1(1), min 0.167(3), ave 0.805
Test execution time: sum 7082 ms, max 197 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:14:49 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-06 18:15:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 14 seconds
Variants: generated 200, build-succeeded 101, build-failed 62, syntax-invalid 21, redundant 16
Fitness: max 0.833(94), min 0.167(2), ave 0.812
Test execution time: sum 5958 ms, max 87 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:15:02 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-06 18:15:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 28 seconds
Variants: generated 200, build-succeeded 106, build-failed 57, syntax-invalid 29, redundant 8
Fitness: max 1(1), min 0.167(6), ave 0.788
Test execution time: sum 6385 ms, max 212 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:15:16 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-06 18:15:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 42 seconds
Variants: generated 200, build-succeeded 105, build-failed 54, syntax-invalid 31, redundant 10
Fitness: max 1(2), min 0.167(1), ave 0.819
Test execution time: sum 6370 ms, max 78 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:15:30 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-06 18:15:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 56 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 31, redundant 9
Fitness: max 1(1), min 0.167(2), ave 0.807
Test execution time: sum 6139 ms, max 126 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:15:45 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-06 18:16:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 11 seconds
Variants: generated 200, build-succeeded 111, build-failed 48, syntax-invalid 29, redundant 12
Fitness: max 0.833(96), min 0.167(7), ave 0.779
Test execution time: sum 6755 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:16:00 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-06 18:16:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 26 seconds
Variants: generated 200, build-succeeded 100, build-failed 53, syntax-invalid 34, redundant 13
Fitness: max 1(1), min 0.167(5), ave 0.79
Test execution time: sum 6066 ms, max 137 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:16:15 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-06 18:16:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 41 seconds
Variants: generated 200, build-succeeded 96, build-failed 55, syntax-invalid 36, redundant 13
Fitness: max 1(1), min 0.167(5), ave 0.79
Test execution time: sum 6007 ms, max 133 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 18:16:30 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-06 18:16:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 55 seconds
Variants: generated 200, build-succeeded 92, build-failed 59, syntax-invalid 42, redundant 7
Fitness: max 0.833(84), min 0.167(5), ave 0.792
Test execution time: sum 5631 ms, max 98 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:16:44 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-06 18:31:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 10 seconds
Variants: generated 200, build-succeeded 97, build-failed 55, syntax-invalid 40, redundant 8
Fitness: max 0.833(87), min 0.167(5), ave 0.787
Test execution time: sum 906253 ms, max 900110 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:31:59 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-06 18:32:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 24 seconds
Variants: generated 200, build-succeeded 88, build-failed 68, syntax-invalid 31, redundant 13
Fitness: max 0.833(79), min 0.167(3), ave 0.799
Test execution time: sum 5450 ms, max 96 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 18:32:13 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-06 18:32:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 40 seconds
Variants: generated 200, build-succeeded 106, build-failed 54, syntax-invalid 26, redundant 14
Fitness: max 0.833(99), min 0.167(3), ave 0.808
Test execution time: sum 6397 ms, max 144 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:32:28 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-06 18:32:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 55 seconds
Variants: generated 200, build-succeeded 95, build-failed 65, syntax-invalid 29, redundant 11
Fitness: max 1(1), min 0.167(2), ave 0.814
Test execution time: sum 5983 ms, max 186 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:32:44 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-06 18:33:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 11 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 22, redundant 11
Fitness: max 0.833(100), min 0.167(3), ave 0.805
Test execution time: sum 6625 ms, max 84 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:33:00 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-06 18:33:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 26 seconds
Variants: generated 200, build-succeeded 89, build-failed 66, syntax-invalid 38, redundant 7
Fitness: max 0.833(81), min 0.167(2), ave 0.805
Test execution time: sum 5314 ms, max 138 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:33:15 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-06 18:33:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 42 seconds
Variants: generated 200, build-succeeded 102, build-failed 57, syntax-invalid 31, redundant 10
Fitness: max 1(1), min 0.167(6), ave 0.775
Test execution time: sum 6292 ms, max 212 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 18:33:31 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-06 18:33:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 59 seconds
Variants: generated 200, build-succeeded 104, build-failed 52, syntax-invalid 34, redundant 10
Fitness: max 1(1), min 0.167(5), ave 0.796
Test execution time: sum 6471 ms, max 140 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:33:47 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-06 18:34:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 14 seconds
Variants: generated 200, build-succeeded 93, build-failed 57, syntax-invalid 43, redundant 7
Fitness: max 0.833(80), min 0.167(7), ave 0.769
Test execution time: sum 5653 ms, max 82 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 18:34:02 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-06 18:34:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 31 seconds
Variants: generated 200, build-succeeded 101, build-failed 63, syntax-invalid 33, redundant 3
Fitness: max 1(1), min 0.167(8), ave 0.777
Test execution time: sum 6070 ms, max 123 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:34:19 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-06 18:34:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 48 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 28, redundant 7
Fitness: max 1(1), min 0.167(8), ave 0.774
Test execution time: sum 6672 ms, max 140 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:34:37 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-06 18:34:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 6 seconds
Variants: generated 200, build-succeeded 112, build-failed 59, syntax-invalid 20, redundant 9
Fitness: max 1(1), min 0.167(5), ave 0.793
Test execution time: sum 7101 ms, max 140 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:34:55 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-06 18:35:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 24 seconds
Variants: generated 200, build-succeeded 108, build-failed 58, syntax-invalid 26, redundant 8
Fitness: max 0.833(88), min 0.167(8), ave 0.761
Test execution time: sum 6856 ms, max 200 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:35:13 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-06 18:35:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 42 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 30, redundant 8
Fitness: max 0.833(98), min 0.167(3), ave 0.805
Test execution time: sum 6847 ms, max 209 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:35:31 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-06 18:35:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 59 seconds
Variants: generated 200, build-succeeded 102, build-failed 65, syntax-invalid 28, redundant 5
Fitness: max 0.833(93), min 0.167(4), ave 0.799
Test execution time: sum 6293 ms, max 81 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 18:35:47 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-06 18:36:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 17 seconds
Variants: generated 200, build-succeeded 107, build-failed 57, syntax-invalid 25, redundant 11
Fitness: max 0.833(97), min 0.167(6), ave 0.788
Test execution time: sum 6650 ms, max 123 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 18:36:05 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-06 18:36:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 33 seconds
Variants: generated 200, build-succeeded 92, build-failed 68, syntax-invalid 32, redundant 8
Fitness: max 1(1), min 0.167(8), ave 0.768
Test execution time: sum 5695 ms, max 162 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:36:22 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-06 18:36:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 51 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 32, redundant 10
Fitness: max 1(1), min 0.167(4), ave 0.798
Test execution time: sum 6510 ms, max 139 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:36:39 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-06 18:51:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 7 seconds
Variants: generated 200, build-succeeded 83, build-failed 62, syntax-invalid 52, redundant 3
Fitness: max 1(1), min 0.167(5), ave 0.775
Test execution time: sum 905514 ms, max 900112 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:51:56 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-06 18:52:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 23 seconds
Variants: generated 200, build-succeeded 93, build-failed 57, syntax-invalid 44, redundant 6
Fitness: max 0.833(76), min 0.167(14), ave 0.728
Test execution time: sum 5780 ms, max 139 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:52:12 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-06 18:52:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 40 seconds
Variants: generated 200, build-succeeded 89, build-failed 63, syntax-invalid 44, redundant 4
Fitness: max 0.833(78), min 0.167(8), ave 0.768
Test execution time: sum 5425 ms, max 123 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:52:29 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-06 18:52:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 58 seconds
Variants: generated 200, build-succeeded 96, build-failed 59, syntax-invalid 33, redundant 12
Fitness: max 0.833(78), min 0.167(11), ave 0.743
Test execution time: sum 6131 ms, max 141 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 18:52:46 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-06 18:53:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 14 seconds
Variants: generated 200, build-succeeded 83, build-failed 64, syntax-invalid 45, redundant 8
Fitness: max 1(1), min 0.167(5), ave 0.789
Test execution time: sum 5398 ms, max 198 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:53:03 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-06 18:53:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 32 seconds
Variants: generated 200, build-succeeded 87, build-failed 58, syntax-invalid 46, redundant 9
Fitness: max 1(1), min 0.167(6), ave 0.785
Test execution time: sum 5670 ms, max 194 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:53:20 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-06 18:53:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 50 seconds
Variants: generated 200, build-succeeded 99, build-failed 52, syntax-invalid 40, redundant 9
Fitness: max 1(1), min 0.167(5), ave 0.786
Test execution time: sum 6354 ms, max 192 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 18:53:38 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-06 18:53:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 8 seconds
Variants: generated 200, build-succeeded 100, build-failed 56, syntax-invalid 40, redundant 4
Fitness: max 1(1), min 0.167(9), ave 0.763
Test execution time: sum 6446 ms, max 134 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:53:56 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-06 18:54:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 26 seconds
Variants: generated 200, build-succeeded 102, build-failed 52, syntax-invalid 35, redundant 11
Fitness: max 1(1), min 0.167(3), ave 0.809
Test execution time: sum 6631 ms, max 186 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:54:15 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-06 18:54:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 47 seconds
Variants: generated 200, build-succeeded 115, build-failed 53, syntax-invalid 25, redundant 7
Fitness: max 1(1), min 0.167(4), ave 0.8
Test execution time: sum 7347 ms, max 132 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 18:54:35 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-06 18:54:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 seconds
Variants: generated 200, build-succeeded 103, build-failed 60, syntax-invalid 28, redundant 9
Fitness: max 1(1), min 0.167(5), ave 0.782
Test execution time: sum 6514 ms, max 228 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:54:55 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-06 18:55:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 33, redundant 9
Fitness: max 0.833(99), min 0.167(3), ave 0.811
Test execution time: sum 6600 ms, max 170 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:55:14 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-06 18:55:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 seconds
Variants: generated 200, build-succeeded 105, build-failed 62, syntax-invalid 20, redundant 13
Fitness: max 0.833(94), min 0.167(6), ave 0.786
Test execution time: sum 6791 ms, max 120 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:55:34 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-06 18:55:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 6 seconds
Variants: generated 200, build-succeeded 108, build-failed 62, syntax-invalid 24, redundant 6
Fitness: max 1(1), min 0.167(3), ave 0.81
Test execution time: sum 6861 ms, max 200 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:55:55 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-06 18:56:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 27 seconds
Variants: generated 200, build-succeeded 116, build-failed 56, syntax-invalid 19, redundant 9
Fitness: max 1(1), min 0.167(2), ave 0.816
Test execution time: sum 7411 ms, max 181 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 18:56:16 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-06 18:56:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 48 seconds
Variants: generated 200, build-succeeded 114, build-failed 55, syntax-invalid 23, redundant 8
Fitness: max 1(1), min 0.167(3), ave 0.804
Test execution time: sum 7212 ms, max 137 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:56:37 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-06 18:56:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 9 seconds
Variants: generated 200, build-succeeded 109, build-failed 58, syntax-invalid 25, redundant 8
Fitness: max 0.833(98), min 0.167(5), ave 0.791
Test execution time: sum 6959 ms, max 139 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:56:58 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-06 18:57:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 31 seconds
Variants: generated 200, build-succeeded 126, build-failed 47, syntax-invalid 18, redundant 9
Fitness: max 1(1), min 0.167(7), ave 0.786
Test execution time: sum 7914 ms, max 134 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 18:57:20 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-06 18:57:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 51 seconds
Variants: generated 200, build-succeeded 101, build-failed 61, syntax-invalid 34, redundant 4
Fitness: max 0.833(95), min 0.167(4), ave 0.804
Test execution time: sum 6388 ms, max 116 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:57:40 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-06 18:58:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 12 seconds
Variants: generated 200, build-succeeded 106, build-failed 53, syntax-invalid 33, redundant 8
Fitness: max 0.833(100), min 0.167(3), ave 0.81
Test execution time: sum 6836 ms, max 133 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:58:00 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-06 18:58:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 32 seconds
Variants: generated 200, build-succeeded 100, build-failed 59, syntax-invalid 37, redundant 4
Fitness: max 1(1), min 0.167(2), ave 0.818
Test execution time: sum 6247 ms, max 124 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 18:58:21 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-06 18:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 52 seconds
Variants: generated 200, build-succeeded 103, build-failed 49, syntax-invalid 42, redundant 6
Fitness: max 0.833(91), min 0.167(3), ave 0.796
Test execution time: sum 6516 ms, max 122 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 18:58:41 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-06 18:59:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 11 seconds
Variants: generated 200, build-succeeded 94, build-failed 56, syntax-invalid 41, redundant 9
Fitness: max 1(1), min 0.167(7), ave 0.775
Test execution time: sum 6074 ms, max 128 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 18:59:00 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-06 18:59:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 31 seconds
Variants: generated 200, build-succeeded 92, build-failed 61, syntax-invalid 38, redundant 9
Fitness: max 1(3), min 0.167(3), ave 0.808
Test execution time: sum 6050 ms, max 138 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:59:20 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-06 18:59:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 51 seconds
Variants: generated 200, build-succeeded 95, build-failed 53, syntax-invalid 46, redundant 6
Fitness: max 0.833(90), min 0.167(4), ave 0.804
Test execution time: sum 6266 ms, max 197 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:59:39 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-06 18:59:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 10 seconds
Variants: generated 200, build-succeeded 90, build-failed 59, syntax-invalid 40, redundant 11
Fitness: max 1(1), min 0.167(4), ave 0.804
Test execution time: sum 5731 ms, max 209 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 18:59:59 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-06 19:00:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 30 seconds
Variants: generated 200, build-succeeded 90, build-failed 59, syntax-invalid 45, redundant 6
Fitness: max 0.833(85), min 0.167(2), ave 0.811
Test execution time: sum 5862 ms, max 199 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:00:18 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-06 19:00:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 50 seconds
Variants: generated 200, build-succeeded 96, build-failed 52, syntax-invalid 40, redundant 12
Fitness: max 0.833(87), min 0.167(2), ave 0.807
Test execution time: sum 6380 ms, max 194 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:00:38 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-06 19:00:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 9 seconds
Variants: generated 200, build-succeeded 90, build-failed 58, syntax-invalid 44, redundant 8
Fitness: max 1(2), min 0.167(1), ave 0.822
Test execution time: sum 5841 ms, max 202 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:00:58 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-06 19:01:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 31 seconds
Variants: generated 200, build-succeeded 106, build-failed 55, syntax-invalid 31, redundant 8
Fitness: max 0.833(100), min 0.167(1), ave 0.819
Test execution time: sum 6891 ms, max 204 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 19:01:19 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-06 19:01:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 52 seconds
Variants: generated 200, build-succeeded 96, build-failed 64, syntax-invalid 34, redundant 6
Fitness: max 0.833(92), min 0.167(1), ave 0.821
Test execution time: sum 6305 ms, max 216 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:01:40 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-06 19:02:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 12 seconds
Variants: generated 200, build-succeeded 97, build-failed 57, syntax-invalid 39, redundant 7
Fitness: max 1(1), min 0.167(4), ave 0.801
Test execution time: sum 6145 ms, max 120 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 19:02:01 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-06 19:02:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 33 seconds
Variants: generated 200, build-succeeded 96, build-failed 61, syntax-invalid 39, redundant 4
Fitness: max 0.833(86), min 0.167(4), ave 0.795
Test execution time: sum 6110 ms, max 145 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:02:21 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-06 19:02:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 54 seconds
Variants: generated 200, build-succeeded 104, build-failed 55, syntax-invalid 35, redundant 6
Fitness: max 0.833(97), min 0.167(2), ave 0.811
Test execution time: sum 6795 ms, max 198 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 19:02:43 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-06 19:03:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 15 seconds
Variants: generated 200, build-succeeded 95, build-failed 64, syntax-invalid 35, redundant 6
Fitness: max 0.833(92), min 0.167(1), ave 0.823
Test execution time: sum 6303 ms, max 175 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:03:03 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-06 19:03:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 34 seconds
Variants: generated 200, build-succeeded 85, build-failed 58, syntax-invalid 43, redundant 14
Fitness: max 0.833(80), min 0.167(2), ave 0.81
Test execution time: sum 5615 ms, max 189 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:03:23 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-06 19:03:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 55 seconds
Variants: generated 200, build-succeeded 90, build-failed 63, syntax-invalid 37, redundant 10
Fitness: max 1(1), min 0.167(2), ave 0.809
Test execution time: sum 5840 ms, max 135 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 19:03:43 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-06 19:04:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 16 seconds
Variants: generated 200, build-succeeded 105, build-failed 52, syntax-invalid 34, redundant 9
Fitness: max 0.833(101), min 0.167(3), ave 0.811
Test execution time: sum 7008 ms, max 219 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 19:04:05 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-06 19:04:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 37 seconds
Variants: generated 200, build-succeeded 90, build-failed 58, syntax-invalid 43, redundant 9
Fitness: max 0.833(86), min 0.167(3), ave 0.809
Test execution time: sum 6110 ms, max 204 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:04:25 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-06 19:04:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 59 seconds
Variants: generated 200, build-succeeded 105, build-failed 56, syntax-invalid 31, redundant 8
Fitness: max 0.833(102), min 0.167(1), ave 0.824
Test execution time: sum 6961 ms, max 192 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 19:04:47 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-06 19:05:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 21 seconds
Variants: generated 200, build-succeeded 99, build-failed 59, syntax-invalid 33, redundant 9
Fitness: max 1(1), min 0.167(2), ave 0.813
Test execution time: sum 6374 ms, max 126 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:05:10 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-06 19:05:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 43 seconds
Variants: generated 200, build-succeeded 96, build-failed 56, syntax-invalid 40, redundant 8
Fitness: max 0.833(84), min 0.167(6), ave 0.781
Test execution time: sum 6180 ms, max 139 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 19:05:31 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-06 19:05:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 5 seconds
Variants: generated 200, build-succeeded 104, build-failed 53, syntax-invalid 32, redundant 11
Fitness: max 1(1), min 0.167(3), ave 0.809
Test execution time: sum 6816 ms, max 133 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:05:54 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-06 19:06:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 28 seconds
Variants: generated 200, build-succeeded 103, build-failed 61, syntax-invalid 23, redundant 13
Fitness: max 1(1), min 0.5(1), ave 0.828
Test execution time: sum 6663 ms, max 126 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:06:16 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-06 19:06:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 50 seconds
Variants: generated 200, build-succeeded 100, build-failed 55, syntax-invalid 33, redundant 12
Fitness: max 1(1), min 0.167(2), ave 0.812
Test execution time: sum 6539 ms, max 201 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 19:06:39 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-06 19:07:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 12 seconds
Variants: generated 200, build-succeeded 92, build-failed 62, syntax-invalid 41, redundant 5
Fitness: max 0.833(86), min 0.167(2), ave 0.812
Test execution time: sum 6093 ms, max 133 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:07:01 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-06 19:07:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 34 seconds
Variants: generated 200, build-succeeded 102, build-failed 49, syntax-invalid 27, redundant 22
Fitness: max 0.833(95), min 0.167(4), ave 0.799
Test execution time: sum 6468 ms, max 120 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:07:23 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-06 19:07:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 58 seconds
Variants: generated 200, build-succeeded 111, build-failed 51, syntax-invalid 26, redundant 12
Fitness: max 1(1), min 0.167(1), ave 0.823
Test execution time: sum 7115 ms, max 130 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 19:07:46 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-06 19:08:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 20 seconds
Variants: generated 200, build-succeeded 101, build-failed 53, syntax-invalid 37, redundant 9
Fitness: max 1(1), min 0.167(4), ave 0.802
Test execution time: sum 6566 ms, max 220 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:08:08 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-06 19:08:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 43 seconds
Variants: generated 200, build-succeeded 105, build-failed 50, syntax-invalid 34, redundant 11
Fitness: max 0.833(96), min 0.167(4), ave 0.798
Test execution time: sum 6948 ms, max 206 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:08:31 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-06 19:08:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 6 seconds
Variants: generated 200, build-succeeded 102, build-failed 59, syntax-invalid 33, redundant 6
Fitness: max 0.833(93), min 0.167(2), ave 0.802
Test execution time: sum 6744 ms, max 141 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:08:54 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-06 19:09:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 29 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 25, redundant 9
Fitness: max 0.833(101), min 0.167(2), ave 0.819
Test execution time: sum 6784 ms, max 130 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:09:18 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-06 19:09:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 53 seconds
Variants: generated 200, build-succeeded 112, build-failed 55, syntax-invalid 24, redundant 9
Fitness: max 0.833(107), min 0.167(1), ave 0.821
Test execution time: sum 7338 ms, max 197 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:09:41 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-06 19:10:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 15 seconds
Variants: generated 200, build-succeeded 91, build-failed 69, syntax-invalid 32, redundant 8
Fitness: max 0.833(89), min 0.167(1), ave 0.824
Test execution time: sum 5986 ms, max 127 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:10:04 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-06 19:10:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 37 seconds
Variants: generated 200, build-succeeded 93, build-failed 60, syntax-invalid 38, redundant 9
Fitness: max 0.833(86), min 0.167(3), ave 0.805
Test execution time: sum 6073 ms, max 143 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:10:26 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-06 19:10:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 1 seconds
Variants: generated 200, build-succeeded 96, build-failed 64, syntax-invalid 29, redundant 11
Fitness: max 0.833(94), min 0.667(2), ave 0.83
Test execution time: sum 6326 ms, max 143 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:10:49 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-06 19:11:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 24 seconds
Variants: generated 200, build-succeeded 99, build-failed 55, syntax-invalid 35, redundant 11
Fitness: max 0.833(93), min 0.167(2), ave 0.813
Test execution time: sum 6541 ms, max 122 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 19:11:13 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-06 19:11:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 48 seconds
Variants: generated 200, build-succeeded 94, build-failed 60, syntax-invalid 33, redundant 13
Fitness: max 0.833(91), min 0.167(1), ave 0.823
Test execution time: sum 6204 ms, max 193 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:11:36 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-06 19:12:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 11 seconds
Variants: generated 200, build-succeeded 103, build-failed 49, syntax-invalid 31, redundant 17
Fitness: max 0.833(98), min 0.167(2), ave 0.816
Test execution time: sum 6872 ms, max 196 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:12:00 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-06 19:12:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 35 seconds
Variants: generated 200, build-succeeded 95, build-failed 61, syntax-invalid 33, redundant 11
Fitness: max 0.833(90), min 0.167(3), ave 0.809
Test execution time: sum 6189 ms, max 144 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:12:23 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-06 19:12:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 59 seconds
Variants: generated 200, build-succeeded 106, build-failed 48, syntax-invalid 33, redundant 13
Fitness: max 1(1), min 0.167(2), ave 0.814
Test execution time: sum 6846 ms, max 138 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:12:48 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-06 19:13:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 23 seconds
Variants: generated 200, build-succeeded 100, build-failed 45, syntax-invalid 28, redundant 27
Fitness: max 0.833(94), min 0.167(5), ave 0.798
Test execution time: sum 6430 ms, max 123 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 19:13:12 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-06 19:13:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 48 seconds
Variants: generated 200, build-succeeded 98, build-failed 57, syntax-invalid 30, redundant 15
Fitness: max 0.833(97), min 0.667(1), ave 0.832
Test execution time: sum 6318 ms, max 125 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:13:36 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-06 19:14:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 12 seconds
Variants: generated 200, build-succeeded 92, build-failed 68, syntax-invalid 28, redundant 12
Fitness: max 1(1), min 0.167(2), ave 0.819
Test execution time: sum 5927 ms, max 124 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:14:01 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-06 19:14:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 37 seconds
Variants: generated 200, build-succeeded 94, build-failed 61, syntax-invalid 36, redundant 9
Fitness: max 0.833(90), min 0.167(3), ave 0.81
Test execution time: sum 6070 ms, max 139 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:14:26 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-06 19:14:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 3 seconds
Variants: generated 200, build-succeeded 106, build-failed 55, syntax-invalid 31, redundant 8
Fitness: max 0.833(100), min 0.167(2), ave 0.814
Test execution time: sum 6833 ms, max 134 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:14:52 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-06 19:15:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 28 seconds
Variants: generated 200, build-succeeded 99, build-failed 55, syntax-invalid 35, redundant 11
Fitness: max 1(1), min 0.167(4), ave 0.803
Test execution time: sum 6463 ms, max 140 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:15:17 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-06 19:15:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 53 seconds
Variants: generated 200, build-succeeded 89, build-failed 56, syntax-invalid 39, redundant 16
Fitness: max 0.833(87), min 0.667(2), ave 0.83
Test execution time: sum 5832 ms, max 141 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:15:41 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-06 19:16:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 18 seconds
Variants: generated 200, build-succeeded 101, build-failed 55, syntax-invalid 33, redundant 11
Fitness: max 0.833(93), min 0.167(2), ave 0.809
Test execution time: sum 6785 ms, max 141 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:16:07 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-06 19:16:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 44 seconds
Variants: generated 200, build-succeeded 102, build-failed 59, syntax-invalid 27, redundant 12
Fitness: max 0.833(97), min 0.167(3), ave 0.81
Test execution time: sum 6743 ms, max 147 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:16:33 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-06 19:16:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 9 seconds
Variants: generated 200, build-succeeded 97, build-failed 51, syntax-invalid 44, redundant 8
Fitness: max 0.833(87), min 0.167(1), ave 0.809
Test execution time: sum 6446 ms, max 135 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:16:58 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-06 19:17:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 33 seconds
Variants: generated 200, build-succeeded 78, build-failed 65, syntax-invalid 41, redundant 16
Fitness: max 0.833(75), min 0.167(1), ave 0.821
Test execution time: sum 5374 ms, max 148 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:17:22 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-06 19:17:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 58 seconds
Variants: generated 200, build-succeeded 91, build-failed 59, syntax-invalid 30, redundant 20
Fitness: max 0.833(86), min 0.167(3), ave 0.808
Test execution time: sum 6040 ms, max 188 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:17:47 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-06 19:18:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 24 seconds
Variants: generated 200, build-succeeded 99, build-failed 49, syntax-invalid 37, redundant 15
Fitness: max 0.833(90), min 0.167(4), ave 0.791
Test execution time: sum 6401 ms, max 148 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:18:12 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-06 19:18:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 51 seconds
Variants: generated 200, build-succeeded 105, build-failed 54, syntax-invalid 27, redundant 14
Fitness: max 0.833(102), min 0.167(2), ave 0.819
Test execution time: sum 6991 ms, max 186 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:18:39 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-06 19:19:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 17 seconds
Variants: generated 200, build-succeeded 100, build-failed 63, syntax-invalid 34, redundant 3
Fitness: max 0.833(97), min 0.167(1), ave 0.823
Test execution time: sum 6598 ms, max 137 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:19:06 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-06 19:19:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 42 seconds
Variants: generated 200, build-succeeded 87, build-failed 52, syntax-invalid 44, redundant 17
Fitness: max 1(1), min 0.167(1), ave 0.826
Test execution time: sum 5870 ms, max 176 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:19:31 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-06 19:19:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 8 seconds
Variants: generated 200, build-succeeded 89, build-failed 57, syntax-invalid 35, redundant 19
Fitness: max 0.833(85), min 0.167(3), ave 0.809
Test execution time: sum 5937 ms, max 141 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:19:56 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-06 19:20:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 34 seconds
Variants: generated 200, build-succeeded 101, build-failed 53, syntax-invalid 37, redundant 9
Fitness: max 0.833(89), min 0.167(6), ave 0.781
Test execution time: sum 6752 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:20:23 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-06 19:20:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 0 seconds
Variants: generated 200, build-succeeded 95, build-failed 59, syntax-invalid 40, redundant 6
Fitness: max 0.833(85), min 0.167(4), ave 0.795
Test execution time: sum 6324 ms, max 140 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:20:48 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-06 19:21:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 26 seconds
Variants: generated 200, build-succeeded 96, build-failed 57, syntax-invalid 39, redundant 8
Fitness: max 0.833(92), min 0.167(2), ave 0.816
Test execution time: sum 6367 ms, max 140 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:21:14 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-06 19:21:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 53 seconds
Variants: generated 200, build-succeeded 103, build-failed 60, syntax-invalid 29, redundant 8
Fitness: max 0.833(97), min 0.167(2), ave 0.812
Test execution time: sum 6658 ms, max 138 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:21:42 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-06 19:22:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 20 seconds
Variants: generated 200, build-succeeded 101, build-failed 51, syntax-invalid 33, redundant 15
Fitness: max 0.833(92), min 0.167(2), ave 0.807
Test execution time: sum 6693 ms, max 132 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:22:08 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-06 19:37:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 48 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 31, redundant 6
Fitness: max 0.833(94), min 0.167(6), ave 0.788
Test execution time: sum 906803 ms, max 900104 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:37:36 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-06 19:38:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 16 seconds
Variants: generated 200, build-succeeded 102, build-failed 56, syntax-invalid 33, redundant 9
Fitness: max 1(1), min 0.167(1), ave 0.825
Test execution time: sum 6844 ms, max 130 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:38:05 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-06 19:38:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 46 seconds
Variants: generated 200, build-succeeded 105, build-failed 61, syntax-invalid 26, redundant 8
Fitness: max 0.833(101), min 0.167(2), ave 0.816
Test execution time: sum 7145 ms, max 138 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:38:34 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-06 19:39:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 13 seconds
Variants: generated 200, build-succeeded 100, build-failed 60, syntax-invalid 36, redundant 4
Fitness: max 1(2), min 0.167(2), ave 0.813
Test execution time: sum 6702 ms, max 187 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:39:02 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-06 19:39:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 43 seconds
Variants: generated 200, build-succeeded 115, build-failed 51, syntax-invalid 21, redundant 13
Fitness: max 1(1), min 0.167(7), ave 0.791
Test execution time: sum 7573 ms, max 225 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:39:32 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-06 19:39:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 10 seconds
Variants: generated 200, build-succeeded 92, build-failed 58, syntax-invalid 39, redundant 11
Fitness: max 0.833(89), min 0.167(1), ave 0.822
Test execution time: sum 5940 ms, max 132 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 19:39:59 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-06 19:40:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 38 seconds
Variants: generated 200, build-succeeded 95, build-failed 56, syntax-invalid 33, redundant 16
Fitness: max 0.833(93), min 0.167(1), ave 0.825
Test execution time: sum 6233 ms, max 137 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:40:26 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-06 19:40:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 7 seconds
Variants: generated 200, build-succeeded 105, build-failed 60, syntax-invalid 24, redundant 11
Fitness: max 0.833(102), min 0.167(1), ave 0.824
Test execution time: sum 6963 ms, max 136 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:40:55 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-06 19:41:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 37 seconds
Variants: generated 200, build-succeeded 106, build-failed 64, syntax-invalid 24, redundant 6
Fitness: max 0.833(102), min 0.167(2), ave 0.818
Test execution time: sum 7026 ms, max 216 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:41:26 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-06 19:41:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 8 seconds
Variants: generated 200, build-succeeded 107, build-failed 64, syntax-invalid 23, redundant 6
Fitness: max 1(2), min 0.167(1), ave 0.824
Test execution time: sum 7150 ms, max 148 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:41:56 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-06 19:42:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 39 seconds
Variants: generated 200, build-succeeded 106, build-failed 62, syntax-invalid 23, redundant 9
Fitness: max 0.833(103), min 0.167(2), ave 0.819
Test execution time: sum 7140 ms, max 186 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:42:27 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-06 19:42:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 10 seconds
Variants: generated 200, build-succeeded 111, build-failed 54, syntax-invalid 26, redundant 9
Fitness: max 0.833(106), min 0.167(3), ave 0.809
Test execution time: sum 7380 ms, max 161 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:42:58 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-06 19:43:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 41 seconds
Variants: generated 200, build-succeeded 107, build-failed 66, syntax-invalid 17, redundant 10
Fitness: max 0.833(105), min 0.5(1), ave 0.829
Test execution time: sum 7209 ms, max 142 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 19:43:30 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-06 19:44:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 14 seconds
Variants: generated 200, build-succeeded 122, build-failed 51, syntax-invalid 17, redundant 10
Fitness: max 0.833(114), min 0.167(3), ave 0.809
Test execution time: sum 8215 ms, max 195 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:44:03 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-06 19:44:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 46 seconds
Variants: generated 200, build-succeeded 109, build-failed 54, syntax-invalid 20, redundant 17
Fitness: max 0.833(106), min 0.167(1), ave 0.824
Test execution time: sum 7349 ms, max 133 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 19:44:35 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-06 19:45:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 17 seconds
Variants: generated 200, build-succeeded 106, build-failed 62, syntax-invalid 22, redundant 10
Fitness: max 0.833(104), min 0.667(2), ave 0.83
Test execution time: sum 7265 ms, max 143 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 19:45:06 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-06 19:45:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 49 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 19, redundant 17
Fitness: max 0.833(100), min 0.167(2), ave 0.809
Test execution time: sum 7209 ms, max 138 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 19:45:37 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-06 19:46:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 21 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 11, redundant 18
Fitness: max 0.833(111), min 0.167(3), ave 0.813
Test execution time: sum 7900 ms, max 143 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 19:46:10 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-06 19:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 53 seconds
Variants: generated 200, build-succeeded 105, build-failed 55, syntax-invalid 27, redundant 13
Fitness: max 0.833(103), min 0.667(2), ave 0.83
Test execution time: sum 7161 ms, max 130 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:46:41 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-06 19:47:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 23 seconds
Variants: generated 200, build-succeeded 103, build-failed 56, syntax-invalid 29, redundant 12
Fitness: max 0.833(103), min 0.833(103), ave 0.833
Test execution time: sum 7114 ms, max 224 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 19:47:12 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-06 19:47:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 54 seconds
Variants: generated 200, build-succeeded 105, build-failed 52, syntax-invalid 27, redundant 16
Fitness: max 1(2), min 0.167(2), ave 0.817
Test execution time: sum 7116 ms, max 130 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:47:43 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-06 19:48:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 28 seconds
Variants: generated 200, build-succeeded 120, build-failed 48, syntax-invalid 16, redundant 16
Fitness: max 1(1), min 0.167(1), ave 0.824
Test execution time: sum 8231 ms, max 127 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 19:48:16 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-06 19:48:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 0 seconds
Variants: generated 200, build-succeeded 110, build-failed 54, syntax-invalid 23, redundant 13
Fitness: max 0.833(110), min 0.833(110), ave 0.833
Test execution time: sum 7282 ms, max 145 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:48:48 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-06 19:49:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 33 seconds
Variants: generated 200, build-succeeded 107, build-failed 61, syntax-invalid 23, redundant 9
Fitness: max 0.833(103), min 0.167(2), ave 0.818
Test execution time: sum 7289 ms, max 190 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:49:21 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-06 19:49:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 5 seconds
Variants: generated 200, build-succeeded 102, build-failed 57, syntax-invalid 29, redundant 12
Fitness: max 0.833(96), min 0.167(4), ave 0.804
Test execution time: sum 7134 ms, max 142 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 19:49:54 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-06 19:50:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 38 seconds
Variants: generated 200, build-succeeded 111, build-failed 53, syntax-invalid 22, redundant 14
Fitness: max 0.833(106), min 0.5(1), ave 0.824
Test execution time: sum 7407 ms, max 137 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 19:50:27 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-06 19:50:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 10 seconds
Variants: generated 200, build-succeeded 108, build-failed 49, syntax-invalid 29, redundant 14
Fitness: max 0.833(104), min 0.167(1), ave 0.819
Test execution time: sum 7380 ms, max 132 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 19:50:59 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-06 19:51:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 43 seconds
Variants: generated 200, build-succeeded 108, build-failed 52, syntax-invalid 22, redundant 18
Fitness: max 1(1), min 0.167(1), ave 0.823
Test execution time: sum 7355 ms, max 133 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 19:51:32 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-06 19:52:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 15 seconds
Variants: generated 200, build-succeeded 92, build-failed 58, syntax-invalid 34, redundant 16
Fitness: max 0.833(86), min 0.167(2), ave 0.812
Test execution time: sum 6258 ms, max 151 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 19:52:03 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-06 19:52:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 49 seconds
Variants: generated 200, build-succeeded 115, build-failed 55, syntax-invalid 20, redundant 10
Fitness: max 0.833(110), min 0.167(1), ave 0.82
Test execution time: sum 7758 ms, max 144 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:52:38 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-06 19:53:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 22 seconds
Variants: generated 200, build-succeeded 107, build-failed 51, syntax-invalid 29, redundant 13
Fitness: max 1(1), min 0.167(1), ave 0.826
Test execution time: sum 7322 ms, max 181 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 19:53:11 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-06 19:53:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 55 seconds
Variants: generated 200, build-succeeded 101, build-failed 54, syntax-invalid 35, redundant 10
Fitness: max 0.833(100), min 0.667(1), ave 0.832
Test execution time: sum 6817 ms, max 133 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 19:53:43 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-06 19:54:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 28 seconds
Variants: generated 200, build-succeeded 102, build-failed 59, syntax-invalid 28, redundant 11
Fitness: max 0.833(95), min 0.167(5), ave 0.797
Test execution time: sum 6989 ms, max 143 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 19:54:16 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-06 19:54:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 0 seconds
Variants: generated 200, build-succeeded 91, build-failed 61, syntax-invalid 34, redundant 14
Fitness: max 0.833(86), min 0.167(1), ave 0.815
Test execution time: sum 6240 ms, max 148 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 19:54:49 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-06 20:04:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 34 seconds
Variants: generated 200, build-succeeded 109, build-failed 53, syntax-invalid 29, redundant 9
Fitness: max 1(1), min 0.167(3), ave 0.806
Test execution time: sum 547559 ms, max 540105 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 20:04:23 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-06 20:04:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 9 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 29, redundant 10
Fitness: max 1(1), min 0.167(2), ave 0.813
Test execution time: sum 7265 ms, max 146 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 20:04:58 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-06 20:05:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 45 seconds
Variants: generated 200, build-succeeded 107, build-failed 53, syntax-invalid 31, redundant 9
Fitness: max 0.833(102), min 0.333(1), ave 0.822
Test execution time: sum 7677 ms, max 161 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 20:05:33 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-06 20:06:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 18 seconds
Variants: generated 200, build-succeeded 94, build-failed 59, syntax-invalid 33, redundant 14
Fitness: max 0.833(86), min 0.167(4), ave 0.798
Test execution time: sum 6525 ms, max 142 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 20:06:06 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-06 20:06:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 52 seconds
Variants: generated 200, build-succeeded 102, build-failed 59, syntax-invalid 31, redundant 8
Fitness: max 0.833(97), min 0.167(2), ave 0.814
Test execution time: sum 7148 ms, max 136 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 20:06:40 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-06 20:07:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 25 seconds
Variants: generated 200, build-succeeded 98, build-failed 59, syntax-invalid 33, redundant 10
Fitness: max 0.833(90), min 0.167(3), ave 0.799
Test execution time: sum 6710 ms, max 140 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 20:07:14 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-06 20:07:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 59 seconds
Variants: generated 200, build-succeeded 98, build-failed 61, syntax-invalid 29, redundant 12
Fitness: max 0.833(97), min 0.667(1), ave 0.832
Test execution time: sum 6687 ms, max 149 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 20:07:48 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-06 20:08:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 33 seconds
Variants: generated 200, build-succeeded 100, build-failed 55, syntax-invalid 38, redundant 7
Fitness: max 0.833(95), min 0.167(5), ave 0.8
Test execution time: sum 6905 ms, max 145 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 20:08:21 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-06 20:08:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 9 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 18, redundant 13
Fitness: max 0.833(108), min 0.167(1), ave 0.823
Test execution time: sum 7714 ms, max 149 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 20:08:58 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-06 20:09:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 44 seconds
Variants: generated 200, build-succeeded 102, build-failed 50, syntax-invalid 39, redundant 9
Fitness: max 0.833(96), min 0.167(4), ave 0.802
Test execution time: sum 7230 ms, max 164 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 20:09:32 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-06 20:10:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 18 seconds
Variants: generated 200, build-succeeded 99, build-failed 54, syntax-invalid 31, redundant 16
Fitness: max 1(1), min 0.167(1), ave 0.828
Test execution time: sum 6883 ms, max 144 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 20:10:07 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-06 20:10:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 51 seconds
Variants: generated 200, build-succeeded 93, build-failed 57, syntax-invalid 40, redundant 10
Fitness: max 0.833(90), min 0.167(1), ave 0.823
Test execution time: sum 6462 ms, max 163 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 20:10:39 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-06 20:11:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 24 seconds
Variants: generated 200, build-succeeded 99, build-failed 55, syntax-invalid 33, redundant 13
Fitness: max 1(2), min 0.167(2), ave 0.818
Test execution time: sum 6812 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 20:11:13 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-06 20:11:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 58 seconds
Variants: generated 200, build-succeeded 91, build-failed 65, syntax-invalid 37, redundant 7
Fitness: max 0.833(87), min 0.167(1), ave 0.821
Test execution time: sum 6394 ms, max 133 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 20:11:47 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-06 20:12:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 31 seconds
Variants: generated 200, build-succeeded 92, build-failed 55, syntax-invalid 41, redundant 12
Fitness: max 1(1), min 0.167(3), ave 0.806
Test execution time: sum 6389 ms, max 136 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 20:12:20 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-06 20:12:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 5 seconds
Variants: generated 200, build-succeeded 97, build-failed 56, syntax-invalid 35, redundant 12
Fitness: max 0.833(94), min 0.667(3), ave 0.828
Test execution time: sum 6791 ms, max 139 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 20:12:54 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-06 20:13:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 40 seconds
Variants: generated 200, build-succeeded 99, build-failed 62, syntax-invalid 34, redundant 5
Fitness: max 0.833(92), min 0.167(1), ave 0.811
Test execution time: sum 6925 ms, max 127 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 20:13:29 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-06 20:14:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 14 seconds
Variants: generated 200, build-succeeded 95, build-failed 55, syntax-invalid 41, redundant 9
Fitness: max 0.833(91), min 0.167(2), ave 0.814
Test execution time: sum 6770 ms, max 235 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 20:14:02 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-06 20:14:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 48 seconds
Variants: generated 200, build-succeeded 93, build-failed 65, syntax-invalid 37, redundant 5
Fitness: max 1(1), min 0.167(2), ave 0.815
Test execution time: sum 6570 ms, max 199 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 20:14:36 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-06 20:15:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 25 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 30, redundant 9
Fitness: max 0.833(107), min 0.833(107), ave 0.833
Test execution time: sum 7715 ms, max 199 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 20:15:14 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-06 20:15:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 0 seconds
Variants: generated 200, build-succeeded 96, build-failed 56, syntax-invalid 37, redundant 11
Fitness: max 0.833(91), min 0.333(1), ave 0.819
Test execution time: sum 6860 ms, max 146 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 20:15:48 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-06 20:16:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 37 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 30, redundant 12
Fitness: max 0.833(102), min 0.667(2), ave 0.83
Test execution time: sum 7479 ms, max 153 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:16:26 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-06 20:17:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 14 seconds
Variants: generated 200, build-succeeded 102, build-failed 54, syntax-invalid 36, redundant 8
Fitness: max 1(1), min 0.167(4), ave 0.802
Test execution time: sum 7299 ms, max 150 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 20:17:02 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-06 20:17:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 51 seconds
Variants: generated 200, build-succeeded 100, build-failed 57, syntax-invalid 33, redundant 10
Fitness: max 0.833(97), min 0.167(1), ave 0.823
Test execution time: sum 7195 ms, max 137 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 20:17:39 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-06 20:18:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 28 seconds
Variants: generated 200, build-succeeded 93, build-failed 63, syntax-invalid 36, redundant 8
Fitness: max 0.833(86), min 0.167(2), ave 0.808
Test execution time: sum 6782 ms, max 153 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 20:18:17 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-06 20:18:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 8 seconds
Variants: generated 200, build-succeeded 110, build-failed 53, syntax-invalid 25, redundant 12
Fitness: max 0.833(105), min 0.167(1), ave 0.821
Test execution time: sum 7981 ms, max 153 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:18:56 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-06 20:19:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 47 seconds
Variants: generated 200, build-succeeded 108, build-failed 57, syntax-invalid 27, redundant 8
Fitness: max 0.833(103), min 0.167(2), ave 0.815
Test execution time: sum 7664 ms, max 132 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 20:19:35 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-06 20:20:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 23 seconds
Variants: generated 200, build-succeeded 92, build-failed 60, syntax-invalid 33, redundant 15
Fitness: max 0.833(89), min 0.167(2), ave 0.817
Test execution time: sum 6487 ms, max 147 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 20:20:11 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-06 20:20:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 2 seconds
Variants: generated 200, build-succeeded 98, build-failed 60, syntax-invalid 34, redundant 8
Fitness: max 0.833(93), min 0.167(3), ave 0.81
Test execution time: sum 7249 ms, max 141 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 20:20:50 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-06 20:21:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 39 seconds
Variants: generated 200, build-succeeded 96, build-failed 60, syntax-invalid 32, redundant 12
Fitness: max 0.833(91), min 0.167(3), ave 0.809
Test execution time: sum 6656 ms, max 141 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 20:21:28 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-06 20:22:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 20 seconds
Variants: generated 200, build-succeeded 108, build-failed 59, syntax-invalid 20, redundant 13
Fitness: max 0.833(105), min 0.5(1), ave 0.827
Test execution time: sum 8049 ms, max 158 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:22:08 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-06 20:37:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 2 seconds
Variants: generated 200, build-succeeded 114, build-failed 54, syntax-invalid 22, redundant 10
Fitness: max 0.833(111), min 0.167(1), ave 0.823
Test execution time: sum 908705 ms, max 900143 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:37:51 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-06 20:38:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 41 seconds
Variants: generated 200, build-succeeded 106, build-failed 56, syntax-invalid 31, redundant 7
Fitness: max 0.833(98), min 0.167(3), ave 0.802
Test execution time: sum 7745 ms, max 193 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 20:38:29 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-06 20:39:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 24 seconds
Variants: generated 200, build-succeeded 123, build-failed 46, syntax-invalid 18, redundant 13
Fitness: max 0.833(114), min 0.167(4), ave 0.802
Test execution time: sum 9108 ms, max 228 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 20:39:13 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-06 20:39:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 6 seconds
Variants: generated 200, build-succeeded 111, build-failed 55, syntax-invalid 24, redundant 10
Fitness: max 0.833(106), min 0.167(1), ave 0.821
Test execution time: sum 8185 ms, max 152 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:39:54 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-06 20:40:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 46 seconds
Variants: generated 200, build-succeeded 104, build-failed 63, syntax-invalid 28, redundant 5
Fitness: max 0.833(99), min 0.167(2), ave 0.814
Test execution time: sum 7614 ms, max 186 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 20:40:35 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-06 20:41:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 27 seconds
Variants: generated 200, build-succeeded 101, build-failed 62, syntax-invalid 31, redundant 6
Fitness: max 0.833(98), min 0.167(1), ave 0.823
Test execution time: sum 7460 ms, max 148 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 20:41:15 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-06 20:41:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 8 seconds
Variants: generated 200, build-succeeded 105, build-failed 61, syntax-invalid 25, redundant 9
Fitness: max 0.833(103), min 0.167(2), ave 0.821
Test execution time: sum 7654 ms, max 148 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:41:57 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-06 20:42:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 50 seconds
Variants: generated 200, build-succeeded 111, build-failed 48, syntax-invalid 24, redundant 17
Fitness: max 0.833(108), min 0.667(3), ave 0.829
Test execution time: sum 8111 ms, max 142 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 20:42:38 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-06 20:43:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 32 seconds
Variants: generated 200, build-succeeded 107, build-failed 62, syntax-invalid 25, redundant 6
Fitness: max 0.833(104), min 0.5(1), ave 0.827
Test execution time: sum 7822 ms, max 178 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:43:20 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-06 20:44:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 16 seconds
Variants: generated 200, build-succeeded 114, build-failed 56, syntax-invalid 20, redundant 10
Fitness: max 0.833(111), min 0.167(2), ave 0.82
Test execution time: sum 8597 ms, max 204 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 20:44:04 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-06 20:44:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 57 seconds
Variants: generated 200, build-succeeded 107, build-failed 45, syntax-invalid 37, redundant 11
Fitness: max 0.833(99), min 0.167(4), ave 0.801
Test execution time: sum 8008 ms, max 161 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 20:44:45 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-06 20:45:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 38 seconds
Variants: generated 200, build-succeeded 104, build-failed 55, syntax-invalid 27, redundant 14
Fitness: max 0.833(101), min 0.167(1), ave 0.824
Test execution time: sum 7622 ms, max 140 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 20:45:26 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-06 20:46:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 22 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 20, redundant 11
Fitness: max 0.833(107), min 0.167(3), ave 0.811
Test execution time: sum 8313 ms, max 183 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 20:46:10 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-06 20:46:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 8 seconds
Variants: generated 200, build-succeeded 113, build-failed 60, syntax-invalid 18, redundant 9
Fitness: max 0.833(106), min 0.167(6), ave 0.796
Test execution time: sum 8998 ms, max 214 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:46:57 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-06 20:47:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 52 seconds
Variants: generated 200, build-succeeded 107, build-failed 64, syntax-invalid 24, redundant 5
Fitness: max 0.833(104), min 0.5(1), ave 0.827
Test execution time: sum 8236 ms, max 183 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 20:47:40 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-06 20:48:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 35 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 27, redundant 6
Fitness: max 0.833(104), min 0.5(1), ave 0.829
Test execution time: sum 7894 ms, max 169 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:48:23 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-06 20:49:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 19 seconds
Variants: generated 200, build-succeeded 108, build-failed 64, syntax-invalid 25, redundant 3
Fitness: max 0.833(104), min 0.167(2), ave 0.818
Test execution time: sum 8110 ms, max 177 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:49:07 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-06 20:49:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 1 seconds
Variants: generated 200, build-succeeded 103, build-failed 62, syntax-invalid 26, redundant 9
Fitness: max 1(1), min 0.167(1), ave 0.824
Test execution time: sum 7549 ms, max 150 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 20:49:49 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-06 20:50:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 44 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 28, redundant 7
Fitness: max 1(2), min 0.167(1), ave 0.824
Test execution time: sum 8335 ms, max 184 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 20:50:32 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-06 20:51:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 24 seconds
Variants: generated 200, build-succeeded 105, build-failed 53, syntax-invalid 33, redundant 9
Fitness: max 0.833(100), min 0.167(1), ave 0.817
Test execution time: sum 7687 ms, max 148 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 20:51:13 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-06 20:51:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 6 seconds
Variants: generated 200, build-succeeded 98, build-failed 63, syntax-invalid 29, redundant 10
Fitness: max 0.833(95), min 0.167(1), ave 0.823
Test execution time: sum 7490 ms, max 146 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 20:51:54 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-06 20:52:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 49 seconds
Variants: generated 200, build-succeeded 100, build-failed 61, syntax-invalid 30, redundant 9
Fitness: max 0.833(100), min 0.833(100), ave 0.833
Test execution time: sum 8135 ms, max 268 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 20:52:38 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-06 20:53:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 33 seconds
Variants: generated 200, build-succeeded 113, build-failed 54, syntax-invalid 23, redundant 10
Fitness: max 0.833(110), min 0.167(1), ave 0.824
Test execution time: sum 8723 ms, max 220 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 20:53:22 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-06 20:54:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 17 seconds
Variants: generated 200, build-succeeded 98, build-failed 66, syntax-invalid 26, redundant 10
Fitness: max 0.833(93), min 0.167(4), ave 0.804
Test execution time: sum 7654 ms, max 211 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 20:54:05 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-06 20:54:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 seconds
Variants: generated 200, build-succeeded 114, build-failed 59, syntax-invalid 15, redundant 12
Fitness: max 0.833(109), min 0.167(1), ave 0.822
Test execution time: sum 8539 ms, max 203 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 20:54:51 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-06 20:55:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 seconds
Variants: generated 200, build-succeeded 100, build-failed 60, syntax-invalid 32, redundant 8
Fitness: max 0.833(97), min 0.167(2), ave 0.818
Test execution time: sum 7657 ms, max 150 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 20:55:33 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-06 20:56:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 32 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 31, redundant 8
Fitness: max 0.833(101), min 0.167(2), ave 0.815
Test execution time: sum 8970 ms, max 226 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 20:56:20 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-06 20:57:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 17 seconds
Variants: generated 200, build-succeeded 102, build-failed 65, syntax-invalid 26, redundant 7
Fitness: max 0.833(96), min 0.167(2), ave 0.814
Test execution time: sum 8247 ms, max 203 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 20:57:05 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-06 20:57:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 3 seconds
Variants: generated 200, build-succeeded 112, build-failed 58, syntax-invalid 18, redundant 12
Fitness: max 0.833(110), min 0.167(1), ave 0.826
Test execution time: sum 9007 ms, max 229 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 20:57:52 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-06 20:58:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 50 seconds
Variants: generated 200, build-succeeded 112, build-failed 58, syntax-invalid 21, redundant 9
Fitness: max 1(1), min 0.167(1), ave 0.824
Test execution time: sum 9109 ms, max 232 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 20:58:38 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-06 20:59:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 36 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 24, redundant 7
Fitness: max 0.833(109), min 0.667(3), ave 0.829
Test execution time: sum 8653 ms, max 176 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 20:59:24 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-06 21:00:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 23 seconds
Variants: generated 200, build-succeeded 113, build-failed 58, syntax-invalid 18, redundant 11
Fitness: max 0.833(111), min 0.167(1), ave 0.826
Test execution time: sum 9030 ms, max 193 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 21:00:11 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-06 21:00:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 4 seconds
Variants: generated 200, build-succeeded 89, build-failed 66, syntax-invalid 34, redundant 11
Fitness: max 0.833(86), min 0.167(1), ave 0.822
Test execution time: sum 6682 ms, max 112 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 21:00:53 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-06 21:01:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 51 seconds
Variants: generated 200, build-succeeded 111, build-failed 56, syntax-invalid 28, redundant 5
Fitness: max 0.833(109), min 0.667(2), ave 0.83
Test execution time: sum 8962 ms, max 174 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 21:01:40 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-06 21:02:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 37 seconds
Variants: generated 200, build-succeeded 103, build-failed 60, syntax-invalid 24, redundant 13
Fitness: max 0.833(101), min 0.167(1), ave 0.825
Test execution time: sum 8305 ms, max 302 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 21:02:26 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-06 21:03:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 23 seconds
Variants: generated 200, build-succeeded 108, build-failed 66, syntax-invalid 22, redundant 4
Fitness: max 0.833(103), min 0.167(2), ave 0.816
Test execution time: sum 8107 ms, max 167 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 21:03:12 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-06 21:03:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 6 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 28, redundant 8
Fitness: max 0.833(103), min 0.167(2), ave 0.819
Test execution time: sum 7689 ms, max 118 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 21:03:54 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-06 21:04:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 51 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 26, redundant 13
Fitness: max 0.833(104), min 0.167(1), ave 0.824
Test execution time: sum 8198 ms, max 195 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 21:04:40 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-06 21:05:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 38 seconds
Variants: generated 200, build-succeeded 118, build-failed 53, syntax-invalid 22, redundant 7
Fitness: max 0.833(116), min 0.167(1), ave 0.826
Test execution time: sum 8823 ms, max 231 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 21:05:26 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-06 21:06:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 23 seconds
Variants: generated 200, build-succeeded 101, build-failed 62, syntax-invalid 22, redundant 15
Fitness: max 0.833(99), min 0.167(2), ave 0.82
Test execution time: sum 7987 ms, max 208 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 21:06:11 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-06 21:06:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 7 seconds
Variants: generated 200, build-succeeded 107, build-failed 55, syntax-invalid 30, redundant 8
Fitness: max 0.833(104), min 0.167(1), ave 0.824
Test execution time: sum 8375 ms, max 213 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 21:06:56 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-06 21:07:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 54 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 18, redundant 11
Fitness: max 0.833(112), min 0.167(2), ave 0.822
Test execution time: sum 8837 ms, max 182 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 21:07:43 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-06 21:08:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 39 seconds
Variants: generated 200, build-succeeded 109, build-failed 51, syntax-invalid 22, redundant 18
Fitness: max 0.833(107), min 0.5(1), ave 0.829
Test execution time: sum 8128 ms, max 178 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 21:08:27 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-06 21:09:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 25 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 25, redundant 11
Fitness: max 0.833(105), min 0.667(3), ave 0.829
Test execution time: sum 8300 ms, max 151 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 21:09:13 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-06 21:10:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 12 seconds
Variants: generated 200, build-succeeded 110, build-failed 68, syntax-invalid 17, redundant 5
Fitness: max 0.833(109), min 0.5(1), ave 0.83
Test execution time: sum 8371 ms, max 152 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 21:10:01 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-06 21:10:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 56 seconds
Variants: generated 200, build-succeeded 102, build-failed 55, syntax-invalid 31, redundant 12
Fitness: max 0.833(101), min 0.667(1), ave 0.832
Test execution time: sum 7593 ms, max 201 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 21:10:44 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-06 21:11:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 45 seconds
Variants: generated 200, build-succeeded 114, build-failed 55, syntax-invalid 20, redundant 11
Fitness: max 0.833(110), min 0.167(1), ave 0.82
Test execution time: sum 9267 ms, max 303 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 21:11:33 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-06 21:12:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 30 seconds
Variants: generated 200, build-succeeded 103, build-failed 58, syntax-invalid 30, redundant 9
Fitness: max 0.833(101), min 0.167(1), ave 0.825
Test execution time: sum 7855 ms, max 122 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 21:12:19 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-06 21:13:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 18 seconds
Variants: generated 200, build-succeeded 110, build-failed 49, syntax-invalid 28, redundant 13
Fitness: max 1(1), min 0.167(1), ave 0.827
Test execution time: sum 9078 ms, max 574 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 21:13:07 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-06 21:13:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 7 seconds
Variants: generated 200, build-succeeded 109, build-failed 66, syntax-invalid 17, redundant 8
Fitness: max 0.833(107), min 0.167(1), ave 0.826
Test execution time: sum 8752 ms, max 315 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 21:13:56 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-06 21:14:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 52 seconds
Variants: generated 200, build-succeeded 105, build-failed 62, syntax-invalid 26, redundant 7
Fitness: max 0.833(103), min 0.667(2), ave 0.83
Test execution time: sum 7725 ms, max 240 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 21:14:41 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-06 21:15:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 39 seconds
Variants: generated 200, build-succeeded 105, build-failed 62, syntax-invalid 26, redundant 7
Fitness: max 0.833(103), min 0.667(2), ave 0.83
Test execution time: sum 8287 ms, max 255 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 21:15:28 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-06 21:16:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 27 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 22, redundant 13
Fitness: max 0.833(106), min 0.667(3), ave 0.829
Test execution time: sum 8618 ms, max 135 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 21:16:16 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-06 21:17:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 19 seconds
Variants: generated 200, build-succeeded 103, build-failed 65, syntax-invalid 23, redundant 9
Fitness: max 0.833(102), min 0.167(1), ave 0.827
Test execution time: sum 9129 ms, max 268 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 21:17:07 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-06 21:17:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 11 seconds
Variants: generated 200, build-succeeded 108, build-failed 72, syntax-invalid 17, redundant 3
Fitness: max 0.833(104), min 0.667(4), ave 0.827
Test execution time: sum 10519 ms, max 336 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 21:17:59 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-06 21:18:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 3 seconds
Variants: generated 200, build-succeeded 101, build-failed 70, syntax-invalid 23, redundant 6
Fitness: max 0.833(99), min 0.167(1), ave 0.825
Test execution time: sum 9336 ms, max 337 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 21:18:51 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-06 21:19:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 57 seconds
Variants: generated 200, build-succeeded 110, build-failed 62, syntax-invalid 23, redundant 5
Fitness: max 0.833(107), min 0(1), ave 0.818
Test execution time: sum 10388 ms, max 337 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 21:19:45 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-06 21:20:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 45 seconds
Variants: generated 200, build-succeeded 97, build-failed 64, syntax-invalid 28, redundant 11
Fitness: max 0.833(96), min 0.667(1), ave 0.832
Test execution time: sum 7894 ms, max 164 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 21:20:33 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-06 21:21:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 38 seconds
Variants: generated 200, build-succeeded 105, build-failed 56, syntax-invalid 28, redundant 11
Fitness: max 0.833(100), min 0.167(3), ave 0.811
Test execution time: sum 11274 ms, max 352 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 21:21:27 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-06 21:22:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 35 seconds
Variants: generated 200, build-succeeded 108, build-failed 61, syntax-invalid 21, redundant 10
Fitness: max 0.833(102), min 0.167(2), ave 0.815
Test execution time: sum 10757 ms, max 257 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 21:22:23 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-06 21:23:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 26 seconds
Variants: generated 200, build-succeeded 98, build-failed 65, syntax-invalid 25, redundant 12
Fitness: max 0.833(94), min 0.667(4), ave 0.827
Test execution time: sum 9093 ms, max 334 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 21:23:15 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-06 21:24:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 19 seconds
Variants: generated 200, build-succeeded 90, build-failed 61, syntax-invalid 42, redundant 7
Fitness: max 0.833(85), min 0.167(4), ave 0.802
Test execution time: sum 10087 ms, max 316 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 21:24:07 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-06 21:24:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 9 seconds
Variants: generated 200, build-succeeded 92, build-failed 66, syntax-invalid 34, redundant 8
Fitness: max 0.833(88), min 0.167(2), ave 0.812
Test execution time: sum 8552 ms, max 297 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 21:24:58 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-06 21:25:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 7 seconds
Variants: generated 200, build-succeeded 97, build-failed 65, syntax-invalid 31, redundant 7
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 11874 ms, max 437 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 21:25:56 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-06 21:26:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 2 seconds
Variants: generated 200, build-succeeded 94, build-failed 56, syntax-invalid 40, redundant 10
Fitness: max 0.833(92), min 0.167(2), ave 0.819
Test execution time: sum 10175 ms, max 438 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 21:26:50 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-06 21:27:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 53 seconds
Variants: generated 200, build-succeeded 97, build-failed 54, syntax-invalid 36, redundant 13
Fitness: max 0.833(96), min 0.667(1), ave 0.832
Test execution time: sum 9034 ms, max 254 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 21:27:41 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-06 21:28:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 46 seconds
Variants: generated 200, build-succeeded 100, build-failed 59, syntax-invalid 30, redundant 11
Fitness: max 1(1), min 0.667(5), ave 0.827
Test execution time: sum 9812 ms, max 275 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 21:28:35 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-06 21:29:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 32 seconds
Variants: generated 200, build-succeeded 91, build-failed 59, syntax-invalid 41, redundant 9
Fitness: max 0.833(89), min 0.167(1), ave 0.824
Test execution time: sum 7406 ms, max 166 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 21:29:21 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-06 21:30:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 26 seconds
Variants: generated 200, build-succeeded 84, build-failed 61, syntax-invalid 42, redundant 13
Fitness: max 0.833(78), min 0.167(4), ave 0.798
Test execution time: sum 8974 ms, max 235 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 21:30:14 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-06 21:31:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 18 seconds
Variants: generated 200, build-succeeded 96, build-failed 56, syntax-invalid 36, redundant 12
Fitness: max 1(1), min 0.167(3), ave 0.807
Test execution time: sum 9648 ms, max 303 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 21:31:07 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-06 21:32:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 11 seconds
Variants: generated 200, build-succeeded 100, build-failed 60, syntax-invalid 31, redundant 9
Fitness: max 0.833(99), min 0.167(1), ave 0.827
Test execution time: sum 9911 ms, max 502 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 21:32:00 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-06 21:47:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 10 seconds
Variants: generated 200, build-succeeded 89, build-failed 66, syntax-invalid 34, redundant 11
Fitness: max 0.833(86), min 0.167(2), ave 0.816
Test execution time: sum 909133 ms, max 900202 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 21:47:59 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-06 21:49:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 13 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 29, redundant 7
Fitness: max 0.833(104), min 0.167(1), ave 0.825
Test execution time: sum 10712 ms, max 371 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 21:49:02 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-06 21:50:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 14 seconds
Variants: generated 200, build-succeeded 102, build-failed 57, syntax-invalid 30, redundant 11
Fitness: max 0.833(98), min 0.167(3), ave 0.812
Test execution time: sum 9984 ms, max 271 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 21:50:03 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-06 21:51:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 18 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 27, redundant 8
Fitness: max 0.833(100), min 0.167(2), ave 0.808
Test execution time: sum 10773 ms, max 215 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 21:51:07 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-06 21:52:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 21 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 26, redundant 10
Fitness: max 1(1), min 0.167(1), ave 0.829
Test execution time: sum 10916 ms, max 201 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 21:52:10 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-06 21:53:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 26 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 22, redundant 16
Fitness: max 0.833(100), min 0.167(2), ave 0.817
Test execution time: sum 10497 ms, max 259 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 21:53:14 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-06 21:54:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 25 seconds
Variants: generated 200, build-succeeded 98, build-failed 66, syntax-invalid 29, redundant 7
Fitness: max 0.833(96), min 0.167(1), ave 0.825
Test execution time: sum 9203 ms, max 181 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 21:54:14 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-06 21:55:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 seconds
Variants: generated 200, build-succeeded 104, build-failed 70, syntax-invalid 21, redundant 5
Fitness: max 0.833(100), min 0.167(2), ave 0.817
Test execution time: sum 10539 ms, max 231 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 21:55:19 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-06 21:56:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 33 seconds
Variants: generated 200, build-succeeded 96, build-failed 66, syntax-invalid 29, redundant 9
Fitness: max 0.833(89), min 0.167(2), ave 0.811
Test execution time: sum 9656 ms, max 273 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 21:56:21 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-06 21:57:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 38 seconds
Variants: generated 200, build-succeeded 112, build-failed 50, syntax-invalid 24, redundant 14
Fitness: max 0.833(109), min 0.167(3), ave 0.815
Test execution time: sum 11247 ms, max 358 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 21:57:26 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-06 21:58:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 3 minutes 40 seconds
Variants: generated 200, build-succeeded 105, build-failed 52, syntax-invalid 30, redundant 13
Fitness: max 0.833(103), min 0.167(1), ave 0.822
Test execution time: sum 10055 ms, max 256 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 21:58:28 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-06 21:59:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 42 seconds
Variants: generated 200, build-succeeded 100, build-failed 62, syntax-invalid 29, redundant 9
Fitness: max 0.833(98), min 0.167(1), ave 0.825
Test execution time: sum 10296 ms, max 246 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 21:59:31 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-06 22:00:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 44 seconds
Variants: generated 200, build-succeeded 102, build-failed 64, syntax-invalid 30, redundant 4
Fitness: max 0.833(100), min 0.667(2), ave 0.83
Test execution time: sum 9525 ms, max 182 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 22:00:32 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-06 22:01:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 6 minutes 47 seconds
Variants: generated 200, build-succeeded 102, build-failed 56, syntax-invalid 27, redundant 15
Fitness: max 0.833(99), min 0.167(3), ave 0.814
Test execution time: sum 10295 ms, max 301 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 22:01:36 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-06 22:02:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 46 seconds
Variants: generated 200, build-succeeded 95, build-failed 50, syntax-invalid 35, redundant 20
Fitness: max 0.833(94), min 0.667(1), ave 0.832
Test execution time: sum 8839 ms, max 191 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 22:02:34 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-06 22:03:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 50 seconds
Variants: generated 200, build-succeeded 106, build-failed 59, syntax-invalid 25, redundant 10
Fitness: max 0.833(105), min 0.667(1), ave 0.832
Test execution time: sum 10313 ms, max 231 ms, min 84 ms
----------------------------------------------------------------

2023-08-06 22:03:39 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-06 22:04:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 54 seconds
Variants: generated 200, build-succeeded 108, build-failed 54, syntax-invalid 28, redundant 10
Fitness: max 0.833(108), min 0.833(108), ave 0.833
Test execution time: sum 10024 ms, max 162 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 22:04:42 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-06 22:05:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 57 seconds
Variants: generated 200, build-succeeded 106, build-failed 55, syntax-invalid 30, redundant 9
Fitness: max 0.833(105), min 0.167(1), ave 0.827
Test execution time: sum 10553 ms, max 215 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 22:05:46 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-06 22:06:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 0 seconds
Variants: generated 200, build-succeeded 99, build-failed 60, syntax-invalid 30, redundant 11
Fitness: max 0.833(97), min 0.667(2), ave 0.83
Test execution time: sum 9245 ms, max 191 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 22:06:48 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-06 22:07:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 8 seconds
Variants: generated 200, build-succeeded 110, build-failed 63, syntax-invalid 20, redundant 7
Fitness: max 0.833(107), min 0.167(2), ave 0.82
Test execution time: sum 10955 ms, max 234 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 22:07:56 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-06 22:08:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 11 seconds
Variants: generated 200, build-succeeded 93, build-failed 62, syntax-invalid 27, redundant 18
Fitness: max 0.833(91), min 0.167(1), ave 0.824
Test execution time: sum 8727 ms, max 180 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 22:08:59 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-06 22:10:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 17 seconds
Variants: generated 200, build-succeeded 102, build-failed 62, syntax-invalid 25, redundant 11
Fitness: max 0.833(102), min 0.833(102), ave 0.833
Test execution time: sum 10304 ms, max 341 ms, min 84 ms
----------------------------------------------------------------

2023-08-06 22:10:05 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-06 22:11:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 16 seconds
Variants: generated 200, build-succeeded 100, build-failed 58, syntax-invalid 35, redundant 7
Fitness: max 0.833(97), min 0.667(3), ave 0.828
Test execution time: sum 9430 ms, max 182 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 22:11:05 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-06 22:12:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 18 seconds
Variants: generated 200, build-succeeded 91, build-failed 54, syntax-invalid 36, redundant 19
Fitness: max 0.833(90), min 0.667(1), ave 0.832
Test execution time: sum 9498 ms, max 241 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 22:12:07 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-06 22:13:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 24 seconds
Variants: generated 200, build-succeeded 104, build-failed 67, syntax-invalid 22, redundant 7
Fitness: max 0.833(103), min 0.667(1), ave 0.832
Test execution time: sum 9819 ms, max 231 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 22:13:12 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-06 22:14:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 28 seconds
Variants: generated 200, build-succeeded 100, build-failed 56, syntax-invalid 33, redundant 11
Fitness: max 0.833(98), min 0.167(1), ave 0.825
Test execution time: sum 10204 ms, max 222 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 22:14:16 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-06 22:15:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 32 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 29, redundant 9
Fitness: max 0.833(105), min 0.833(105), ave 0.833
Test execution time: sum 9801 ms, max 202 ms, min 85 ms
----------------------------------------------------------------

2023-08-06 22:15:20 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-06 22:16:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 36 seconds
Variants: generated 200, build-succeeded 104, build-failed 56, syntax-invalid 31, redundant 9
Fitness: max 0.833(101), min 0.167(2), ave 0.819
Test execution time: sum 10236 ms, max 244 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 22:16:25 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-06 22:17:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 22 minutes 40 seconds
Variants: generated 200, build-succeeded 101, build-failed 52, syntax-invalid 31, redundant 16
Fitness: max 0.833(100), min 0.667(1), ave 0.832
Test execution time: sum 9559 ms, max 182 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 22:17:29 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-06 22:18:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 46 seconds
Variants: generated 200, build-succeeded 104, build-failed 56, syntax-invalid 28, redundant 12
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 10316 ms, max 239 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 22:18:35 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-06 22:19:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 52 seconds
Variants: generated 200, build-succeeded 104, build-failed 61, syntax-invalid 26, redundant 9
Fitness: max 0.833(101), min 0.167(1), ave 0.824
Test execution time: sum 9757 ms, max 248 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 22:19:41 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-06 22:20:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 2 seconds
Variants: generated 200, build-succeeded 103, build-failed 58, syntax-invalid 26, redundant 13
Fitness: max 0.833(102), min 0.333(1), ave 0.828
Test execution time: sum 10341 ms, max 373 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 22:20:50 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-06 22:21:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 9 seconds
Variants: generated 200, build-succeeded 108, build-failed 58, syntax-invalid 23, redundant 11
Fitness: max 0.833(106), min 0.167(2), ave 0.821
Test execution time: sum 10144 ms, max 163 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 22:21:58 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-06 22:23:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 28 minutes 16 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 30, redundant 12
Fitness: max 0.833(99), min 0.167(3), ave 0.811
Test execution time: sum 10546 ms, max 243 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 22:23:05 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-06 22:24:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 minutes 23 seconds
Variants: generated 200, build-succeeded 105, build-failed 55, syntax-invalid 26, redundant 14
Fitness: max 0.833(103), min 0.667(2), ave 0.83
Test execution time: sum 10172 ms, max 172 ms, min 87 ms
----------------------------------------------------------------

2023-08-06 22:24:12 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-06 22:25:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 34 seconds
Variants: generated 200, build-succeeded 105, build-failed 62, syntax-invalid 20, redundant 13
Fitness: max 0.833(103), min 0.167(1), ave 0.825
Test execution time: sum 10470 ms, max 219 ms, min 87 ms
----------------------------------------------------------------

2023-08-06 22:25:22 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-06 22:26:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 40 seconds
Variants: generated 200, build-succeeded 104, build-failed 49, syntax-invalid 30, redundant 17
Fitness: max 0.833(104), min 0.833(104), ave 0.833
Test execution time: sum 10154 ms, max 160 ms, min 88 ms
----------------------------------------------------------------

2023-08-06 22:26:28 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-06 22:27:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 32 minutes 53 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 22, redundant 9
Fitness: max 1(1), min 0.667(2), ave 0.832
Test execution time: sum 11820 ms, max 276 ms, min 87 ms
----------------------------------------------------------------

2023-08-06 22:27:42 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-06 22:28:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 4 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 25, redundant 10
Fitness: max 0.833(105), min 0.167(2), ave 0.821
Test execution time: sum 10645 ms, max 198 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 22:28:53 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-06 22:30:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 35 minutes 13 seconds
Variants: generated 200, build-succeeded 101, build-failed 53, syntax-invalid 31, redundant 15
Fitness: max 0.833(99), min 0.167(1), ave 0.825
Test execution time: sum 10477 ms, max 216 ms, min 88 ms
----------------------------------------------------------------

2023-08-06 22:30:01 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-06 22:31:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 minutes 27 seconds
Variants: generated 200, build-succeeded 103, build-failed 54, syntax-invalid 32, redundant 11
Fitness: max 1(1), min 0.167(2), ave 0.819
Test execution time: sum 13346 ms, max 2575 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 22:31:16 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-06 22:32:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 37 minutes 33 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 30, redundant 10
Fitness: max 0.833(99), min 0.167(1), ave 0.825
Test execution time: sum 10033 ms, max 254 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 22:32:22 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-06 22:33:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 38 minutes 45 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 29, redundant 11
Fitness: max 0.833(101), min 0.667(1), ave 0.832
Test execution time: sum 10143 ms, max 204 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 22:33:34 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-06 22:34:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 39 minutes 58 seconds
Variants: generated 200, build-succeeded 104, build-failed 67, syntax-invalid 25, redundant 4
Fitness: max 0.833(103), min 0.667(1), ave 0.832
Test execution time: sum 10646 ms, max 299 ms, min 86 ms
----------------------------------------------------------------

2023-08-06 22:34:46 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-06 22:35:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 6 seconds
Variants: generated 200, build-succeeded 94, build-failed 64, syntax-invalid 33, redundant 9
Fitness: max 0.833(93), min 0.667(1), ave 0.832
Test execution time: sum 8908 ms, max 177 ms, min 87 ms
----------------------------------------------------------------

2023-08-06 22:35:54 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-06 22:37:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 42 minutes 18 seconds
Variants: generated 200, build-succeeded 110, build-failed 52, syntax-invalid 31, redundant 7
Fitness: max 0.833(108), min 0.167(2), ave 0.821
Test execution time: sum 11256 ms, max 214 ms, min 87 ms
----------------------------------------------------------------

2023-08-06 22:37:06 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-06 22:38:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 43 minutes 22 seconds
Variants: generated 200, build-succeeded 101, build-failed 55, syntax-invalid 29, redundant 15
Fitness: max 0.833(101), min 0.833(101), ave 0.833
Test execution time: sum 8488 ms, max 157 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:38:10 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-06 22:39:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 44 minutes 21 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 22, redundant 11
Fitness: max 0.833(106), min 0.833(106), ave 0.833
Test execution time: sum 8991 ms, max 194 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:39:10 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-06 22:40:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 18 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 30, redundant 6
Fitness: max 0.833(103), min 0.167(1), ave 0.824
Test execution time: sum 8132 ms, max 144 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 22:40:07 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-06 22:41:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 18 seconds
Variants: generated 200, build-succeeded 103, build-failed 57, syntax-invalid 26, redundant 14
Fitness: max 0.833(102), min 0.167(1), ave 0.827
Test execution time: sum 8489 ms, max 170 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:41:06 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-06 22:42:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 16 seconds
Variants: generated 200, build-succeeded 106, build-failed 60, syntax-invalid 24, redundant 10
Fitness: max 0.833(105), min 0.667(1), ave 0.832
Test execution time: sum 8150 ms, max 128 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:42:05 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-06 22:43:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 16 seconds
Variants: generated 200, build-succeeded 101, build-failed 65, syntax-invalid 23, redundant 11
Fitness: max 0.833(99), min 0.667(2), ave 0.83
Test execution time: sum 8350 ms, max 232 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 22:43:04 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-06 22:44:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 15 seconds
Variants: generated 200, build-succeeded 112, build-failed 61, syntax-invalid 21, redundant 6
Fitness: max 0.833(109), min 0.667(3), ave 0.829
Test execution time: sum 9038 ms, max 174 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 22:44:04 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-06 22:45:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 14 seconds
Variants: generated 200, build-succeeded 100, build-failed 71, syntax-invalid 20, redundant 9
Fitness: max 0.833(100), min 0.833(100), ave 0.833
Test execution time: sum 7957 ms, max 161 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:45:03 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-08-06 22:46:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 16 seconds
Variants: generated 200, build-succeeded 120, build-failed 58, syntax-invalid 14, redundant 8
Fitness: max 0.833(117), min 0.167(1), ave 0.825
Test execution time: sum 9365 ms, max 164 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:46:04 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-08-06 22:47:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 18 seconds
Variants: generated 200, build-succeeded 116, build-failed 63, syntax-invalid 18, redundant 3
Fitness: max 0.833(115), min 0.167(1), ave 0.828
Test execution time: sum 9518 ms, max 197 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:47:07 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-08-06 22:48:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 53 minutes 17 seconds
Variants: generated 200, build-succeeded 106, build-failed 66, syntax-invalid 21, redundant 7
Fitness: max 0.833(104), min 0.667(2), ave 0.83
Test execution time: sum 8579 ms, max 179 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 22:48:05 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-08-06 22:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 54 minutes 20 seconds
Variants: generated 200, build-succeeded 107, build-failed 66, syntax-invalid 15, redundant 12
Fitness: max 0.833(106), min 0.667(1), ave 0.832
Test execution time: sum 8909 ms, max 221 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:49:08 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-08-06 22:50:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 55 minutes 20 seconds
Variants: generated 200, build-succeeded 105, build-failed 62, syntax-invalid 24, redundant 9
Fitness: max 0.833(105), min 0.833(105), ave 0.833
Test execution time: sum 8850 ms, max 330 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 22:50:08 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-08-06 22:51:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 56 minutes 20 seconds
Variants: generated 200, build-succeeded 114, build-failed 53, syntax-invalid 26, redundant 7
Fitness: max 0.833(113), min 0.667(1), ave 0.832
Test execution time: sum 9304 ms, max 159 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 22:51:08 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-08-06 22:52:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 57 minutes 21 seconds
Variants: generated 200, build-succeeded 106, build-failed 57, syntax-invalid 24, redundant 13
Fitness: max 0.833(102), min 0.167(2), ave 0.818
Test execution time: sum 8938 ms, max 200 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 22:52:09 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-08-06 22:53:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 20 seconds
Variants: generated 200, build-succeeded 102, build-failed 64, syntax-invalid 26, redundant 8
Fitness: max 0.833(101), min 0.167(1), ave 0.827
Test execution time: sum 8106 ms, max 150 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:53:08 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-08-06 22:54:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 23 seconds
Variants: generated 200, build-succeeded 108, build-failed 59, syntax-invalid 23, redundant 10
Fitness: max 0.833(105), min 0.667(3), ave 0.829
Test execution time: sum 8844 ms, max 195 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:54:11 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-08-06 22:55:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 seconds
Variants: generated 200, build-succeeded 103, build-failed 66, syntax-invalid 25, redundant 6
Fitness: max 0.833(102), min 0.667(1), ave 0.832
Test execution time: sum 8004 ms, max 138 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:55:12 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-08-06 22:56:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 1 minutes 26 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 23, redundant 13
Fitness: max 0.833(106), min 0.667(2), ave 0.83
Test execution time: sum 8611 ms, max 180 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 22:56:14 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-08-06 22:57:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 28 seconds
Variants: generated 200, build-succeeded 114, build-failed 50, syntax-invalid 20, redundant 16
Fitness: max 0.833(111), min 0.167(1), ave 0.823
Test execution time: sum 9284 ms, max 207 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 22:57:17 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-08-06 22:58:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 3 minutes 32 seconds
Variants: generated 200, build-succeeded 104, build-failed 64, syntax-invalid 23, redundant 9
Fitness: max 0.833(104), min 0.833(104), ave 0.833
Test execution time: sum 9194 ms, max 344 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 22:58:20 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-08-06 22:59:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 31 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 28, redundant 8
Fitness: max 0.833(105), min 0.667(3), ave 0.829
Test execution time: sum 8745 ms, max 175 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 22:59:20 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-08-06 23:00:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 31 seconds
Variants: generated 200, build-succeeded 97, build-failed 58, syntax-invalid 34, redundant 11
Fitness: max 0.833(94), min 0.667(3), ave 0.828
Test execution time: sum 8252 ms, max 222 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 23:00:19 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-08-06 23:01:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 31 seconds
Variants: generated 200, build-succeeded 97, build-failed 62, syntax-invalid 33, redundant 8
Fitness: max 0.833(96), min 0.167(1), ave 0.826
Test execution time: sum 8319 ms, max 170 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 23:01:19 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-08-06 23:02:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 31 seconds
Variants: generated 200, build-succeeded 96, build-failed 64, syntax-invalid 29, redundant 11
Fitness: max 0.833(96), min 0.833(96), ave 0.833
Test execution time: sum 8056 ms, max 164 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 23:02:20 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-08-06 23:03:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 28 seconds
Variants: generated 200, build-succeeded 93, build-failed 72, syntax-invalid 29, redundant 6
Fitness: max 0.833(92), min 0.167(1), ave 0.826
Test execution time: sum 7009 ms, max 110 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 23:03:16 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-08-06 23:04:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 9 minutes 29 seconds
Variants: generated 200, build-succeeded 116, build-failed 58, syntax-invalid 18, redundant 8
Fitness: max 1(2), min 0.833(114), ave 0.836
Test execution time: sum 9131 ms, max 158 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 23:04:17 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-08-06 23:05:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 10 minutes 25 seconds
Variants: generated 200, build-succeeded 104, build-failed 50, syntax-invalid 28, redundant 18
Fitness: max 0.833(102), min 0.667(2), ave 0.83
Test execution time: sum 7962 ms, max 129 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 23:05:13 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-08-06 23:06:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 11 minutes 28 seconds
Variants: generated 200, build-succeeded 113, build-failed 57, syntax-invalid 15, redundant 15
Fitness: max 0.833(109), min 0.167(1), ave 0.823
Test execution time: sum 8960 ms, max 170 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 23:06:17 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-08-06 23:07:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 12 minutes 23 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 32, redundant 8
Fitness: max 1(1), min 0.833(101), ave 0.835
Test execution time: sum 7877 ms, max 122 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 23:07:12 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-08-06 23:08:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 13 minutes 20 seconds
Variants: generated 200, build-succeeded 96, build-failed 61, syntax-invalid 32, redundant 11
Fitness: max 0.833(95), min 0.667(1), ave 0.832
Test execution time: sum 7484 ms, max 153 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 23:08:09 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-08-06 23:09:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 17 seconds
Variants: generated 200, build-succeeded 105, build-failed 52, syntax-invalid 30, redundant 13
Fitness: max 0.833(104), min 0.667(1), ave 0.832
Test execution time: sum 8022 ms, max 116 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 23:09:05 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-08-06 23:10:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 15 minutes 18 seconds
Variants: generated 200, build-succeeded 105, build-failed 53, syntax-invalid 26, redundant 16
Fitness: max 0.833(102), min 0.167(1), ave 0.824
Test execution time: sum 8594 ms, max 158 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 23:10:07 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-08-06 23:11:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 17 seconds
Variants: generated 200, build-succeeded 104, build-failed 53, syntax-invalid 29, redundant 14
Fitness: max 0.833(99), min 0.167(2), ave 0.816
Test execution time: sum 8002 ms, max 119 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 23:11:06 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-08-06 23:12:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 17 minutes 19 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 28, redundant 9
Fitness: max 1(1), min 0.167(1), ave 0.829
Test execution time: sum 8817 ms, max 191 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 23:12:07 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-08-06 23:13:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 18 seconds
Variants: generated 200, build-succeeded 108, build-failed 53, syntax-invalid 25, redundant 14
Fitness: max 0.833(106), min 0.667(2), ave 0.83
Test execution time: sum 8537 ms, max 146 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 23:13:06 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-08-06 23:14:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 16 seconds
Variants: generated 200, build-succeeded 107, build-failed 53, syntax-invalid 28, redundant 12
Fitness: max 1(1), min 0.667(3), ave 0.83
Test execution time: sum 8341 ms, max 146 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 23:14:05 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-08-06 23:15:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 13 seconds
Variants: generated 200, build-succeeded 105, build-failed 60, syntax-invalid 27, redundant 8
Fitness: max 0.833(100), min 0.167(1), ave 0.821
Test execution time: sum 7956 ms, max 127 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 23:15:02 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-08-06 23:16:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 15 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 26, redundant 7
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 8915 ms, max 232 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 23:16:03 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-08-06 23:17:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 17 seconds
Variants: generated 200, build-succeeded 116, build-failed 58, syntax-invalid 19, redundant 7
Fitness: max 0.833(115), min 0.667(1), ave 0.832
Test execution time: sum 9061 ms, max 118 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 23:17:06 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-08-06 23:18:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 22 seconds
Variants: generated 200, build-succeeded 106, build-failed 62, syntax-invalid 18, redundant 14
Fitness: max 0.833(105), min 0.667(1), ave 0.832
Test execution time: sum 8775 ms, max 220 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 23:18:11 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-08-06 23:19:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 23 seconds
Variants: generated 200, build-succeeded 104, build-failed 56, syntax-invalid 21, redundant 19
Fitness: max 0.833(101), min 0.167(1), ave 0.824
Test execution time: sum 8200 ms, max 114 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 23:19:12 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-08-06 23:20:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 28 seconds
Variants: generated 200, build-succeeded 108, build-failed 65, syntax-invalid 18, redundant 9
Fitness: max 1(1), min 0.167(1), ave 0.824
Test execution time: sum 9012 ms, max 203 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 23:20:17 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-08-06 23:21:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 31 seconds
Variants: generated 200, build-succeeded 107, build-failed 57, syntax-invalid 21, redundant 15
Fitness: max 0.833(106), min 0.667(1), ave 0.832
Test execution time: sum 8475 ms, max 114 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 23:21:20 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-08-06 23:22:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 36 seconds
Variants: generated 200, build-succeeded 102, build-failed 60, syntax-invalid 22, redundant 16
Fitness: max 0.833(99), min 0.167(1), ave 0.824
Test execution time: sum 8377 ms, max 192 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 23:22:24 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-08-06 23:23:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 32 seconds
Variants: generated 200, build-succeeded 85, build-failed 62, syntax-invalid 36, redundant 17
Fitness: max 0.833(85), min 0.833(85), ave 0.833
Test execution time: sum 6772 ms, max 125 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 23:23:21 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-08-06 23:24:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 35 seconds
Variants: generated 200, build-succeeded 101, build-failed 60, syntax-invalid 29, redundant 10
Fitness: max 0.833(100), min 0.167(1), ave 0.827
Test execution time: sum 8671 ms, max 199 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 23:24:23 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-08-06 23:25:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 34 seconds
Variants: generated 200, build-succeeded 98, build-failed 61, syntax-invalid 28, redundant 13
Fitness: max 0.833(97), min 0.167(1), ave 0.827
Test execution time: sum 7604 ms, max 153 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 23:25:22 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-08-06 23:26:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 35 seconds
Variants: generated 200, build-succeeded 113, build-failed 49, syntax-invalid 27, redundant 11
Fitness: max 0.833(112), min 0.167(1), ave 0.827
Test execution time: sum 9200 ms, max 165 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 23:26:23 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-08-06 23:27:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 32 minutes 33 seconds
Variants: generated 200, build-succeeded 97, build-failed 61, syntax-invalid 30, redundant 12
Fitness: max 0.833(95), min 0.667(2), ave 0.83
Test execution time: sum 7680 ms, max 132 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 23:27:21 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-08-06 23:28:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 33 minutes 34 seconds
Variants: generated 200, build-succeeded 101, build-failed 60, syntax-invalid 28, redundant 11
Fitness: max 0.833(100), min 0.667(1), ave 0.832
Test execution time: sum 8454 ms, max 200 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 23:28:23 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-08-06 23:29:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 34 minutes 34 seconds
Variants: generated 200, build-succeeded 103, build-failed 55, syntax-invalid 29, redundant 13
Fitness: max 1(1), min 0.667(2), ave 0.832
Test execution time: sum 8044 ms, max 127 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 23:29:22 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-08-06 23:30:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 36 seconds
Variants: generated 200, build-succeeded 104, build-failed 60, syntax-invalid 26, redundant 10
Fitness: max 0.833(102), min 0.167(1), ave 0.825
Test execution time: sum 8389 ms, max 165 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 23:30:25 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-08-06 23:31:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 36 seconds
Variants: generated 200, build-succeeded 99, build-failed 58, syntax-invalid 29, redundant 14
Fitness: max 0.833(98), min 0.167(1), ave 0.827
Test execution time: sum 7631 ms, max 108 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 23:31:25 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-08-06 23:32:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 40 seconds
Variants: generated 200, build-succeeded 110, build-failed 60, syntax-invalid 20, redundant 10
Fitness: max 0.833(107), min 0.167(2), ave 0.82
Test execution time: sum 8642 ms, max 160 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 23:32:28 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-08-06 23:33:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 42 seconds
Variants: generated 200, build-succeeded 111, build-failed 53, syntax-invalid 20, redundant 16
Fitness: max 0.833(110), min 0.167(1), ave 0.827
Test execution time: sum 8829 ms, max 134 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 23:33:30 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-08-06 23:34:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 44 seconds
Variants: generated 200, build-succeeded 90, build-failed 64, syntax-invalid 25, redundant 21
Fitness: max 0.833(88), min 0.667(2), ave 0.83
Test execution time: sum 7416 ms, max 290 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 23:34:32 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-08-06 23:35:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 40 minutes 44 seconds
Variants: generated 200, build-succeeded 101, build-failed 62, syntax-invalid 26, redundant 11
Fitness: max 0.833(99), min 0.667(2), ave 0.83
Test execution time: sum 7896 ms, max 119 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 23:35:32 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-08-06 23:51:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 56 minutes 45 seconds
Variants: generated 200, build-succeeded 104, build-failed 57, syntax-invalid 28, redundant 11
Fitness: max 0.833(101), min 0.167(1), ave 0.822
Test execution time: sum 908809 ms, max 900152 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 23:51:34 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-08-06 23:52:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 43 seconds
Variants: generated 200, build-succeeded 94, build-failed 50, syntax-invalid 36, redundant 20
Fitness: max 0.833(93), min 0.667(1), ave 0.832
Test execution time: sum 7194 ms, max 136 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 23:52:31 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-08-06 23:53:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 minutes 42 seconds
Variants: generated 200, build-succeeded 95, build-failed 60, syntax-invalid 37, redundant 8
Fitness: max 0.833(91), min 0.667(4), ave 0.826
Test execution time: sum 7819 ms, max 185 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 23:53:30 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-08-06 23:54:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 42 seconds
Variants: generated 200, build-succeeded 104, build-failed 52, syntax-invalid 30, redundant 14
Fitness: max 1(1), min 0.167(2), ave 0.817
Test execution time: sum 7990 ms, max 108 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 23:54:31 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-08-06 23:55:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 seconds
Variants: generated 200, build-succeeded 97, build-failed 68, syntax-invalid 28, redundant 7
Fitness: max 0.833(95), min 0.667(2), ave 0.83
Test execution time: sum 8002 ms, max 154 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 23:55:33 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-08-06 23:56:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 1 minutes 48 seconds
Variants: generated 200, build-succeeded 111, build-failed 58, syntax-invalid 23, redundant 8
Fitness: max 0.833(107), min 0.167(1), ave 0.821
Test execution time: sum 8594 ms, max 131 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 23:56:36 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-08-06 23:57:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 50 seconds
Variants: generated 200, build-succeeded 95, build-failed 61, syntax-invalid 32, redundant 12
Fitness: max 0.833(91), min 0.667(4), ave 0.826
Test execution time: sum 7650 ms, max 157 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 23:57:39 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-08-06 23:58:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 3 minutes 51 seconds
Variants: generated 200, build-succeeded 93, build-failed 61, syntax-invalid 33, redundant 13
Fitness: max 0.833(92), min 0.167(1), ave 0.826
Test execution time: sum 7334 ms, max 128 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 23:58:40 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-08-06 23:59:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 4 minutes 48 seconds
Variants: generated 200, build-succeeded 87, build-failed 55, syntax-invalid 45, redundant 13
Fitness: max 0.833(82), min 0.167(1), ave 0.818
Test execution time: sum 7019 ms, max 175 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 23:59:37 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-08-07 00:00:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 5 minutes 50 seconds
Variants: generated 200, build-succeeded 97, build-failed 66, syntax-invalid 30, redundant 7
Fitness: max 1(1), min 0.833(96), ave 0.835
Test execution time: sum 7652 ms, max 136 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 00:00:38 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-08-07 00:01:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 6 minutes 54 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 29, redundant 9
Fitness: max 0.833(101), min 0.167(2), ave 0.817
Test execution time: sum 8845 ms, max 175 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 00:01:42 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-08-07 00:02:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 7 minutes 55 seconds
Variants: generated 200, build-succeeded 99, build-failed 57, syntax-invalid 33, redundant 11
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 7837 ms, max 146 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:02:43 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-08-07 00:03:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 2 seconds
Variants: generated 200, build-succeeded 91, build-failed 65, syntax-invalid 36, redundant 8
Fitness: max 0.833(91), min 0.833(91), ave 0.833
Test execution time: sum 8982 ms, max 305 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:03:51 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-08-07 00:04:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 10 minutes 4 seconds
Variants: generated 200, build-succeeded 91, build-failed 59, syntax-invalid 38, redundant 12
Fitness: max 0.833(89), min 0.5(1), ave 0.828
Test execution time: sum 7743 ms, max 160 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 00:04:52 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-08-07 00:05:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 11 minutes 8 seconds
Variants: generated 200, build-succeeded 95, build-failed 52, syntax-invalid 43, redundant 10
Fitness: max 1(1), min 0.167(2), ave 0.812
Test execution time: sum 8565 ms, max 203 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 00:05:56 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-08-07 00:06:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 11 seconds
Variants: generated 200, build-succeeded 97, build-failed 50, syntax-invalid 38, redundant 15
Fitness: max 0.833(94), min 0.167(1), ave 0.823
Test execution time: sum 8335 ms, max 167 ms, min 76 ms
----------------------------------------------------------------

2023-08-07 00:06:59 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-08-07 00:08:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 14 seconds
Variants: generated 200, build-succeeded 79, build-failed 62, syntax-invalid 44, redundant 15
Fitness: max 0.833(77), min 0.167(1), ave 0.823
Test execution time: sum 7788 ms, max 388 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 00:08:02 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-08-07 00:09:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 14 minutes 14 seconds
Variants: generated 200, build-succeeded 87, build-failed 58, syntax-invalid 40, redundant 15
Fitness: max 0.833(85), min 0.167(1), ave 0.824
Test execution time: sum 7313 ms, max 181 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 00:09:02 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-08-07 00:10:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 16 seconds
Variants: generated 200, build-succeeded 91, build-failed 63, syntax-invalid 39, redundant 7
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 7676 ms, max 193 ms, min 76 ms
----------------------------------------------------------------

2023-08-07 00:10:05 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-08-07 00:11:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 17 seconds
Variants: generated 200, build-succeeded 92, build-failed 54, syntax-invalid 41, redundant 13
Fitness: max 0.833(87), min 0.167(2), ave 0.81
Test execution time: sum 7573 ms, max 126 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 00:11:06 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-08-07 00:12:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 18 seconds
Variants: generated 200, build-succeeded 86, build-failed 61, syntax-invalid 43, redundant 10
Fitness: max 0.833(83), min 0.167(1), ave 0.818
Test execution time: sum 7571 ms, max 175 ms, min 76 ms
----------------------------------------------------------------

2023-08-07 00:12:06 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-08-07 00:13:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 18 seconds
Variants: generated 200, build-succeeded 95, build-failed 55, syntax-invalid 39, redundant 11
Fitness: max 1(1), min 0.167(2), ave 0.814
Test execution time: sum 7929 ms, max 139 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 00:13:06 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-08-07 00:14:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 19 seconds
Variants: generated 200, build-succeeded 95, build-failed 53, syntax-invalid 39, redundant 13
Fitness: max 0.833(93), min 0.167(1), ave 0.825
Test execution time: sum 8296 ms, max 180 ms, min 77 ms
----------------------------------------------------------------

2023-08-07 00:14:07 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-08-07 00:15:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 20 minutes 18 seconds
Variants: generated 200, build-succeeded 89, build-failed 59, syntax-invalid 40, redundant 12
Fitness: max 0.833(87), min 0.667(2), ave 0.83
Test execution time: sum 7622 ms, max 157 ms, min 77 ms
----------------------------------------------------------------

2023-08-07 00:15:07 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-08-07 00:16:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 21 seconds
Variants: generated 200, build-succeeded 97, build-failed 59, syntax-invalid 33, redundant 11
Fitness: max 0.833(96), min 0.667(1), ave 0.832
Test execution time: sum 8397 ms, max 157 ms, min 77 ms
----------------------------------------------------------------

2023-08-07 00:16:10 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-08-07 00:17:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 22 minutes 21 seconds
Variants: generated 200, build-succeeded 94, build-failed 53, syntax-invalid 44, redundant 9
Fitness: max 0.833(88), min 0.167(2), ave 0.812
Test execution time: sum 7886 ms, max 137 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 00:17:09 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-08-07 00:18:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 23 minutes 19 seconds
Variants: generated 200, build-succeeded 86, build-failed 50, syntax-invalid 53, redundant 11
Fitness: max 0.833(81), min 0.167(1), ave 0.816
Test execution time: sum 7442 ms, max 191 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 00:18:08 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-08-07 00:19:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 16 seconds
Variants: generated 200, build-succeeded 79, build-failed 60, syntax-invalid 52, redundant 9
Fitness: max 0.833(78), min 0.167(1), ave 0.825
Test execution time: sum 6469 ms, max 142 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 00:19:04 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-08-07 00:20:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 16 seconds
Variants: generated 200, build-succeeded 91, build-failed 56, syntax-invalid 43, redundant 10
Fitness: max 0.833(88), min 0.167(2), ave 0.817
Test execution time: sum 7555 ms, max 181 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 00:20:05 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-08-07 00:21:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 26 minutes 18 seconds
Variants: generated 200, build-succeeded 96, build-failed 57, syntax-invalid 45, redundant 2
Fitness: max 1(1), min 0.667(2), ave 0.832
Test execution time: sum 7516 ms, max 133 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 00:21:06 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-08-07 00:22:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 20 seconds
Variants: generated 200, build-succeeded 98, build-failed 59, syntax-invalid 39, redundant 4
Fitness: max 0.833(97), min 0.667(1), ave 0.832
Test execution time: sum 8030 ms, max 159 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:22:08 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-08-07 00:23:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 28 minutes 19 seconds
Variants: generated 200, build-succeeded 94, build-failed 54, syntax-invalid 43, redundant 9
Fitness: max 0.833(91), min 0.667(3), ave 0.828
Test execution time: sum 7597 ms, max 130 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 00:23:08 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-08-07 00:24:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 29 minutes 17 seconds
Variants: generated 200, build-succeeded 80, build-failed 62, syntax-invalid 49, redundant 9
Fitness: max 0.833(80), min 0.833(80), ave 0.833
Test execution time: sum 6826 ms, max 167 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:24:05 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-08-07 00:25:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 16 seconds
Variants: generated 200, build-succeeded 85, build-failed 57, syntax-invalid 46, redundant 12
Fitness: max 0.833(84), min 0.667(1), ave 0.831
Test execution time: sum 6707 ms, max 119 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:25:04 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-08-07 00:26:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 17 seconds
Variants: generated 200, build-succeeded 90, build-failed 60, syntax-invalid 43, redundant 7
Fitness: max 0.833(89), min 0.167(1), ave 0.826
Test execution time: sum 7535 ms, max 175 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 00:26:06 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-08-07 00:27:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 20 seconds
Variants: generated 200, build-succeeded 102, build-failed 53, syntax-invalid 37, redundant 8
Fitness: max 0.833(101), min 0.667(1), ave 0.832
Test execution time: sum 8161 ms, max 137 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:27:08 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-08-07 00:28:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 24 seconds
Variants: generated 200, build-succeeded 97, build-failed 54, syntax-invalid 37, redundant 12
Fitness: max 1(1), min 0.667(3), ave 0.83
Test execution time: sum 8084 ms, max 171 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:28:13 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-08-07 00:29:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 24 seconds
Variants: generated 200, build-succeeded 79, build-failed 64, syntax-invalid 44, redundant 13
Fitness: max 0.833(76), min 0.167(1), ave 0.821
Test execution time: sum 6427 ms, max 148 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 00:29:12 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-08-07 00:30:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 22 seconds
Variants: generated 200, build-succeeded 81, build-failed 56, syntax-invalid 51, redundant 12
Fitness: max 0.833(81), min 0.833(81), ave 0.833
Test execution time: sum 6915 ms, max 279 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 00:30:10 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-08-07 00:31:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 22 seconds
Variants: generated 200, build-succeeded 85, build-failed 58, syntax-invalid 41, redundant 16
Fitness: max 0.833(80), min 0.667(5), ave 0.824
Test execution time: sum 6843 ms, max 139 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 00:31:11 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-08-07 00:32:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 26 seconds
Variants: generated 200, build-succeeded 100, build-failed 53, syntax-invalid 39, redundant 8
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 8393 ms, max 210 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:32:15 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-08-07 00:33:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 31 seconds
Variants: generated 200, build-succeeded 95, build-failed 64, syntax-invalid 31, redundant 10
Fitness: max 0.833(92), min 0.167(1), ave 0.823
Test execution time: sum 7753 ms, max 134 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:33:19 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-08-07 00:34:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 33 seconds
Variants: generated 200, build-succeeded 91, build-failed 59, syntax-invalid 41, redundant 9
Fitness: max 0.833(90), min 0.667(1), ave 0.832
Test execution time: sum 7533 ms, max 159 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 00:34:22 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-08-07 00:35:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 35 seconds
Variants: generated 200, build-succeeded 87, build-failed 57, syntax-invalid 39, redundant 17
Fitness: max 0.833(86), min 0.667(1), ave 0.831
Test execution time: sum 6963 ms, max 122 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:35:24 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-08-07 00:36:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 36 seconds
Variants: generated 200, build-succeeded 80, build-failed 66, syntax-invalid 47, redundant 7
Fitness: max 0.833(78), min 0.667(2), ave 0.829
Test execution time: sum 6827 ms, max 189 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 00:36:25 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-08-07 00:37:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 41 seconds
Variants: generated 200, build-succeeded 101, build-failed 53, syntax-invalid 34, redundant 12
Fitness: max 0.833(99), min 0.167(1), ave 0.825
Test execution time: sum 8167 ms, max 130 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 00:37:29 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-08-07 00:38:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 50 seconds
Variants: generated 200, build-succeeded 97, build-failed 61, syntax-invalid 32, redundant 10
Fitness: max 0.833(96), min 0.667(1), ave 0.832
Test execution time: sum 8761 ms, max 187 ms, min 76 ms
----------------------------------------------------------------

2023-08-07 00:38:39 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-08-07 00:39:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 3 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 27, redundant 11
Fitness: max 0.833(103), min 0.167(1), ave 0.825
Test execution time: sum 8756 ms, max 136 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 00:39:51 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-08-07 00:41:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 46 minutes 17 seconds
Variants: generated 200, build-succeeded 109, build-failed 54, syntax-invalid 26, redundant 11
Fitness: max 0.833(108), min 0.667(1), ave 0.832
Test execution time: sum 9152 ms, max 159 ms, min 78 ms
----------------------------------------------------------------

2023-08-07 00:41:06 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-08-07 00:42:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 47 minutes 23 seconds
Variants: generated 200, build-succeeded 95, build-failed 58, syntax-invalid 35, redundant 12
Fitness: max 0.833(90), min 0.167(1), ave 0.819
Test execution time: sum 7709 ms, max 129 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 00:42:11 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-08-07 00:43:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 31 seconds
Variants: generated 200, build-succeeded 103, build-failed 60, syntax-invalid 30, redundant 7
Fitness: max 0.833(101), min 0.167(2), ave 0.82
Test execution time: sum 8215 ms, max 158 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 00:43:19 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-08-07 00:44:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 33 seconds
Variants: generated 200, build-succeeded 86, build-failed 67, syntax-invalid 38, redundant 9
Fitness: max 0.833(86), min 0.833(86), ave 0.833
Test execution time: sum 6716 ms, max 127 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 00:44:21 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-08-07 00:45:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 44 seconds
Variants: generated 200, build-succeeded 115, build-failed 51, syntax-invalid 25, redundant 9
Fitness: max 0.833(115), min 0.833(115), ave 0.833
Test execution time: sum 9300 ms, max 154 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 00:45:33 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-08-07 00:46:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 47 seconds
Variants: generated 200, build-succeeded 92, build-failed 53, syntax-invalid 39, redundant 16
Fitness: max 0.833(91), min 0.667(1), ave 0.832
Test execution time: sum 7223 ms, max 122 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 00:46:36 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-08-07 00:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 53 seconds
Variants: generated 14, build-succeeded 4, build-failed 7, syntax-invalid 0, redundant 3
Fitness: max 1(1), min 0.833(3), ave 0.875
Test execution time: sum 324 ms, max 96 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 00:46:41 [main] [INFO]  KGenProgMain - GA stopped
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1444)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1444)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1444)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1444)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +241,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x2 = x0;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1609)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1609)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1609)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1609)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1609)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f == null) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1828)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1828)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1828)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v1828)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +179,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                ret = min;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +243,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x2 = x0;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4008)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4008)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4008)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4008)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4008)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -236,7 +236,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4284)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -138,7 +137,8 @@
      * @param iterationCount the iteration count to set
      */
     protected final void setResult(final double newResult, final int iterationCount) {
-        this.result         = newResult;
+        double ret = Double.NaN;
+		this.result         = newResult;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4284)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4284)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4284)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4284)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -230,6 +228,7 @@
         double oldDelta = delta;
 
         int i = 0;
+		y0 = y1;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
@@ -258,7 +257,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4631)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4631)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4631)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4631)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4631)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -236,7 +233,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,7 +243,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4807)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -162,7 +161,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4807)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4807)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4807)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4807)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +235,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +245,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				final double x3 = 0.5 * (x1 + x2);
                 return result;
             }
             double dx = x2 - x1;
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -138,7 +138,8 @@
      * @param iterationCount the iteration count to set
      */
     protected final void setResult(final double newResult, final int iterationCount) {
-        this.result         = newResult;
+        double ret = Double.NaN;
+		this.result         = newResult;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v4858)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -258,7 +255,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5081)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -138,7 +138,8 @@
      * @param iterationCount the iteration count to set
      */
     protected final void setResult(final double newResult, final int iterationCount) {
-        this.result         = newResult;
+        double ret = Double.NaN;
+		this.result         = newResult;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5081)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5081)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5081)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5081)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5081)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +179,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                final double denominator;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5697)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -138,7 +138,8 @@
      * @param iterationCount the iteration count to set
      */
     protected final void setResult(final double newResult, final int iterationCount) {
-        this.result         = newResult;
+        double ret = Double.NaN;
+		this.result         = newResult;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5697)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5697)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5697)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:44 [main] [INFO]  PatchLogExporter - patch (v5697)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            setResult(min, 0);
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -227,7 +227,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y2 = y0;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -258,7 +259,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v6609)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +178,10 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				setResult(max, 0);
+                return result;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -236,7 +235,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,7 +245,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double fmin;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -258,7 +259,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -138,7 +138,8 @@
      * @param iterationCount the iteration count to set
      */
     protected final void setResult(final double newResult, final int iterationCount) {
-        this.result         = newResult;
+        double ret = Double.NaN;
+		this.result         = newResult;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
@@ -162,7 +163,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,9 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +235,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7425)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7425)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7425)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7425)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7425)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7425)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -236,7 +232,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -258,7 +255,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -310,7 +306,6 @@
                 x2 = x0;
                 y2 = y0;
                 delta = x1 - x0;
-                oldDelta = delta;
             }
             i++;
         }
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7868)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -162,7 +161,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7868)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7868)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7868)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v7868)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double x1 = max;
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +181,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +238,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,7 +248,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v8092)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -162,7 +161,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v8092)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v8092)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v8092)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v8092)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +235,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,7 +245,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -138,7 +138,8 @@
      * @param iterationCount the iteration count to set
      */
     protected final void setResult(final double newResult, final int iterationCount) {
-        this.result         = newResult;
+        double ret = Double.NaN;
+		this.result         = newResult;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
@@ -163,7 +164,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        double fm;
     }
 
     /**
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +236,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -258,7 +259,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9240)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9240)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9240)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9240)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9240)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9240)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            functionValueAccuracy = defaultFunctionValueAccuracy;
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +236,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9486)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -162,7 +161,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9486)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9486)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9486)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,9 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9486)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9486)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            setResult(min, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9643)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9643)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9643)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9643)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v9643)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +235,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -258,7 +259,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double x1 = max;
             return result;
         }
 
@@ -124,7 +124,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.defaultFunctionValueAccuracy = 1.0e-15;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -258,7 +261,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double x1 = max;
             return result;
         }
 
@@ -124,7 +124,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +239,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -258,7 +262,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10882)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10882)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10882)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10882)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v10882)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            setResult(min, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,12 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				ret = min;
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +239,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11011)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11011)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11011)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11011)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11011)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,8 +110,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
+		double x0 = min;
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -165,7 +166,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -181,7 +181,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +181,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +238,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11481)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11481)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11481)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11481)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11481)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,8 +110,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
+		double x0 = min;
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -165,7 +164,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -181,7 +179,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +236,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11698)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11698)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11698)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v11698)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -121,10 +119,14 @@
             return solve(f, min, yMin, initial, yInitial, min, yMin);
         }
 
-        // return the second endpoint if it is good enough
+        double fa;
+		// return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 0;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +183,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +240,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12297)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12297)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12297)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12297)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +181,11 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +240,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -258,7 +263,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -162,7 +160,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            resultComputed = true;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +238,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12662)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12662)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12662)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12662)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v12662)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,10 +122,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
-        if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
-            return result;
-        }
+        if (Math.abs(yMax) <= functionValueAccuracy)
+			return solve(f, min, max);
 
         // reduce interval if initial and max bracket the root
         if (yInitial * yMax < 0) {
@@ -181,7 +178,11 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +237,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -258,7 +260,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -310,7 +311,6 @@
                 x2 = x0;
                 y2 = y0;
                 delta = x1 - x0;
-                oldDelta = delta;
             }
             i++;
         }
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v13051)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v13051)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v13051)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v13051)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v13051)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,10 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,8 +183,10 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				setResult(max, 0);
+                return max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -236,7 +240,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -258,7 +263,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v13646)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v13646)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v13646)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v13646)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v13646)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double x2 = max;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,10 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 1;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,8 +184,10 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				setResult(max, 0);
+                return max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -236,7 +241,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -258,7 +264,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14085)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -162,7 +160,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14085)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14085)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14085)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14085)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,8 +180,11 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
+                return max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -258,7 +260,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14251)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14251)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14251)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14251)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14251)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,8 +178,14 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
+                return max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -258,7 +261,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -309,7 +311,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14281)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14281)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14281)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14281)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14281)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +177,12 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -258,7 +259,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14295)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14295)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14295)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14295)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14295)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x0 = min;
+			this.f = f;
             return result;
         }
 
@@ -181,8 +179,14 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
+                return max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -258,7 +262,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -309,7 +312,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14611)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14611)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14611)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14611)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v14611)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double x2 = max;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,13 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -258,7 +265,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15208)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15208)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15208)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15208)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15208)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +124,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +183,11 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +242,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -258,7 +266,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15234)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -163,7 +162,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        this.iterationCount = 0;
     }
 
     /**
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15234)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15234)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15234)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15234)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:45 [main] [INFO]  PatchLogExporter - patch (v15234)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +124,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +239,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v15814)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v15814)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v15814)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v15814)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +124,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,13 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                int i = 1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +243,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -258,7 +266,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v16809)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
@@ -246,10 +245,6 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                    "function values at endpoints do not have different signs.  " +
-                    "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                    lower, upper, function.value(lower), function.value(upper));
         }
     }
 }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v16809)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v16809)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v16809)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v16809)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +124,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,12 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +242,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v17634)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
@@ -244,7 +243,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v17634)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v17634)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v17634)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v17634)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +124,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,14 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +244,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18067)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18067)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18067)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18067)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +123,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            clearResult();
+			this.f = f;
             return result;
         }
 
@@ -181,7 +181,12 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                functionValueAccuracy = defaultFunctionValueAccuracy;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +241,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -309,7 +315,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
+		double x0 = min;
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +181,14 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +243,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                double p;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18475)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18475)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18475)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18475)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v18475)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +180,16 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +244,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v19094)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -100,7 +100,6 @@
      */
     protected void checkResultComputed() throws IllegalStateException {
         if (!resultComputed) {
-            throw MathRuntimeException.createIllegalStateException("no result available");
         }
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v19094)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v19094)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v19094)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v19094)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +181,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +237,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v19282)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,9 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
+		double x0 = min;
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +125,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +183,14 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +245,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,8 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
+		double x0 = min;
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +181,14 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double fm;
+				setResult(yMin, 0);
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +243,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v22227)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
@@ -244,7 +243,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v22227)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v22227)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v22227)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v22227)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +181,19 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +248,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v22802)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        this.iterationCount = 0;
     }
 
     /**
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v22802)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v22802)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v22802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v22802)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
+		double x0 = min;
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,10 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +184,17 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double fb;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v24818)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v24818)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v24818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v24818)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +178,21 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +247,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26487)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26487)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26487)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26487)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26487)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +178,21 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
+				double oldx = Double.POSITIVE_INFINITY;
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +247,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -309,7 +321,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26813)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26813)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26813)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26813)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +179,21 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +248,11 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26829)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26829)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26829)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26829)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v26829)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,13 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +184,16 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +248,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v27013)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v27013)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v27013)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v27013)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v27013)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,18 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +248,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v28067)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -100,7 +99,6 @@
      */
     protected void checkResultComputed() throws IllegalStateException {
         if (!resultComputed) {
-            throw MathRuntimeException.createIllegalStateException("no result available");
         }
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v28067)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v28067)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v28067)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v28067)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,12 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +183,16 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +247,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v28080)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v28080)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v28080)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v28080)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v28080)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +180,12 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double x2 = max;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +240,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30245)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30245)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30245)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30245)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double m;
             return result;
         }
 
@@ -124,7 +123,11 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            verifySequence(min, initial, max);
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +184,23 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                setResult(yMin, 0);
+				{
+					setResult(min, 0);
+					ret = min;
+				}
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -234,9 +253,11 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                iterationCount = i;
+				x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30279)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
@@ -154,7 +154,7 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30279)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30279)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30279)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30279)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double m;
             return result;
         }
 
@@ -124,7 +123,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,17 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                setResult(yMin, 0);
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +247,11 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30432)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30432)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30432)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v30432)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,11 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            verifySequence(min, initial, max);
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,17 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -234,9 +245,12 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                iterationCount = i;
+				iterationCount = i;
+				x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v31654)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v31654)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v31654)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v31654)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,8 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+        this.maximalIterationCount = defaultMaximalIterationCount;
+		this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v31654)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v31654)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +180,16 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double fm;
+				clearResult();
+				double p1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +244,10 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v32294)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
@@ -154,7 +154,7 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v32294)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v32294)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v32294)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v32294)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double m;
             return result;
         }
 
@@ -124,7 +124,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +183,16 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -234,9 +245,16 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                iterationCount = i;
+				x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +278,9 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v33031)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v33031)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v33031)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v33031)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +178,22 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                ret = min;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -234,9 +246,14 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                iterationCount = i;
+				x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -296,6 +313,7 @@
             }
             // Save old X1, Y1
             x0 = x1;
+			this.resultComputed = true;
             y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v33292)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v33292)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v33292)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v33292)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double oldx = Double.POSITIVE_INFINITY;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +179,21 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                ret = min;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -234,9 +246,14 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                iterationCount = i;
+				x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -296,6 +313,7 @@
             }
             // Save old X1, Y1
             x0 = x1;
+			this.resultComputed = true;
             y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35039)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35039)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35039)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35039)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +178,24 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +250,16 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35409)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35409)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35409)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35409)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,10 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,22 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                ret = min;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -234,9 +250,16 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                iterationCount = i;
+				x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35425)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35425)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35425)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35425)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35425)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +180,16 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                ret = min;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +244,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -290,7 +299,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35865)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
@@ -154,7 +154,7 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35865)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35865)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35865)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v35865)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double fa;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,25 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +255,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v36614)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v36614)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v36614)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v36614)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v36614)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +181,21 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                verifyInterval(min, max);
+				this.iterationCount = iterationCount;
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +250,11 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +278,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v37479)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v37479)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v37479)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v37479)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v37479)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +180,22 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -234,9 +248,14 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                iterationCount = i;
+				x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +279,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v42668)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
@@ -154,7 +154,7 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v42668)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v42668)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v42668)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:46 [main] [INFO]  PatchLogExporter - patch (v42668)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,10 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +183,28 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                ret = min;
+				ret = max;
+				double m;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +259,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v42880)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v42880)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v42880)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v42880)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v42880)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,23 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                ret = min;
+				ret = max;
+				double m;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +253,13 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v42898)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
@@ -154,7 +154,7 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v42898)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v42898)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v42898)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v42898)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,11 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            setResult(max, 0);
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +184,27 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                ret = min;
+				ret = max;
+				double m;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +259,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v45094)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v45094)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v45094)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v45094)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v45094)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double x2 = max;
             return result;
         }
 
@@ -124,7 +124,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +183,21 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                ret = min;
+				double m;
+				this.f = f;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +252,12 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +281,9 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v48865)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v48865)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v48865)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v48865)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            iterationCount += this.iterationCount;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,8 +183,23 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.f = f;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -234,9 +251,18 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                iterationCount = i;
+				x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v51892)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v51892)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v51892)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v51892)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +181,25 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +254,12 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v52491)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v52491)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v52491)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v52491)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,10 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            resultComputed = true;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +183,20 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +251,11 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +279,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v53075)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v53075)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v53075)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v53075)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +181,22 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                int i = 0;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +251,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +277,9 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v54282)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v54282)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v54282)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v54282)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,14 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +185,26 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double delta;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +259,10 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +286,9 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v59231)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v59231)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v59231)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v59231)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v59231)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,11 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +184,30 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +262,11 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +290,9 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v60879)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
@@ -154,7 +154,7 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v60879)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v60879)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v60879)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v60879)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +179,29 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                setResult(yMin, 0);
+				setResult(yMin, 0);
+				setResult(yMax, 0);
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +256,13 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +286,10 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v61421)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v61421)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v61421)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v61421)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v61421)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
             return result;
         }
 
@@ -181,7 +179,34 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                setResult(yMax, 0);
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +261,11 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +289,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v67840)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v67840)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v67840)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v67840)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,8 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
+        final double denominator;
+		clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +113,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,10 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 0;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +184,38 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                {
+					setResult(max, 0);
+					ret = max;
+				}
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +270,13 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +300,10 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v67880)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v67880)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v67880)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v67880)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            resultComputed = true;
             return result;
         }
 
@@ -124,7 +124,11 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double sign = yMin * yMax;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +185,36 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +269,11 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +297,10 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v68443)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v68443)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v68443)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v68443)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            resultComputed = true;
             return result;
         }
 
@@ -124,7 +124,13 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 1;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +187,32 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double p;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +267,10 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +294,11 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v69455)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v69455)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v69455)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v69455)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -125,6 +124,12 @@
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);
+			setResult(max, 0);
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +186,36 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +270,10 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v69878)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v69878)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v69878)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v69878)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,10 +122,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
-        if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
-            return result;
-        }
+        if (Math.abs(yMax) <= functionValueAccuracy)
+			return solve(f, initial, max);
 
         // reduce interval if initial and max bracket the root
         if (yInitial * yMax < 0) {
@@ -181,7 +178,35 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +261,11 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +289,12 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v70231)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v70231)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v70231)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v70231)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,12 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +184,36 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double x1 = max;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +268,12 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +297,10 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v71085)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v71085)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v71085)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v71085)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,12 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.resultComputed = true;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +185,33 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double fa;
+				double x;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +266,11 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v72837)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
@@ -180,7 +180,8 @@
                                    final UnivariateRealFunction function)
         throws FunctionEvaluationException {
         final double f1 = function.value(lower);
-        final double f2 = function.value(upper);
+        this.iterationCount = iterationCount;
+		final double f2 = function.value(upper);
         return (f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0);
     }
 
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v72837)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v72837)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v72837)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v72837)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,11 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 1;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +184,47 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +279,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +305,9 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v74838)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -180,7 +180,8 @@
                                    final UnivariateRealFunction function)
         throws FunctionEvaluationException {
         final double f1 = function.value(lower);
-        final double f2 = function.value(upper);
+        this.iterationCount = iterationCount;
+		final double f2 = function.value(upper);
         return (f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0);
     }
 
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v74838)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v74838)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v74838)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v74838)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,12 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +185,40 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				double x2 = max;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +273,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +298,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v76092)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v76092)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v76092)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v76092)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,12 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +185,34 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double fb;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +267,14 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +298,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v76432)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v76432)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v76432)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v76432)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,20 +111,24 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
-            return solve(f, min, yMin, initial, yInitial, min, yMin);
+            verifyBracketing(min, max, f);
+			return solve(f, min, yMin, initial, yInitial, min, yMin);
         }
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +185,38 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +271,12 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +300,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v77079)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v77079)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v77079)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v77079)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,12 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +185,28 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +261,16 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v77869)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        double fmin;
         this.resultComputed = true;
     }
 
@@ -180,7 +180,8 @@
                                    final UnivariateRealFunction function)
         throws FunctionEvaluationException {
         final double f1 = function.value(lower);
-        final double f2 = function.value(upper);
+        this.iterationCount = iterationCount;
+		final double f2 = function.value(upper);
         return (f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0);
     }
 
@@ -245,6 +246,7 @@
         throws FunctionEvaluationException {
 
         verifyInterval(lower, upper);
+		this.resultComputed = true;
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v77869)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v77869)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v77869)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v77869)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,11 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +184,31 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.iterationCount = iterationCount;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +263,10 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,7 +275,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -260,7 +289,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v78463)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -245,6 +245,7 @@
         throws FunctionEvaluationException {
 
         verifyInterval(lower, upper);
+		this.resultComputed = true;
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v78463)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v78463)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v78463)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v78463)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,9 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +182,35 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                setResult(yMax, 0);
+				this.iterationCount = iterationCount;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +265,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +291,9 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v80060)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v80060)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v80060)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v80060)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,14 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +187,34 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.iterationCount = iterationCount;
+				double fb;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +269,17 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +303,9 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v81431)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v81431)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v81431)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v81431)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,13 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,7 +184,29 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.iterationCount = iterationCount;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -236,7 +261,16 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +294,9 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v82240)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v82240)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v82240)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v82240)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,12 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,8 +183,37 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.iterationCount = iterationCount;
+				this.iterationCount = iterationCount;
+				this.iterationCount = iterationCount;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				clearResult();
+				int i = 1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
+                i++;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -236,7 +267,15 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v85014)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v85014)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v85014)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 00:46:47 [main] [INFO]  PatchLogExporter - patch (v85014)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,12 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
             return result;
         }
 
@@ -181,8 +185,36 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                ret = solve(f, min, yMin, max, yMax, min, yMin);
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -236,7 +268,18 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -260,7 +303,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                y1 = f.value(x1);
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-07 00:46:47 [main] [INFO]  KGenProgMain - Summary
Reached generation = 427
Generated variants = 85014
Syntax valid variants = 72361
Build succeeded variants = 42973
Time elapsed = 6 hours 51 minutes 59 seconds
Exit status = SUCCESS
