2023-08-06 06:23:24 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-06 06:23:24 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-06 06:23:24 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-06 06:23:24 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/kgenprog-72.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 3 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/research
version = 1.8.2
================================================================
2023-08-06 06:23:42 [main] [INFO]  KGenProgMain - initial failed tests (1/6)
org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints: null

2023-08-06 06:23:43 [main] [INFO]  KGenProgMain - GA started
2023-08-06 06:23:43 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-06 06:23:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, build-succeeded 15, build-failed 52, syntax-invalid 7, redundant 26
Fitness: max 0.833(11), min 0.167(1), ave 0.756
Test execution time: sum 2324 ms, max 284 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 06:23:51 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-06 06:23:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, build-succeeded 25, build-failed 57, syntax-invalid 7, redundant 11
Fitness: max 0.833(14), min 0.167(4), ave 0.667
Test execution time: sum 1940 ms, max 148 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 06:23:57 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-06 06:24:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 200, build-succeeded 74, build-failed 48, syntax-invalid 24, redundant 54
Fitness: max 1(1), min 0.167(9), ave 0.671
Test execution time: sum 4980 ms, max 186 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:24:10 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-06 06:24:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 200, build-succeeded 68, build-failed 49, syntax-invalid 21, redundant 62
Fitness: max 1(2), min 0.5(2), ave 0.814
Test execution time: sum 4330 ms, max 137 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:24:21 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-06 06:24:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 seconds
Variants: generated 200, build-succeeded 77, build-failed 50, syntax-invalid 17, redundant 56
Fitness: max 0.833(64), min 0.167(7), ave 0.76
Test execution time: sum 5014 ms, max 145 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:24:34 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-06 06:24:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 4 seconds
Variants: generated 200, build-succeeded 85, build-failed 52, syntax-invalid 22, redundant 41
Fitness: max 1(1), min 0.167(5), ave 0.788
Test execution time: sum 5524 ms, max 165 ms, min 53 ms
----------------------------------------------------------------

2023-08-06 06:24:47 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-06 06:25:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 18 seconds
Variants: generated 200, build-succeeded 99, build-failed 47, syntax-invalid 22, redundant 32
Fitness: max 0.833(86), min 0.167(6), ave 0.779
Test execution time: sum 6323 ms, max 193 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:25:01 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-06 06:25:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 31 seconds
Variants: generated 200, build-succeeded 87, build-failed 58, syntax-invalid 26, redundant 29
Fitness: max 1(1), min 0.167(3), ave 0.799
Test execution time: sum 5484 ms, max 195 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:25:14 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-06 06:25:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 44 seconds
Variants: generated 200, build-succeeded 98, build-failed 60, syntax-invalid 16, redundant 26
Fitness: max 1(1), min 0.167(3), ave 0.799
Test execution time: sum 6166 ms, max 172 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:25:27 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-06 06:25:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 55 seconds
Variants: generated 200, build-succeeded 76, build-failed 64, syntax-invalid 43, redundant 17
Fitness: max 1(1), min 0.167(2), ave 0.814
Test execution time: sum 4486 ms, max 92 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:25:39 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-06 06:25:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 7 seconds
Variants: generated 200, build-succeeded 78, build-failed 65, syntax-invalid 37, redundant 20
Fitness: max 1(1), min 0.167(3), ave 0.806
Test execution time: sum 4689 ms, max 207 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:25:51 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-06 06:26:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 21 seconds
Variants: generated 200, build-succeeded 107, build-failed 52, syntax-invalid 23, redundant 18
Fitness: max 1(1), min 0.167(4), ave 0.79
Test execution time: sum 6445 ms, max 100 ms, min 53 ms
----------------------------------------------------------------

2023-08-06 06:26:05 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-06 06:26:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 34 seconds
Variants: generated 200, build-succeeded 95, build-failed 59, syntax-invalid 28, redundant 18
Fitness: max 1(1), min 0.167(6), ave 0.786
Test execution time: sum 5708 ms, max 139 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:26:18 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-06 06:26:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 49 seconds
Variants: generated 200, build-succeeded 105, build-failed 60, syntax-invalid 18, redundant 17
Fitness: max 1(2), min 0.167(3), ave 0.816
Test execution time: sum 6278 ms, max 191 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:26:32 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-06 06:26:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 2 seconds
Variants: generated 200, build-succeeded 92, build-failed 68, syntax-invalid 30, redundant 10
Fitness: max 0.833(89), min 0.167(3), ave 0.812
Test execution time: sum 5567 ms, max 137 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:26:45 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-06 06:26:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 16 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 21, redundant 18
Fitness: max 1(2), min 0.167(9), ave 0.776
Test execution time: sum 6283 ms, max 84 ms, min 53 ms
----------------------------------------------------------------

2023-08-06 06:26:59 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-06 06:27:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 29 seconds
Variants: generated 200, build-succeeded 84, build-failed 65, syntax-invalid 31, redundant 20
Fitness: max 0.833(78), min 0.333(1), ave 0.817
Test execution time: sum 5095 ms, max 190 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:27:12 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-06 06:27:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 43 seconds
Variants: generated 200, build-succeeded 111, build-failed 64, syntax-invalid 14, redundant 11
Fitness: max 0.833(100), min 0.167(6), ave 0.79
Test execution time: sum 6698 ms, max 125 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:27:27 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-06 06:27:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 57 seconds
Variants: generated 200, build-succeeded 98, build-failed 65, syntax-invalid 19, redundant 18
Fitness: max 1(1), min 0.167(6), ave 0.787
Test execution time: sum 5816 ms, max 80 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:27:40 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-06 06:27:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 11 seconds
Variants: generated 200, build-succeeded 95, build-failed 71, syntax-invalid 24, redundant 10
Fitness: max 0.833(89), min 0.167(2), ave 0.809
Test execution time: sum 5567 ms, max 138 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:27:54 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-06 06:28:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 26 seconds
Variants: generated 200, build-succeeded 109, build-failed 58, syntax-invalid 22, redundant 11
Fitness: max 1(1), min 0.167(6), ave 0.787
Test execution time: sum 6738 ms, max 209 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:28:09 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-06 06:28:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 40 seconds
Variants: generated 200, build-succeeded 104, build-failed 57, syntax-invalid 21, redundant 18
Fitness: max 0.833(98), min 0.167(1), ave 0.816
Test execution time: sum 6327 ms, max 89 ms, min 53 ms
----------------------------------------------------------------

2023-08-06 06:28:23 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-06 06:28:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 56 seconds
Variants: generated 200, build-succeeded 106, build-failed 70, syntax-invalid 12, redundant 12
Fitness: max 0.833(101), min 0.167(2), ave 0.816
Test execution time: sum 6413 ms, max 135 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:28:39 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-06 06:28:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 11 seconds
Variants: generated 200, build-succeeded 98, build-failed 68, syntax-invalid 27, redundant 7
Fitness: max 0.833(93), min 0.333(1), ave 0.82
Test execution time: sum 6024 ms, max 148 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 06:28:54 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-06 06:29:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 26 seconds
Variants: generated 200, build-succeeded 102, build-failed 62, syntax-invalid 26, redundant 10
Fitness: max 0.833(97), min 0.167(1), ave 0.82
Test execution time: sum 6436 ms, max 139 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:29:10 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-06 06:29:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 41 seconds
Variants: generated 200, build-succeeded 105, build-failed 51, syntax-invalid 29, redundant 15
Fitness: max 0.833(99), min 0.167(3), ave 0.808
Test execution time: sum 6264 ms, max 86 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:29:24 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-06 06:29:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 56 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 29, redundant 9
Fitness: max 1(2), min 0.167(2), ave 0.814
Test execution time: sum 6367 ms, max 205 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:29:40 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-06 06:29:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 11 seconds
Variants: generated 200, build-succeeded 92, build-failed 66, syntax-invalid 26, redundant 16
Fitness: max 0.833(84), min 0.167(5), ave 0.79
Test execution time: sum 5643 ms, max 128 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:29:54 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-06 06:30:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 27 seconds
Variants: generated 200, build-succeeded 107, build-failed 55, syntax-invalid 20, redundant 18
Fitness: max 1(1), min 0.167(1), ave 0.821
Test execution time: sum 6549 ms, max 188 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:30:10 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-06 06:30:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 42 seconds
Variants: generated 200, build-succeeded 115, build-failed 60, syntax-invalid 15, redundant 10
Fitness: max 1(1), min 0.167(5), ave 0.799
Test execution time: sum 6700 ms, max 78 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:30:26 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-06 06:30:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 59 seconds
Variants: generated 200, build-succeeded 117, build-failed 59, syntax-invalid 15, redundant 9
Fitness: max 1(1), min 0.167(6), ave 0.791
Test execution time: sum 7004 ms, max 114 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:30:42 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-06 06:30:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 15 seconds
Variants: generated 200, build-succeeded 110, build-failed 64, syntax-invalid 18, redundant 8
Fitness: max 1(2), min 0.167(5), ave 0.8
Test execution time: sum 6664 ms, max 134 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:30:58 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-06 06:31:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 31 seconds
Variants: generated 200, build-succeeded 108, build-failed 65, syntax-invalid 20, redundant 7
Fitness: max 0.833(103), min 0.167(2), ave 0.815
Test execution time: sum 6668 ms, max 152 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 06:31:14 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-06 06:31:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 47 seconds
Variants: generated 200, build-succeeded 107, build-failed 61, syntax-invalid 20, redundant 12
Fitness: max 0.833(100), min 0.167(2), ave 0.813
Test execution time: sum 6530 ms, max 129 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:31:30 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-06 06:31:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 1 seconds
Variants: generated 200, build-succeeded 98, build-failed 62, syntax-invalid 24, redundant 16
Fitness: max 0.833(94), min 0.5(1), ave 0.825
Test execution time: sum 5860 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:31:44 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-06 06:32:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 18 seconds
Variants: generated 200, build-succeeded 114, build-failed 60, syntax-invalid 16, redundant 10
Fitness: max 0.833(110), min 0.667(4), ave 0.827
Test execution time: sum 6785 ms, max 139 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:32:01 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-06 06:32:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 34 seconds
Variants: generated 200, build-succeeded 110, build-failed 59, syntax-invalid 19, redundant 12
Fitness: max 0.833(103), min 0.167(3), ave 0.809
Test execution time: sum 6725 ms, max 140 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:32:17 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-06 06:32:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 50 seconds
Variants: generated 200, build-succeeded 111, build-failed 57, syntax-invalid 24, redundant 8
Fitness: max 0.833(108), min 0.167(1), ave 0.824
Test execution time: sum 6740 ms, max 130 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:32:33 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-06 06:32:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 6 seconds
Variants: generated 200, build-succeeded 107, build-failed 63, syntax-invalid 21, redundant 9
Fitness: max 0.833(102), min 0.167(1), ave 0.821
Test execution time: sum 6540 ms, max 103 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:32:50 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-06 06:33:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 22 seconds
Variants: generated 200, build-succeeded 95, build-failed 60, syntax-invalid 34, redundant 11
Fitness: max 1(1), min 0.167(4), ave 0.8
Test execution time: sum 5904 ms, max 203 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 06:33:06 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-06 06:48:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 40 seconds
Variants: generated 200, build-succeeded 102, build-failed 67, syntax-invalid 25, redundant 6
Fitness: max 0.833(96), min 0.167(2), ave 0.814
Test execution time: sum 906590 ms, max 900147 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 06:48:23 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-06 07:03:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 58 seconds
Variants: generated 200, build-succeeded 115, build-failed 52, syntax-invalid 22, redundant 11
Fitness: max 0.833(105), min 0.167(10), ave 0.775
Test execution time: sum 907177 ms, max 900089 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 07:03:41 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-06 07:03:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 13 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 27, redundant 15
Fitness: max 0.833(99), min 0.167(5), ave 0.801
Test execution time: sum 6225 ms, max 83 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 07:03:56 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-06 07:19:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 31 seconds
Variants: generated 200, build-succeeded 107, build-failed 68, syntax-invalid 19, redundant 6
Fitness: max 0.833(92), min 0.167(11), ave 0.759
Test execution time: sum 906659 ms, max 900115 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 07:19:14 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-06 07:49:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 48 seconds
Variants: generated 200, build-succeeded 114, build-failed 51, syntax-invalid 27, redundant 8
Fitness: max 0.833(98), min 0.167(15), ave 0.744
Test execution time: sum 1807234 ms, max 900109 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 07:49:32 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-06 08:43:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 8 seconds
Variants: generated 200, build-succeeded 124, build-failed 47, syntax-invalid 20, redundant 9
Fitness: max 1(1), min 0.167(11), ave 0.765
Test execution time: sum 3247891 ms, max 900116 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 08:43:51 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-06 08:44:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 24 seconds
Variants: generated 200, build-succeeded 109, build-failed 57, syntax-invalid 26, redundant 8
Fitness: max 0.833(97), min 0.167(8), ave 0.777
Test execution time: sum 6652 ms, max 81 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 08:44:08 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-06 08:44:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 42 seconds
Variants: generated 200, build-succeeded 112, build-failed 56, syntax-invalid 23, redundant 9
Fitness: max 0.833(96), min 0.167(13), ave 0.749
Test execution time: sum 6637 ms, max 133 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 08:44:25 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-06 08:44:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 1 seconds
Variants: generated 200, build-succeeded 109, build-failed 58, syntax-invalid 24, redundant 9
Fitness: max 0.833(95), min 0.167(9), ave 0.765
Test execution time: sum 7268 ms, max 589 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 08:44:44 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-06 08:45:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 18 seconds
Variants: generated 200, build-succeeded 113, build-failed 54, syntax-invalid 24, redundant 9
Fitness: max 0.833(103), min 0.167(7), ave 0.785
Test execution time: sum 6995 ms, max 125 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 08:45:02 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-06 08:45:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 36 seconds
Variants: generated 200, build-succeeded 109, build-failed 60, syntax-invalid 22, redundant 9
Fitness: max 0.833(99), min 0.167(7), ave 0.786
Test execution time: sum 6509 ms, max 88 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 08:45:19 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-06 08:45:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 54 seconds
Variants: generated 200, build-succeeded 120, build-failed 55, syntax-invalid 17, redundant 8
Fitness: max 1(1), min 0.167(10), ave 0.772
Test execution time: sum 7334 ms, max 196 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 08:45:37 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-06 08:45:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 12 seconds
Variants: generated 200, build-succeeded 115, build-failed 55, syntax-invalid 23, redundant 7
Fitness: max 1(1), min 0.167(7), ave 0.791
Test execution time: sum 7138 ms, max 199 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 08:45:55 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-06 08:46:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 31 seconds
Variants: generated 200, build-succeeded 119, build-failed 54, syntax-invalid 18, redundant 9
Fitness: max 0.833(110), min 0.167(6), ave 0.794
Test execution time: sum 7450 ms, max 129 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 08:46:14 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-06 08:46:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 50 seconds
Variants: generated 200, build-succeeded 112, build-failed 67, syntax-invalid 18, redundant 3
Fitness: max 0.833(105), min 0(1), ave 0.808
Test execution time: sum 7171 ms, max 121 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 08:46:33 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-06 09:01:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 8 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 28, redundant 8
Fitness: max 0.833(93), min 0.167(8), ave 0.772
Test execution time: sum 906717 ms, max 900124 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:01:51 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-06 09:02:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 26 seconds
Variants: generated 200, build-succeeded 123, build-failed 45, syntax-invalid 24, redundant 8
Fitness: max 0.833(109), min 0.167(13), ave 0.762
Test execution time: sum 7413 ms, max 78 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 09:02:10 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-06 09:02:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 45 seconds
Variants: generated 200, build-succeeded 110, build-failed 58, syntax-invalid 23, redundant 9
Fitness: max 0.833(104), min 0.167(3), ave 0.809
Test execution time: sum 6663 ms, max 129 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:02:28 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-06 09:17:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 4 seconds
Variants: generated 200, build-succeeded 115, build-failed 51, syntax-invalid 20, redundant 14
Fitness: max 0.833(100), min 0.167(8), ave 0.772
Test execution time: sum 907264 ms, max 900113 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:17:47 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-06 09:18:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 22 seconds
Variants: generated 200, build-succeeded 104, build-failed 64, syntax-invalid 25, redundant 7
Fitness: max 0.833(89), min 0.167(13), ave 0.745
Test execution time: sum 6645 ms, max 192 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:18:05 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-06 09:18:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 41 seconds
Variants: generated 200, build-succeeded 108, build-failed 64, syntax-invalid 21, redundant 7
Fitness: max 0.833(103), min 0.167(4), ave 0.807
Test execution time: sum 6792 ms, max 137 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:18:24 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-06 09:18:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 59 seconds
Variants: generated 200, build-succeeded 115, build-failed 62, syntax-invalid 20, redundant 3
Fitness: max 0.833(107), min 0.167(6), ave 0.796
Test execution time: sum 7079 ms, max 83 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:18:43 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-06 09:19:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 18 seconds
Variants: generated 200, build-succeeded 113, build-failed 55, syntax-invalid 18, redundant 14
Fitness: max 0.833(101), min 0.167(8), ave 0.779
Test execution time: sum 6810 ms, max 123 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:19:01 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-06 09:19:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 37 seconds
Variants: generated 200, build-succeeded 113, build-failed 57, syntax-invalid 17, redundant 13
Fitness: max 0.833(104), min 0.167(5), ave 0.795
Test execution time: sum 7083 ms, max 163 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:19:20 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-06 09:19:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 55 seconds
Variants: generated 200, build-succeeded 103, build-failed 58, syntax-invalid 29, redundant 10
Fitness: max 0.833(99), min 0.167(4), ave 0.807
Test execution time: sum 6474 ms, max 126 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:19:39 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-06 09:19:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 13 seconds
Variants: generated 200, build-succeeded 103, build-failed 65, syntax-invalid 27, redundant 5
Fitness: max 0.833(97), min 0.167(3), ave 0.809
Test execution time: sum 6461 ms, max 125 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:19:57 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-06 09:20:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 31 seconds
Variants: generated 200, build-succeeded 102, build-failed 67, syntax-invalid 25, redundant 6
Fitness: max 0.833(93), min 0.167(6), ave 0.789
Test execution time: sum 6379 ms, max 87 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:20:14 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-06 09:20:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 49 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 21, redundant 8
Fitness: max 0.833(103), min 0.167(9), ave 0.774
Test execution time: sum 7014 ms, max 126 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:20:32 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-06 09:20:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 8 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 25, redundant 8
Fitness: max 1(1), min 0.167(4), ave 0.808
Test execution time: sum 6985 ms, max 183 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:20:51 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-06 09:21:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 26 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 27, redundant 9
Fitness: max 0.833(98), min 0.167(4), ave 0.797
Test execution time: sum 6786 ms, max 171 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:21:09 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-06 09:21:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 44 seconds
Variants: generated 200, build-succeeded 107, build-failed 55, syntax-invalid 27, redundant 11
Fitness: max 0.833(99), min 0.167(4), ave 0.799
Test execution time: sum 6754 ms, max 124 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 09:21:28 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-06 09:21:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 2 seconds
Variants: generated 200, build-succeeded 104, build-failed 51, syntax-invalid 31, redundant 14
Fitness: max 0.833(95), min 0.167(6), ave 0.787
Test execution time: sum 6279 ms, max 86 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:21:45 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-06 09:22:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 20 seconds
Variants: generated 200, build-succeeded 104, build-failed 67, syntax-invalid 25, redundant 4
Fitness: max 0.833(97), min 0.167(3), ave 0.804
Test execution time: sum 6356 ms, max 133 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:22:03 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-06 09:22:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 37 seconds
Variants: generated 200, build-succeeded 96, build-failed 65, syntax-invalid 29, redundant 10
Fitness: max 0.833(87), min 0.167(6), ave 0.785
Test execution time: sum 6107 ms, max 186 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:22:21 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-06 09:22:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 56 seconds
Variants: generated 200, build-succeeded 101, build-failed 65, syntax-invalid 24, redundant 10
Fitness: max 0.833(92), min 0.167(4), ave 0.794
Test execution time: sum 6396 ms, max 194 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:22:39 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-06 09:22:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 14 seconds
Variants: generated 200, build-succeeded 99, build-failed 63, syntax-invalid 31, redundant 7
Fitness: max 0.833(89), min 0.167(6), ave 0.783
Test execution time: sum 6229 ms, max 190 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:22:57 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-06 09:23:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 32 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 27, redundant 8
Fitness: max 0.833(99), min 0.167(4), ave 0.797
Test execution time: sum 6724 ms, max 89 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:23:16 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-06 09:23:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 51 seconds
Variants: generated 200, build-succeeded 109, build-failed 52, syntax-invalid 24, redundant 15
Fitness: max 1(1), min 0.167(3), ave 0.801
Test execution time: sum 6618 ms, max 124 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:23:35 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-06 09:23:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 seconds
Variants: generated 200, build-succeeded 98, build-failed 51, syntax-invalid 43, redundant 8
Fitness: max 1(1), min 0.167(6), ave 0.786
Test execution time: sum 6289 ms, max 180 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:23:52 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-06 09:24:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 seconds
Variants: generated 200, build-succeeded 105, build-failed 61, syntax-invalid 30, redundant 4
Fitness: max 0.833(93), min 0.167(9), ave 0.768
Test execution time: sum 6737 ms, max 139 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:24:11 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-06 09:24:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 seconds
Variants: generated 200, build-succeeded 115, build-failed 45, syntax-invalid 29, redundant 11
Fitness: max 1(1), min 0.167(3), ave 0.796
Test execution time: sum 7110 ms, max 76 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:24:30 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-06 09:24:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 5 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 33, redundant 7
Fitness: max 0.833(90), min 0.167(4), ave 0.79
Test execution time: sum 6140 ms, max 132 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:24:48 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-06 09:25:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 25 seconds
Variants: generated 200, build-succeeded 112, build-failed 51, syntax-invalid 28, redundant 9
Fitness: max 0.833(98), min 0.167(11), ave 0.762
Test execution time: sum 7101 ms, max 125 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:25:08 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-06 09:25:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 45 seconds
Variants: generated 200, build-succeeded 109, build-failed 55, syntax-invalid 27, redundant 9
Fitness: max 0.833(97), min 0.167(6), ave 0.784
Test execution time: sum 7043 ms, max 128 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:25:28 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-06 09:25:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 5 seconds
Variants: generated 200, build-succeeded 115, build-failed 53, syntax-invalid 30, redundant 2
Fitness: max 0.833(107), min 0.167(5), ave 0.799
Test execution time: sum 7396 ms, max 151 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:25:49 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-06 09:26:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 25 seconds
Variants: generated 200, build-succeeded 111, build-failed 57, syntax-invalid 24, redundant 8
Fitness: max 0.833(100), min 0.167(7), ave 0.782
Test execution time: sum 7003 ms, max 80 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:26:08 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-06 09:26:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 45 seconds
Variants: generated 200, build-succeeded 110, build-failed 61, syntax-invalid 22, redundant 7
Fitness: max 0.833(104), min 0.167(2), ave 0.812
Test execution time: sum 6852 ms, max 132 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:26:28 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-06 09:26:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 5 seconds
Variants: generated 200, build-succeeded 115, build-failed 52, syntax-invalid 26, redundant 7
Fitness: max 0.833(106), min 0.167(4), ave 0.801
Test execution time: sum 7319 ms, max 162 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:26:48 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-06 09:27:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 25 seconds
Variants: generated 200, build-succeeded 107, build-failed 57, syntax-invalid 26, redundant 10
Fitness: max 0.833(100), min 0.167(2), ave 0.813
Test execution time: sum 6891 ms, max 202 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:27:09 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-06 09:27:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 46 seconds
Variants: generated 200, build-succeeded 107, build-failed 63, syntax-invalid 21, redundant 9
Fitness: max 1(1), min 0.167(4), ave 0.807
Test execution time: sum 6810 ms, max 122 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:27:29 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-06 09:27:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 7 seconds
Variants: generated 200, build-succeeded 110, build-failed 65, syntax-invalid 15, redundant 10
Fitness: max 0.833(101), min 0.167(1), ave 0.814
Test execution time: sum 7034 ms, max 120 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:27:51 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-06 09:28:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 28 seconds
Variants: generated 200, build-succeeded 113, build-failed 56, syntax-invalid 27, redundant 4
Fitness: max 0.833(106), min 0.167(3), ave 0.81
Test execution time: sum 7226 ms, max 129 ms, min 54 ms
----------------------------------------------------------------

2023-08-06 09:28:12 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-06 09:28:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 49 seconds
Variants: generated 200, build-succeeded 114, build-failed 55, syntax-invalid 21, redundant 10
Fitness: max 0.833(108), min 0.167(1), ave 0.82
Test execution time: sum 7276 ms, max 85 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:28:32 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-06 09:28:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 11 seconds
Variants: generated 200, build-succeeded 126, build-failed 51, syntax-invalid 10, redundant 13
Fitness: max 1(1), min 0.167(4), ave 0.808
Test execution time: sum 7811 ms, max 124 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:28:54 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-06 09:29:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 32 seconds
Variants: generated 200, build-succeeded 113, build-failed 61, syntax-invalid 21, redundant 5
Fitness: max 0.833(110), min 0.333(1), ave 0.826
Test execution time: sum 7076 ms, max 130 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:29:15 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-06 09:29:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 52 seconds
Variants: generated 200, build-succeeded 107, build-failed 61, syntax-invalid 28, redundant 4
Fitness: max 0.833(98), min 0.167(2), ave 0.81
Test execution time: sum 6864 ms, max 169 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:29:36 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-06 09:29:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 14 seconds
Variants: generated 200, build-succeeded 116, build-failed 54, syntax-invalid 26, redundant 4
Fitness: max 0.833(110), min 0.167(3), ave 0.81
Test execution time: sum 7364 ms, max 134 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:29:57 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-06 09:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 35 seconds
Variants: generated 200, build-succeeded 111, build-failed 55, syntax-invalid 27, redundant 7
Fitness: max 0.833(106), min 0.167(2), ave 0.815
Test execution time: sum 7228 ms, max 180 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:30:18 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-06 09:30:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 56 seconds
Variants: generated 200, build-succeeded 105, build-failed 62, syntax-invalid 25, redundant 8
Fitness: max 1(1), min 0.167(1), ave 0.821
Test execution time: sum 6944 ms, max 188 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:30:40 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-06 09:31:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 17 seconds
Variants: generated 200, build-succeeded 114, build-failed 55, syntax-invalid 24, redundant 7
Fitness: max 0.833(109), min 0.167(1), ave 0.822
Test execution time: sum 7255 ms, max 131 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:31:01 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-06 09:31:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 38 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 32, redundant 5
Fitness: max 1(1), min 0.167(2), ave 0.816
Test execution time: sum 6595 ms, max 91 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:31:21 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-06 09:31:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 58 seconds
Variants: generated 200, build-succeeded 102, build-failed 54, syntax-invalid 38, redundant 6
Fitness: max 0.833(94), min 0.167(1), ave 0.815
Test execution time: sum 6361 ms, max 127 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:31:41 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-06 09:32:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 18 seconds
Variants: generated 200, build-succeeded 93, build-failed 66, syntax-invalid 37, redundant 4
Fitness: max 0.833(85), min 0.167(3), ave 0.797
Test execution time: sum 6060 ms, max 162 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:32:01 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-06 09:32:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 39 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 32, redundant 4
Fitness: max 0.833(101), min 0.167(2), ave 0.812
Test execution time: sum 7100 ms, max 190 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:32:22 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-06 09:32:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 0 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 32, redundant 8
Fitness: max 1(2), min 0.167(1), ave 0.818
Test execution time: sum 6631 ms, max 136 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:32:43 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-06 09:33:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 20 seconds
Variants: generated 200, build-succeeded 105, build-failed 61, syntax-invalid 26, redundant 8
Fitness: max 0.833(100), min 0.167(1), ave 0.821
Test execution time: sum 6647 ms, max 83 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:33:03 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-06 09:33:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 40 seconds
Variants: generated 200, build-succeeded 97, build-failed 64, syntax-invalid 30, redundant 9
Fitness: max 0.833(88), min 0.167(2), ave 0.808
Test execution time: sum 6011 ms, max 129 ms, min 55 ms
----------------------------------------------------------------

2023-08-06 09:33:23 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-06 09:33:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 1 seconds
Variants: generated 200, build-succeeded 98, build-failed 51, syntax-invalid 40, redundant 11
Fitness: max 0.833(86), min 0.167(2), ave 0.801
Test execution time: sum 6391 ms, max 184 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:33:44 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-06 09:34:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 21 seconds
Variants: generated 200, build-succeeded 93, build-failed 60, syntax-invalid 39, redundant 8
Fitness: max 1(1), min 0.167(4), ave 0.799
Test execution time: sum 6018 ms, max 127 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:34:04 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-06 09:34:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 41 seconds
Variants: generated 200, build-succeeded 100, build-failed 56, syntax-invalid 36, redundant 8
Fitness: max 0.833(89), min 0.167(2), ave 0.805
Test execution time: sum 6333 ms, max 84 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:34:24 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-06 09:34:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 3 seconds
Variants: generated 200, build-succeeded 101, build-failed 66, syntax-invalid 32, redundant 1
Fitness: max 0.833(92), min 0.167(5), ave 0.794
Test execution time: sum 6367 ms, max 130 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:34:46 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-06 09:35:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 25 seconds
Variants: generated 200, build-succeeded 116, build-failed 43, syntax-invalid 29, redundant 12
Fitness: max 1(3), min 0.167(5), ave 0.803
Test execution time: sum 7429 ms, max 134 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 09:35:08 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-06 09:35:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 47 seconds
Variants: generated 200, build-succeeded 103, build-failed 63, syntax-invalid 27, redundant 7
Fitness: max 1(2), min 0.167(3), ave 0.809
Test execution time: sum 6860 ms, max 185 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:35:31 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-06 09:35:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 11 seconds
Variants: generated 200, build-succeeded 114, build-failed 59, syntax-invalid 22, redundant 5
Fitness: max 0.833(108), min 0.167(2), ave 0.816
Test execution time: sum 7586 ms, max 192 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:35:54 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-06 09:36:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 33 seconds
Variants: generated 200, build-succeeded 108, build-failed 55, syntax-invalid 31, redundant 6
Fitness: max 0.833(98), min 0.167(2), ave 0.807
Test execution time: sum 7185 ms, max 135 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:36:16 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-06 09:36:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 57 seconds
Variants: generated 200, build-succeeded 122, build-failed 46, syntax-invalid 23, redundant 9
Fitness: max 1(1), min 0.167(3), ave 0.805
Test execution time: sum 7997 ms, max 190 ms, min 56 ms
----------------------------------------------------------------

2023-08-06 09:36:40 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-06 09:37:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 19 seconds
Variants: generated 200, build-succeeded 110, build-failed 56, syntax-invalid 28, redundant 6
Fitness: max 1(1), min 0.167(2), ave 0.812
Test execution time: sum 6960 ms, max 87 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:37:02 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-06 09:37:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 41 seconds
Variants: generated 200, build-succeeded 107, build-failed 61, syntax-invalid 23, redundant 9
Fitness: max 0.833(101), min 0.167(1), ave 0.819
Test execution time: sum 6816 ms, max 130 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 09:37:24 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-06 09:37:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 5 seconds
Variants: generated 200, build-succeeded 116, build-failed 56, syntax-invalid 17, redundant 11
Fitness: max 0.833(106), min 0.167(3), ave 0.806
Test execution time: sum 7550 ms, max 194 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:37:48 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-06 09:38:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 29 seconds
Variants: generated 200, build-succeeded 121, build-failed 58, syntax-invalid 8, redundant 13
Fitness: max 0.833(114), min 0.167(2), ave 0.813
Test execution time: sum 7892 ms, max 128 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:38:13 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-06 09:38:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 53 seconds
Variants: generated 200, build-succeeded 120, build-failed 55, syntax-invalid 16, redundant 9
Fitness: max 0.833(115), min 0.667(5), ave 0.826
Test execution time: sum 7814 ms, max 193 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 09:38:36 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-06 09:38:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 15 seconds
Variants: generated 200, build-succeeded 104, build-failed 53, syntax-invalid 34, redundant 9
Fitness: max 0.833(101), min 0.167(1), ave 0.824
Test execution time: sum 6907 ms, max 189 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 09:38:59 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-06 09:39:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 38 seconds
Variants: generated 200, build-succeeded 105, build-failed 64, syntax-invalid 19, redundant 12
Fitness: max 0.833(95), min 0.167(1), ave 0.813
Test execution time: sum 6940 ms, max 196 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:39:21 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-06 09:39:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 2 seconds
Variants: generated 200, build-succeeded 117, build-failed 56, syntax-invalid 17, redundant 10
Fitness: max 0.833(111), min 0.167(3), ave 0.812
Test execution time: sum 7774 ms, max 159 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:39:45 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-06 09:55:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 27 seconds
Variants: generated 200, build-succeeded 123, build-failed 49, syntax-invalid 11, redundant 17
Fitness: max 0.833(116), min 0.167(2), ave 0.816
Test execution time: sum 908288 ms, max 900107 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:55:10 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-06 09:55:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 51 seconds
Variants: generated 200, build-succeeded 117, build-failed 50, syntax-invalid 18, redundant 15
Fitness: max 0.833(110), min 0.667(7), ave 0.823
Test execution time: sum 7577 ms, max 85 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 09:55:34 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-06 09:55:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 14 seconds
Variants: generated 200, build-succeeded 107, build-failed 57, syntax-invalid 21, redundant 15
Fitness: max 0.833(99), min 0.167(4), ave 0.802
Test execution time: sum 6909 ms, max 133 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:55:57 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-06 09:56:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 37 seconds
Variants: generated 200, build-succeeded 109, build-failed 49, syntax-invalid 20, redundant 22
Fitness: max 0.833(99), min 0(1), ave 0.812
Test execution time: sum 6989 ms, max 134 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 09:56:20 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-06 09:56:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 1 seconds
Variants: generated 200, build-succeeded 107, build-failed 62, syntax-invalid 23, redundant 8
Fitness: max 0.833(100), min 0.667(7), ave 0.822
Test execution time: sum 7007 ms, max 186 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 09:56:44 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-06 09:57:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 23 seconds
Variants: generated 200, build-succeeded 106, build-failed 51, syntax-invalid 31, redundant 12
Fitness: max 0.833(103), min 0.167(1), ave 0.824
Test execution time: sum 7101 ms, max 146 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 09:57:07 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-06 09:57:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 47 seconds
Variants: generated 200, build-succeeded 106, build-failed 54, syntax-invalid 28, redundant 12
Fitness: max 0.833(97), min 0.167(2), ave 0.805
Test execution time: sum 7138 ms, max 193 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 09:57:30 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-06 09:57:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 10 seconds
Variants: generated 200, build-succeeded 101, build-failed 61, syntax-invalid 28, redundant 10
Fitness: max 0.833(98), min 0.667(3), ave 0.828
Test execution time: sum 6561 ms, max 84 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 09:57:53 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-06 09:58:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 34 seconds
Variants: generated 200, build-succeeded 109, build-failed 65, syntax-invalid 14, redundant 12
Fitness: max 0.833(105), min 0.167(1), ave 0.823
Test execution time: sum 7145 ms, max 127 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 09:58:17 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-06 09:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 57 seconds
Variants: generated 200, build-succeeded 101, build-failed 62, syntax-invalid 30, redundant 7
Fitness: max 0.833(92), min 0.167(1), ave 0.814
Test execution time: sum 6733 ms, max 135 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 09:58:41 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-06 09:59:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 22 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 26, redundant 4
Fitness: max 0.833(104), min 0.167(2), ave 0.814
Test execution time: sum 7169 ms, max 137 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 09:59:05 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-06 09:59:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 47 seconds
Variants: generated 200, build-succeeded 116, build-failed 59, syntax-invalid 20, redundant 5
Fitness: max 0.833(109), min 0.167(3), ave 0.81
Test execution time: sum 7462 ms, max 121 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 09:59:30 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-06 09:59:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 10 seconds
Variants: generated 200, build-succeeded 98, build-failed 61, syntax-invalid 28, redundant 13
Fitness: max 0.833(97), min 0.333(1), ave 0.828
Test execution time: sum 6455 ms, max 198 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 09:59:54 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-06 10:00:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 35 seconds
Variants: generated 200, build-succeeded 110, build-failed 56, syntax-invalid 22, redundant 12
Fitness: max 0.833(104), min 0.167(2), ave 0.815
Test execution time: sum 7354 ms, max 170 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 10:00:19 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-06 10:00:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 59 seconds
Variants: generated 200, build-succeeded 109, build-failed 50, syntax-invalid 26, redundant 15
Fitness: max 0.833(97), min 0.167(2), ave 0.8
Test execution time: sum 7266 ms, max 195 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 10:00:43 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-06 10:01:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 24 seconds
Variants: generated 200, build-succeeded 112, build-failed 51, syntax-invalid 22, redundant 15
Fitness: max 0.833(107), min 0.167(2), ave 0.814
Test execution time: sum 7521 ms, max 201 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 10:01:07 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-06 10:01:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 47 seconds
Variants: generated 200, build-succeeded 111, build-failed 52, syntax-invalid 29, redundant 8
Fitness: max 0.833(100), min 0.167(6), ave 0.79
Test execution time: sum 7208 ms, max 85 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 10:01:31 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-06 10:01:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 12 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 29, redundant 6
Fitness: max 0.833(105), min 0.167(4), ave 0.809
Test execution time: sum 7129 ms, max 147 ms, min 57 ms
----------------------------------------------------------------

2023-08-06 10:01:55 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-06 10:02:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 36 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 26, redundant 10
Fitness: max 0.833(100), min 0.167(2), ave 0.809
Test execution time: sum 7042 ms, max 175 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:02:19 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-06 10:02:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 1 seconds
Variants: generated 200, build-succeeded 112, build-failed 58, syntax-invalid 22, redundant 8
Fitness: max 0.833(105), min 0.167(2), ave 0.814
Test execution time: sum 7513 ms, max 195 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 10:02:44 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-06 10:03:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 25 seconds
Variants: generated 200, build-succeeded 103, build-failed 58, syntax-invalid 26, redundant 13
Fitness: max 0.833(101), min 0.667(2), ave 0.83
Test execution time: sum 6925 ms, max 189 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:03:09 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-06 10:03:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 51 seconds
Variants: generated 200, build-succeeded 113, build-failed 54, syntax-invalid 19, redundant 14
Fitness: max 1(1), min 0.167(3), ave 0.802
Test execution time: sum 7678 ms, max 192 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 10:03:34 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-06 10:03:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 16 seconds
Variants: generated 200, build-succeeded 111, build-failed 50, syntax-invalid 30, redundant 9
Fitness: max 1(1), min 0.167(1), ave 0.818
Test execution time: sum 7546 ms, max 190 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 10:04:00 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-06 10:04:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 41 seconds
Variants: generated 200, build-succeeded 109, build-failed 57, syntax-invalid 25, redundant 9
Fitness: max 0.833(98), min 0.167(4), ave 0.797
Test execution time: sum 7444 ms, max 156 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 10:04:25 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-06 10:04:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 6 seconds
Variants: generated 200, build-succeeded 105, build-failed 64, syntax-invalid 20, redundant 11
Fitness: max 0.833(99), min 0.167(3), ave 0.81
Test execution time: sum 6985 ms, max 102 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 10:04:49 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-06 10:05:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 34 seconds
Variants: generated 200, build-succeeded 119, build-failed 60, syntax-invalid 14, redundant 7
Fitness: max 0.833(110), min 0.167(5), ave 0.8
Test execution time: sum 8090 ms, max 197 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 10:05:17 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-06 10:05:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 58 seconds
Variants: generated 200, build-succeeded 107, build-failed 55, syntax-invalid 26, redundant 12
Fitness: max 0.833(101), min 0.167(2), ave 0.815
Test execution time: sum 7221 ms, max 89 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:05:42 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-06 10:06:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 23 seconds
Variants: generated 200, build-succeeded 104, build-failed 51, syntax-invalid 36, redundant 9
Fitness: max 0.833(101), min 0.167(2), ave 0.819
Test execution time: sum 6903 ms, max 137 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:06:06 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-06 10:06:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 48 seconds
Variants: generated 200, build-succeeded 102, build-failed 58, syntax-invalid 29, redundant 11
Fitness: max 0.833(98), min 0.167(1), ave 0.822
Test execution time: sum 6610 ms, max 132 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:06:31 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-06 10:06:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 13 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 24, redundant 10
Fitness: max 1(1), min 0.167(2), ave 0.819
Test execution time: sum 6876 ms, max 134 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 10:06:57 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-06 10:07:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 39 seconds
Variants: generated 200, build-succeeded 104, build-failed 64, syntax-invalid 21, redundant 11
Fitness: max 0.833(98), min 0.167(2), ave 0.814
Test execution time: sum 7097 ms, max 196 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:07:23 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-06 10:07:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 44 minutes 7 seconds
Variants: generated 200, build-succeeded 115, build-failed 53, syntax-invalid 18, redundant 14
Fitness: max 1(1), min 0.167(2), ave 0.82
Test execution time: sum 7793 ms, max 182 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:07:50 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-06 10:08:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 44 minutes 35 seconds
Variants: generated 200, build-succeeded 112, build-failed 55, syntax-invalid 18, redundant 15
Fitness: max 0.833(107), min 0.167(2), ave 0.815
Test execution time: sum 7713 ms, max 192 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:08:18 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-06 10:08:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 minutes 1 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 25, redundant 17
Fitness: max 0.833(100), min 0.167(1), ave 0.822
Test execution time: sum 7026 ms, max 129 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 10:08:44 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-06 10:09:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 minutes 27 seconds
Variants: generated 200, build-succeeded 108, build-failed 58, syntax-invalid 27, redundant 7
Fitness: max 0.833(103), min 0.167(1), ave 0.821
Test execution time: sum 7310 ms, max 133 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 10:09:11 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-06 10:09:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 minutes 53 seconds
Variants: generated 200, build-succeeded 101, build-failed 57, syntax-invalid 32, redundant 10
Fitness: max 0.833(96), min 0.167(2), ave 0.815
Test execution time: sum 6695 ms, max 81 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 10:09:36 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-06 10:10:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 19 seconds
Variants: generated 200, build-succeeded 103, build-failed 61, syntax-invalid 25, redundant 11
Fitness: max 1(1), min 0.167(2), ave 0.82
Test execution time: sum 6813 ms, max 131 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:10:02 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-06 10:10:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 46 seconds
Variants: generated 200, build-succeeded 107, build-failed 62, syntax-invalid 23, redundant 8
Fitness: max 1(1), min 0.167(3), ave 0.808
Test execution time: sum 7189 ms, max 146 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:10:29 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-06 10:10:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 13 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 20, redundant 18
Fitness: max 0.833(98), min 0.167(5), ave 0.797
Test execution time: sum 7191 ms, max 187 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:10:56 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-06 10:11:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 41 seconds
Variants: generated 200, build-succeeded 110, build-failed 55, syntax-invalid 27, redundant 8
Fitness: max 0.833(102), min 0.167(6), ave 0.794
Test execution time: sum 7448 ms, max 135 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:11:24 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-06 10:11:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 10 seconds
Variants: generated 200, build-succeeded 119, build-failed 54, syntax-invalid 20, redundant 7
Fitness: max 0.833(111), min 0.167(4), ave 0.805
Test execution time: sum 8152 ms, max 201 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 10:11:53 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-06 10:12:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 38 seconds
Variants: generated 200, build-succeeded 103, build-failed 60, syntax-invalid 25, redundant 12
Fitness: max 0.833(97), min 0.167(4), ave 0.804
Test execution time: sum 7143 ms, max 140 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:12:21 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-06 10:12:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 49 minutes 6 seconds
Variants: generated 200, build-succeeded 107, build-failed 61, syntax-invalid 30, redundant 2
Fitness: max 0.833(100), min 0.167(4), ave 0.804
Test execution time: sum 7500 ms, max 201 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:12:50 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-06 10:13:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 49 minutes 35 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 28, redundant 7
Fitness: max 0.833(101), min 0.167(4), ave 0.8
Test execution time: sum 7693 ms, max 172 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:13:18 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-06 10:13:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 3 seconds
Variants: generated 200, build-succeeded 108, build-failed 60, syntax-invalid 28, redundant 4
Fitness: max 0.833(95), min 0.167(7), ave 0.778
Test execution time: sum 7463 ms, max 137 ms, min 58 ms
----------------------------------------------------------------

2023-08-06 10:13:46 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-06 10:14:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 30 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 30, redundant 6
Fitness: max 0.833(99), min 0.667(7), ave 0.822
Test execution time: sum 7264 ms, max 120 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 10:14:14 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-06 10:14:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 58 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 30, redundant 7
Fitness: max 0.833(94), min 0.167(5), ave 0.796
Test execution time: sum 7162 ms, max 189 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:14:42 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-06 10:15:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 28 seconds
Variants: generated 200, build-succeeded 113, build-failed 56, syntax-invalid 23, redundant 8
Fitness: max 1(1), min 0.167(5), ave 0.802
Test execution time: sum 7819 ms, max 195 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:15:11 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-06 10:15:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 58 seconds
Variants: generated 200, build-succeeded 118, build-failed 54, syntax-invalid 23, redundant 5
Fitness: max 1(1), min 0.167(3), ave 0.814
Test execution time: sum 8155 ms, max 136 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:15:41 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-06 10:16:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 26 seconds
Variants: generated 200, build-succeeded 105, build-failed 61, syntax-invalid 26, redundant 8
Fitness: max 0.833(98), min 0.167(3), ave 0.806
Test execution time: sum 7258 ms, max 132 ms, min 59 ms
----------------------------------------------------------------

2023-08-06 10:16:10 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-06 10:16:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 57 seconds
Variants: generated 200, build-succeeded 113, build-failed 55, syntax-invalid 24, redundant 8
Fitness: max 0.833(108), min 0.167(2), ave 0.817
Test execution time: sum 7933 ms, max 136 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 10:16:40 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-06 10:17:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 27 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 25, redundant 5
Fitness: max 0.833(105), min 0.167(4), ave 0.806
Test execution time: sum 7866 ms, max 138 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:17:10 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-06 10:17:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 57 seconds
Variants: generated 200, build-succeeded 111, build-failed 42, syntax-invalid 34, redundant 13
Fitness: max 0.833(106), min 0.167(1), ave 0.82
Test execution time: sum 7900 ms, max 175 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:17:40 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-06 10:18:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 29 seconds
Variants: generated 200, build-succeeded 118, build-failed 58, syntax-invalid 22, redundant 2
Fitness: max 0.833(109), min 0.167(4), ave 0.804
Test execution time: sum 8410 ms, max 181 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 10:18:12 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-06 10:18:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 58 seconds
Variants: generated 200, build-succeeded 97, build-failed 61, syntax-invalid 32, redundant 10
Fitness: max 0.833(91), min 0.167(2), ave 0.813
Test execution time: sum 6904 ms, max 137 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:18:41 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-06 10:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 28 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 30, redundant 7
Fitness: max 0.833(91), min 0.167(6), ave 0.786
Test execution time: sum 7172 ms, max 134 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 10:19:11 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-06 10:19:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 57 seconds
Variants: generated 200, build-succeeded 104, build-failed 57, syntax-invalid 31, redundant 8
Fitness: max 0.833(101), min 0.167(1), ave 0.824
Test execution time: sum 7342 ms, max 199 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 10:19:40 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-06 10:20:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 30 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 22, redundant 7
Fitness: max 0.833(111), min 0.167(1), ave 0.825
Test execution time: sum 8080 ms, max 197 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:20:13 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-06 10:20:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 0 seconds
Variants: generated 200, build-succeeded 103, build-failed 62, syntax-invalid 27, redundant 8
Fitness: max 0.833(98), min 0.167(2), ave 0.812
Test execution time: sum 7380 ms, max 135 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:20:44 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-06 10:21:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 31 seconds
Variants: generated 200, build-succeeded 108, build-failed 61, syntax-invalid 24, redundant 7
Fitness: max 1(1), min 0.167(4), ave 0.806
Test execution time: sum 7717 ms, max 198 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:21:15 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-06 10:21:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 3 seconds
Variants: generated 200, build-succeeded 109, build-failed 54, syntax-invalid 27, redundant 10
Fitness: max 0.833(103), min 0.167(4), ave 0.806
Test execution time: sum 7725 ms, max 137 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:21:46 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-06 10:22:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 31 seconds
Variants: generated 200, build-succeeded 96, build-failed 57, syntax-invalid 40, redundant 7
Fitness: max 1(1), min 0.167(2), ave 0.812
Test execution time: sum 6729 ms, max 84 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:22:14 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-06 10:22:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 3 seconds
Variants: generated 200, build-succeeded 107, build-failed 62, syntax-invalid 24, redundant 7
Fitness: max 0.833(101), min 0.167(2), ave 0.815
Test execution time: sum 7455 ms, max 153 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:22:46 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-06 10:23:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 35 seconds
Variants: generated 200, build-succeeded 115, build-failed 57, syntax-invalid 20, redundant 8
Fitness: max 0.833(103), min 0.167(6), ave 0.79
Test execution time: sum 7957 ms, max 121 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:23:18 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-06 10:23:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 seconds
Variants: generated 200, build-succeeded 106, build-failed 64, syntax-invalid 25, redundant 5
Fitness: max 0.833(96), min 0.167(4), ave 0.799
Test execution time: sum 7335 ms, max 150 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:23:50 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-06 10:24:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 37 seconds
Variants: generated 200, build-succeeded 99, build-failed 61, syntax-invalid 34, redundant 6
Fitness: max 1(1), min 0.167(2), ave 0.818
Test execution time: sum 6913 ms, max 124 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:24:20 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-06 10:24:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 8 seconds
Variants: generated 200, build-succeeded 98, build-failed 68, syntax-invalid 27, redundant 7
Fitness: max 0.833(94), min 0.167(1), ave 0.821
Test execution time: sum 7026 ms, max 137 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:24:51 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-06 10:25:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 39 seconds
Variants: generated 200, build-succeeded 107, build-failed 60, syntax-invalid 25, redundant 8
Fitness: max 0.833(105), min 0.167(1), ave 0.826
Test execution time: sum 7593 ms, max 202 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:25:23 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-06 10:25:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 11 seconds
Variants: generated 200, build-succeeded 109, build-failed 57, syntax-invalid 27, redundant 7
Fitness: max 0.833(103), min 0.167(2), ave 0.815
Test execution time: sum 7596 ms, max 195 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 10:25:54 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-06 10:26:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 44 seconds
Variants: generated 200, build-succeeded 114, build-failed 55, syntax-invalid 20, redundant 11
Fitness: max 0.833(109), min 0.167(2), ave 0.817
Test execution time: sum 8004 ms, max 133 ms, min 60 ms
----------------------------------------------------------------

2023-08-06 10:26:27 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-06 10:26:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 3 minutes 16 seconds
Variants: generated 200, build-succeeded 106, build-failed 64, syntax-invalid 29, redundant 1
Fitness: max 0.833(101), min 0.167(1), ave 0.821
Test execution time: sum 7492 ms, max 138 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 10:26:59 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-06 10:27:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 3 minutes 47 seconds
Variants: generated 200, build-succeeded 110, build-failed 52, syntax-invalid 26, redundant 12
Fitness: max 0.833(103), min 0.167(1), ave 0.818
Test execution time: sum 7764 ms, max 140 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 10:27:31 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-06 10:28:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 20 seconds
Variants: generated 200, build-succeeded 109, build-failed 59, syntax-invalid 25, redundant 7
Fitness: max 0.833(108), min 0.167(1), ave 0.827
Test execution time: sum 7793 ms, max 194 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 10:28:03 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-06 10:28:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 51 seconds
Variants: generated 200, build-succeeded 105, build-failed 53, syntax-invalid 33, redundant 9
Fitness: max 1(1), min 0.167(1), ave 0.822
Test execution time: sum 7442 ms, max 136 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:28:35 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-06 10:29:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 24 seconds
Variants: generated 200, build-succeeded 106, build-failed 57, syntax-invalid 31, redundant 6
Fitness: max 0.833(103), min 0.167(1), ave 0.824
Test execution time: sum 7605 ms, max 219 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:29:07 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-06 10:29:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 56 seconds
Variants: generated 200, build-succeeded 104, build-failed 57, syntax-invalid 31, redundant 8
Fitness: max 0.833(99), min 0.167(1), ave 0.821
Test execution time: sum 7506 ms, max 141 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 10:29:39 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-06 10:30:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 6 minutes 29 seconds
Variants: generated 200, build-succeeded 110, build-failed 56, syntax-invalid 27, redundant 7
Fitness: max 0.833(105), min 0.667(5), ave 0.826
Test execution time: sum 7974 ms, max 197 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:30:13 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-06 10:30:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 2 seconds
Variants: generated 200, build-succeeded 108, build-failed 57, syntax-invalid 28, redundant 7
Fitness: max 0.833(105), min 0.167(1), ave 0.824
Test execution time: sum 7711 ms, max 145 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 10:30:46 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-06 10:31:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 36 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 25, redundant 9
Fitness: max 0.833(103), min 0.167(1), ave 0.827
Test execution time: sum 7458 ms, max 124 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 10:31:19 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-06 10:31:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 10 seconds
Variants: generated 200, build-succeeded 117, build-failed 46, syntax-invalid 29, redundant 8
Fitness: max 0.833(115), min 0.667(2), ave 0.83
Test execution time: sum 8548 ms, max 199 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:31:53 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-06 10:32:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 44 seconds
Variants: generated 200, build-succeeded 111, build-failed 53, syntax-invalid 27, redundant 9
Fitness: max 1(1), min 0.167(1), ave 0.823
Test execution time: sum 7955 ms, max 202 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:32:27 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-06 10:33:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 18 seconds
Variants: generated 200, build-succeeded 112, build-failed 55, syntax-invalid 21, redundant 12
Fitness: max 0.833(109), min 0.167(2), ave 0.82
Test execution time: sum 8122 ms, max 136 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 10:33:02 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-06 10:33:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 54 seconds
Variants: generated 200, build-succeeded 112, build-failed 62, syntax-invalid 18, redundant 8
Fitness: max 0.833(108), min 0.167(2), ave 0.817
Test execution time: sum 8086 ms, max 217 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:33:37 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-06 10:34:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 27 seconds
Variants: generated 200, build-succeeded 102, build-failed 60, syntax-invalid 29, redundant 9
Fitness: max 0.833(100), min 0.167(2), ave 0.82
Test execution time: sum 7283 ms, max 139 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:34:10 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-06 10:34:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 1 seconds
Variants: generated 200, build-succeeded 106, build-failed 55, syntax-invalid 34, redundant 5
Fitness: max 0.833(103), min 0.167(1), ave 0.822
Test execution time: sum 7651 ms, max 140 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 10:34:44 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-06 10:35:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 36 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 28, redundant 5
Fitness: max 0.833(106), min 0.167(1), ave 0.823
Test execution time: sum 7989 ms, max 139 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 10:35:19 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-06 10:35:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 9 seconds
Variants: generated 200, build-succeeded 105, build-failed 55, syntax-invalid 36, redundant 4
Fitness: max 1(1), min 0.167(2), ave 0.816
Test execution time: sum 7537 ms, max 194 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 10:35:53 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-06 10:36:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 44 seconds
Variants: generated 200, build-succeeded 111, build-failed 53, syntax-invalid 31, redundant 5
Fitness: max 0.833(108), min 0.667(3), ave 0.829
Test execution time: sum 7976 ms, max 202 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:36:27 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-06 10:37:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 18 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 31, redundant 3
Fitness: max 1(2), min 0.167(1), ave 0.815
Test execution time: sum 7738 ms, max 153 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:37:02 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-06 10:37:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 53 seconds
Variants: generated 200, build-succeeded 107, build-failed 53, syntax-invalid 32, redundant 8
Fitness: max 0.833(101), min 0.667(6), ave 0.824
Test execution time: sum 7750 ms, max 140 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:37:36 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-06 10:38:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 27 seconds
Variants: generated 200, build-succeeded 92, build-failed 62, syntax-invalid 38, redundant 8
Fitness: max 0.833(85), min 0.167(3), ave 0.804
Test execution time: sum 6708 ms, max 144 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 10:38:10 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-06 10:38:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 59 seconds
Variants: generated 200, build-succeeded 90, build-failed 58, syntax-invalid 48, redundant 4
Fitness: max 1(1), min 0.167(2), ave 0.819
Test execution time: sum 6666 ms, max 196 ms, min 62 ms
----------------------------------------------------------------

2023-08-06 10:38:42 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-06 10:39:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 34 seconds
Variants: generated 200, build-succeeded 103, build-failed 57, syntax-invalid 33, redundant 7
Fitness: max 0.833(100), min 0.667(3), ave 0.828
Test execution time: sum 7584 ms, max 152 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:39:17 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-06 10:39:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 8 seconds
Variants: generated 200, build-succeeded 96, build-failed 57, syntax-invalid 38, redundant 9
Fitness: max 0.833(95), min 0.667(1), ave 0.832
Test execution time: sum 7048 ms, max 154 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 10:39:51 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-06 10:40:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 43 seconds
Variants: generated 200, build-succeeded 105, build-failed 59, syntax-invalid 29, redundant 7
Fitness: max 0.833(99), min 0.167(1), ave 0.816
Test execution time: sum 7733 ms, max 231 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:40:27 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-06 10:41:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 20 seconds
Variants: generated 200, build-succeeded 105, build-failed 63, syntax-invalid 26, redundant 6
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 7753 ms, max 132 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:41:03 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-06 10:41:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 55 seconds
Variants: generated 200, build-succeeded 97, build-failed 67, syntax-invalid 30, redundant 6
Fitness: max 0.833(93), min 0.667(4), ave 0.826
Test execution time: sum 7127 ms, max 146 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:41:38 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-06 10:42:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 32 seconds
Variants: generated 200, build-succeeded 109, build-failed 59, syntax-invalid 26, redundant 6
Fitness: max 0.833(109), min 0.833(109), ave 0.833
Test execution time: sum 7871 ms, max 142 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:42:15 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-06 10:42:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 8 seconds
Variants: generated 200, build-succeeded 109, build-failed 62, syntax-invalid 24, redundant 5
Fitness: max 0.833(106), min 0.5(1), ave 0.827
Test execution time: sum 7852 ms, max 140 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:42:52 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-06 10:43:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 45 seconds
Variants: generated 200, build-succeeded 103, build-failed 61, syntax-invalid 27, redundant 9
Fitness: max 0.833(99), min 0.667(4), ave 0.827
Test execution time: sum 7432 ms, max 134 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:43:28 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-06 10:44:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 20 seconds
Variants: generated 200, build-succeeded 106, build-failed 55, syntax-invalid 32, redundant 7
Fitness: max 0.833(101), min 0.167(2), ave 0.816
Test execution time: sum 7539 ms, max 151 ms, min 61 ms
----------------------------------------------------------------

2023-08-06 10:44:03 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-06 10:44:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 56 seconds
Variants: generated 200, build-succeeded 106, build-failed 55, syntax-invalid 32, redundant 7
Fitness: max 0.833(102), min 0.667(4), ave 0.827
Test execution time: sum 7711 ms, max 142 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:44:40 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-06 10:45:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 33 seconds
Variants: generated 200, build-succeeded 112, build-failed 59, syntax-invalid 25, redundant 4
Fitness: max 0.833(108), min 0.667(4), ave 0.827
Test execution time: sum 8092 ms, max 155 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:45:17 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-06 10:45:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 22 minutes 11 seconds
Variants: generated 200, build-succeeded 114, build-failed 52, syntax-invalid 21, redundant 13
Fitness: max 0.833(111), min 0.667(3), ave 0.829
Test execution time: sum 8239 ms, max 132 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:45:55 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-06 10:46:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 22 minutes 47 seconds
Variants: generated 200, build-succeeded 98, build-failed 66, syntax-invalid 26, redundant 10
Fitness: max 0.833(97), min 0.667(1), ave 0.832
Test execution time: sum 7114 ms, max 141 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 10:46:31 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-06 10:47:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 26 seconds
Variants: generated 200, build-succeeded 110, build-failed 61, syntax-invalid 18, redundant 11
Fitness: max 0.833(105), min 0.167(1), ave 0.821
Test execution time: sum 7817 ms, max 140 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:47:09 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-06 10:47:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 2 seconds
Variants: generated 200, build-succeeded 106, build-failed 53, syntax-invalid 27, redundant 14
Fitness: max 0.833(97), min 0.167(3), ave 0.802
Test execution time: sum 7640 ms, max 131 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 10:47:45 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-06 10:48:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 41 seconds
Variants: generated 200, build-succeeded 120, build-failed 52, syntax-invalid 21, redundant 7
Fitness: max 0.833(116), min 0.167(1), ave 0.824
Test execution time: sum 8751 ms, max 133 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 10:48:24 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-06 10:49:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 25 minutes 17 seconds
Variants: generated 200, build-succeeded 101, build-failed 62, syntax-invalid 28, redundant 9
Fitness: max 0.833(98), min 0.167(1), ave 0.823
Test execution time: sum 7434 ms, max 154 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 10:49:00 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-06 10:49:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 25 minutes 54 seconds
Variants: generated 200, build-succeeded 105, build-failed 59, syntax-invalid 29, redundant 7
Fitness: max 0.833(103), min 0.667(2), ave 0.83
Test execution time: sum 7684 ms, max 144 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 10:49:37 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-06 10:50:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 32 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 25, redundant 9
Fitness: max 0.833(101), min 0.167(1), ave 0.822
Test execution time: sum 7554 ms, max 141 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 10:50:15 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-06 10:50:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 8 seconds
Variants: generated 200, build-succeeded 103, build-failed 57, syntax-invalid 30, redundant 10
Fitness: max 0.833(100), min 0.167(2), ave 0.819
Test execution time: sum 7542 ms, max 147 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 10:50:52 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-06 10:51:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 47 seconds
Variants: generated 200, build-succeeded 107, build-failed 65, syntax-invalid 24, redundant 4
Fitness: max 1(2), min 0.167(1), ave 0.827
Test execution time: sum 7855 ms, max 135 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 10:51:30 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-06 10:52:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 28 minutes 27 seconds
Variants: generated 200, build-succeeded 117, build-failed 55, syntax-invalid 18, redundant 10
Fitness: max 0.833(117), min 0.833(117), ave 0.833
Test execution time: sum 8552 ms, max 163 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:52:10 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-06 10:52:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 minutes 5 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 24, redundant 9
Fitness: max 0.833(108), min 0.667(2), ave 0.83
Test execution time: sum 8000 ms, max 140 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 10:52:48 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-06 10:53:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 minutes 45 seconds
Variants: generated 200, build-succeeded 114, build-failed 55, syntax-invalid 21, redundant 10
Fitness: max 0.833(114), min 0.833(114), ave 0.833
Test execution time: sum 8300 ms, max 141 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 10:53:28 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-06 10:54:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 27 seconds
Variants: generated 200, build-succeeded 118, build-failed 62, syntax-invalid 13, redundant 7
Fitness: max 0.833(114), min 0.667(4), ave 0.828
Test execution time: sum 8599 ms, max 143 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 10:54:10 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-06 10:54:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 6 seconds
Variants: generated 200, build-succeeded 101, build-failed 67, syntax-invalid 21, redundant 11
Fitness: max 0.833(99), min 0.167(1), ave 0.825
Test execution time: sum 7367 ms, max 136 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:54:49 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-06 10:55:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 45 seconds
Variants: generated 200, build-succeeded 118, build-failed 48, syntax-invalid 28, redundant 6
Fitness: max 0.833(114), min 0.167(3), ave 0.815
Test execution time: sum 8717 ms, max 158 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 10:55:29 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-06 10:56:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 32 minutes 23 seconds
Variants: generated 200, build-succeeded 100, build-failed 54, syntax-invalid 36, redundant 10
Fitness: max 0.833(95), min 0.167(3), ave 0.81
Test execution time: sum 7280 ms, max 134 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 10:56:06 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-06 10:56:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 33 minutes 1 seconds
Variants: generated 200, build-succeeded 107, build-failed 53, syntax-invalid 31, redundant 9
Fitness: max 1(2), min 0.167(2), ave 0.819
Test execution time: sum 7841 ms, max 137 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 10:56:45 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-06 10:57:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 33 minutes 40 seconds
Variants: generated 200, build-succeeded 99, build-failed 55, syntax-invalid 36, redundant 10
Fitness: max 0.833(96), min 0.667(3), ave 0.828
Test execution time: sum 7290 ms, max 149 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 10:57:23 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-06 10:58:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 17 seconds
Variants: generated 200, build-succeeded 99, build-failed 58, syntax-invalid 35, redundant 8
Fitness: max 1(3), min 0.667(3), ave 0.833
Test execution time: sum 7289 ms, max 203 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 10:58:00 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-06 10:58:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 55 seconds
Variants: generated 200, build-succeeded 99, build-failed 62, syntax-invalid 34, redundant 5
Fitness: max 0.833(98), min 0.667(1), ave 0.832
Test execution time: sum 7441 ms, max 203 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 10:58:39 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-06 10:59:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 35 minutes 35 seconds
Variants: generated 200, build-succeeded 98, build-failed 61, syntax-invalid 27, redundant 14
Fitness: max 0.833(94), min 0.167(1), ave 0.821
Test execution time: sum 7299 ms, max 141 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 10:59:18 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-06 10:59:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 minutes 14 seconds
Variants: generated 200, build-succeeded 97, build-failed 62, syntax-invalid 29, redundant 12
Fitness: max 0.833(94), min 0.667(3), ave 0.828
Test execution time: sum 7196 ms, max 150 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 10:59:57 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-06 11:00:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 minutes 54 seconds
Variants: generated 200, build-succeeded 106, build-failed 59, syntax-invalid 28, redundant 7
Fitness: max 0.833(100), min 0.167(1), ave 0.819
Test execution time: sum 7845 ms, max 205 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:00:37 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-06 11:01:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 37 minutes 34 seconds
Variants: generated 200, build-succeeded 101, build-failed 62, syntax-invalid 31, redundant 6
Fitness: max 0.833(96), min 0.167(1), ave 0.82
Test execution time: sum 7450 ms, max 145 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 11:01:17 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-06 11:01:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 38 minutes 14 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 29, redundant 8
Fitness: max 0.833(101), min 0.167(1), ave 0.824
Test execution time: sum 7664 ms, max 139 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:01:57 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-06 11:02:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 38 minutes 54 seconds
Variants: generated 200, build-succeeded 100, build-failed 53, syntax-invalid 36, redundant 11
Fitness: max 0.833(96), min 0.167(1), ave 0.822
Test execution time: sum 7430 ms, max 130 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 11:02:37 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-06 11:03:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 39 minutes 33 seconds
Variants: generated 200, build-succeeded 94, build-failed 63, syntax-invalid 32, redundant 11
Fitness: max 0.833(90), min 0.5(1), ave 0.824
Test execution time: sum 6983 ms, max 142 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 11:03:16 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-06 11:03:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 40 minutes 14 seconds
Variants: generated 200, build-succeeded 103, build-failed 61, syntax-invalid 29, redundant 7
Fitness: max 0.833(100), min 0.667(3), ave 0.828
Test execution time: sum 7673 ms, max 142 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:03:57 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-06 11:04:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 40 minutes 57 seconds
Variants: generated 200, build-succeeded 109, build-failed 61, syntax-invalid 19, redundant 11
Fitness: max 0.833(106), min 0.667(3), ave 0.829
Test execution time: sum 8171 ms, max 168 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:04:40 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-06 11:05:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 38 seconds
Variants: generated 200, build-succeeded 112, build-failed 50, syntax-invalid 26, redundant 12
Fitness: max 0.833(110), min 0.667(2), ave 0.83
Test execution time: sum 8296 ms, max 165 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:05:22 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-06 11:06:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 42 minutes 19 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 29, redundant 8
Fitness: max 0.833(103), min 0.167(1), ave 0.827
Test execution time: sum 7722 ms, max 159 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 11:06:03 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-06 11:06:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 43 minutes 1 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 28, redundant 8
Fitness: max 1(2), min 0.167(2), ave 0.822
Test execution time: sum 7926 ms, max 135 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 11:06:44 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-06 11:07:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 43 minutes 41 seconds
Variants: generated 200, build-succeeded 91, build-failed 63, syntax-invalid 38, redundant 8
Fitness: max 0.833(90), min 0.167(1), ave 0.826
Test execution time: sum 6788 ms, max 143 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 11:07:24 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-06 11:08:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 44 minutes 21 seconds
Variants: generated 200, build-succeeded 96, build-failed 50, syntax-invalid 37, redundant 17
Fitness: max 0.833(92), min 0.167(2), ave 0.816
Test execution time: sum 7169 ms, max 143 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:08:04 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-06 11:08:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 1 seconds
Variants: generated 200, build-succeeded 97, build-failed 59, syntax-invalid 38, redundant 6
Fitness: max 0.833(92), min 0.167(2), ave 0.814
Test execution time: sum 7188 ms, max 151 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 11:08:44 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-06 11:09:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 44 seconds
Variants: generated 200, build-succeeded 110, build-failed 58, syntax-invalid 27, redundant 5
Fitness: max 0.833(105), min 0.167(1), ave 0.821
Test execution time: sum 8246 ms, max 155 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:09:27 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-06 11:10:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 26 seconds
Variants: generated 200, build-succeeded 103, build-failed 66, syntax-invalid 29, redundant 2
Fitness: max 0.833(98), min 0.167(2), ave 0.816
Test execution time: sum 7771 ms, max 144 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:10:09 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-06 11:10:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 9 seconds
Variants: generated 200, build-succeeded 104, build-failed 60, syntax-invalid 30, redundant 6
Fitness: max 0.833(103), min 0.667(1), ave 0.832
Test execution time: sum 7853 ms, max 149 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:10:52 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-06 11:11:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 51 seconds
Variants: generated 200, build-succeeded 100, build-failed 60, syntax-invalid 37, redundant 3
Fitness: max 0.833(98), min 0.667(2), ave 0.83
Test execution time: sum 7416 ms, max 155 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:11:34 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-06 11:12:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 35 seconds
Variants: generated 200, build-succeeded 108, build-failed 53, syntax-invalid 25, redundant 14
Fitness: max 1(2), min 0.667(3), ave 0.832
Test execution time: sum 8055 ms, max 139 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:12:18 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-06 11:13:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 18 seconds
Variants: generated 200, build-succeeded 100, build-failed 61, syntax-invalid 28, redundant 11
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 7464 ms, max 141 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:13:01 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-06 11:13:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 2 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 26, redundant 8
Fitness: max 1(1), min 0.667(3), ave 0.83
Test execution time: sum 8057 ms, max 157 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 11:13:46 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-06 11:14:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 42 seconds
Variants: generated 200, build-succeeded 82, build-failed 72, syntax-invalid 43, redundant 3
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 6170 ms, max 144 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:14:25 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-06 11:15:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 26 seconds
Variants: generated 200, build-succeeded 110, build-failed 53, syntax-invalid 26, redundant 11
Fitness: max 0.833(105), min 0.167(2), ave 0.817
Test execution time: sum 8321 ms, max 140 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 11:15:09 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-06 11:15:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 8 seconds
Variants: generated 200, build-succeeded 103, build-failed 49, syntax-invalid 30, redundant 18
Fitness: max 0.833(101), min 0.667(2), ave 0.83
Test execution time: sum 7762 ms, max 177 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:15:52 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-06 11:16:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 52 seconds
Variants: generated 200, build-succeeded 103, build-failed 57, syntax-invalid 28, redundant 12
Fitness: max 0.833(99), min 0.667(4), ave 0.827
Test execution time: sum 7701 ms, max 156 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:16:35 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-06 11:17:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 53 minutes 36 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 29, redundant 4
Fitness: max 0.833(108), min 0.667(2), ave 0.83
Test execution time: sum 8390 ms, max 145 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:17:19 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-06 11:18:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 54 minutes 19 seconds
Variants: generated 200, build-succeeded 103, build-failed 57, syntax-invalid 34, redundant 6
Fitness: max 0.833(102), min 0.667(1), ave 0.832
Test execution time: sum 7809 ms, max 155 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:18:02 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-06 11:18:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 55 minutes 2 seconds
Variants: generated 200, build-succeeded 97, build-failed 60, syntax-invalid 34, redundant 9
Fitness: max 0.833(96), min 0.667(1), ave 0.832
Test execution time: sum 7289 ms, max 146 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:18:45 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-06 11:19:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 55 minutes 46 seconds
Variants: generated 200, build-succeeded 105, build-failed 59, syntax-invalid 30, redundant 6
Fitness: max 0.833(101), min 0.667(4), ave 0.827
Test execution time: sum 7879 ms, max 154 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:19:29 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-06 11:20:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 56 minutes 27 seconds
Variants: generated 200, build-succeeded 91, build-failed 63, syntax-invalid 40, redundant 6
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 6933 ms, max 224 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:20:11 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-06 11:20:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 57 minutes 13 seconds
Variants: generated 200, build-succeeded 108, build-failed 61, syntax-invalid 20, redundant 11
Fitness: max 0.833(104), min 0.5(2), ave 0.824
Test execution time: sum 8237 ms, max 157 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:20:57 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-06 11:21:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 57 minutes 57 seconds
Variants: generated 200, build-succeeded 101, build-failed 58, syntax-invalid 35, redundant 6
Fitness: max 0.833(97), min 0.167(2), ave 0.817
Test execution time: sum 7695 ms, max 150 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 11:21:41 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-06 11:22:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 43 seconds
Variants: generated 200, build-succeeded 106, build-failed 62, syntax-invalid 24, redundant 8
Fitness: max 0.833(104), min 0.667(2), ave 0.83
Test execution time: sum 7997 ms, max 136 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:22:26 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-06 11:23:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 27 seconds
Variants: generated 200, build-succeeded 101, build-failed 57, syntax-invalid 30, redundant 12
Fitness: max 0.833(99), min 0.667(2), ave 0.83
Test execution time: sum 7660 ms, max 140 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:23:11 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-06 11:23:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 11 seconds
Variants: generated 200, build-succeeded 101, build-failed 55, syntax-invalid 33, redundant 11
Fitness: max 0.833(98), min 0.667(3), ave 0.828
Test execution time: sum 7593 ms, max 138 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:23:54 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-06 11:24:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 seconds
Variants: generated 200, build-succeeded 110, build-failed 58, syntax-invalid 24, redundant 8
Fitness: max 0.833(109), min 0.667(1), ave 0.832
Test execution time: sum 8361 ms, max 152 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:24:41 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-06 11:25:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 1 minutes 44 seconds
Variants: generated 200, build-succeeded 112, build-failed 49, syntax-invalid 28, redundant 11
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 8562 ms, max 147 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:25:27 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-06 11:26:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 31 seconds
Variants: generated 200, build-succeeded 110, build-failed 56, syntax-invalid 27, redundant 7
Fitness: max 0.833(108), min 0.667(2), ave 0.83
Test execution time: sum 8415 ms, max 137 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 11:26:14 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-06 11:27:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 3 minutes 18 seconds
Variants: generated 200, build-succeeded 105, build-failed 65, syntax-invalid 23, redundant 7
Fitness: max 0.833(103), min 0.167(2), ave 0.821
Test execution time: sum 7999 ms, max 151 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 11:27:01 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-06 11:27:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 5 seconds
Variants: generated 200, build-succeeded 110, build-failed 55, syntax-invalid 29, redundant 6
Fitness: max 1(2), min 0.167(2), ave 0.824
Test execution time: sum 8368 ms, max 134 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 11:27:48 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-06 11:28:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 51 seconds
Variants: generated 200, build-succeeded 107, build-failed 48, syntax-invalid 33, redundant 12
Fitness: max 0.833(106), min 0.167(1), ave 0.827
Test execution time: sum 8138 ms, max 142 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:28:34 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-06 11:29:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 38 seconds
Variants: generated 200, build-succeeded 108, build-failed 58, syntax-invalid 25, redundant 9
Fitness: max 1(1), min 0.833(107), ave 0.835
Test execution time: sum 8201 ms, max 136 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 11:29:21 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-06 11:30:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 23 seconds
Variants: generated 200, build-succeeded 102, build-failed 57, syntax-invalid 33, redundant 8
Fitness: max 0.833(100), min 0.667(2), ave 0.83
Test execution time: sum 7768 ms, max 147 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:30:07 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-06 11:30:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 9 seconds
Variants: generated 200, build-succeeded 98, build-failed 60, syntax-invalid 32, redundant 10
Fitness: max 1(1), min 0.167(1), ave 0.827
Test execution time: sum 7526 ms, max 134 ms, min 63 ms
----------------------------------------------------------------

2023-08-06 11:30:53 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-06 11:31:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 56 seconds
Variants: generated 200, build-succeeded 107, build-failed 52, syntax-invalid 31, redundant 10
Fitness: max 0.833(102), min 0.167(1), ave 0.821
Test execution time: sum 8169 ms, max 187 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 11:31:39 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-06 11:32:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 41 seconds
Variants: generated 200, build-succeeded 94, build-failed 59, syntax-invalid 36, redundant 11
Fitness: max 0.833(93), min 0.667(1), ave 0.832
Test execution time: sum 7178 ms, max 157 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:32:24 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-06 11:33:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 9 minutes 28 seconds
Variants: generated 200, build-succeeded 105, build-failed 63, syntax-invalid 26, redundant 6
Fitness: max 0.833(103), min 0.667(2), ave 0.83
Test execution time: sum 8120 ms, max 155 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:33:11 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-06 11:33:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 10 minutes 15 seconds
Variants: generated 200, build-succeeded 106, build-failed 56, syntax-invalid 31, redundant 7
Fitness: max 0.833(104), min 0.667(2), ave 0.83
Test execution time: sum 8117 ms, max 151 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:33:58 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-06 11:34:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 11 minutes 1 seconds
Variants: generated 200, build-succeeded 99, build-failed 55, syntax-invalid 31, redundant 15
Fitness: max 0.833(97), min 0.667(2), ave 0.83
Test execution time: sum 7664 ms, max 159 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:34:44 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-06 11:35:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 11 minutes 50 seconds
Variants: generated 200, build-succeeded 113, build-failed 56, syntax-invalid 27, redundant 4
Fitness: max 0.833(111), min 0.667(2), ave 0.83
Test execution time: sum 8682 ms, max 145 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:35:33 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-06 11:36:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 12 minutes 35 seconds
Variants: generated 200, build-succeeded 92, build-failed 62, syntax-invalid 35, redundant 11
Fitness: max 0.833(91), min 0.667(1), ave 0.832
Test execution time: sum 7135 ms, max 140 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:36:18 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-06 11:37:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 13 minutes 21 seconds
Variants: generated 200, build-succeeded 98, build-failed 55, syntax-invalid 37, redundant 10
Fitness: max 0.833(95), min 0.333(1), ave 0.825
Test execution time: sum 7423 ms, max 146 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 11:37:04 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-06 11:37:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 7 seconds
Variants: generated 200, build-succeeded 100, build-failed 53, syntax-invalid 37, redundant 10
Fitness: max 0.833(99), min 0.167(1), ave 0.827
Test execution time: sum 7496 ms, max 146 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:37:50 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-06 11:38:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 53 seconds
Variants: generated 200, build-succeeded 96, build-failed 60, syntax-invalid 35, redundant 9
Fitness: max 0.833(96), min 0.833(96), ave 0.833
Test execution time: sum 7338 ms, max 194 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:38:37 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-06 11:39:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 15 minutes 41 seconds
Variants: generated 200, build-succeeded 104, build-failed 51, syntax-invalid 34, redundant 11
Fitness: max 0.833(99), min 0.667(5), ave 0.825
Test execution time: sum 7857 ms, max 133 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:39:24 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-06 11:40:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 31 seconds
Variants: generated 200, build-succeeded 110, build-failed 58, syntax-invalid 21, redundant 11
Fitness: max 1(1), min 0.667(2), ave 0.832
Test execution time: sum 8366 ms, max 141 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:40:14 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-06 11:41:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 17 minutes 20 seconds
Variants: generated 200, build-succeeded 114, build-failed 48, syntax-invalid 32, redundant 6
Fitness: max 1(1), min 0.167(2), ave 0.819
Test execution time: sum 8848 ms, max 211 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 11:41:03 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-06 11:41:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 9 seconds
Variants: generated 200, build-succeeded 107, build-failed 60, syntax-invalid 27, redundant 6
Fitness: max 0.833(102), min 0.167(2), ave 0.816
Test execution time: sum 8189 ms, max 144 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:41:52 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-06 11:42:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 56 seconds
Variants: generated 200, build-succeeded 96, build-failed 62, syntax-invalid 33, redundant 9
Fitness: max 0.833(96), min 0.833(96), ave 0.833
Test execution time: sum 7445 ms, max 152 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 11:42:40 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-06 11:43:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 45 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 29, redundant 4
Fitness: max 0.833(103), min 0.167(1), ave 0.824
Test execution time: sum 8188 ms, max 137 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 11:43:29 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-06 11:44:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 34 seconds
Variants: generated 200, build-succeeded 105, build-failed 60, syntax-invalid 27, redundant 8
Fitness: max 0.833(103), min 0.5(1), ave 0.829
Test execution time: sum 8071 ms, max 152 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:44:18 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-06 11:45:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 26 seconds
Variants: generated 200, build-succeeded 116, build-failed 54, syntax-invalid 21, redundant 9
Fitness: max 0.833(114), min 0.167(2), ave 0.822
Test execution time: sum 9161 ms, max 201 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 11:45:09 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-06 11:46:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 17 seconds
Variants: generated 200, build-succeeded 113, build-failed 59, syntax-invalid 23, redundant 5
Fitness: max 0.833(112), min 0.667(1), ave 0.832
Test execution time: sum 8546 ms, max 146 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:46:01 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-06 11:46:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 9 seconds
Variants: generated 200, build-succeeded 114, build-failed 53, syntax-invalid 25, redundant 8
Fitness: max 0.833(106), min 0.167(3), ave 0.808
Test execution time: sum 8972 ms, max 141 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 11:46:52 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-06 11:47:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 58 seconds
Variants: generated 200, build-succeeded 102, build-failed 63, syntax-invalid 27, redundant 8
Fitness: max 0.833(102), min 0.833(102), ave 0.833
Test execution time: sum 7846 ms, max 149 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 11:47:42 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-06 11:48:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 50 seconds
Variants: generated 200, build-succeeded 111, build-failed 55, syntax-invalid 26, redundant 8
Fitness: max 0.833(108), min 0.167(2), ave 0.82
Test execution time: sum 8653 ms, max 164 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 11:48:33 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-06 11:49:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 43 seconds
Variants: generated 200, build-succeeded 118, build-failed 60, syntax-invalid 17, redundant 5
Fitness: max 0.833(116), min 0.667(2), ave 0.831
Test execution time: sum 9059 ms, max 145 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 11:49:26 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-06 11:50:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 35 seconds
Variants: generated 200, build-succeeded 112, build-failed 59, syntax-invalid 22, redundant 7
Fitness: max 0.833(110), min 0.167(2), ave 0.821
Test execution time: sum 8747 ms, max 156 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 11:50:18 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-06 11:51:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 30 seconds
Variants: generated 200, build-succeeded 124, build-failed 57, syntax-invalid 15, redundant 4
Fitness: max 0.833(119), min 0.167(3), ave 0.815
Test execution time: sum 9582 ms, max 136 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 11:51:13 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-06 12:07:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 21 seconds
Variants: generated 200, build-succeeded 109, build-failed 58, syntax-invalid 27, redundant 6
Fitness: max 0.833(105), min 0.167(2), ave 0.818
Test execution time: sum 908547 ms, max 900119 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 12:07:05 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-06 12:07:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 13 seconds
Variants: generated 200, build-succeeded 109, build-failed 63, syntax-invalid 23, redundant 5
Fitness: max 0.833(107), min 0.167(2), ave 0.821
Test execution time: sum 8471 ms, max 140 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 12:07:57 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-06 12:08:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 4 seconds
Variants: generated 200, build-succeeded 111, build-failed 58, syntax-invalid 28, redundant 3
Fitness: max 0.833(107), min 0.167(1), ave 0.82
Test execution time: sum 8511 ms, max 155 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 12:08:48 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-06 12:09:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 57 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 24, redundant 7
Fitness: max 0.833(107), min 0.167(3), ave 0.812
Test execution time: sum 8657 ms, max 158 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 12:09:40 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-08-06 12:10:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 48 seconds
Variants: generated 200, build-succeeded 111, build-failed 55, syntax-invalid 30, redundant 4
Fitness: max 0.833(107), min 0.167(2), ave 0.818
Test execution time: sum 8596 ms, max 147 ms, min 64 ms
----------------------------------------------------------------

2023-08-06 12:10:31 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-08-06 12:11:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 41 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 24, redundant 5
Fitness: max 0.833(110), min 0.167(2), ave 0.819
Test execution time: sum 8896 ms, max 147 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 12:11:24 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-08-06 12:12:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 32 seconds
Variants: generated 200, build-succeeded 107, build-failed 55, syntax-invalid 32, redundant 6
Fitness: max 0.833(105), min 0.5(1), ave 0.829
Test execution time: sum 8354 ms, max 216 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 12:12:16 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-08-06 12:13:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 49 minutes 24 seconds
Variants: generated 200, build-succeeded 109, build-failed 54, syntax-invalid 31, redundant 6
Fitness: max 0.833(105), min 0.167(2), ave 0.818
Test execution time: sum 8565 ms, max 151 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 12:13:07 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-08-06 12:13:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 50 minutes 15 seconds
Variants: generated 200, build-succeeded 101, build-failed 54, syntax-invalid 37, redundant 8
Fitness: max 0.833(100), min 0.667(1), ave 0.832
Test execution time: sum 8048 ms, max 217 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 12:13:58 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-08-06 12:14:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 minutes 9 seconds
Variants: generated 200, build-succeeded 113, build-failed 58, syntax-invalid 24, redundant 5
Fitness: max 0.833(109), min 0.167(2), ave 0.819
Test execution time: sum 8880 ms, max 147 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 12:14:52 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-08-06 12:15:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 0 seconds
Variants: generated 200, build-succeeded 104, build-failed 60, syntax-invalid 30, redundant 6
Fitness: max 0.833(104), min 0.833(104), ave 0.833
Test execution time: sum 8101 ms, max 150 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 12:15:44 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-08-06 12:16:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 56 seconds
Variants: generated 200, build-succeeded 120, build-failed 55, syntax-invalid 19, redundant 6
Fitness: max 0.833(119), min 0.667(1), ave 0.832
Test execution time: sum 9554 ms, max 150 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 12:16:40 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-08-06 12:17:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 52 seconds
Variants: generated 200, build-succeeded 113, build-failed 59, syntax-invalid 18, redundant 10
Fitness: max 0.833(113), min 0.833(113), ave 0.833
Test execution time: sum 8910 ms, max 201 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 12:17:35 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-08-06 12:18:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 46 seconds
Variants: generated 200, build-succeeded 106, build-failed 66, syntax-invalid 24, redundant 4
Fitness: max 0.833(106), min 0.833(106), ave 0.833
Test execution time: sum 8500 ms, max 165 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:18:30 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-08-06 12:19:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 55 minutes 42 seconds
Variants: generated 200, build-succeeded 116, build-failed 61, syntax-invalid 17, redundant 6
Fitness: max 0.833(113), min 0.167(1), ave 0.825
Test execution time: sum 9312 ms, max 135 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:19:25 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-08-06 12:20:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 56 minutes 37 seconds
Variants: generated 200, build-succeeded 114, build-failed 53, syntax-invalid 25, redundant 8
Fitness: max 1(1), min 0.167(1), ave 0.827
Test execution time: sum 8935 ms, max 151 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 12:20:20 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-08-06 12:21:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 31 seconds
Variants: generated 200, build-succeeded 109, build-failed 54, syntax-invalid 25, redundant 12
Fitness: max 0.833(109), min 0.833(109), ave 0.833
Test execution time: sum 8676 ms, max 170 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:21:15 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-08-06 12:22:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 minutes 25 seconds
Variants: generated 200, build-succeeded 111, build-failed 51, syntax-invalid 34, redundant 4
Fitness: max 0.833(107), min 0.167(1), ave 0.821
Test execution time: sum 8925 ms, max 244 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 12:22:08 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-08-06 12:23:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 21 seconds
Variants: generated 200, build-succeeded 115, build-failed 54, syntax-invalid 25, redundant 6
Fitness: max 0.833(112), min 0.167(1), ave 0.825
Test execution time: sum 9029 ms, max 158 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 12:23:04 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-08-06 12:23:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 29, redundant 9
Fitness: max 0.833(104), min 0.167(1), ave 0.827
Test execution time: sum 8074 ms, max 151 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 12:23:58 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-08-06 12:24:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 1 minutes 9 seconds
Variants: generated 200, build-succeeded 101, build-failed 63, syntax-invalid 27, redundant 9
Fitness: max 1(1), min 0.667(2), ave 0.832
Test execution time: sum 8031 ms, max 148 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 12:24:53 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-08-06 12:25:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 3 seconds
Variants: generated 200, build-succeeded 106, build-failed 56, syntax-invalid 29, redundant 9
Fitness: max 0.833(105), min 0.333(1), ave 0.829
Test execution time: sum 8381 ms, max 148 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 12:25:47 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-08-06 12:26:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 59 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 22, redundant 14
Fitness: max 0.833(108), min 0.833(108), ave 0.833
Test execution time: sum 8700 ms, max 159 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 12:26:42 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-08-06 12:27:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 3 minutes 53 seconds
Variants: generated 200, build-succeeded 99, build-failed 61, syntax-invalid 31, redundant 9
Fitness: max 0.833(99), min 0.833(99), ave 0.833
Test execution time: sum 7908 ms, max 169 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:27:36 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-08-06 12:28:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 4 minutes 49 seconds
Variants: generated 200, build-succeeded 117, build-failed 53, syntax-invalid 27, redundant 3
Fitness: max 0.833(113), min 0.167(2), ave 0.818
Test execution time: sum 9418 ms, max 155 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 12:28:32 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-08-06 12:29:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 5 minutes 46 seconds
Variants: generated 200, build-succeeded 106, build-failed 66, syntax-invalid 21, redundant 7
Fitness: max 0.833(103), min 0.167(1), ave 0.824
Test execution time: sum 8412 ms, max 147 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 12:29:29 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-08-06 12:30:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 6 minutes 45 seconds
Variants: generated 200, build-succeeded 118, build-failed 56, syntax-invalid 15, redundant 11
Fitness: max 0.833(115), min 0.667(3), ave 0.829
Test execution time: sum 9349 ms, max 146 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 12:30:28 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-08-06 12:31:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 7 minutes 40 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 30, redundant 7
Fitness: max 0.833(100), min 0.167(1), ave 0.825
Test execution time: sum 8099 ms, max 153 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 12:31:23 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-08-06 12:32:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 39 seconds
Variants: generated 200, build-succeeded 121, build-failed 52, syntax-invalid 16, redundant 11
Fitness: max 0.833(121), min 0.833(121), ave 0.833
Test execution time: sum 9790 ms, max 154 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:32:23 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-08-06 12:33:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 35 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 28, redundant 9
Fitness: max 0.833(103), min 0.167(1), ave 0.825
Test execution time: sum 8347 ms, max 142 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 12:33:18 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-08-06 12:34:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 10 minutes 33 seconds
Variants: generated 200, build-succeeded 113, build-failed 61, syntax-invalid 21, redundant 5
Fitness: max 0.833(110), min 0.167(1), ave 0.824
Test execution time: sum 9229 ms, max 152 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 12:34:16 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-08-06 12:35:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 11 minutes 30 seconds
Variants: generated 200, build-succeeded 110, build-failed 62, syntax-invalid 23, redundant 5
Fitness: max 0.833(109), min 0.667(1), ave 0.832
Test execution time: sum 8860 ms, max 140 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:35:13 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-08-06 12:36:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 23 seconds
Variants: generated 200, build-succeeded 91, build-failed 66, syntax-invalid 36, redundant 7
Fitness: max 0.833(88), min 0.667(3), ave 0.828
Test execution time: sum 7345 ms, max 154 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:36:06 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-08-06 12:37:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 21 seconds
Variants: generated 200, build-succeeded 114, build-failed 56, syntax-invalid 24, redundant 6
Fitness: max 0.833(110), min 0.333(1), ave 0.825
Test execution time: sum 9262 ms, max 161 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 12:37:05 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-08-06 12:38:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 14 minutes 17 seconds
Variants: generated 200, build-succeeded 99, build-failed 62, syntax-invalid 33, redundant 6
Fitness: max 0.833(98), min 0.167(1), ave 0.827
Test execution time: sum 7836 ms, max 132 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:38:00 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-08-06 12:38:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 14 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 27, redundant 7
Fitness: max 0.833(104), min 0.167(1), ave 0.822
Test execution time: sum 8584 ms, max 151 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 12:38:57 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-08-06 12:39:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 11 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 25, redundant 9
Fitness: max 0.833(101), min 0.667(3), ave 0.829
Test execution time: sum 8371 ms, max 142 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 12:39:55 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-08-06 12:40:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 9 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 26, redundant 4
Fitness: max 0.833(109), min 0.167(2), ave 0.821
Test execution time: sum 9054 ms, max 153 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 12:40:53 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-08-06 12:41:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 8 seconds
Variants: generated 200, build-succeeded 109, build-failed 62, syntax-invalid 22, redundant 7
Fitness: max 0.833(105), min 0.167(2), ave 0.818
Test execution time: sum 8681 ms, max 161 ms, min 65 ms
----------------------------------------------------------------

2023-08-06 12:41:51 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-08-06 12:42:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 5 seconds
Variants: generated 200, build-succeeded 106, build-failed 59, syntax-invalid 24, redundant 11
Fitness: max 0.833(100), min 0.167(4), ave 0.805
Test execution time: sum 8598 ms, max 140 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 12:42:49 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-08-06 12:43:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 20 minutes 4 seconds
Variants: generated 200, build-succeeded 103, build-failed 64, syntax-invalid 26, redundant 7
Fitness: max 0.833(101), min 0.667(2), ave 0.83
Test execution time: sum 8378 ms, max 170 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 12:43:47 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-08-06 12:44:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 1 seconds
Variants: generated 200, build-succeeded 103, build-failed 64, syntax-invalid 30, redundant 3
Fitness: max 0.833(100), min 0.167(1), ave 0.824
Test execution time: sum 8319 ms, max 145 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:44:44 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-08-06 12:45:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 22 minutes 0 seconds
Variants: generated 200, build-succeeded 109, build-failed 64, syntax-invalid 24, redundant 3
Fitness: max 0.833(105), min 0.167(2), ave 0.818
Test execution time: sum 9079 ms, max 217 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 12:45:43 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-08-06 12:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 22 minutes 58 seconds
Variants: generated 200, build-succeeded 111, build-failed 54, syntax-invalid 27, redundant 8
Fitness: max 0.833(108), min 0.5(1), ave 0.827
Test execution time: sum 8876 ms, max 151 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 12:46:41 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-08-06 12:47:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 23 minutes 56 seconds
Variants: generated 200, build-succeeded 111, build-failed 53, syntax-invalid 27, redundant 9
Fitness: max 0.833(104), min 0.167(4), ave 0.805
Test execution time: sum 9046 ms, max 163 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 12:47:39 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-08-06 12:48:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 55 seconds
Variants: generated 200, build-succeeded 111, build-failed 56, syntax-invalid 25, redundant 8
Fitness: max 0.833(109), min 0.667(2), ave 0.83
Test execution time: sum 8985 ms, max 151 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:48:38 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-08-06 12:49:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 50 seconds
Variants: generated 200, build-succeeded 95, build-failed 63, syntax-invalid 36, redundant 6
Fitness: max 0.833(94), min 0.167(1), ave 0.826
Test execution time: sum 7710 ms, max 137 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 12:49:33 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-08-06 12:50:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 26 minutes 46 seconds
Variants: generated 200, build-succeeded 103, build-failed 57, syntax-invalid 33, redundant 7
Fitness: max 0.833(101), min 0.667(2), ave 0.83
Test execution time: sum 8494 ms, max 224 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:50:29 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-08-06 12:51:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 41 seconds
Variants: generated 200, build-succeeded 93, build-failed 64, syntax-invalid 37, redundant 6
Fitness: max 0.833(92), min 0.167(1), ave 0.826
Test execution time: sum 7567 ms, max 140 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 12:51:24 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-08-06 12:52:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 28 minutes 38 seconds
Variants: generated 200, build-succeeded 104, build-failed 56, syntax-invalid 34, redundant 6
Fitness: max 0.833(101), min 0.167(1), ave 0.824
Test execution time: sum 8508 ms, max 150 ms, min 66 ms
----------------------------------------------------------------

2023-08-06 12:52:21 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-08-06 12:53:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 29 minutes 33 seconds
Variants: generated 200, build-succeeded 96, build-failed 60, syntax-invalid 38, redundant 6
Fitness: max 0.833(93), min 0(1), ave 0.811
Test execution time: sum 7769 ms, max 161 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 12:53:16 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-08-06 12:54:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 27 seconds
Variants: generated 200, build-succeeded 91, build-failed 63, syntax-invalid 43, redundant 3
Fitness: max 0.833(90), min 0.667(1), ave 0.832
Test execution time: sum 7477 ms, max 164 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 12:54:10 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-08-06 12:55:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 25 seconds
Variants: generated 200, build-succeeded 103, build-failed 63, syntax-invalid 30, redundant 4
Fitness: max 0.833(101), min 0.667(2), ave 0.83
Test execution time: sum 8418 ms, max 165 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 12:55:09 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-08-06 12:56:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 25 seconds
Variants: generated 200, build-succeeded 109, build-failed 61, syntax-invalid 23, redundant 7
Fitness: max 0.833(106), min 0.667(3), ave 0.829
Test execution time: sum 9075 ms, max 159 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 12:56:08 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-08-06 12:57:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 23 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 27, redundant 7
Fitness: max 0.833(100), min 0.667(4), ave 0.827
Test execution time: sum 8594 ms, max 190 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 12:57:06 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-08-06 12:58:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 24 seconds
Variants: generated 200, build-succeeded 109, build-failed 62, syntax-invalid 24, redundant 5
Fitness: max 0.833(106), min 0.667(3), ave 0.829
Test execution time: sum 9013 ms, max 151 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 12:58:07 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-08-06 12:59:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 21 seconds
Variants: generated 200, build-succeeded 102, build-failed 55, syntax-invalid 35, redundant 8
Fitness: max 0.833(100), min 0.167(1), ave 0.825
Test execution time: sum 8324 ms, max 168 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 12:59:04 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-08-06 13:00:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 22 seconds
Variants: generated 200, build-succeeded 116, build-failed 48, syntax-invalid 27, redundant 9
Fitness: max 1(1), min 0.167(2), ave 0.819
Test execution time: sum 9550 ms, max 159 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 13:00:05 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-08-06 13:01:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 24 seconds
Variants: generated 200, build-succeeded 118, build-failed 54, syntax-invalid 22, redundant 6
Fitness: max 0.833(113), min 0.167(1), ave 0.822
Test execution time: sum 9859 ms, max 234 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 13:01:07 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-08-06 13:02:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 25 seconds
Variants: generated 200, build-succeeded 107, build-failed 63, syntax-invalid 25, redundant 5
Fitness: max 0.833(106), min 0.167(1), ave 0.827
Test execution time: sum 8732 ms, max 138 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 13:02:09 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-08-06 13:03:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 26 seconds
Variants: generated 200, build-succeeded 108, build-failed 56, syntax-invalid 31, redundant 5
Fitness: max 0.833(105), min 0.167(1), ave 0.824
Test execution time: sum 8920 ms, max 149 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 13:03:09 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-08-06 13:04:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 28 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 26, redundant 12
Fitness: max 0.833(102), min 0.667(2), ave 0.83
Test execution time: sum 8628 ms, max 154 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 13:04:11 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-08-06 13:05:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 29 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 25, redundant 12
Fitness: max 0.833(102), min 0.167(1), ave 0.824
Test execution time: sum 8629 ms, max 141 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 13:05:12 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-08-06 13:06:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 33 seconds
Variants: generated 200, build-succeeded 121, build-failed 53, syntax-invalid 19, redundant 7
Fitness: max 0.833(120), min 0.667(1), ave 0.832
Test execution time: sum 10191 ms, max 244 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:06:16 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-08-06 13:07:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 36 seconds
Variants: generated 200, build-succeeded 117, build-failed 59, syntax-invalid 20, redundant 4
Fitness: max 0.833(115), min 0.167(1), ave 0.826
Test execution time: sum 9803 ms, max 195 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 13:07:19 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-08-06 13:08:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 41 seconds
Variants: generated 200, build-succeeded 124, build-failed 52, syntax-invalid 16, redundant 8
Fitness: max 0.833(124), min 0.833(124), ave 0.833
Test execution time: sum 10337 ms, max 156 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 13:08:24 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-08-06 13:09:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 45 seconds
Variants: generated 200, build-succeeded 116, build-failed 59, syntax-invalid 17, redundant 8
Fitness: max 0.833(114), min 0.667(2), ave 0.83
Test execution time: sum 9560 ms, max 159 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 13:09:28 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-08-06 13:10:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 46 minutes 47 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 21, redundant 8
Fitness: max 0.833(114), min 0.333(1), ave 0.829
Test execution time: sum 9516 ms, max 159 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 13:10:30 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-08-06 13:11:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 47 minutes 48 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 28, redundant 7
Fitness: max 0.833(108), min 0.667(1), ave 0.832
Test execution time: sum 9011 ms, max 173 ms, min 74 ms
----------------------------------------------------------------

2023-08-06 13:11:32 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-08-06 13:12:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 49 seconds
Variants: generated 200, build-succeeded 106, build-failed 55, syntax-invalid 28, redundant 11
Fitness: max 0.833(106), min 0.833(106), ave 0.833
Test execution time: sum 8976 ms, max 152 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 13:12:32 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-08-06 13:13:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 52 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 21, redundant 14
Fitness: max 0.833(105), min 0.667(2), ave 0.83
Test execution time: sum 9051 ms, max 145 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 13:13:35 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-08-06 13:14:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 56 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 22, redundant 7
Fitness: max 0.833(114), min 0.167(1), ave 0.828
Test execution time: sum 9652 ms, max 153 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 13:14:39 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-08-06 13:15:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 58 seconds
Variants: generated 200, build-succeeded 106, build-failed 53, syntax-invalid 28, redundant 13
Fitness: max 0.833(104), min 0.667(2), ave 0.83
Test execution time: sum 8962 ms, max 230 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 13:15:41 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-08-06 13:16:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 53 minutes 1 seconds
Variants: generated 200, build-succeeded 111, build-failed 56, syntax-invalid 25, redundant 8
Fitness: max 0.833(107), min 0.667(4), ave 0.827
Test execution time: sum 9212 ms, max 170 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:16:44 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-08-06 13:17:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 54 minutes 0 seconds
Variants: generated 200, build-succeeded 99, build-failed 54, syntax-invalid 36, redundant 11
Fitness: max 0.833(97), min 0.667(2), ave 0.83
Test execution time: sum 8330 ms, max 150 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:17:43 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-08-06 13:18:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 1 seconds
Variants: generated 200, build-succeeded 106, build-failed 60, syntax-invalid 27, redundant 7
Fitness: max 0.833(103), min 0.667(3), ave 0.829
Test execution time: sum 8830 ms, max 162 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 13:18:45 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-08-06 13:19:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 56 minutes 7 seconds
Variants: generated 200, build-succeeded 116, build-failed 56, syntax-invalid 22, redundant 6
Fitness: max 0.833(114), min 0.667(2), ave 0.83
Test execution time: sum 10016 ms, max 156 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:19:50 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-08-06 13:20:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 57 minutes 12 seconds
Variants: generated 200, build-succeeded 111, build-failed 57, syntax-invalid 20, redundant 12
Fitness: max 0.833(107), min 0.667(4), ave 0.827
Test execution time: sum 9379 ms, max 197 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:20:55 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-08-06 13:21:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 58 minutes 12 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 33, redundant 5
Fitness: max 0.833(104), min 0.833(104), ave 0.833
Test execution time: sum 8798 ms, max 143 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:21:55 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-08-06 13:22:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 59 minutes 15 seconds
Variants: generated 200, build-succeeded 108, build-failed 58, syntax-invalid 26, redundant 8
Fitness: max 0.833(107), min 0.667(1), ave 0.832
Test execution time: sum 9136 ms, max 162 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:22:58 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-08-06 13:24:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 18 seconds
Variants: generated 200, build-succeeded 111, build-failed 56, syntax-invalid 27, redundant 6
Fitness: max 0.833(110), min 0.167(1), ave 0.827
Test execution time: sum 9362 ms, max 150 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:24:02 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-08-06 13:25:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 minutes 23 seconds
Variants: generated 200, build-succeeded 107, build-failed 62, syntax-invalid 26, redundant 5
Fitness: max 0.833(104), min 0.167(1), ave 0.824
Test execution time: sum 9238 ms, max 215 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:25:06 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-08-06 13:26:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 2 minutes 25 seconds
Variants: generated 200, build-succeeded 107, build-failed 49, syntax-invalid 33, redundant 11
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 9129 ms, max 145 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:26:08 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-08-06 13:27:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 3 minutes 27 seconds
Variants: generated 200, build-succeeded 104, build-failed 55, syntax-invalid 31, redundant 10
Fitness: max 0.833(100), min 0.167(2), ave 0.817
Test execution time: sum 8725 ms, max 154 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 13:27:10 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-08-06 13:28:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 4 minutes 32 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 25, redundant 11
Fitness: max 0.833(103), min 0.167(2), ave 0.819
Test execution time: sum 8979 ms, max 156 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 13:28:15 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-08-06 13:29:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 5 minutes 35 seconds
Variants: generated 200, build-succeeded 107, build-failed 54, syntax-invalid 30, redundant 9
Fitness: max 0.833(104), min 0(1), ave 0.822
Test execution time: sum 9214 ms, max 208 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 13:29:18 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-08-06 13:30:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 6 minutes 37 seconds
Variants: generated 200, build-succeeded 97, build-failed 66, syntax-invalid 29, redundant 8
Fitness: max 0.833(94), min 0.167(2), ave 0.818
Test execution time: sum 8177 ms, max 162 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 13:30:21 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-08-06 13:31:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 7 minutes 45 seconds
Variants: generated 200, build-succeeded 115, build-failed 60, syntax-invalid 17, redundant 8
Fitness: max 0.833(113), min 0.667(2), ave 0.83
Test execution time: sum 9789 ms, max 180 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:31:28 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-08-06 13:32:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 8 minutes 51 seconds
Variants: generated 200, build-succeeded 109, build-failed 60, syntax-invalid 22, redundant 9
Fitness: max 0.833(108), min 0.667(1), ave 0.832
Test execution time: sum 9185 ms, max 169 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 13:32:34 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-08-06 13:33:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 9 minutes 56 seconds
Variants: generated 200, build-succeeded 106, build-failed 58, syntax-invalid 28, redundant 8
Fitness: max 0.833(105), min 0.667(1), ave 0.832
Test execution time: sum 9057 ms, max 152 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:33:39 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-08-06 13:34:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 11 minutes 2 seconds
Variants: generated 200, build-succeeded 111, build-failed 58, syntax-invalid 25, redundant 6
Fitness: max 0.833(110), min 0.667(1), ave 0.832
Test execution time: sum 9440 ms, max 153 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:34:45 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-08-06 13:35:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 12 minutes 7 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 28, redundant 9
Fitness: max 0.833(104), min 0.667(1), ave 0.832
Test execution time: sum 8950 ms, max 161 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:35:50 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-08-06 13:36:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 13 minutes 10 seconds
Variants: generated 200, build-succeeded 99, build-failed 61, syntax-invalid 35, redundant 5
Fitness: max 0.833(97), min 0(1), ave 0.823
Test execution time: sum 8488 ms, max 160 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:36:53 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-08-06 13:37:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 14 minutes 14 seconds
Variants: generated 200, build-succeeded 114, build-failed 40, syntax-invalid 33, redundant 13
Fitness: max 0.833(112), min 0.167(1), ave 0.826
Test execution time: sum 9664 ms, max 156 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 13:37:57 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-08-06 13:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 15 minutes 19 seconds
Variants: generated 200, build-succeeded 106, build-failed 59, syntax-invalid 28, redundant 7
Fitness: max 0.833(104), min 0.167(1), ave 0.824
Test execution time: sum 9143 ms, max 144 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:39:03 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-08-06 13:40:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 16 minutes 28 seconds
Variants: generated 200, build-succeeded 112, build-failed 57, syntax-invalid 24, redundant 7
Fitness: max 0.833(111), min 0.667(1), ave 0.832
Test execution time: sum 9725 ms, max 212 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 13:40:11 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-08-06 13:41:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 33 seconds
Variants: generated 200, build-succeeded 104, build-failed 60, syntax-invalid 32, redundant 4
Fitness: max 0.833(103), min 0.667(1), ave 0.832
Test execution time: sum 8879 ms, max 168 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 13:41:16 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-08-06 13:42:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 18 minutes 38 seconds
Variants: generated 200, build-succeeded 104, build-failed 61, syntax-invalid 26, redundant 9
Fitness: max 0.833(102), min 0.167(1), ave 0.825
Test execution time: sum 8827 ms, max 154 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:42:22 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-08-06 13:43:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 44 seconds
Variants: generated 200, build-succeeded 106, build-failed 59, syntax-invalid 29, redundant 6
Fitness: max 0.833(102), min 0.167(1), ave 0.822
Test execution time: sum 9236 ms, max 143 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 13:43:27 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-08-06 13:44:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 46 seconds
Variants: generated 200, build-succeeded 90, build-failed 61, syntax-invalid 41, redundant 8
Fitness: max 0.833(86), min 0.167(2), ave 0.813
Test execution time: sum 7750 ms, max 156 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 13:44:29 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-08-06 13:45:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 21 minutes 50 seconds
Variants: generated 200, build-succeeded 98, build-failed 57, syntax-invalid 35, redundant 10
Fitness: max 0.833(97), min 0.167(1), ave 0.827
Test execution time: sum 8437 ms, max 149 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:45:33 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-08-06 13:46:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 22 minutes 55 seconds
Variants: generated 200, build-succeeded 97, build-failed 60, syntax-invalid 33, redundant 10
Fitness: max 0.833(96), min 0.667(1), ave 0.832
Test execution time: sum 8390 ms, max 163 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 13:46:38 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-08-06 13:47:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 24 minutes 1 seconds
Variants: generated 200, build-succeeded 102, build-failed 62, syntax-invalid 30, redundant 6
Fitness: max 0.833(102), min 0.833(102), ave 0.833
Test execution time: sum 8921 ms, max 155 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:47:44 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-08-06 13:48:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 25 minutes 9 seconds
Variants: generated 200, build-succeeded 115, build-failed 45, syntax-invalid 31, redundant 9
Fitness: max 0.833(112), min 0.167(2), ave 0.82
Test execution time: sum 9975 ms, max 161 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 13:48:52 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-08-06 13:49:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 15 seconds
Variants: generated 200, build-succeeded 103, build-failed 59, syntax-invalid 31, redundant 7
Fitness: max 0.833(102), min 0.667(1), ave 0.832
Test execution time: sum 8763 ms, max 146 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 13:49:58 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-08-06 13:51:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 27 minutes 18 seconds
Variants: generated 200, build-succeeded 92, build-failed 58, syntax-invalid 42, redundant 8
Fitness: max 0.833(91), min 0.667(1), ave 0.832
Test execution time: sum 7971 ms, max 153 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 13:51:01 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-08-06 13:52:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 28 minutes 22 seconds
Variants: generated 200, build-succeeded 104, build-failed 48, syntax-invalid 37, redundant 11
Fitness: max 0.833(99), min 0.167(2), ave 0.816
Test execution time: sum 9038 ms, max 150 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 13:52:05 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-08-06 13:53:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 29 minutes 26 seconds
Variants: generated 200, build-succeeded 92, build-failed 61, syntax-invalid 36, redundant 11
Fitness: max 0.833(90), min 0.167(1), ave 0.824
Test execution time: sum 7815 ms, max 142 ms, min 67 ms
----------------------------------------------------------------

2023-08-06 13:53:09 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-08-06 13:54:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 30 minutes 33 seconds
Variants: generated 200, build-succeeded 112, build-failed 51, syntax-invalid 29, redundant 8
Fitness: max 0.833(110), min 0.167(1), ave 0.826
Test execution time: sum 9493 ms, max 156 ms, min 69 ms
----------------------------------------------------------------

2023-08-06 13:54:16 [main] [INFO]  KGenProgMain - entered the era of 428th generation.
2023-08-06 13:55:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 31 minutes 42 seconds
Variants: generated 200, build-succeeded 103, build-failed 63, syntax-invalid 27, redundant 7
Fitness: max 0.833(103), min 0.833(103), ave 0.833
Test execution time: sum 9015 ms, max 163 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:55:25 [main] [INFO]  KGenProgMain - entered the era of 429th generation.
2023-08-06 13:56:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 32 minutes 47 seconds
Variants: generated 200, build-succeeded 102, build-failed 60, syntax-invalid 32, redundant 6
Fitness: max 0.833(101), min 0.667(1), ave 0.832
Test execution time: sum 8771 ms, max 146 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:56:30 [main] [INFO]  KGenProgMain - entered the era of 430th generation.
2023-08-06 13:57:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 33 minutes 54 seconds
Variants: generated 200, build-succeeded 98, build-failed 60, syntax-invalid 32, redundant 10
Fitness: max 0.833(97), min 0.667(1), ave 0.832
Test execution time: sum 8473 ms, max 229 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:57:37 [main] [INFO]  KGenProgMain - entered the era of 431st generation.
2023-08-06 13:58:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 34 minutes 59 seconds
Variants: generated 200, build-succeeded 98, build-failed 62, syntax-invalid 36, redundant 4
Fitness: max 0.833(95), min 0.167(1), ave 0.821
Test execution time: sum 8405 ms, max 142 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 13:58:42 [main] [INFO]  KGenProgMain - entered the era of 432nd generation.
2023-08-06 13:59:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 36 minutes 3 seconds
Variants: generated 200, build-succeeded 96, build-failed 55, syntax-invalid 42, redundant 7
Fitness: max 0.833(94), min 0.167(1), ave 0.825
Test execution time: sum 8230 ms, max 168 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 13:59:47 [main] [INFO]  KGenProgMain - entered the era of 433rd generation.
2023-08-06 14:00:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 37 minutes 11 seconds
Variants: generated 200, build-succeeded 99, build-failed 65, syntax-invalid 28, redundant 8
Fitness: max 0.833(96), min 0.333(1), ave 0.825
Test execution time: sum 8428 ms, max 141 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 14:00:55 [main] [INFO]  KGenProgMain - entered the era of 434th generation.
2023-08-06 14:02:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 38 minutes 17 seconds
Variants: generated 200, build-succeeded 95, build-failed 59, syntax-invalid 37, redundant 9
Fitness: max 0.833(93), min 0.667(2), ave 0.83
Test execution time: sum 8294 ms, max 152 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 14:02:00 [main] [INFO]  KGenProgMain - entered the era of 435th generation.
2023-08-06 14:03:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 39 minutes 18 seconds
Variants: generated 200, build-succeeded 79, build-failed 64, syntax-invalid 52, redundant 5
Fitness: max 0.833(77), min 0.167(1), ave 0.823
Test execution time: sum 6796 ms, max 144 ms, min 68 ms
----------------------------------------------------------------

2023-08-06 14:03:01 [main] [INFO]  KGenProgMain - entered the era of 436th generation.
2023-08-06 14:04:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 40 minutes 27 seconds
Variants: generated 200, build-succeeded 104, build-failed 55, syntax-invalid 30, redundant 11
Fitness: max 0.833(101), min 0.667(3), ave 0.829
Test execution time: sum 9016 ms, max 142 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 14:04:10 [main] [INFO]  KGenProgMain - entered the era of 437th generation.
2023-08-06 14:05:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 41 minutes 36 seconds
Variants: generated 200, build-succeeded 95, build-failed 61, syntax-invalid 32, redundant 12
Fitness: max 0.833(93), min 0.667(2), ave 0.83
Test execution time: sum 8118 ms, max 140 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 14:05:19 [main] [INFO]  KGenProgMain - entered the era of 438th generation.
2023-08-06 14:06:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 42 minutes 46 seconds
Variants: generated 200, build-succeeded 104, build-failed 60, syntax-invalid 28, redundant 8
Fitness: max 0.833(104), min 0.833(104), ave 0.833
Test execution time: sum 9094 ms, max 161 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 14:06:30 [main] [INFO]  KGenProgMain - entered the era of 439th generation.
2023-08-06 14:07:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 43 minutes 54 seconds
Variants: generated 200, build-succeeded 97, build-failed 63, syntax-invalid 35, redundant 5
Fitness: max 0.833(94), min 0.167(2), ave 0.818
Test execution time: sum 8498 ms, max 178 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 14:07:37 [main] [INFO]  KGenProgMain - entered the era of 440th generation.
2023-08-06 14:08:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 44 minutes 59 seconds
Variants: generated 200, build-succeeded 93, build-failed 58, syntax-invalid 42, redundant 7
Fitness: max 0.833(91), min 0.167(1), ave 0.824
Test execution time: sum 8213 ms, max 165 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 14:08:43 [main] [INFO]  KGenProgMain - entered the era of 441st generation.
2023-08-06 14:09:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 46 minutes 6 seconds
Variants: generated 200, build-succeeded 92, build-failed 64, syntax-invalid 38, redundant 6
Fitness: max 0.833(90), min 0.667(2), ave 0.83
Test execution time: sum 7992 ms, max 157 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 14:09:49 [main] [INFO]  KGenProgMain - entered the era of 442nd generation.
2023-08-06 14:10:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 47 minutes 13 seconds
Variants: generated 200, build-succeeded 96, build-failed 57, syntax-invalid 36, redundant 11
Fitness: max 0.833(93), min 0.167(1), ave 0.823
Test execution time: sum 8355 ms, max 148 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:10:57 [main] [INFO]  KGenProgMain - entered the era of 443rd generation.
2023-08-06 14:12:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 48 minutes 19 seconds
Variants: generated 200, build-succeeded 90, build-failed 61, syntax-invalid 37, redundant 12
Fitness: max 1(1), min 0.167(1), ave 0.824
Test execution time: sum 7880 ms, max 150 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 14:12:02 [main] [INFO]  KGenProgMain - entered the era of 444th generation.
2023-08-06 14:13:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 49 minutes 31 seconds
Variants: generated 200, build-succeeded 110, build-failed 55, syntax-invalid 27, redundant 8
Fitness: max 0.833(102), min 0.333(1), ave 0.815
Test execution time: sum 9704 ms, max 167 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 14:13:14 [main] [INFO]  KGenProgMain - entered the era of 445th generation.
2023-08-06 14:14:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 50 minutes 40 seconds
Variants: generated 200, build-succeeded 97, build-failed 62, syntax-invalid 26, redundant 15
Fitness: max 0.833(97), min 0.833(97), ave 0.833
Test execution time: sum 8318 ms, max 149 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 14:14:23 [main] [INFO]  KGenProgMain - entered the era of 446th generation.
2023-08-06 14:15:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 51 minutes 48 seconds
Variants: generated 200, build-succeeded 98, build-failed 65, syntax-invalid 28, redundant 9
Fitness: max 0.833(94), min 0.167(1), ave 0.821
Test execution time: sum 8725 ms, max 232 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:15:32 [main] [INFO]  KGenProgMain - entered the era of 447th generation.
2023-08-06 14:16:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 0 seconds
Variants: generated 200, build-succeeded 104, build-failed 63, syntax-invalid 26, redundant 7
Fitness: max 0.833(104), min 0.833(104), ave 0.833
Test execution time: sum 9288 ms, max 164 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:16:43 [main] [INFO]  KGenProgMain - entered the era of 448th generation.
2023-08-06 14:17:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 54 minutes 9 seconds
Variants: generated 200, build-succeeded 99, build-failed 66, syntax-invalid 32, redundant 3
Fitness: max 0.833(97), min 0.667(2), ave 0.83
Test execution time: sum 8709 ms, max 155 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 14:17:52 [main] [INFO]  KGenProgMain - entered the era of 449th generation.
2023-08-06 14:19:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 19 seconds
Variants: generated 200, build-succeeded 101, build-failed 63, syntax-invalid 28, redundant 8
Fitness: max 0.833(98), min 0.167(1), ave 0.823
Test execution time: sum 8936 ms, max 156 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 14:19:03 [main] [INFO]  KGenProgMain - entered the era of 450th generation.
2023-08-06 14:20:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 56 minutes 33 seconds
Variants: generated 200, build-succeeded 118, build-failed 45, syntax-invalid 22, redundant 15
Fitness: max 0.833(115), min 0.667(3), ave 0.829
Test execution time: sum 10567 ms, max 254 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 14:20:16 [main] [INFO]  KGenProgMain - entered the era of 451st generation.
2023-08-06 14:21:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 57 minutes 45 seconds
Variants: generated 200, build-succeeded 109, build-failed 54, syntax-invalid 25, redundant 12
Fitness: max 0.833(107), min 0.167(1), ave 0.826
Test execution time: sum 9624 ms, max 153 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 14:21:28 [main] [INFO]  KGenProgMain - entered the era of 452nd generation.
2023-08-06 14:22:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 58 minutes 58 seconds
Variants: generated 200, build-succeeded 108, build-failed 62, syntax-invalid 24, redundant 6
Fitness: max 0.833(108), min 0.833(108), ave 0.833
Test execution time: sum 9693 ms, max 161 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 14:22:41 [main] [INFO]  KGenProgMain - entered the era of 453rd generation.
2023-08-06 14:38:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 10 seconds
Variants: generated 200, build-succeeded 109, build-failed 61, syntax-invalid 24, redundant 6
Fitness: max 0.833(106), min 0.167(2), ave 0.82
Test execution time: sum 909726 ms, max 900146 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:38:54 [main] [INFO]  KGenProgMain - entered the era of 454th generation.
2023-08-06 14:40:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 16 minutes 28 seconds
Variants: generated 200, build-succeeded 121, build-failed 59, syntax-invalid 14, redundant 6
Fitness: max 0.833(120), min 0.333(1), ave 0.829
Test execution time: sum 10881 ms, max 244 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:40:11 [main] [INFO]  KGenProgMain - entered the era of 455th generation.
2023-08-06 14:41:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 17 minutes 42 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 23, redundant 12
Fitness: max 0.833(107), min 0(1), ave 0.824
Test execution time: sum 9570 ms, max 144 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:41:25 [main] [INFO]  KGenProgMain - entered the era of 456th generation.
2023-08-06 14:42:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 18 minutes 57 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 21, redundant 8
Fitness: max 0.833(111), min 0.667(3), ave 0.829
Test execution time: sum 10219 ms, max 161 ms, min 73 ms
----------------------------------------------------------------

2023-08-06 14:42:40 [main] [INFO]  KGenProgMain - entered the era of 457th generation.
2023-08-06 14:43:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 20 minutes 10 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 24, redundant 9
Fitness: max 0.833(110), min 0.833(110), ave 0.833
Test execution time: sum 9659 ms, max 221 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:43:53 [main] [INFO]  KGenProgMain - entered the era of 458th generation.
2023-08-06 14:45:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 21 minutes 23 seconds
Variants: generated 200, build-succeeded 113, build-failed 54, syntax-invalid 28, redundant 5
Fitness: max 0.833(110), min 0.167(1), ave 0.824
Test execution time: sum 10160 ms, max 155 ms, min 70 ms
----------------------------------------------------------------

2023-08-06 14:45:06 [main] [INFO]  KGenProgMain - entered the era of 459th generation.
2023-08-06 14:46:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 22 minutes 35 seconds
Variants: generated 200, build-succeeded 115, build-failed 48, syntax-invalid 28, redundant 9
Fitness: max 0.833(115), min 0.833(115), ave 0.833
Test execution time: sum 10172 ms, max 177 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:46:19 [main] [INFO]  KGenProgMain - entered the era of 460th generation.
2023-08-06 14:47:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 52 seconds
Variants: generated 200, build-succeeded 114, build-failed 59, syntax-invalid 16, redundant 11
Fitness: max 0.833(114), min 0.833(114), ave 0.833
Test execution time: sum 10049 ms, max 170 ms, min 78 ms
----------------------------------------------------------------

2023-08-06 14:47:35 [main] [INFO]  KGenProgMain - entered the era of 461st generation.
2023-08-06 14:48:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 8 seconds
Variants: generated 200, build-succeeded 119, build-failed 52, syntax-invalid 18, redundant 11
Fitness: max 0.833(115), min 0.667(4), ave 0.828
Test execution time: sum 10545 ms, max 174 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:48:51 [main] [INFO]  KGenProgMain - entered the era of 462nd generation.
2023-08-06 14:50:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 26 minutes 25 seconds
Variants: generated 200, build-succeeded 117, build-failed 55, syntax-invalid 19, redundant 9
Fitness: max 0.833(114), min 0.167(1), ave 0.825
Test execution time: sum 10475 ms, max 165 ms, min 71 ms
----------------------------------------------------------------

2023-08-06 14:50:08 [main] [INFO]  KGenProgMain - entered the era of 463rd generation.
2023-08-06 14:51:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 39 seconds
Variants: generated 200, build-succeeded 114, build-failed 51, syntax-invalid 23, redundant 12
Fitness: max 0.833(113), min 0.667(1), ave 0.832
Test execution time: sum 10001 ms, max 146 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:51:22 [main] [INFO]  KGenProgMain - entered the era of 464th generation.
2023-08-06 14:52:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 58 seconds
Variants: generated 200, build-succeeded 118, build-failed 59, syntax-invalid 14, redundant 9
Fitness: max 0.833(115), min 0.167(1), ave 0.825
Test execution time: sum 10796 ms, max 195 ms, min 76 ms
----------------------------------------------------------------

2023-08-06 14:52:41 [main] [INFO]  KGenProgMain - entered the era of 465th generation.
2023-08-06 14:53:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 30 minutes 14 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 18, redundant 15
Fitness: max 0.833(105), min 0.667(1), ave 0.832
Test execution time: sum 9476 ms, max 175 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:53:57 [main] [INFO]  KGenProgMain - entered the era of 466th generation.
2023-08-06 14:55:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 31 minutes 34 seconds
Variants: generated 200, build-succeeded 121, build-failed 59, syntax-invalid 14, redundant 6
Fitness: max 0.833(119), min 0.667(2), ave 0.831
Test execution time: sum 11004 ms, max 158 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 14:55:17 [main] [INFO]  KGenProgMain - entered the era of 467th generation.
2023-08-06 14:56:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 32 minutes 55 seconds
Variants: generated 200, build-succeeded 121, build-failed 58, syntax-invalid 12, redundant 9
Fitness: max 0.833(120), min 0.667(1), ave 0.832
Test execution time: sum 10959 ms, max 159 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 14:56:38 [main] [INFO]  KGenProgMain - entered the era of 468th generation.
2023-08-06 14:57:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 34 minutes 15 seconds
Variants: generated 200, build-succeeded 120, build-failed 58, syntax-invalid 14, redundant 8
Fitness: max 0.833(117), min 0.667(3), ave 0.829
Test execution time: sum 10866 ms, max 160 ms, min 79 ms
----------------------------------------------------------------

2023-08-06 14:57:58 [main] [INFO]  KGenProgMain - entered the era of 469th generation.
2023-08-06 14:59:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 35 minutes 31 seconds
Variants: generated 200, build-succeeded 109, build-failed 64, syntax-invalid 22, redundant 5
Fitness: max 0.833(107), min 0.667(2), ave 0.83
Test execution time: sum 9877 ms, max 230 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 14:59:15 [main] [INFO]  KGenProgMain - entered the era of 470th generation.
2023-08-06 15:00:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 36 minutes 49 seconds
Variants: generated 200, build-succeeded 109, build-failed 64, syntax-invalid 19, redundant 8
Fitness: max 1(1), min 0.667(2), ave 0.832
Test execution time: sum 9854 ms, max 150 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 15:00:33 [main] [INFO]  KGenProgMain - entered the era of 471st generation.
2023-08-06 15:01:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 38 minutes 11 seconds
Variants: generated 200, build-succeeded 120, build-failed 56, syntax-invalid 14, redundant 10
Fitness: max 0.833(119), min 0.667(1), ave 0.832
Test execution time: sum 11065 ms, max 225 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 15:01:54 [main] [INFO]  KGenProgMain - entered the era of 472nd generation.
2023-08-06 15:03:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 30 seconds
Variants: generated 200, build-succeeded 123, build-failed 52, syntax-invalid 15, redundant 10
Fitness: max 0.833(122), min 0.667(1), ave 0.832
Test execution time: sum 11258 ms, max 170 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 15:03:14 [main] [INFO]  KGenProgMain - entered the era of 473rd generation.
2023-08-06 15:04:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 50 seconds
Variants: generated 200, build-succeeded 117, build-failed 53, syntax-invalid 18, redundant 12
Fitness: max 0.833(117), min 0.833(117), ave 0.833
Test execution time: sum 10656 ms, max 159 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 15:04:33 [main] [INFO]  KGenProgMain - entered the era of 474th generation.
2023-08-06 15:05:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 9 seconds
Variants: generated 200, build-succeeded 123, build-failed 51, syntax-invalid 16, redundant 10
Fitness: max 0.833(121), min 0.667(2), ave 0.831
Test execution time: sum 11067 ms, max 169 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 15:05:52 [main] [INFO]  KGenProgMain - entered the era of 475th generation.
2023-08-06 15:07:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 43 minutes 32 seconds
Variants: generated 200, build-succeeded 123, build-failed 63, syntax-invalid 11, redundant 3
Fitness: max 0.833(122), min 0.667(1), ave 0.832
Test execution time: sum 11250 ms, max 180 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 15:07:15 [main] [INFO]  KGenProgMain - entered the era of 476th generation.
2023-08-06 15:08:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 44 minutes 49 seconds
Variants: generated 200, build-succeeded 105, build-failed 67, syntax-invalid 21, redundant 7
Fitness: max 0.833(103), min 0.667(2), ave 0.83
Test execution time: sum 9628 ms, max 182 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 15:08:33 [main] [INFO]  KGenProgMain - entered the era of 477th generation.
2023-08-06 15:09:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 46 minutes 10 seconds
Variants: generated 200, build-succeeded 116, build-failed 58, syntax-invalid 18, redundant 8
Fitness: max 0.833(115), min 0.667(1), ave 0.832
Test execution time: sum 10591 ms, max 179 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 15:09:53 [main] [INFO]  KGenProgMain - entered the era of 478th generation.
2023-08-06 15:11:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 47 minutes 30 seconds
Variants: generated 200, build-succeeded 109, build-failed 66, syntax-invalid 18, redundant 7
Fitness: max 0.833(107), min 0.667(2), ave 0.83
Test execution time: sum 9971 ms, max 170 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 15:11:14 [main] [INFO]  KGenProgMain - entered the era of 479th generation.
2023-08-06 15:12:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 48 minutes 51 seconds
Variants: generated 200, build-succeeded 120, build-failed 54, syntax-invalid 18, redundant 8
Fitness: max 0.833(119), min 0.667(1), ave 0.832
Test execution time: sum 10876 ms, max 173 ms, min 80 ms
----------------------------------------------------------------

2023-08-06 15:12:34 [main] [INFO]  KGenProgMain - entered the era of 480th generation.
2023-08-06 15:14:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 50 minutes 17 seconds
Variants: generated 200, build-succeeded 133, build-failed 57, syntax-invalid 8, redundant 2
Fitness: max 0.833(129), min 0.167(1), ave 0.825
Test execution time: sum 12200 ms, max 164 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 15:14:00 [main] [INFO]  KGenProgMain - entered the era of 481st generation.
2023-08-06 15:15:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 51 minutes 38 seconds
Variants: generated 200, build-succeeded 117, build-failed 58, syntax-invalid 20, redundant 5
Fitness: max 0.833(115), min 0.167(1), ave 0.826
Test execution time: sum 10608 ms, max 164 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 15:15:21 [main] [INFO]  KGenProgMain - entered the era of 482nd generation.
2023-08-06 15:16:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 52 minutes 53 seconds
Variants: generated 200, build-succeeded 100, build-failed 61, syntax-invalid 28, redundant 11
Fitness: max 0.833(98), min 0.167(1), ave 0.825
Test execution time: sum 9040 ms, max 162 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 15:16:36 [main] [INFO]  KGenProgMain - entered the era of 483rd generation.
2023-08-06 15:17:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 54 minutes 12 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 23, redundant 7
Fitness: max 0.833(111), min 0.833(111), ave 0.833
Test execution time: sum 10209 ms, max 160 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 15:17:56 [main] [INFO]  KGenProgMain - entered the era of 484th generation.
2023-08-06 15:19:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 34 seconds
Variants: generated 200, build-succeeded 115, build-failed 55, syntax-invalid 22, redundant 8
Fitness: max 0.833(111), min 0.167(1), ave 0.823
Test execution time: sum 10532 ms, max 172 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 15:19:17 [main] [INFO]  KGenProgMain - entered the era of 485th generation.
2023-08-06 15:20:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 56 minutes 54 seconds
Variants: generated 200, build-succeeded 109, build-failed 64, syntax-invalid 23, redundant 4
Fitness: max 0.833(107), min 0.167(1), ave 0.826
Test execution time: sum 10039 ms, max 156 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 15:20:37 [main] [INFO]  KGenProgMain - entered the era of 486th generation.
2023-08-06 15:22:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 58 minutes 16 seconds
Variants: generated 200, build-succeeded 113, build-failed 57, syntax-invalid 23, redundant 7
Fitness: max 0.833(111), min 0.167(1), ave 0.826
Test execution time: sum 10676 ms, max 195 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 15:22:00 [main] [INFO]  KGenProgMain - entered the era of 487th generation.
2023-08-06 15:23:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 59 minutes 37 seconds
Variants: generated 200, build-succeeded 104, build-failed 67, syntax-invalid 23, redundant 6
Fitness: max 0.833(102), min 0.667(2), ave 0.83
Test execution time: sum 9706 ms, max 178 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 15:23:20 [main] [INFO]  KGenProgMain - entered the era of 488th generation.
2023-08-06 15:24:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 59 seconds
Variants: generated 200, build-succeeded 118, build-failed 49, syntax-invalid 18, redundant 15
Fitness: max 0.833(116), min 0.167(2), ave 0.822
Test execution time: sum 10916 ms, max 164 ms, min 72 ms
----------------------------------------------------------------

2023-08-06 15:24:42 [main] [INFO]  KGenProgMain - entered the era of 489th generation.
2023-08-06 15:26:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 2 minutes 21 seconds
Variants: generated 200, build-succeeded 121, build-failed 55, syntax-invalid 18, redundant 6
Fitness: max 0.833(121), min 0.833(121), ave 0.833
Test execution time: sum 11297 ms, max 166 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 15:26:04 [main] [INFO]  KGenProgMain - entered the era of 490th generation.
2023-08-06 15:27:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 42 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 25, redundant 8
Fitness: max 0.833(109), min 0.667(1), ave 0.832
Test execution time: sum 10190 ms, max 175 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 15:27:25 [main] [INFO]  KGenProgMain - entered the era of 491st generation.
2023-08-06 15:28:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 59 seconds
Variants: generated 200, build-succeeded 105, build-failed 55, syntax-invalid 28, redundant 12
Fitness: max 0.833(103), min 0.167(1), ave 0.825
Test execution time: sum 9671 ms, max 159 ms, min 75 ms
----------------------------------------------------------------

2023-08-06 15:28:43 [main] [INFO]  KGenProgMain - entered the era of 492nd generation.
2023-08-06 15:29:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 15 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 32, redundant 8
Fitness: max 0.833(99), min 0.667(2), ave 0.83
Test execution time: sum 9312 ms, max 163 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 15:29:59 [main] [INFO]  KGenProgMain - entered the era of 493rd generation.
2023-08-06 15:31:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 37 seconds
Variants: generated 200, build-succeeded 108, build-failed 63, syntax-invalid 22, redundant 7
Fitness: max 0.833(105), min 0.167(1), ave 0.824
Test execution time: sum 10083 ms, max 162 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 15:31:20 [main] [INFO]  KGenProgMain - entered the era of 494th generation.
2023-08-06 15:32:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 59 seconds
Variants: generated 200, build-succeeded 111, build-failed 64, syntax-invalid 20, redundant 5
Fitness: max 0.833(108), min 0.667(3), ave 0.829
Test execution time: sum 10419 ms, max 162 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 15:32:42 [main] [INFO]  KGenProgMain - entered the era of 495th generation.
2023-08-06 15:34:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 20 seconds
Variants: generated 200, build-succeeded 111, build-failed 55, syntax-invalid 22, redundant 12
Fitness: max 0.833(111), min 0.833(111), ave 0.833
Test execution time: sum 10307 ms, max 160 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 15:34:04 [main] [INFO]  KGenProgMain - entered the era of 496th generation.
2023-08-06 15:35:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 11 minutes 45 seconds
Variants: generated 200, build-succeeded 123, build-failed 53, syntax-invalid 16, redundant 8
Fitness: max 0.833(122), min 0.167(1), ave 0.828
Test execution time: sum 11672 ms, max 179 ms, min 77 ms
----------------------------------------------------------------

2023-08-06 15:35:29 [main] [INFO]  KGenProgMain - entered the era of 497th generation.
2023-08-06 15:36:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 4 seconds
Variants: generated 200, build-succeeded 110, build-failed 51, syntax-invalid 28, redundant 11
Fitness: max 0.833(108), min 0.667(2), ave 0.83
Test execution time: sum 10153 ms, max 177 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 15:36:48 [main] [INFO]  KGenProgMain - entered the era of 498th generation.
2023-08-06 15:38:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 25 seconds
Variants: generated 200, build-succeeded 115, build-failed 53, syntax-invalid 23, redundant 9
Fitness: max 0.833(112), min 0.667(3), ave 0.829
Test execution time: sum 10598 ms, max 160 ms, min 81 ms
----------------------------------------------------------------

2023-08-06 15:38:09 [main] [INFO]  KGenProgMain - entered the era of 499th generation.
2023-08-06 15:39:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 15 minutes 48 seconds
Variants: generated 200, build-succeeded 115, build-failed 49, syntax-invalid 22, redundant 14
Fitness: max 0.833(115), min 0.833(115), ave 0.833
Test execution time: sum 10800 ms, max 168 ms, min 83 ms
----------------------------------------------------------------

2023-08-06 15:39:32 [main] [INFO]  KGenProgMain - entered the era of 500th generation.
2023-08-06 15:40:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 17 minutes 8 seconds
Variants: generated 200, build-succeeded 111, build-failed 53, syntax-invalid 27, redundant 9
Fitness: max 0.833(111), min 0.833(111), ave 0.833
Test execution time: sum 10257 ms, max 165 ms, min 82 ms
----------------------------------------------------------------

2023-08-06 15:40:51 [main] [INFO]  KGenProgMain - GA stopped
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.defaultFunctionValueAccuracy = 1.0e-15;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,6 +181,7 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v435)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v435)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v435)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:54 [main] [INFO]  PatchLogExporter - patch (v435)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -235,6 +233,7 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				final double denominator;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v838)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v838)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v838)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v838)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +179,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+                ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1248)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1248)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1248)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1248)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1248)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +177,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1458)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1458)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1458)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1458)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1670)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1670)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1670)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1670)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,12 +60,10 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
@@ -80,7 +78,8 @@
 
     /** {@inheritDoc} */
     public double getAbsoluteAccuracy() {
-        return absoluteAccuracy;
+        final String pattern = "internal error, please fill a bug report at {0}";
+		return absoluteAccuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1670)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1670)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1820)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1820)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1820)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v1820)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +178,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +243,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2085)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2085)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2085)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2085)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2085)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2282)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2282)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2282)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,12 +60,10 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
@@ -80,7 +78,8 @@
 
     /** {@inheritDoc} */
     public double getAbsoluteAccuracy() {
-        return absoluteAccuracy;
+        final String pattern = "internal error, please fill a bug report at {0}";
+		return absoluteAccuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2282)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2282)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            resultComputed = true;
             return result;
         }
 
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2410)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -245,7 +245,7 @@
         throws FunctionEvaluationException {
 
         verifyInterval(lower, upper);
-        if (!isBracketing(lower, upper, function)) {
+        if (!resultComputed) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2410)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2410)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2410)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2410)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            resultComputed = true;
             return result;
         }
 
@@ -182,7 +181,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                verifyBracketing(min, max, f);
+				verifyBracketing(min, max, f);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2494)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2494)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2494)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2494)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,10 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +120,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +176,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
+                clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2864)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2864)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2864)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -80,7 +80,8 @@
 
     /** {@inheritDoc} */
     public double getAbsoluteAccuracy() {
-        return absoluteAccuracy;
+        final String pattern = "internal error, please fill a bug report at {0}";
+		return absoluteAccuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2864)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2864)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +177,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +241,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -245,7 +245,7 @@
         throws FunctionEvaluationException {
 
         verifyInterval(lower, upper);
-        if (!isBracketing(lower, upper, function)) {
+        if (!resultComputed) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,12 +60,10 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v2876)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                verifyBracketing(min, max, f);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v3474)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v3474)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v3474)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v3474)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,10 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +120,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +176,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -80,7 +80,8 @@
 
     /** {@inheritDoc} */
     public double getAbsoluteAccuracy() {
-        return absoluteAccuracy;
+        final String pattern = "internal error, please fill a bug report at {0}";
+		return absoluteAccuracy;
     }
 
     /** {@inheritDoc} */
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v3823)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -102,19 +102,18 @@
         clearResult();
         verifySequence(min, initial, max);
 
-        // return the initial guess if it is good enough
+        setResult(max, 0);
+		// return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
             return result;
         }
 
-        // return the first endpoint if it is good enough
+        this.defaultFunctionValueAccuracy = 1.0e-15;
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5065)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5065)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5065)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5065)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -109,12 +108,10 @@
             return result;
         }
 
-        // return the first endpoint if it is good enough
+        this.defaultFunctionValueAccuracy = 1.0e-15;
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -227,7 +223,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5069)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,10 +246,6 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                    "function values at endpoints do not have different signs.  " +
-                    "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                    lower, upper, function.value(lower), function.value(upper));
         }
     }
 }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5069)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5069)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5069)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5069)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -165,7 +163,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -182,7 +179,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                verifyBracketing(min, max, f);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5447)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5447)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5447)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5447)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -109,12 +108,10 @@
             return result;
         }
 
-        // return the first endpoint if it is good enough
+        this.defaultFunctionValueAccuracy = 1.0e-15;
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +177,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double x0 = min;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -227,7 +223,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5689)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5689)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5689)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5689)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5689)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,7 +226,7 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        int i = 1;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
@@ -290,7 +287,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,10 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -227,7 +228,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v6017)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v6017)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v6017)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v6017)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v6017)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -109,10 +109,11 @@
             return result;
         }
 
-        // return the first endpoint if it is good enough
+        this.defaultFunctionValueAccuracy = 1.0e-15;
+		this.defaultFunctionValueAccuracy = 1.0e-15;
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +181,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -227,7 +226,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v6065)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v6065)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v6065)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v6065)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -109,12 +108,10 @@
             return result;
         }
 
-        // return the first endpoint if it is good enough
+        this.defaultFunctionValueAccuracy = 1.0e-15;
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double fb;
             return result;
         }
 
@@ -184,7 +181,8 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -245,7 +243,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v7676)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v7676)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v7676)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v7676)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,10 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +120,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -227,14 +222,16 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +287,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v8808)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,12 +244,7 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                    "function values at endpoints do not have different signs.  " +
-                    "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                    lower, upper, function.value(lower), function.value(upper));
         }
     }
 }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v8808)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v8808)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v8808)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v8808)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +177,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -227,7 +223,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -245,7 +242,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -290,7 +286,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v10005)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -244,7 +243,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v10005)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v10005)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v10005)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v10005)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,6 +179,7 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -290,7 +287,10 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
@@ -312,7 +312,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v10287)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v10287)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v10287)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v10287)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v10287)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,10 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +120,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,7 +172,7 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
@@ -290,7 +285,10 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
@@ -312,7 +310,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v13480)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,8 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v13480)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v13480)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v13480)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v13480)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            clearResult();
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +181,11 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +291,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15224)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15224)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15224)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15224)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +178,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -227,7 +225,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -290,7 +289,11 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15464)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,7 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+        double ret = Double.NaN;
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15464)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15464)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15464)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15464)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +177,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.f = f;
+				clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -290,7 +287,10 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15882)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,7 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+        double ret = Double.NaN;
     }
 
     /**
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15882)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15882)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15882)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v15882)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+		double delta;
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +178,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -290,7 +287,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v17673)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,7 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+        clearResult();
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v17673)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v17673)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v17673)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v17673)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x1 = min;
             return result;
         }
 
@@ -182,14 +179,19 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            this.iterationCount = iterationCount;
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -227,7 +229,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -290,7 +293,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v18410)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v18410)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v18410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v18410)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,14 +175,16 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -227,7 +227,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -290,7 +292,10 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,13 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +236,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +293,10 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v19896)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +181,14 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                this.iterationCount = iterationCount;
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -227,14 +231,17 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v20653)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v20653)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v20653)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v20653)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v20653)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,16 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                double oldx = Double.POSITIVE_INFINITY;
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +295,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v20655)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v20655)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v20655)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v20655)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v20655)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,8 +182,14 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +295,10 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v21475)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v21475)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v21475)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v21475)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,16 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -227,7 +232,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        resultComputed = true;
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -290,7 +296,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22001)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,8 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22001)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22001)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22001)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22001)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,14 +175,16 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +290,12 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22055)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,7 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+        double ret = Double.NaN;
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22055)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22055)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22055)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22055)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,15 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +238,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +295,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22174)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22174)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22174)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22174)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22174)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22174)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,17 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +296,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22232)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22232)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22232)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:55 [main] [INFO]  PatchLogExporter - patch (v22232)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,10 +181,15 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +239,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +296,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v22288)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v22288)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v22288)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v22288)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,14 +176,22 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +241,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +298,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v22881)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,7 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+        double ret = Double.NaN;
     }
 
     /**
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v22881)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v22881)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v22881)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v22881)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +181,14 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +238,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +295,10 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v23001)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v23001)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v23001)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v23001)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,16 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +295,10 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v28871)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v28871)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v28871)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v28871)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +181,17 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +241,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +298,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v29050)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v29050)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v29050)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v29050)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,17 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -245,7 +251,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -290,7 +295,11 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v30426)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v30426)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v30426)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v30426)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,22 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +245,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v30891)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v30891)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v30891)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v30891)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,20 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +243,11 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +303,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v31851)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v31851)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v31851)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v31851)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v31851)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -100,7 +100,8 @@
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
         clearResult();
-        verifySequence(min, initial, max);
+        int i = 1;
+		verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
@@ -111,10 +112,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,10 +178,13 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +234,9 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +292,11 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v32059)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v32059)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v32059)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v32059)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,22 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +245,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,7 +257,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v34095)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v34095)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v34095)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v34095)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,19 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                checkResultComputed();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -245,7 +253,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -290,7 +297,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v34283)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v34283)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v34283)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v34283)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,23 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +246,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +303,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v36465)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v36465)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v36465)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v36465)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,10 +179,22 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                int i = 0;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +300,11 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v36814)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v36814)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v36814)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v36814)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +182,24 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                int i = 0;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +249,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +306,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v37680)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v37680)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v37680)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v37680)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,21 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                int numIterations = 0;
+				double m;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +244,9 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +302,12 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v39214)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,10 +246,6 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                    "function values at endpoints do not have different signs.  " +
-                    "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                    lower, upper, function.value(lower), function.value(upper));
         }
     }
 }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v39214)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v39214)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v39214)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v39214)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            setResult(min, 0);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -123,10 +123,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
-        if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
-            return result;
-        }
+        if (Math.abs(yMax) <= functionValueAccuracy)
+			return solve(f, min, max);
 
         // reduce interval if initial and max bracket the root
         if (yInitial * yMax < 0) {
@@ -177,14 +175,25 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (Math.abs(max - min) <= absoluteAccuracy) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				verifyBracketing(min, max, f);
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +299,13 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v40686)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v40686)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v40686)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v40686)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +181,25 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +249,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +306,10 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v41858)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,10 +246,6 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                    "function values at endpoints do not have different signs.  " +
-                    "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                    lower, upper, function.value(lower), function.value(upper));
         }
     }
 }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v41858)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v41858)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v41858)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v41858)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double fm;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +181,29 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                double fb;
+				this.resultComputed = false;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +253,9 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42234)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42234)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42234)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42234)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            setResult(min, 0);
             return result;
         }
 
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +182,22 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                double x2 = max;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +247,10 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +306,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42253)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42253)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42253)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42253)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            resultComputed = true;
             return result;
         }
 
@@ -182,9 +181,21 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				this.iterationCount = iterationCount;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +245,9 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +303,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42855)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,10 +246,6 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                    "function values at endpoints do not have different signs.  " +
-                    "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                    lower, upper, function.value(lower), function.value(upper));
         }
     }
 }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42855)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42855)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42855)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v42855)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +181,27 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				this.resultComputed = false;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +307,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v43692)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,10 +246,6 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                    "function values at endpoints do not have different signs.  " +
-                    "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                    lower, upper, function.value(lower), function.value(upper));
         }
     }
 }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v43692)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v43692)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v43692)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v43692)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,10 +179,30 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                double fb;
+				setResult(max, 0);
+                int numIterations = 0;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +308,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v47010)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v47010)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v47010)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v47010)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +125,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 0;
             return result;
         }
 
@@ -182,9 +183,30 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                this.iterationCount = iterationCount;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +256,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +313,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v47099)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v47099)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v47099)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v47099)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +181,32 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                double x0 = min;
+				double fb;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +256,9 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v48620)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v48620)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v48620)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v48620)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			verifySequence(min, initial, max);
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,10 +179,35 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +257,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +314,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v48631)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v48631)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v48631)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v48631)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
-        // return the first endpoint if it is good enough
+        resultComputed = true;
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,30 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                double x0 = min;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49071)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49071)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49071)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49071)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
-        // return the first endpoint if it is good enough
+        resultComputed = true;
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,30 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -290,7 +309,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49079)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49079)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49079)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49079)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			verifySequence(min, initial, max);
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,30 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +253,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +310,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49091)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,10 +246,6 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                    "function values at endpoints do not have different signs.  " +
-                    "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                    lower, upper, function.value(lower), function.value(upper));
         }
     }
 }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49091)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49091)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49091)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v49091)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			verifySequence(min, initial, max);
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +179,28 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -234,7 +252,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +309,9 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v51618)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v51618)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v51618)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v51618)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,34 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +257,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v51675)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v51675)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v51675)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v51675)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +178,35 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                this.iterationCount = iterationCount;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +256,8 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53213)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53213)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53213)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +182,31 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +256,9 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +314,10 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					y1 = f.value(x1);
+					y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53245)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53245)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53245)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53245)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +178,32 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                int i = 1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,10 +253,14 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                y1 = f.value(x1);
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53450)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53450)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53450)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53450)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,10 +180,37 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +260,9 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -290,7 +318,8 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
+                    y1 = f.value(x1);
+					oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53641)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53641)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53641)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53641)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,33 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +256,13 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -248,6 +276,7 @@
                 return result;
             }
             double dx = x2 - x1;
+			this.functionValueAccuracy = defaultFunctionValueAccuracy;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
             if (Math.abs(dx) <= tolerance) {
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53881)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53881)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53881)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v53881)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +178,38 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                this.resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,10 +259,13 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                y1 = f.value(x1);
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v55471)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v55471)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v55471)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v55471)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double oldx = Double.POSITIVE_INFINITY;
             return result;
         }
 
@@ -182,9 +179,34 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +256,10 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v56837)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v56837)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v56837)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v56837)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -123,10 +120,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
-        if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
-            return result;
-        }
+        if (Math.abs(yMax) <= functionValueAccuracy)
+			return solve(f, min, max);
 
         // reduce interval if initial and max bracket the root
         if (yInitial * yMax < 0) {
@@ -182,9 +177,35 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +255,11 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v57435)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v57435)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v57435)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:56 [main] [INFO]  PatchLogExporter - patch (v57435)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +178,34 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,10 +255,15 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                y1 = f.value(x1);
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v57478)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v57478)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v57478)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v57478)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +178,36 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                int i = 0;
+				this.iterationCount = iterationCount;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -237,7 +260,8 @@
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                y1 = f.value(x1);
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v57803)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v57803)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v57803)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v57803)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v57803)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,10 +177,34 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,10 +254,17 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v58276)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v58276)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v58276)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v58276)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v58276)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,10 +177,37 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +257,12 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v60677)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v60677)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v60677)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v60677)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v60677)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v60677)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +178,30 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,10 +251,16 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v60820)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v60820)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v60820)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v60820)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,40 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +263,10 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v66484)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v66484)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v66484)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v66484)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v66484)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,45 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                int i = 1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,10 +268,14 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                y1 = f.value(x1);
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v67480)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v67480)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v67480)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v67480)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v67480)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,46 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				verifyInterval(min, max);
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,10 +269,16 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                y1 = f.value(x1);
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v74803)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v74803)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v74803)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v74803)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,10 +179,50 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				resultComputed = true;
+				setResult(max, 0);
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,10 +272,18 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                y1 = f.value(x1);
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v79825)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v79825)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v79825)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v79825)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double b = initial;
             return result;
         }
 
@@ -182,9 +181,51 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,10 +275,21 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
+                y1 = f.value(x1);
+				y1 = f.value(x1);
+				y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v88239)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,10 +246,6 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                    "function values at endpoints do not have different signs.  " +
-                    "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                    lower, upper, function.value(lower), function.value(upper));
         }
     }
 }
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v88239)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v88239)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v88239)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v88239)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,9 +180,44 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                int iterationCount = 0;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				resultComputed = true;
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +267,23 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v93605)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v93605)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v93605)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-06 15:40:57 [main] [INFO]  PatchLogExporter - patch (v93605)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,10 +179,62 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				resultComputed = true;
+				resultComputed = true;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				ret = max;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				double p1;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				// neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
@@ -234,7 +284,18 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				delta = 0.5 * oldDelta;
+				x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-08-06 15:40:57 [main] [INFO]  KGenProgMain - Summary
Reached generation = 500
Generated variants = 99800
Syntax valid variants = 86675
Build succeeded variants = 53211
Time elapsed = 9 hours 17 minutes 14 seconds
Exit status = FAILURE (maximum generation)
