2023-08-07 09:08:21 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-07 09:08:21 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-07 09:08:21 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-07 09:08:21 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/kgenprog-72.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 100 (set in config file)
crossoverGeneratingCount = 100 (set in config file)
headcount = 50
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 7 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/research
version = 1.8.2
================================================================
2023-08-07 09:08:40 [main] [INFO]  KGenProgMain - initial failed tests (1/6)
org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints: null

2023-08-07 09:08:40 [main] [INFO]  KGenProgMain - GA started
2023-08-07 09:08:40 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-07 09:08:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, build-succeeded 15, build-failed 52, syntax-invalid 8, redundant 25
Fitness: max 0.833(12), min 0.167(1), ave 0.767
Test execution time: sum 2426 ms, max 274 ms, min 75 ms
----------------------------------------------------------------

2023-08-07 09:08:49 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-07 09:08:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, build-succeeded 30, build-failed 52, syntax-invalid 7, redundant 11
Fitness: max 1(1), min 0.167(3), ave 0.694
Test execution time: sum 2343 ms, max 148 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 09:08:56 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-07 09:09:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 200, build-succeeded 70, build-failed 52, syntax-invalid 24, redundant 54
Fitness: max 1(1), min 0.167(12), ave 0.657
Test execution time: sum 4629 ms, max 156 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:09:07 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-07 09:09:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 200, build-succeeded 69, build-failed 47, syntax-invalid 26, redundant 58
Fitness: max 0.833(52), min 0.167(5), ave 0.756
Test execution time: sum 4333 ms, max 166 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:09:17 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-07 09:09:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 seconds
Variants: generated 200, build-succeeded 42, build-failed 61, syntax-invalid 26, redundant 71
Fitness: max 1(2), min 0.167(1), ave 0.798
Test execution time: sum 2700 ms, max 152 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:09:25 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-07 09:09:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 seconds
Variants: generated 200, build-succeeded 56, build-failed 58, syntax-invalid 24, redundant 62
Fitness: max 0.833(45), min 0.167(2), ave 0.777
Test execution time: sum 3697 ms, max 204 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:09:35 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-07 09:09:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 5 seconds
Variants: generated 200, build-succeeded 69, build-failed 56, syntax-invalid 24, redundant 51
Fitness: max 1(2), min 0.167(3), ave 0.792
Test execution time: sum 4305 ms, max 146 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:09:45 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-07 09:09:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 16 seconds
Variants: generated 200, build-succeeded 79, build-failed 59, syntax-invalid 15, redundant 47
Fitness: max 1(1), min 0.167(3), ave 0.797
Test execution time: sum 4855 ms, max 141 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:09:57 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-07 09:10:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 28 seconds
Variants: generated 200, build-succeeded 80, build-failed 51, syntax-invalid 30, redundant 39
Fitness: max 0.833(67), min 0.167(6), ave 0.762
Test execution time: sum 4998 ms, max 177 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:10:08 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-07 09:25:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 39 seconds
Variants: generated 200, build-succeeded 72, build-failed 67, syntax-invalid 29, redundant 32
Fitness: max 1(1), min 0.167(3), ave 0.794
Test execution time: sum 904624 ms, max 900110 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:25:19 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-07 09:25:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 52 seconds
Variants: generated 200, build-succeeded 97, build-failed 50, syntax-invalid 27, redundant 26
Fitness: max 1(2), min 0.167(6), ave 0.78
Test execution time: sum 6103 ms, max 215 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:25:32 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-07 09:25:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 5 seconds
Variants: generated 200, build-succeeded 101, build-failed 51, syntax-invalid 24, redundant 24
Fitness: max 1(1), min 0.167(7), ave 0.774
Test execution time: sum 6284 ms, max 199 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:25:46 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-07 09:26:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 19 seconds
Variants: generated 200, build-succeeded 105, build-failed 57, syntax-invalid 20, redundant 18
Fitness: max 1(1), min 0.167(3), ave 0.806
Test execution time: sum 6602 ms, max 205 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:26:00 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-07 09:26:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 31 seconds
Variants: generated 200, build-succeeded 92, build-failed 60, syntax-invalid 18, redundant 30
Fitness: max 1(1), min 0.167(4), ave 0.801
Test execution time: sum 5576 ms, max 85 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:26:12 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-07 09:26:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 45 seconds
Variants: generated 200, build-succeeded 105, build-failed 53, syntax-invalid 17, redundant 25
Fitness: max 1(1), min 0.167(11), ave 0.757
Test execution time: sum 6286 ms, max 138 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:26:25 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-07 09:26:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 58 seconds
Variants: generated 200, build-succeeded 93, build-failed 65, syntax-invalid 26, redundant 16
Fitness: max 1(1), min 0.167(7), ave 0.78
Test execution time: sum 5805 ms, max 156 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:26:39 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-07 09:26:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 12 seconds
Variants: generated 200, build-succeeded 116, build-failed 50, syntax-invalid 17, redundant 17
Fitness: max 1(1), min 0.167(10), ave 0.769
Test execution time: sum 6908 ms, max 82 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:26:53 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-07 09:27:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 27 seconds
Variants: generated 200, build-succeeded 102, build-failed 63, syntax-invalid 15, redundant 20
Fitness: max 0.833(90), min 0.167(7), ave 0.778
Test execution time: sum 6179 ms, max 136 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:27:07 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-07 09:27:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 42 seconds
Variants: generated 200, build-succeeded 108, build-failed 60, syntax-invalid 19, redundant 13
Fitness: max 1(1), min 0.167(4), ave 0.799
Test execution time: sum 6728 ms, max 201 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:27:22 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-07 09:27:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 56 seconds
Variants: generated 200, build-succeeded 97, build-failed 65, syntax-invalid 21, redundant 17
Fitness: max 0.833(87), min 0.167(4), ave 0.794
Test execution time: sum 5995 ms, max 136 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:27:37 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-07 09:27:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 10 seconds
Variants: generated 200, build-succeeded 100, build-failed 58, syntax-invalid 19, redundant 23
Fitness: max 0.833(90), min 0.167(5), ave 0.792
Test execution time: sum 5916 ms, max 100 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:27:50 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-07 09:28:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 23 seconds
Variants: generated 200, build-succeeded 92, build-failed 67, syntax-invalid 25, redundant 16
Fitness: max 1(1), min 0.167(3), ave 0.81
Test execution time: sum 5554 ms, max 201 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:28:04 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-07 09:28:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 37 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 21, redundant 16
Fitness: max 1(1), min 0.167(6), ave 0.79
Test execution time: sum 6259 ms, max 78 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:28:18 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-07 09:28:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 52 seconds
Variants: generated 200, build-succeeded 101, build-failed 68, syntax-invalid 19, redundant 12
Fitness: max 1(2), min 0.167(6), ave 0.795
Test execution time: sum 6066 ms, max 137 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:28:32 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-07 09:28:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 7 seconds
Variants: generated 200, build-succeeded 98, build-failed 63, syntax-invalid 25, redundant 14
Fitness: max 0.833(93), min 0.167(2), ave 0.813
Test execution time: sum 6236 ms, max 238 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:28:47 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-07 09:29:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 21 seconds
Variants: generated 200, build-succeeded 100, build-failed 54, syntax-invalid 35, redundant 11
Fitness: max 1(1), min 0.167(4), ave 0.802
Test execution time: sum 5890 ms, max 91 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:29:01 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-07 09:29:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 35 seconds
Variants: generated 200, build-succeeded 86, build-failed 66, syntax-invalid 42, redundant 6
Fitness: max 0.833(76), min 0.167(7), ave 0.773
Test execution time: sum 5275 ms, max 138 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:29:15 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-07 09:29:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 49 seconds
Variants: generated 200, build-succeeded 98, build-failed 69, syntax-invalid 25, redundant 8
Fitness: max 0.833(88), min 0.167(7), ave 0.777
Test execution time: sum 5939 ms, max 90 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:29:30 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-07 09:29:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 4 seconds
Variants: generated 200, build-succeeded 93, build-failed 71, syntax-invalid 31, redundant 5
Fitness: max 1(1), min 0.167(5), ave 0.794
Test execution time: sum 5574 ms, max 138 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:29:45 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-07 09:30:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 20 seconds
Variants: generated 200, build-succeeded 100, build-failed 56, syntax-invalid 34, redundant 10
Fitness: max 0.833(88), min 0.167(8), ave 0.772
Test execution time: sum 6077 ms, max 133 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:30:00 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-07 09:30:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 34 seconds
Variants: generated 200, build-succeeded 94, build-failed 69, syntax-invalid 27, redundant 10
Fitness: max 0.833(86), min 0.167(4), ave 0.798
Test execution time: sum 5590 ms, max 83 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:30:14 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-07 09:30:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 49 seconds
Variants: generated 200, build-succeeded 104, build-failed 55, syntax-invalid 35, redundant 6
Fitness: max 0.833(92), min 0.167(7), ave 0.779
Test execution time: sum 6312 ms, max 136 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:30:30 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-07 09:30:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 3 seconds
Variants: generated 200, build-succeeded 97, build-failed 63, syntax-invalid 29, redundant 11
Fitness: max 0.833(89), min 0.167(5), ave 0.79
Test execution time: sum 5926 ms, max 81 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:30:44 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-07 09:30:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 18 seconds
Variants: generated 200, build-succeeded 102, build-failed 57, syntax-invalid 26, redundant 15
Fitness: max 0.833(92), min 0.167(5), ave 0.784
Test execution time: sum 6050 ms, max 134 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:30:58 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-07 09:31:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 33 seconds
Variants: generated 200, build-succeeded 99, build-failed 56, syntax-invalid 36, redundant 9
Fitness: max 0.833(87), min 0.167(7), ave 0.774
Test execution time: sum 6214 ms, max 141 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:31:14 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-07 09:31:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 47 seconds
Variants: generated 200, build-succeeded 96, build-failed 57, syntax-invalid 37, redundant 10
Fitness: max 0.833(84), min 0.167(8), ave 0.767
Test execution time: sum 5709 ms, max 84 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:31:28 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-07 09:31:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 3 seconds
Variants: generated 200, build-succeeded 98, build-failed 62, syntax-invalid 33, redundant 7
Fitness: max 0.833(88), min 0.167(6), ave 0.781
Test execution time: sum 5887 ms, max 188 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:31:43 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-07 09:31:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 18 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 27, redundant 8
Fitness: max 0.833(97), min 0.167(8), ave 0.777
Test execution time: sum 6619 ms, max 82 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:31:59 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-07 09:32:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 35 seconds
Variants: generated 200, build-succeeded 114, build-failed 58, syntax-invalid 22, redundant 6
Fitness: max 0.833(104), min 0.167(5), ave 0.794
Test execution time: sum 6960 ms, max 140 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:32:16 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-07 09:32:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 51 seconds
Variants: generated 200, build-succeeded 103, build-failed 64, syntax-invalid 24, redundant 9
Fitness: max 1(4), min 0.167(4), ave 0.803
Test execution time: sum 6165 ms, max 217 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:32:32 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-07 09:32:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 8 seconds
Variants: generated 200, build-succeeded 108, build-failed 62, syntax-invalid 22, redundant 8
Fitness: max 0.833(97), min 0.167(10), ave 0.769
Test execution time: sum 6663 ms, max 125 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:32:48 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-07 09:33:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 23 seconds
Variants: generated 200, build-succeeded 100, build-failed 53, syntax-invalid 38, redundant 9
Fitness: max 1(1), min 0.167(7), ave 0.783
Test execution time: sum 5875 ms, max 74 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:33:03 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-07 09:33:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 39 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 19, redundant 15
Fitness: max 0.833(91), min 0.167(14), ave 0.741
Test execution time: sum 6545 ms, max 141 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:33:20 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-07 09:33:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 54 seconds
Variants: generated 200, build-succeeded 94, build-failed 58, syntax-invalid 38, redundant 10
Fitness: max 0.833(80), min 0.167(12), ave 0.745
Test execution time: sum 5744 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:33:35 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-07 09:33:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 12 seconds
Variants: generated 200, build-succeeded 116, build-failed 52, syntax-invalid 22, redundant 10
Fitness: max 0.833(104), min 0.167(8), ave 0.78
Test execution time: sum 7147 ms, max 126 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:33:52 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-07 09:34:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 29 seconds
Variants: generated 200, build-succeeded 109, build-failed 60, syntax-invalid 23, redundant 8
Fitness: max 1(2), min 0.167(3), ave 0.798
Test execution time: sum 6708 ms, max 200 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:34:09 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-07 09:34:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 45 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 28, redundant 9
Fitness: max 1(2), min 0.167(7), ave 0.785
Test execution time: sum 6507 ms, max 133 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:34:26 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-07 09:34:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 2 seconds
Variants: generated 200, build-succeeded 109, build-failed 55, syntax-invalid 26, redundant 10
Fitness: max 1(2), min 0.167(4), ave 0.809
Test execution time: sum 6699 ms, max 86 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:34:42 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-07 09:34:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 18 seconds
Variants: generated 200, build-succeeded 103, build-failed 58, syntax-invalid 31, redundant 8
Fitness: max 0.833(97), min 0.167(2), ave 0.812
Test execution time: sum 6270 ms, max 198 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:34:58 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-07 09:35:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 34 seconds
Variants: generated 200, build-succeeded 101, build-failed 61, syntax-invalid 29, redundant 9
Fitness: max 1(1), min 0.167(9), ave 0.767
Test execution time: sum 6242 ms, max 139 ms, min 54 ms
----------------------------------------------------------------

2023-08-07 09:35:14 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-07 09:35:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 50 seconds
Variants: generated 200, build-succeeded 109, build-failed 58, syntax-invalid 27, redundant 6
Fitness: max 1(2), min 0.167(6), ave 0.791
Test execution time: sum 6576 ms, max 86 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:35:30 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-07 09:35:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 7 seconds
Variants: generated 200, build-succeeded 107, build-failed 57, syntax-invalid 21, redundant 15
Fitness: max 0.833(101), min 0.167(3), ave 0.807
Test execution time: sum 6594 ms, max 125 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:35:48 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-07 09:36:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 24 seconds
Variants: generated 200, build-succeeded 102, build-failed 64, syntax-invalid 25, redundant 9
Fitness: max 1(2), min 0.167(4), ave 0.807
Test execution time: sum 6426 ms, max 189 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:36:04 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-07 09:36:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 40 seconds
Variants: generated 200, build-succeeded 97, build-failed 66, syntax-invalid 32, redundant 5
Fitness: max 1(1), min 0.167(1), ave 0.82
Test execution time: sum 5882 ms, max 81 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 09:36:20 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-07 09:36:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 57 seconds
Variants: generated 200, build-succeeded 109, build-failed 57, syntax-invalid 29, redundant 5
Fitness: max 1(1), min 0.167(5), ave 0.797
Test execution time: sum 6692 ms, max 136 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:36:37 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-07 09:36:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 14 seconds
Variants: generated 200, build-succeeded 107, build-failed 50, syntax-invalid 34, redundant 9
Fitness: max 1(2), min 0.167(3), ave 0.807
Test execution time: sum 6799 ms, max 144 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 09:36:54 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-07 09:37:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 30 seconds
Variants: generated 200, build-succeeded 110, build-failed 56, syntax-invalid 27, redundant 7
Fitness: max 0.833(100), min 0.167(6), ave 0.791
Test execution time: sum 6765 ms, max 91 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:37:11 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-07 09:37:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 48 seconds
Variants: generated 200, build-succeeded 114, build-failed 51, syntax-invalid 16, redundant 19
Fitness: max 0.833(109), min 0.167(1), ave 0.822
Test execution time: sum 7018 ms, max 135 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 09:37:29 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-07 09:37:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 6 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 27, redundant 8
Fitness: max 1(2), min 0.167(4), ave 0.804
Test execution time: sum 6869 ms, max 187 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 09:37:46 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-07 09:38:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 22 seconds
Variants: generated 200, build-succeeded 114, build-failed 53, syntax-invalid 22, redundant 11
Fitness: max 0.833(101), min 0.167(5), ave 0.788
Test execution time: sum 6839 ms, max 91 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 09:38:03 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-07 09:38:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 41 seconds
Variants: generated 200, build-succeeded 117, build-failed 62, syntax-invalid 13, redundant 8
Fitness: max 0.833(104), min 0.167(9), ave 0.774
Test execution time: sum 7276 ms, max 209 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 09:38:21 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-07 09:38:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 59 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 19, redundant 10
Fitness: max 1(3), min 0.167(2), ave 0.816
Test execution time: sum 7283 ms, max 189 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 09:38:40 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-07 10:02:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 17 seconds
Variants: generated 200, build-succeeded 103, build-failed 67, syntax-invalid 22, redundant 8
Fitness: max 0.833(94), min 0.167(4), ave 0.796
Test execution time: sum 1446945 ms, max 900123 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 10:02:58 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-07 10:03:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 35 seconds
Variants: generated 200, build-succeeded 108, build-failed 57, syntax-invalid 21, redundant 14
Fitness: max 0.833(97), min 0.167(6), ave 0.785
Test execution time: sum 6818 ms, max 244 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:03:16 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-07 10:03:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 53 seconds
Variants: generated 200, build-succeeded 108, build-failed 58, syntax-invalid 20, redundant 14
Fitness: max 0.833(97), min 0.167(4), ave 0.795
Test execution time: sum 6823 ms, max 193 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:03:34 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-07 10:03:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 10 seconds
Variants: generated 200, build-succeeded 97, build-failed 61, syntax-invalid 31, redundant 11
Fitness: max 1(1), min 0.167(6), ave 0.785
Test execution time: sum 5840 ms, max 85 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 10:03:50 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-07 10:04:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 28 seconds
Variants: generated 200, build-succeeded 100, build-failed 63, syntax-invalid 24, redundant 13
Fitness: max 0.833(91), min 0.167(6), ave 0.787
Test execution time: sum 6287 ms, max 194 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 10:04:08 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-07 10:04:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 45 seconds
Variants: generated 200, build-succeeded 100, build-failed 64, syntax-invalid 24, redundant 12
Fitness: max 0.833(88), min 0.167(6), ave 0.782
Test execution time: sum 6204 ms, max 85 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 10:04:25 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-07 10:19:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 3 seconds
Variants: generated 200, build-succeeded 97, build-failed 64, syntax-invalid 31, redundant 8
Fitness: max 1(1), min 0.167(13), ave 0.739
Test execution time: sum 906309 ms, max 900118 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 10:19:44 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-07 11:05:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 21 seconds
Variants: generated 200, build-succeeded 96, build-failed 61, syntax-invalid 31, redundant 12
Fitness: max 1(1), min 0.167(13), ave 0.738
Test execution time: sum 2706841 ms, max 900115 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 11:05:02 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-07 11:05:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 40 seconds
Variants: generated 200, build-succeeded 104, build-failed 61, syntax-invalid 27, redundant 8
Fitness: max 1(2), min 0.167(7), ave 0.779
Test execution time: sum 6723 ms, max 140 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 11:05:21 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-07 11:05:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 57 seconds
Variants: generated 200, build-succeeded 97, build-failed 64, syntax-invalid 27, redundant 12
Fitness: max 0.833(88), min 0.167(5), ave 0.79
Test execution time: sum 5928 ms, max 87 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 11:05:37 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-07 11:20:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 16 seconds
Variants: generated 200, build-succeeded 104, build-failed 63, syntax-invalid 21, redundant 12
Fitness: max 0.833(89), min 0.167(6), ave 0.779
Test execution time: sum 906635 ms, max 900119 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 11:20:56 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-07 11:21:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 33 seconds
Variants: generated 200, build-succeeded 95, build-failed 60, syntax-invalid 35, redundant 10
Fitness: max 0.833(84), min 0.167(2), ave 0.804
Test execution time: sum 5931 ms, max 121 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 11:21:13 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-07 11:21:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 51 seconds
Variants: generated 200, build-succeeded 98, build-failed 63, syntax-invalid 29, redundant 10
Fitness: max 0.833(91), min 0.167(3), ave 0.804
Test execution time: sum 6201 ms, max 122 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 11:21:32 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-07 11:21:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 9 seconds
Variants: generated 200, build-succeeded 93, build-failed 67, syntax-invalid 28, redundant 12
Fitness: max 1(1), min 0(1), ave 0.799
Test execution time: sum 5681 ms, max 81 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 11:21:49 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-07 11:37:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 27 seconds
Variants: generated 200, build-succeeded 98, build-failed 56, syntax-invalid 36, redundant 10
Fitness: max 1(1), min 0.167(5), ave 0.793
Test execution time: sum 906254 ms, max 900100 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 11:37:08 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-07 11:37:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 45 seconds
Variants: generated 200, build-succeeded 102, build-failed 61, syntax-invalid 30, redundant 7
Fitness: max 1(1), min 0.167(4), ave 0.804
Test execution time: sum 6139 ms, max 98 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 11:37:26 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-07 11:37:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 2 seconds
Variants: generated 200, build-succeeded 89, build-failed 57, syntax-invalid 45, redundant 9
Fitness: max 0.833(81), min 0.167(4), ave 0.796
Test execution time: sum 5614 ms, max 134 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 11:37:43 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-07 11:50:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 20 seconds
Variants: generated 200, build-succeeded 95, build-failed 68, syntax-invalid 33, redundant 4
Fitness: max 0.833(86), min 0.167(3), ave 0.798
Test execution time: sum 725764 ms, max 720129 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 11:50:00 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-07 11:50:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 38 seconds
Variants: generated 200, build-succeeded 95, build-failed 61, syntax-invalid 34, redundant 10
Fitness: max 1(1), min 0.167(4), ave 0.8
Test execution time: sum 5976 ms, max 136 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 11:50:18 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-07 11:50:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 55 seconds
Variants: generated 200, build-succeeded 95, build-failed 60, syntax-invalid 39, redundant 6
Fitness: max 0.833(85), min 0.167(7), ave 0.779
Test execution time: sum 5809 ms, max 89 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 11:50:36 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-07 11:50:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 15 seconds
Variants: generated 200, build-succeeded 106, build-failed 54, syntax-invalid 33, redundant 7
Fitness: max 0.833(102), min 0.167(3), ave 0.813
Test execution time: sum 6655 ms, max 127 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 11:50:55 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-07 11:51:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 33 seconds
Variants: generated 200, build-succeeded 108, build-failed 47, syntax-invalid 34, redundant 11
Fitness: max 0.833(91), min 0.167(12), ave 0.75
Test execution time: sum 6563 ms, max 85 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 11:51:14 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-07 11:51:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 51 seconds
Variants: generated 200, build-succeeded 92, build-failed 57, syntax-invalid 44, redundant 7
Fitness: max 1(1), min 0.167(4), ave 0.795
Test execution time: sum 5824 ms, max 190 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 11:51:32 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-07 11:51:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 10 seconds
Variants: generated 200, build-succeeded 104, build-failed 58, syntax-invalid 34, redundant 4
Fitness: max 0.833(94), min 0.167(6), ave 0.787
Test execution time: sum 6245 ms, max 95 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 11:51:50 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-07 11:52:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 30 seconds
Variants: generated 200, build-succeeded 116, build-failed 51, syntax-invalid 32, redundant 1
Fitness: max 1(1), min 0.167(7), ave 0.776
Test execution time: sum 7098 ms, max 132 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 11:52:10 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-07 11:52:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 47 seconds
Variants: generated 200, build-succeeded 92, build-failed 55, syntax-invalid 46, redundant 7
Fitness: max 0.833(85), min 0.167(4), ave 0.799
Test execution time: sum 5550 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 11:52:27 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-07 11:52:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 8 seconds
Variants: generated 200, build-succeeded 116, build-failed 52, syntax-invalid 23, redundant 9
Fitness: max 1(1), min 0.167(4), ave 0.803
Test execution time: sum 7219 ms, max 120 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 11:52:48 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-07 12:02:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 28 seconds
Variants: generated 200, build-succeeded 112, build-failed 53, syntax-invalid 31, redundant 4
Fitness: max 0.833(99), min 0.167(3), ave 0.793
Test execution time: sum 547072 ms, max 540112 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 12:02:08 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-07 12:02:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 49 seconds
Variants: generated 200, build-succeeded 112, build-failed 56, syntax-invalid 24, redundant 8
Fitness: max 1(1), min 0.167(4), ave 0.804
Test execution time: sum 7139 ms, max 270 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 12:02:30 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-07 12:02:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 8 seconds
Variants: generated 200, build-succeeded 92, build-failed 56, syntax-invalid 45, redundant 7
Fitness: max 1(1), min 0.167(6), ave 0.784
Test execution time: sum 5628 ms, max 117 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 12:02:48 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-07 12:03:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 27 seconds
Variants: generated 200, build-succeeded 94, build-failed 60, syntax-invalid 43, redundant 3
Fitness: max 0.833(86), min 0.167(3), ave 0.801
Test execution time: sum 5846 ms, max 117 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 12:03:08 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-07 12:03:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 47 seconds
Variants: generated 200, build-succeeded 104, build-failed 56, syntax-invalid 35, redundant 5
Fitness: max 0.833(94), min 0.167(7), ave 0.784
Test execution time: sum 6460 ms, max 91 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 12:03:28 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-07 12:33:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 9 seconds
Variants: generated 200, build-succeeded 96, build-failed 66, syntax-invalid 32, redundant 6
Fitness: max 0.833(89), min 0.167(5), ave 0.795
Test execution time: sum 1806685 ms, max 900129 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 12:33:49 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-07 12:49:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 29 seconds
Variants: generated 200, build-succeeded 100, build-failed 59, syntax-invalid 32, redundant 9
Fitness: max 0.833(91), min 0.167(8), ave 0.778
Test execution time: sum 906599 ms, max 900127 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 12:49:10 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-07 13:04:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 51 seconds
Variants: generated 200, build-succeeded 102, build-failed 62, syntax-invalid 31, redundant 5
Fitness: max 0.833(90), min 0.167(7), ave 0.779
Test execution time: sum 906688 ms, max 900126 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 13:04:32 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-07 13:04:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 12 seconds
Variants: generated 200, build-succeeded 108, build-failed 48, syntax-invalid 35, redundant 9
Fitness: max 1(1), min 0.167(12), ave 0.759
Test execution time: sum 6705 ms, max 116 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 13:04:52 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-07 13:20:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 34 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 32, redundant 3
Fitness: max 1(1), min 0(1), ave 0.779
Test execution time: sum 907056 ms, max 900137 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 13:20:14 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-07 13:20:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 54 seconds
Variants: generated 200, build-succeeded 100, build-failed 58, syntax-invalid 34, redundant 8
Fitness: max 0.833(93), min 0.167(4), ave 0.802
Test execution time: sum 6145 ms, max 88 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 13:20:34 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-07 13:35:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 16 seconds
Variants: generated 200, build-succeeded 102, build-failed 57, syntax-invalid 35, redundant 6
Fitness: max 0.833(90), min 0.167(8), ave 0.775
Test execution time: sum 906588 ms, max 900104 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 13:35:56 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-07 13:36:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 37 seconds
Variants: generated 200, build-succeeded 107, build-failed 63, syntax-invalid 25, redundant 5
Fitness: max 0.833(89), min 0.167(12), ave 0.749
Test execution time: sum 6565 ms, max 89 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 13:36:18 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-07 13:36:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 58 seconds
Variants: generated 200, build-succeeded 84, build-failed 71, syntax-invalid 36, redundant 9
Fitness: max 0.833(72), min 0.167(11), ave 0.744
Test execution time: sum 5406 ms, max 220 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 13:36:38 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-07 13:52:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 43 minutes 19 seconds
Variants: generated 200, build-succeeded 102, build-failed 65, syntax-invalid 24, redundant 9
Fitness: max 1(1), min 0.167(10), ave 0.761
Test execution time: sum 906335 ms, max 900116 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 13:52:00 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-07 14:07:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 41 seconds
Variants: generated 200, build-succeeded 95, build-failed 64, syntax-invalid 35, redundant 6
Fitness: max 1(1), min 0.167(10), ave 0.758
Test execution time: sum 906223 ms, max 900130 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:07:22 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-07 14:07:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 3 seconds
Variants: generated 200, build-succeeded 111, build-failed 59, syntax-invalid 25, redundant 5
Fitness: max 0.833(91), min 0.167(17), ave 0.722
Test execution time: sum 6826 ms, max 88 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:07:44 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-07 14:08:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 25 seconds
Variants: generated 200, build-succeeded 101, build-failed 54, syntax-invalid 38, redundant 7
Fitness: max 0.833(80), min 0.167(15), ave 0.723
Test execution time: sum 6250 ms, max 135 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 14:08:05 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-07 14:08:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 45 seconds
Variants: generated 200, build-succeeded 93, build-failed 63, syntax-invalid 40, redundant 4
Fitness: max 0.833(81), min 0.167(9), ave 0.762
Test execution time: sum 5729 ms, max 98 ms, min 55 ms
----------------------------------------------------------------

2023-08-07 14:08:26 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-07 14:08:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 seconds
Variants: generated 200, build-succeeded 109, build-failed 54, syntax-invalid 28, redundant 9
Fitness: max 0.833(100), min 0.167(7), ave 0.787
Test execution time: sum 6804 ms, max 124 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:08:49 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-07 14:09:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 seconds
Variants: generated 200, build-succeeded 100, build-failed 62, syntax-invalid 31, redundant 7
Fitness: max 1(1), min 0.167(2), ave 0.818
Test execution time: sum 6081 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:09:10 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-07 14:09:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 seconds
Variants: generated 200, build-succeeded 94, build-failed 67, syntax-invalid 31, redundant 8
Fitness: max 0.833(86), min 0.167(4), ave 0.798
Test execution time: sum 5898 ms, max 120 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:09:32 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-07 14:09:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 1 minutes 14 seconds
Variants: generated 200, build-succeeded 113, build-failed 55, syntax-invalid 25, redundant 7
Fitness: max 0.833(109), min 0.5(1), ave 0.826
Test execution time: sum 6992 ms, max 82 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:09:55 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-07 14:10:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 1 minutes 35 seconds
Variants: generated 200, build-succeeded 90, build-failed 56, syntax-invalid 46, redundant 8
Fitness: max 1(1), min 0.167(3), ave 0.807
Test execution time: sum 5657 ms, max 121 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:10:16 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-07 14:10:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 1 minutes 57 seconds
Variants: generated 200, build-succeeded 93, build-failed 67, syntax-invalid 32, redundant 8
Fitness: max 0.833(91), min 0.167(1), ave 0.824
Test execution time: sum 5686 ms, max 76 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:10:37 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-07 14:11:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 20 seconds
Variants: generated 200, build-succeeded 103, build-failed 55, syntax-invalid 36, redundant 6
Fitness: max 0.833(95), min 0.167(2), ave 0.806
Test execution time: sum 6560 ms, max 122 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:11:00 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-07 14:11:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 42 seconds
Variants: generated 200, build-succeeded 101, build-failed 62, syntax-invalid 31, redundant 6
Fitness: max 1(1), min 0.167(1), ave 0.822
Test execution time: sum 6348 ms, max 86 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:11:22 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-07 14:11:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 3 minutes 5 seconds
Variants: generated 200, build-succeeded 101, build-failed 59, syntax-invalid 33, redundant 7
Fitness: max 1(1), min 0.167(2), ave 0.814
Test execution time: sum 6323 ms, max 127 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:11:46 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-07 14:12:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 3 minutes 27 seconds
Variants: generated 200, build-succeeded 88, build-failed 65, syntax-invalid 39, redundant 8
Fitness: max 0.833(78), min 0.167(5), ave 0.786
Test execution time: sum 5415 ms, max 86 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:12:07 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-07 14:12:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 3 minutes 50 seconds
Variants: generated 200, build-succeeded 94, build-failed 64, syntax-invalid 39, redundant 3
Fitness: max 0.833(84), min 0.167(5), ave 0.789
Test execution time: sum 6027 ms, max 230 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:12:30 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-07 14:12:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 13 seconds
Variants: generated 200, build-succeeded 103, build-failed 60, syntax-invalid 26, redundant 11
Fitness: max 0.833(98), min 0.167(3), ave 0.811
Test execution time: sum 6415 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:12:53 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-07 14:13:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 36 seconds
Variants: generated 200, build-succeeded 89, build-failed 72, syntax-invalid 32, redundant 7
Fitness: max 0.833(86), min 0.167(2), ave 0.815
Test execution time: sum 5474 ms, max 134 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:13:16 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-07 14:13:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 57 seconds
Variants: generated 200, build-succeeded 89, build-failed 62, syntax-invalid 44, redundant 5
Fitness: max 0.833(83), min 0.167(4), ave 0.798
Test execution time: sum 5450 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:13:38 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-07 14:14:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 22 seconds
Variants: generated 200, build-succeeded 104, build-failed 62, syntax-invalid 29, redundant 5
Fitness: max 0.833(92), min 0.167(5), ave 0.787
Test execution time: sum 6497 ms, max 135 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:14:02 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-07 14:14:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 45 seconds
Variants: generated 200, build-succeeded 98, build-failed 63, syntax-invalid 35, redundant 4
Fitness: max 0.833(91), min 0.167(4), ave 0.801
Test execution time: sum 6177 ms, max 93 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:14:25 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-07 14:14:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 9 seconds
Variants: generated 200, build-succeeded 97, build-failed 65, syntax-invalid 30, redundant 8
Fitness: max 1(1), min 0.167(6), ave 0.789
Test execution time: sum 6238 ms, max 196 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:14:50 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-07 14:15:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 34 seconds
Variants: generated 200, build-succeeded 114, build-failed 58, syntax-invalid 25, redundant 3
Fitness: max 1(1), min 0.5(2), ave 0.826
Test execution time: sum 7179 ms, max 86 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:15:15 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-07 14:15:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 1 seconds
Variants: generated 200, build-succeeded 116, build-failed 56, syntax-invalid 23, redundant 5
Fitness: max 0.833(107), min 0.167(4), ave 0.8
Test execution time: sum 7295 ms, max 138 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:15:41 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-07 14:16:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 24 seconds
Variants: generated 200, build-succeeded 98, build-failed 66, syntax-invalid 30, redundant 6
Fitness: max 0.833(92), min 0.167(1), ave 0.818
Test execution time: sum 6161 ms, max 86 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:16:05 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-07 14:16:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 50 seconds
Variants: generated 200, build-succeeded 107, build-failed 58, syntax-invalid 30, redundant 5
Fitness: max 0.833(100), min 0.167(3), ave 0.807
Test execution time: sum 6694 ms, max 122 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:16:30 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-07 14:16:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 14 seconds
Variants: generated 200, build-succeeded 103, build-failed 56, syntax-invalid 33, redundant 8
Fitness: max 1(1), min 0.167(1), ave 0.827
Test execution time: sum 6431 ms, max 88 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:16:54 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-07 14:17:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 40 seconds
Variants: generated 200, build-succeeded 114, build-failed 54, syntax-invalid 26, redundant 6
Fitness: max 1(1), min 0.167(3), ave 0.816
Test execution time: sum 7243 ms, max 137 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:17:20 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-07 14:17:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 9 minutes 5 seconds
Variants: generated 200, build-succeeded 112, build-failed 55, syntax-invalid 29, redundant 4
Fitness: max 1(1), min 0.167(2), ave 0.814
Test execution time: sum 7107 ms, max 84 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:17:46 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-07 14:18:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 9 minutes 32 seconds
Variants: generated 200, build-succeeded 115, build-failed 53, syntax-invalid 28, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.825
Test execution time: sum 7263 ms, max 225 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:18:13 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-07 14:18:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 9 minutes 57 seconds
Variants: generated 200, build-succeeded 104, build-failed 57, syntax-invalid 30, redundant 9
Fitness: max 0.833(102), min 0.167(1), ave 0.825
Test execution time: sum 6517 ms, max 79 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:18:37 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-07 14:19:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 10 minutes 23 seconds
Variants: generated 200, build-succeeded 103, build-failed 68, syntax-invalid 21, redundant 8
Fitness: max 0.833(99), min 0.167(1), ave 0.82
Test execution time: sum 6572 ms, max 142 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:19:04 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-07 14:19:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 10 minutes 49 seconds
Variants: generated 200, build-succeeded 108, build-failed 55, syntax-invalid 31, redundant 6
Fitness: max 1(1), min 0.167(1), ave 0.824
Test execution time: sum 6923 ms, max 86 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:19:29 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-07 14:19:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 11 minutes 15 seconds
Variants: generated 200, build-succeeded 105, build-failed 62, syntax-invalid 28, redundant 5
Fitness: max 0.833(100), min 0.167(2), ave 0.816
Test execution time: sum 6557 ms, max 126 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:19:56 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-07 14:20:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 11 minutes 41 seconds
Variants: generated 200, build-succeeded 104, build-failed 61, syntax-invalid 29, redundant 6
Fitness: max 0.833(101), min 0.167(2), ave 0.819
Test execution time: sum 6740 ms, max 109 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:20:21 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-07 14:20:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 12 minutes 8 seconds
Variants: generated 200, build-succeeded 111, build-failed 67, syntax-invalid 20, redundant 2
Fitness: max 0.833(108), min 0.167(1), ave 0.821
Test execution time: sum 7203 ms, max 135 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:20:49 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-07 14:21:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 12 minutes 34 seconds
Variants: generated 200, build-succeeded 104, build-failed 69, syntax-invalid 21, redundant 6
Fitness: max 0.833(101), min 0.667(3), ave 0.829
Test execution time: sum 6705 ms, max 89 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:21:15 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-07 14:21:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 13 minutes 0 seconds
Variants: generated 200, build-succeeded 107, build-failed 60, syntax-invalid 27, redundant 6
Fitness: max 0.833(103), min 0.167(1), ave 0.822
Test execution time: sum 6824 ms, max 124 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:21:41 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-07 14:22:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 13 minutes 27 seconds
Variants: generated 200, build-succeeded 109, build-failed 63, syntax-invalid 25, redundant 3
Fitness: max 0.833(103), min 0.167(1), ave 0.817
Test execution time: sum 7130 ms, max 173 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:22:08 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-07 14:22:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 13 minutes 52 seconds
Variants: generated 200, build-succeeded 88, build-failed 65, syntax-invalid 38, redundant 9
Fitness: max 0.833(87), min 0.667(1), ave 0.831
Test execution time: sum 5545 ms, max 86 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:22:32 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-07 14:22:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 18 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 29, redundant 4
Fitness: max 0.833(103), min 0.167(2), ave 0.819
Test execution time: sum 6869 ms, max 202 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:22:59 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-07 14:23:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 45 seconds
Variants: generated 200, build-succeeded 115, build-failed 56, syntax-invalid 25, redundant 4
Fitness: max 0.833(110), min 0.167(1), ave 0.822
Test execution time: sum 7419 ms, max 86 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:23:26 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-07 14:23:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 15 minutes 12 seconds
Variants: generated 200, build-succeeded 106, build-failed 62, syntax-invalid 25, redundant 7
Fitness: max 0.833(102), min 0.167(2), ave 0.818
Test execution time: sum 6649 ms, max 123 ms, min 56 ms
----------------------------------------------------------------

2023-08-07 14:23:53 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-07 14:24:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 15 minutes 38 seconds
Variants: generated 200, build-succeeded 99, build-failed 65, syntax-invalid 29, redundant 7
Fitness: max 0.833(99), min 0.833(99), ave 0.833
Test execution time: sum 6279 ms, max 82 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:24:18 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-07 14:24:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 5 seconds
Variants: generated 200, build-succeeded 110, build-failed 64, syntax-invalid 23, redundant 3
Fitness: max 0.833(108), min 0.667(2), ave 0.83
Test execution time: sum 7106 ms, max 136 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:24:46 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-07 14:25:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 31 seconds
Variants: generated 200, build-succeeded 99, build-failed 64, syntax-invalid 29, redundant 8
Fitness: max 0.833(97), min 0.167(1), ave 0.825
Test execution time: sum 6450 ms, max 90 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:25:12 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-07 14:25:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 58 seconds
Variants: generated 200, build-succeeded 101, build-failed 66, syntax-invalid 25, redundant 8
Fitness: max 0.833(100), min 0.667(1), ave 0.832
Test execution time: sum 6340 ms, max 136 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:25:39 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-07 14:26:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 17 minutes 23 seconds
Variants: generated 200, build-succeeded 94, build-failed 56, syntax-invalid 43, redundant 7
Fitness: max 0.833(94), min 0.833(94), ave 0.833
Test execution time: sum 6030 ms, max 90 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:26:04 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-07 14:26:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 17 minutes 50 seconds
Variants: generated 200, build-succeeded 105, build-failed 64, syntax-invalid 27, redundant 4
Fitness: max 0.833(103), min 0.167(1), ave 0.825
Test execution time: sum 6654 ms, max 122 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:26:31 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-07 14:26:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 18 seconds
Variants: generated 200, build-succeeded 111, build-failed 61, syntax-invalid 26, redundant 2
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 7290 ms, max 88 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:26:59 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-07 14:27:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 44 seconds
Variants: generated 200, build-succeeded 93, build-failed 62, syntax-invalid 41, redundant 4
Fitness: max 0.833(92), min 0.167(1), ave 0.826
Test execution time: sum 5944 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:27:25 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-07 14:27:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 10 seconds
Variants: generated 200, build-succeeded 89, build-failed 73, syntax-invalid 35, redundant 3
Fitness: max 0.833(86), min 0.167(1), ave 0.822
Test execution time: sum 5763 ms, max 83 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:27:50 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-07 14:28:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 36 seconds
Variants: generated 200, build-succeeded 94, build-failed 54, syntax-invalid 42, redundant 10
Fitness: max 1(1), min 0.167(1), ave 0.823
Test execution time: sum 5990 ms, max 123 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:28:17 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-07 14:28:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 2 seconds
Variants: generated 200, build-succeeded 94, build-failed 61, syntax-invalid 39, redundant 6
Fitness: max 0.833(92), min 0.167(2), ave 0.819
Test execution time: sum 5989 ms, max 90 ms, min 57 ms
----------------------------------------------------------------

2023-08-07 14:28:43 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-07 14:29:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 30 seconds
Variants: generated 200, build-succeeded 95, build-failed 64, syntax-invalid 38, redundant 3
Fitness: max 1(1), min 0.167(1), ave 0.821
Test execution time: sum 6247 ms, max 205 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:29:10 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-07 14:29:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 57 seconds
Variants: generated 200, build-succeeded 97, build-failed 68, syntax-invalid 32, redundant 3
Fitness: max 0.833(96), min 0.667(1), ave 0.832
Test execution time: sum 6297 ms, max 88 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 14:29:38 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-07 14:30:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 27 seconds
Variants: generated 200, build-succeeded 105, build-failed 64, syntax-invalid 29, redundant 2
Fitness: max 0.833(99), min 0.167(2), ave 0.814
Test execution time: sum 6830 ms, max 152 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:30:07 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-07 14:30:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 55 seconds
Variants: generated 200, build-succeeded 105, build-failed 59, syntax-invalid 31, redundant 5
Fitness: max 1(1), min 0.167(1), ave 0.822
Test execution time: sum 6765 ms, max 89 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:30:35 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-07 14:31:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 25 seconds
Variants: generated 200, build-succeeded 108, build-failed 71, syntax-invalid 17, redundant 4
Fitness: max 0.833(108), min 0.833(108), ave 0.833
Test execution time: sum 6805 ms, max 140 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:31:06 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-07 14:31:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 57 seconds
Variants: generated 200, build-succeeded 117, build-failed 64, syntax-invalid 12, redundant 7
Fitness: max 0.833(114), min 0.167(2), ave 0.821
Test execution time: sum 7817 ms, max 133 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:31:37 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-07 14:32:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 27 seconds
Variants: generated 200, build-succeeded 121, build-failed 56, syntax-invalid 17, redundant 6
Fitness: max 0.833(118), min 0.167(1), ave 0.825
Test execution time: sum 7899 ms, max 97 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:32:08 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-07 14:32:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 57 seconds
Variants: generated 200, build-succeeded 109, build-failed 61, syntax-invalid 23, redundant 7
Fitness: max 0.833(103), min 0.167(2), ave 0.813
Test execution time: sum 7151 ms, max 264 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:32:38 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-07 14:33:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 28 seconds
Variants: generated 200, build-succeeded 119, build-failed 54, syntax-invalid 19, redundant 8
Fitness: max 0.833(114), min 0.167(3), ave 0.814
Test execution time: sum 7792 ms, max 85 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:33:08 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-07 14:33:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 57 seconds
Variants: generated 200, build-succeeded 107, build-failed 60, syntax-invalid 27, redundant 6
Fitness: max 0.833(104), min 0.667(3), ave 0.829
Test execution time: sum 6929 ms, max 137 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 14:33:38 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-07 14:34:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 27 seconds
Variants: generated 200, build-succeeded 110, build-failed 60, syntax-invalid 28, redundant 2
Fitness: max 0.833(104), min 0.167(2), ave 0.815
Test execution time: sum 7234 ms, max 86 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:34:08 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-07 14:34:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 58 seconds
Variants: generated 200, build-succeeded 114, build-failed 57, syntax-invalid 22, redundant 7
Fitness: max 0.833(109), min 0.5(1), ave 0.825
Test execution time: sum 7533 ms, max 200 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:34:39 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-07 14:35:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 30 seconds
Variants: generated 200, build-succeeded 117, build-failed 53, syntax-invalid 21, redundant 9
Fitness: max 0.833(115), min 0.167(1), ave 0.826
Test execution time: sum 7785 ms, max 199 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:35:10 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-07 14:35:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 1 seconds
Variants: generated 200, build-succeeded 117, build-failed 69, syntax-invalid 9, redundant 5
Fitness: max 0.833(114), min 0.667(3), ave 0.829
Test execution time: sum 7682 ms, max 85 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 14:35:42 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-07 14:36:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 33 seconds
Variants: generated 200, build-succeeded 114, build-failed 61, syntax-invalid 18, redundant 7
Fitness: max 0.833(111), min 0.167(1), ave 0.825
Test execution time: sum 7536 ms, max 133 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:36:13 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-07 14:36:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 4 seconds
Variants: generated 200, build-succeeded 109, build-failed 61, syntax-invalid 22, redundant 8
Fitness: max 0.833(105), min 0.667(4), ave 0.827
Test execution time: sum 7479 ms, max 198 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:36:45 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-07 14:37:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 35 seconds
Variants: generated 200, build-succeeded 110, build-failed 58, syntax-invalid 25, redundant 7
Fitness: max 0.833(108), min 0.167(1), ave 0.826
Test execution time: sum 7172 ms, max 94 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:37:15 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-07 14:37:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 6 seconds
Variants: generated 200, build-succeeded 109, build-failed 67, syntax-invalid 19, redundant 5
Fitness: max 0.833(105), min 0.167(1), ave 0.823
Test execution time: sum 7265 ms, max 248 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:37:47 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-07 14:38:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 39 seconds
Variants: generated 200, build-succeeded 125, build-failed 55, syntax-invalid 14, redundant 6
Fitness: max 0.833(122), min 0.167(1), ave 0.825
Test execution time: sum 8384 ms, max 91 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:38:20 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-07 14:38:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 12 seconds
Variants: generated 200, build-succeeded 111, build-failed 65, syntax-invalid 19, redundant 5
Fitness: max 0.833(108), min 0.167(2), ave 0.82
Test execution time: sum 7367 ms, max 151 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:38:52 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-07 14:39:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 43 seconds
Variants: generated 200, build-succeeded 105, build-failed 69, syntax-invalid 22, redundant 4
Fitness: max 0.833(103), min 0.167(1), ave 0.825
Test execution time: sum 7014 ms, max 128 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:39:24 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-07 14:39:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 15 seconds
Variants: generated 200, build-succeeded 111, build-failed 64, syntax-invalid 20, redundant 5
Fitness: max 0.833(108), min 0.167(2), ave 0.82
Test execution time: sum 7438 ms, max 84 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:39:55 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-07 14:40:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 47 seconds
Variants: generated 200, build-succeeded 113, build-failed 62, syntax-invalid 21, redundant 4
Fitness: max 0.833(109), min 0.167(1), ave 0.823
Test execution time: sum 7459 ms, max 147 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:40:28 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-07 14:41:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 32 minutes 20 seconds
Variants: generated 200, build-succeeded 110, build-failed 61, syntax-invalid 22, redundant 7
Fitness: max 0.833(103), min 0.333(1), ave 0.82
Test execution time: sum 7437 ms, max 138 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:41:00 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-07 14:41:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 32 minutes 51 seconds
Variants: generated 200, build-succeeded 108, build-failed 63, syntax-invalid 22, redundant 7
Fitness: max 0.833(105), min 0.667(3), ave 0.829
Test execution time: sum 7057 ms, max 93 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:41:32 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-07 14:42:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 33 minutes 24 seconds
Variants: generated 200, build-succeeded 104, build-failed 64, syntax-invalid 26, redundant 6
Fitness: max 0.833(103), min 0.667(1), ave 0.832
Test execution time: sum 7037 ms, max 128 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:42:04 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-07 14:42:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 33 minutes 56 seconds
Variants: generated 200, build-succeeded 113, build-failed 58, syntax-invalid 25, redundant 4
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 7577 ms, max 85 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:42:37 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-07 14:43:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 34 minutes 28 seconds
Variants: generated 200, build-succeeded 107, build-failed 55, syntax-invalid 31, redundant 7
Fitness: max 0.833(105), min 0.167(1), ave 0.824
Test execution time: sum 7168 ms, max 174 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:43:09 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-07 14:43:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 0 seconds
Variants: generated 200, build-succeeded 110, build-failed 60, syntax-invalid 23, redundant 7
Fitness: max 0.833(106), min 0.167(2), ave 0.818
Test execution time: sum 7245 ms, max 83 ms, min 59 ms
----------------------------------------------------------------

2023-08-07 14:43:41 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-07 14:44:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 34 seconds
Variants: generated 200, build-succeeded 115, build-failed 63, syntax-invalid 18, redundant 4
Fitness: max 1(1), min 0.833(114), ave 0.835
Test execution time: sum 7662 ms, max 195 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:44:14 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-07 14:44:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 8 seconds
Variants: generated 200, build-succeeded 116, build-failed 58, syntax-invalid 22, redundant 4
Fitness: max 0.833(113), min 0.667(3), ave 0.829
Test execution time: sum 7815 ms, max 209 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:44:48 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-07 14:45:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 40 seconds
Variants: generated 200, build-succeeded 102, build-failed 65, syntax-invalid 27, redundant 6
Fitness: max 0.833(102), min 0.833(102), ave 0.833
Test execution time: sum 6697 ms, max 88 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:45:20 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-07 14:45:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 12 seconds
Variants: generated 200, build-succeeded 105, build-failed 63, syntax-invalid 27, redundant 5
Fitness: max 0.833(104), min 0.667(1), ave 0.832
Test execution time: sum 7026 ms, max 144 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:45:53 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-07 14:46:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 43 seconds
Variants: generated 200, build-succeeded 101, build-failed 60, syntax-invalid 34, redundant 5
Fitness: max 0.833(95), min 0.167(3), ave 0.809
Test execution time: sum 6898 ms, max 84 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:46:24 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-07 14:46:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 18 seconds
Variants: generated 200, build-succeeded 112, build-failed 65, syntax-invalid 21, redundant 2
Fitness: max 0.833(110), min 0.667(2), ave 0.83
Test execution time: sum 7444 ms, max 133 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:46:58 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-07 14:47:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 51 seconds
Variants: generated 200, build-succeeded 112, build-failed 61, syntax-invalid 23, redundant 4
Fitness: max 0.833(108), min 0.167(1), ave 0.823
Test execution time: sum 7625 ms, max 138 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:47:32 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-07 14:48:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 25 seconds
Variants: generated 200, build-succeeded 110, build-failed 63, syntax-invalid 21, redundant 6
Fitness: max 0.833(104), min 0.167(5), ave 0.802
Test execution time: sum 7408 ms, max 83 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:48:05 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-07 14:48:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 58 seconds
Variants: generated 200, build-succeeded 114, build-failed 59, syntax-invalid 22, redundant 5
Fitness: max 1(1), min 0.167(1), ave 0.827
Test execution time: sum 7546 ms, max 143 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:48:39 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-07 14:49:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 40 minutes 33 seconds
Variants: generated 200, build-succeeded 110, build-failed 66, syntax-invalid 17, redundant 7
Fitness: max 0.833(108), min 0.667(2), ave 0.83
Test execution time: sum 7721 ms, max 225 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 14:49:14 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-07 14:49:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 7 seconds
Variants: generated 200, build-succeeded 114, build-failed 60, syntax-invalid 21, redundant 5
Fitness: max 0.833(109), min 0.167(1), ave 0.822
Test execution time: sum 7575 ms, max 90 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:49:48 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-07 14:50:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 41 seconds
Variants: generated 200, build-succeeded 109, build-failed 62, syntax-invalid 23, redundant 6
Fitness: max 0.833(105), min 0.167(1), ave 0.823
Test execution time: sum 7295 ms, max 138 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:50:22 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-07 14:50:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 15 seconds
Variants: generated 200, build-succeeded 111, build-failed 63, syntax-invalid 21, redundant 5
Fitness: max 0.833(109), min 0.167(1), ave 0.826
Test execution time: sum 7462 ms, max 89 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:50:55 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-07 14:51:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 50 seconds
Variants: generated 200, build-succeeded 113, build-failed 64, syntax-invalid 15, redundant 8
Fitness: max 0.833(109), min 0.167(2), ave 0.819
Test execution time: sum 7547 ms, max 136 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:51:30 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-07 14:52:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 24 seconds
Variants: generated 200, build-succeeded 111, build-failed 61, syntax-invalid 22, redundant 6
Fitness: max 0.833(105), min 0.167(3), ave 0.811
Test execution time: sum 7349 ms, max 126 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 14:52:05 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-07 14:52:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 59 seconds
Variants: generated 200, build-succeeded 117, build-failed 57, syntax-invalid 21, redundant 5
Fitness: max 0.833(115), min 0.167(2), ave 0.822
Test execution time: sum 7874 ms, max 88 ms, min 58 ms
----------------------------------------------------------------

2023-08-07 14:52:39 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-07 14:53:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 33 seconds
Variants: generated 200, build-succeeded 110, build-failed 61, syntax-invalid 25, redundant 4
Fitness: max 0.833(108), min 0.167(1), ave 0.826
Test execution time: sum 7359 ms, max 131 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:53:14 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-07 14:53:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 8 seconds
Variants: generated 200, build-succeeded 109, build-failed 59, syntax-invalid 25, redundant 7
Fitness: max 0.833(108), min 0.667(1), ave 0.832
Test execution time: sum 7515 ms, max 203 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:53:49 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-07 14:54:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 42 seconds
Variants: generated 200, build-succeeded 109, build-failed 56, syntax-invalid 30, redundant 5
Fitness: max 0.833(108), min 0.667(1), ave 0.832
Test execution time: sum 7264 ms, max 89 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:54:22 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-07 14:54:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 18 seconds
Variants: generated 200, build-succeeded 119, build-failed 59, syntax-invalid 20, redundant 2
Fitness: max 0.833(115), min 0.167(1), ave 0.824
Test execution time: sum 8049 ms, max 149 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:54:59 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-07 14:55:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 53 seconds
Variants: generated 200, build-succeeded 105, build-failed 63, syntax-invalid 27, redundant 5
Fitness: max 0.833(102), min 0.667(3), ave 0.829
Test execution time: sum 7069 ms, max 87 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 14:55:33 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-07 14:56:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 28 seconds
Variants: generated 200, build-succeeded 108, build-failed 61, syntax-invalid 28, redundant 3
Fitness: max 0.833(106), min 0.667(2), ave 0.83
Test execution time: sum 7187 ms, max 123 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 14:56:08 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-07 14:56:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 6 seconds
Variants: generated 200, build-succeeded 125, build-failed 57, syntax-invalid 13, redundant 5
Fitness: max 0.833(123), min 0.167(1), ave 0.827
Test execution time: sum 8637 ms, max 136 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 14:56:46 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-07 14:57:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 41 seconds
Variants: generated 200, build-succeeded 119, build-failed 55, syntax-invalid 21, redundant 5
Fitness: max 0.833(117), min 0.5(1), ave 0.829
Test execution time: sum 8047 ms, max 92 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 14:57:22 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-07 14:57:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 49 minutes 17 seconds
Variants: generated 200, build-succeeded 111, build-failed 56, syntax-invalid 27, redundant 6
Fitness: max 0.833(109), min 0.667(2), ave 0.83
Test execution time: sum 7530 ms, max 129 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:57:58 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-07 14:58:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 49 minutes 55 seconds
Variants: generated 200, build-succeeded 128, build-failed 50, syntax-invalid 20, redundant 2
Fitness: max 1(1), min 0.667(5), ave 0.828
Test execution time: sum 8796 ms, max 137 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 14:58:35 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-07 14:59:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 50 minutes 30 seconds
Variants: generated 200, build-succeeded 118, build-failed 56, syntax-invalid 23, redundant 3
Fitness: max 0.833(114), min 0.667(4), ave 0.828
Test execution time: sum 7936 ms, max 101 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:59:11 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-07 14:59:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 minutes 6 seconds
Variants: generated 200, build-succeeded 109, build-failed 61, syntax-invalid 27, redundant 3
Fitness: max 0.833(108), min 0.667(1), ave 0.832
Test execution time: sum 7337 ms, max 128 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 14:59:47 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-07 15:00:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 minutes 41 seconds
Variants: generated 200, build-succeeded 106, build-failed 59, syntax-invalid 29, redundant 6
Fitness: max 0.833(101), min 0.167(2), ave 0.816
Test execution time: sum 7271 ms, max 89 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 15:00:22 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-07 15:00:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 19 seconds
Variants: generated 200, build-succeeded 119, build-failed 53, syntax-invalid 24, redundant 4
Fitness: max 0.833(118), min 0.667(1), ave 0.832
Test execution time: sum 8075 ms, max 230 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 15:00:59 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-07 15:01:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 54 seconds
Variants: generated 200, build-succeeded 99, build-failed 65, syntax-invalid 31, redundant 5
Fitness: max 0.833(98), min 0.5(1), ave 0.83
Test execution time: sum 6935 ms, max 202 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:01:35 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-07 15:02:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 27 seconds
Variants: generated 200, build-succeeded 95, build-failed 60, syntax-invalid 41, redundant 4
Fitness: max 0.833(94), min 0.667(1), ave 0.832
Test execution time: sum 6403 ms, max 88 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:02:07 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-07 15:02:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 2 seconds
Variants: generated 200, build-succeeded 100, build-failed 56, syntax-invalid 36, redundant 8
Fitness: max 0.833(98), min 0.167(1), ave 0.825
Test execution time: sum 6963 ms, max 132 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 15:02:43 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-07 15:03:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 38 seconds
Variants: generated 200, build-succeeded 111, build-failed 54, syntax-invalid 30, redundant 5
Fitness: max 0.833(107), min 0.333(1), ave 0.824
Test execution time: sum 7486 ms, max 85 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:03:18 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-07 15:03:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 55 minutes 12 seconds
Variants: generated 200, build-succeeded 91, build-failed 66, syntax-invalid 38, redundant 5
Fitness: max 0.833(89), min 0.167(1), ave 0.824
Test execution time: sum 6249 ms, max 143 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:03:53 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-07 15:04:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 55 minutes 48 seconds
Variants: generated 200, build-succeeded 106, build-failed 61, syntax-invalid 30, redundant 3
Fitness: max 0.833(104), min 0.667(2), ave 0.83
Test execution time: sum 7279 ms, max 91 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:04:29 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-07 15:05:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 56 minutes 25 seconds
Variants: generated 200, build-succeeded 105, build-failed 66, syntax-invalid 25, redundant 4
Fitness: max 0.833(102), min 0.167(2), ave 0.819
Test execution time: sum 7271 ms, max 143 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 15:05:06 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-07 15:05:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 2 seconds
Variants: generated 200, build-succeeded 106, build-failed 54, syntax-invalid 35, redundant 5
Fitness: max 0.833(101), min 0.167(4), ave 0.807
Test execution time: sum 7543 ms, max 222 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 15:05:42 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-07 15:06:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 36 seconds
Variants: generated 200, build-succeeded 94, build-failed 58, syntax-invalid 39, redundant 9
Fitness: max 0.833(90), min 0.167(2), ave 0.816
Test execution time: sum 6364 ms, max 112 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:06:17 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-07 15:06:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 minutes 12 seconds
Variants: generated 200, build-succeeded 100, build-failed 58, syntax-invalid 35, redundant 7
Fitness: max 0.833(98), min 0.167(2), ave 0.82
Test execution time: sum 6940 ms, max 154 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:06:53 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-07 15:07:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 minutes 48 seconds
Variants: generated 200, build-succeeded 101, build-failed 64, syntax-invalid 31, redundant 4
Fitness: max 0.833(100), min 0.167(1), ave 0.827
Test execution time: sum 6871 ms, max 86 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 15:07:28 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-07 15:08:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 25 seconds
Variants: generated 200, build-succeeded 107, build-failed 57, syntax-invalid 31, redundant 5
Fitness: max 0.833(104), min 0.167(1), ave 0.824
Test execution time: sum 7331 ms, max 135 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:08:05 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-07 15:08:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 1 seconds
Variants: generated 200, build-succeeded 101, build-failed 63, syntax-invalid 29, redundant 7
Fitness: max 0.833(99), min 0.667(2), ave 0.83
Test execution time: sum 6929 ms, max 88 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:08:42 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-07 15:09:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 seconds
Variants: generated 200, build-succeeded 107, build-failed 57, syntax-invalid 27, redundant 9
Fitness: max 0.833(105), min 0.167(2), ave 0.821
Test execution time: sum 7167 ms, max 210 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 15:09:19 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-07 15:09:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 1 minutes 17 seconds
Variants: generated 200, build-succeeded 113, build-failed 49, syntax-invalid 31, redundant 7
Fitness: max 0.833(110), min 0.167(1), ave 0.824
Test execution time: sum 7948 ms, max 161 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:09:58 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-07 15:10:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 1 minutes 53 seconds
Variants: generated 200, build-succeeded 98, build-failed 57, syntax-invalid 40, redundant 5
Fitness: max 0.833(96), min 0.667(2), ave 0.83
Test execution time: sum 6638 ms, max 95 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:10:33 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-07 15:11:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 32 seconds
Variants: generated 200, build-succeeded 107, build-failed 65, syntax-invalid 23, redundant 5
Fitness: max 0.833(105), min 0.167(1), ave 0.826
Test execution time: sum 7373 ms, max 136 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:11:13 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-07 15:11:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 3 minutes 9 seconds
Variants: generated 200, build-succeeded 94, build-failed 67, syntax-invalid 32, redundant 7
Fitness: max 0.833(93), min 0.5(1), ave 0.83
Test execution time: sum 6545 ms, max 89 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:11:49 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-07 15:27:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 48 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 32, redundant 5
Fitness: max 0.833(103), min 0.167(1), ave 0.825
Test execution time: sum 907418 ms, max 900137 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:27:28 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-07 15:28:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 22 seconds
Variants: generated 200, build-succeeded 86, build-failed 64, syntax-invalid 48, redundant 2
Fitness: max 0.833(81), min 0.167(4), ave 0.8
Test execution time: sum 5939 ms, max 91 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 15:28:02 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-07 15:28:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 59 seconds
Variants: generated 200, build-succeeded 100, build-failed 64, syntax-invalid 32, redundant 4
Fitness: max 0.833(100), min 0.833(100), ave 0.833
Test execution time: sum 7034 ms, max 134 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:28:40 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-07 15:29:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 20 minutes 38 seconds
Variants: generated 200, build-succeeded 102, build-failed 57, syntax-invalid 35, redundant 6
Fitness: max 0.833(101), min 0.667(1), ave 0.832
Test execution time: sum 7351 ms, max 210 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 15:29:19 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-07 15:29:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 15 seconds
Variants: generated 200, build-succeeded 95, build-failed 64, syntax-invalid 35, redundant 6
Fitness: max 0.833(92), min 0.167(1), ave 0.823
Test execution time: sum 6493 ms, max 87 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:29:55 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-07 15:30:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 49 seconds
Variants: generated 200, build-succeeded 81, build-failed 65, syntax-invalid 51, redundant 3
Fitness: max 0.833(81), min 0.833(81), ave 0.833
Test execution time: sum 5645 ms, max 144 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:30:29 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-07 15:31:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 22 minutes 22 seconds
Variants: generated 200, build-succeeded 82, build-failed 58, syntax-invalid 54, redundant 6
Fitness: max 0.833(80), min 0.667(2), ave 0.829
Test execution time: sum 5611 ms, max 94 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 15:31:02 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-07 15:31:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 23 minutes 0 seconds
Variants: generated 200, build-succeeded 94, build-failed 64, syntax-invalid 37, redundant 5
Fitness: max 0.833(91), min 0.167(1), ave 0.823
Test execution time: sum 6513 ms, max 163 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:31:41 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-07 15:32:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 23 minutes 36 seconds
Variants: generated 200, build-succeeded 96, build-failed 58, syntax-invalid 42, redundant 4
Fitness: max 0.833(95), min 0.167(1), ave 0.826
Test execution time: sum 6668 ms, max 87 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:32:17 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-07 15:32:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 13 seconds
Variants: generated 200, build-succeeded 93, build-failed 59, syntax-invalid 43, redundant 5
Fitness: max 0.833(91), min 0.667(2), ave 0.83
Test execution time: sum 6486 ms, max 132 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:32:54 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-07 15:33:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 50 seconds
Variants: generated 200, build-succeeded 93, build-failed 63, syntax-invalid 38, redundant 6
Fitness: max 0.833(90), min 0.667(3), ave 0.828
Test execution time: sum 6595 ms, max 90 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:33:31 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-07 15:34:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 29 seconds
Variants: generated 200, build-succeeded 97, build-failed 61, syntax-invalid 35, redundant 7
Fitness: max 0.833(93), min 0.167(2), ave 0.814
Test execution time: sum 6664 ms, max 130 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:34:10 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-07 15:34:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 26 minutes 6 seconds
Variants: generated 200, build-succeeded 88, build-failed 69, syntax-invalid 40, redundant 3
Fitness: max 0.833(84), min 0.167(2), ave 0.814
Test execution time: sum 6160 ms, max 85 ms, min 60 ms
----------------------------------------------------------------

2023-08-07 15:34:47 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-07 15:35:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 26 minutes 44 seconds
Variants: generated 200, build-succeeded 100, build-failed 55, syntax-invalid 40, redundant 5
Fitness: max 0.833(97), min 0.667(3), ave 0.828
Test execution time: sum 6942 ms, max 139 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:35:25 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-07 15:36:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 23 seconds
Variants: generated 200, build-succeeded 101, build-failed 56, syntax-invalid 35, redundant 8
Fitness: max 0.833(99), min 0.667(2), ave 0.83
Test execution time: sum 7108 ms, max 86 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:36:04 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-07 15:36:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 28 minutes 3 seconds
Variants: generated 200, build-succeeded 101, build-failed 55, syntax-invalid 37, redundant 7
Fitness: max 0.833(98), min 0.167(1), ave 0.823
Test execution time: sum 7045 ms, max 140 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 15:36:43 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-07 15:37:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 28 minutes 42 seconds
Variants: generated 200, build-succeeded 97, build-failed 52, syntax-invalid 39, redundant 12
Fitness: max 0.833(97), min 0.833(97), ave 0.833
Test execution time: sum 6838 ms, max 138 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:37:22 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-07 15:38:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 29 minutes 22 seconds
Variants: generated 200, build-succeeded 98, build-failed 68, syntax-invalid 28, redundant 6
Fitness: max 0.833(96), min 0.167(1), ave 0.825
Test execution time: sum 6866 ms, max 92 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 15:38:02 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-07 15:38:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 2 seconds
Variants: generated 200, build-succeeded 101, build-failed 63, syntax-invalid 34, redundant 2
Fitness: max 0.833(100), min 0.667(1), ave 0.832
Test execution time: sum 7078 ms, max 139 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:38:43 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-07 15:39:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 44 seconds
Variants: generated 200, build-succeeded 102, build-failed 63, syntax-invalid 32, redundant 3
Fitness: max 0.833(99), min 0.667(3), ave 0.828
Test execution time: sum 7461 ms, max 205 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:39:24 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-07 15:40:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 23 seconds
Variants: generated 200, build-succeeded 98, build-failed 59, syntax-invalid 36, redundant 7
Fitness: max 0.833(96), min 0.167(1), ave 0.825
Test execution time: sum 6834 ms, max 90 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:40:04 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-07 15:40:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 5 seconds
Variants: generated 200, build-succeeded 103, build-failed 62, syntax-invalid 30, redundant 5
Fitness: max 0.833(98), min 0.167(1), ave 0.819
Test execution time: sum 7313 ms, max 157 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 15:40:46 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-07 15:41:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 48 seconds
Variants: generated 200, build-succeeded 106, build-failed 67, syntax-invalid 24, redundant 3
Fitness: max 0.833(104), min 0.667(2), ave 0.83
Test execution time: sum 7600 ms, max 140 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:41:28 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-07 15:42:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 29 seconds
Variants: generated 200, build-succeeded 103, build-failed 63, syntax-invalid 30, redundant 4
Fitness: max 0.833(103), min 0.833(103), ave 0.833
Test execution time: sum 7263 ms, max 120 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:42:09 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-07 15:42:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 10 seconds
Variants: generated 200, build-succeeded 99, build-failed 65, syntax-invalid 32, redundant 4
Fitness: max 0.833(99), min 0.833(99), ave 0.833
Test execution time: sum 7062 ms, max 142 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:42:51 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-07 15:43:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 51 seconds
Variants: generated 200, build-succeeded 94, build-failed 73, syntax-invalid 31, redundant 2
Fitness: max 0.833(93), min 0.667(1), ave 0.832
Test execution time: sum 6734 ms, max 88 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:43:31 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-07 15:44:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 31 seconds
Variants: generated 200, build-succeeded 90, build-failed 68, syntax-invalid 37, redundant 5
Fitness: max 0.833(87), min 0.167(2), ave 0.817
Test execution time: sum 6385 ms, max 150 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:44:12 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-07 15:44:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 13 seconds
Variants: generated 200, build-succeeded 95, build-failed 70, syntax-invalid 28, redundant 7
Fitness: max 0.833(94), min 0.667(1), ave 0.832
Test execution time: sum 6726 ms, max 134 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:44:54 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-07 15:45:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 53 seconds
Variants: generated 200, build-succeeded 92, build-failed 68, syntax-invalid 36, redundant 4
Fitness: max 0.833(87), min 0.5(2), ave 0.821
Test execution time: sum 6569 ms, max 84 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 15:45:34 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-07 15:46:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 35 seconds
Variants: generated 200, build-succeeded 105, build-failed 55, syntax-invalid 38, redundant 2
Fitness: max 0.833(104), min 0.667(1), ave 0.832
Test execution time: sum 7500 ms, max 137 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:46:16 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-07 15:46:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 18 seconds
Variants: generated 200, build-succeeded 104, build-failed 59, syntax-invalid 31, redundant 6
Fitness: max 0.833(100), min 0.167(1), ave 0.822
Test execution time: sum 7392 ms, max 156 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 15:46:59 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-07 15:47:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 59 seconds
Variants: generated 200, build-succeeded 98, build-failed 58, syntax-invalid 37, redundant 7
Fitness: max 0.833(95), min 0.167(1), ave 0.823
Test execution time: sum 6867 ms, max 86 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:47:39 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-07 15:48:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 42 seconds
Variants: generated 200, build-succeeded 102, build-failed 63, syntax-invalid 28, redundant 7
Fitness: max 0.833(101), min 0.167(1), ave 0.827
Test execution time: sum 7337 ms, max 147 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 15:48:23 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-07 15:49:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 25 seconds
Variants: generated 200, build-succeeded 90, build-failed 71, syntax-invalid 32, redundant 7
Fitness: max 0.833(89), min 0.667(1), ave 0.831
Test execution time: sum 6642 ms, max 143 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 15:49:05 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-07 15:49:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 7 seconds
Variants: generated 200, build-succeeded 108, build-failed 57, syntax-invalid 30, redundant 5
Fitness: max 0.833(105), min 0.667(3), ave 0.829
Test execution time: sum 7565 ms, max 90 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:49:48 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-07 15:50:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 50 seconds
Variants: generated 200, build-succeeded 104, build-failed 61, syntax-invalid 33, redundant 2
Fitness: max 0.833(103), min 0.167(1), ave 0.827
Test execution time: sum 7312 ms, max 142 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 15:50:30 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-07 15:51:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 33 seconds
Variants: generated 200, build-succeeded 106, build-failed 59, syntax-invalid 31, redundant 4
Fitness: max 0.833(106), min 0.833(106), ave 0.833
Test execution time: sum 7641 ms, max 141 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 15:51:14 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-07 15:51:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 15 seconds
Variants: generated 200, build-succeeded 108, build-failed 49, syntax-invalid 37, redundant 6
Fitness: max 1(1), min 0.167(2), ave 0.816
Test execution time: sum 7645 ms, max 94 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 15:51:56 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-07 15:52:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 58 seconds
Variants: generated 200, build-succeeded 105, build-failed 50, syntax-invalid 39, redundant 6
Fitness: max 0.833(101), min 0.167(1), ave 0.822
Test execution time: sum 7540 ms, max 134 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 15:52:39 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-07 15:53:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 40 seconds
Variants: generated 200, build-succeeded 99, build-failed 49, syntax-invalid 46, redundant 6
Fitness: max 0.833(96), min 0.667(3), ave 0.828
Test execution time: sum 7333 ms, max 141 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 15:53:21 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-07 15:53:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 17 seconds
Variants: generated 200, build-succeeded 78, build-failed 61, syntax-invalid 56, redundant 5
Fitness: max 0.833(73), min 0.167(1), ave 0.814
Test execution time: sum 5505 ms, max 86 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 15:53:58 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-07 15:54:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 59 seconds
Variants: generated 200, build-succeeded 87, build-failed 59, syntax-invalid 48, redundant 6
Fitness: max 0.833(83), min 0.667(4), ave 0.826
Test execution time: sum 6225 ms, max 133 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 15:54:39 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-07 15:55:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 46 minutes 38 seconds
Variants: generated 200, build-succeeded 80, build-failed 62, syntax-invalid 52, redundant 6
Fitness: max 0.833(77), min 0.167(1), ave 0.821
Test execution time: sum 5682 ms, max 87 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 15:55:18 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-07 15:56:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 47 minutes 20 seconds
Variants: generated 200, build-succeeded 83, build-failed 71, syntax-invalid 44, redundant 2
Fitness: max 0.833(82), min 0.667(1), ave 0.831
Test execution time: sum 6036 ms, max 150 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 15:56:00 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-07 15:56:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 1 seconds
Variants: generated 200, build-succeeded 87, build-failed 61, syntax-invalid 48, redundant 4
Fitness: max 0.833(86), min 0.167(1), ave 0.826
Test execution time: sum 6285 ms, max 87 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 15:56:41 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-07 15:57:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 43 seconds
Variants: generated 200, build-succeeded 82, build-failed 74, syntax-invalid 42, redundant 2
Fitness: max 0.833(82), min 0.833(82), ave 0.833
Test execution time: sum 5841 ms, max 141 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 15:57:23 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-07 15:58:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 24 seconds
Variants: generated 200, build-succeeded 86, build-failed 62, syntax-invalid 47, redundant 5
Fitness: max 1(1), min 0.167(1), ave 0.822
Test execution time: sum 6293 ms, max 144 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 15:58:05 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-07 15:58:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 5 seconds
Variants: generated 200, build-succeeded 92, build-failed 55, syntax-invalid 49, redundant 4
Fitness: max 0.833(86), min 0.167(2), ave 0.812
Test execution time: sum 6514 ms, max 87 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 15:58:46 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-07 15:59:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 47 seconds
Variants: generated 200, build-succeeded 82, build-failed 55, syntax-invalid 52, redundant 11
Fitness: max 1(1), min 0.667(3), ave 0.829
Test execution time: sum 5928 ms, max 145 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 15:59:27 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-07 16:00:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 27 seconds
Variants: generated 200, build-succeeded 78, build-failed 64, syntax-invalid 55, redundant 3
Fitness: max 0.833(76), min 0.667(2), ave 0.829
Test execution time: sum 5526 ms, max 94 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:00:07 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-07 16:00:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 52 minutes 9 seconds
Variants: generated 200, build-succeeded 78, build-failed 68, syntax-invalid 51, redundant 3
Fitness: max 0.833(74), min 0.167(2), ave 0.81
Test execution time: sum 5647 ms, max 154 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 16:00:49 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-07 16:01:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 52 minutes 51 seconds
Variants: generated 200, build-succeeded 88, build-failed 63, syntax-invalid 47, redundant 2
Fitness: max 0.833(84), min 0.167(1), ave 0.82
Test execution time: sum 6405 ms, max 94 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 16:01:32 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-07 16:02:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 53 minutes 34 seconds
Variants: generated 200, build-succeeded 85, build-failed 62, syntax-invalid 49, redundant 4
Fitness: max 0.833(83), min 0.667(2), ave 0.829
Test execution time: sum 6165 ms, max 154 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 16:02:14 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-07 16:02:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 54 minutes 16 seconds
Variants: generated 200, build-succeeded 94, build-failed 55, syntax-invalid 48, redundant 3
Fitness: max 0.833(93), min 0.667(1), ave 0.832
Test execution time: sum 6729 ms, max 88 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 16:02:57 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-07 16:03:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 2 seconds
Variants: generated 200, build-succeeded 98, build-failed 57, syntax-invalid 37, redundant 8
Fitness: max 0.833(97), min 0.167(1), ave 0.827
Test execution time: sum 6989 ms, max 139 ms, min 61 ms
----------------------------------------------------------------

2023-08-07 16:03:43 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-07 16:04:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 47 seconds
Variants: generated 200, build-succeeded 93, build-failed 61, syntax-invalid 40, redundant 6
Fitness: max 0.833(93), min 0.833(93), ave 0.833
Test execution time: sum 6800 ms, max 90 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 16:04:28 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-07 16:05:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 56 minutes 31 seconds
Variants: generated 200, build-succeeded 88, build-failed 65, syntax-invalid 44, redundant 3
Fitness: max 0.833(87), min 0.667(1), ave 0.831
Test execution time: sum 6324 ms, max 148 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:05:12 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-07 16:05:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 57 minutes 14 seconds
Variants: generated 200, build-succeeded 86, build-failed 58, syntax-invalid 52, redundant 4
Fitness: max 0.833(85), min 0.167(1), ave 0.826
Test execution time: sum 6280 ms, max 88 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 16:05:54 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-07 16:06:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 57 minutes 59 seconds
Variants: generated 200, build-succeeded 90, build-failed 61, syntax-invalid 45, redundant 4
Fitness: max 0.833(88), min 0.667(2), ave 0.83
Test execution time: sum 6558 ms, max 149 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 16:06:39 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-07 16:07:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 58 minutes 45 seconds
Variants: generated 200, build-succeeded 96, build-failed 60, syntax-invalid 34, redundant 10
Fitness: max 0.833(95), min 0.667(1), ave 0.832
Test execution time: sum 6944 ms, max 86 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:07:26 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-07 16:08:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 59 minutes 31 seconds
Variants: generated 200, build-succeeded 95, build-failed 62, syntax-invalid 41, redundant 2
Fitness: max 0.833(91), min 0.667(4), ave 0.826
Test execution time: sum 6855 ms, max 136 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:08:12 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-07 16:08:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 18 seconds
Variants: generated 200, build-succeeded 89, build-failed 70, syntax-invalid 39, redundant 2
Fitness: max 1(1), min 0.833(88), ave 0.835
Test execution time: sum 6603 ms, max 154 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:08:58 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-07 16:09:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 minutes 4 seconds
Variants: generated 200, build-succeeded 95, build-failed 61, syntax-invalid 38, redundant 6
Fitness: max 0.833(91), min 0.167(1), ave 0.819
Test execution time: sum 6831 ms, max 89 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 16:09:45 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-07 16:10:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 minutes 51 seconds
Variants: generated 200, build-succeeded 91, build-failed 66, syntax-invalid 38, redundant 5
Fitness: max 0.833(91), min 0.833(91), ave 0.833
Test execution time: sum 6686 ms, max 220 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:10:32 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-07 16:11:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 2 minutes 39 seconds
Variants: generated 200, build-succeeded 102, build-failed 59, syntax-invalid 34, redundant 5
Fitness: max 0.833(100), min 0.667(2), ave 0.83
Test execution time: sum 7454 ms, max 89 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:11:20 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-07 16:12:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 3 minutes 28 seconds
Variants: generated 200, build-succeeded 103, build-failed 65, syntax-invalid 28, redundant 4
Fitness: max 0.833(102), min 0.667(1), ave 0.832
Test execution time: sum 7480 ms, max 153 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:12:09 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-07 16:12:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 4 minutes 17 seconds
Variants: generated 200, build-succeeded 103, build-failed 55, syntax-invalid 36, redundant 6
Fitness: max 1(1), min 0.167(1), ave 0.825
Test execution time: sum 7596 ms, max 144 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 16:12:58 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-07 16:13:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 5 minutes 5 seconds
Variants: generated 200, build-succeeded 108, build-failed 55, syntax-invalid 34, redundant 3
Fitness: max 1(1), min 0.667(2), ave 0.832
Test execution time: sum 7807 ms, max 89 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:13:45 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-07 16:14:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 5 minutes 53 seconds
Variants: generated 200, build-succeeded 95, build-failed 62, syntax-invalid 35, redundant 8
Fitness: max 0.833(94), min 0.667(1), ave 0.832
Test execution time: sum 6946 ms, max 159 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:14:34 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-07 16:15:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 6 minutes 44 seconds
Variants: generated 200, build-succeeded 109, build-failed 58, syntax-invalid 26, redundant 7
Fitness: max 0.833(109), min 0.833(109), ave 0.833
Test execution time: sum 8117 ms, max 153 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:15:25 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-07 16:16:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 7 minutes 33 seconds
Variants: generated 200, build-succeeded 103, build-failed 59, syntax-invalid 33, redundant 5
Fitness: max 0.833(99), min 0.667(4), ave 0.827
Test execution time: sum 7335 ms, max 89 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:16:13 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-07 16:17:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 8 minutes 23 seconds
Variants: generated 200, build-succeeded 108, build-failed 57, syntax-invalid 28, redundant 7
Fitness: max 0.833(107), min 0.667(1), ave 0.832
Test execution time: sum 7837 ms, max 133 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:17:04 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-07 16:17:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 9 minutes 16 seconds
Variants: generated 200, build-succeeded 115, build-failed 55, syntax-invalid 23, redundant 7
Fitness: max 0.833(115), min 0.833(115), ave 0.833
Test execution time: sum 8517 ms, max 142 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 16:17:57 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-07 16:18:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 10 minutes 7 seconds
Variants: generated 200, build-succeeded 102, build-failed 64, syntax-invalid 30, redundant 4
Fitness: max 0.833(101), min 0.667(1), ave 0.832
Test execution time: sum 7457 ms, max 93 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:18:47 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-07 16:19:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 10 minutes 56 seconds
Variants: generated 200, build-succeeded 96, build-failed 64, syntax-invalid 31, redundant 9
Fitness: max 0.833(96), min 0.833(96), ave 0.833
Test execution time: sum 7006 ms, max 154 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:19:37 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-07 16:20:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 11 minutes 44 seconds
Variants: generated 200, build-succeeded 89, build-failed 67, syntax-invalid 38, redundant 6
Fitness: max 0.833(87), min 0.667(2), ave 0.83
Test execution time: sum 6628 ms, max 145 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 16:20:24 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-07 16:21:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 12 minutes 32 seconds
Variants: generated 200, build-succeeded 103, build-failed 62, syntax-invalid 31, redundant 4
Fitness: max 0.833(99), min 0.167(2), ave 0.817
Test execution time: sum 7559 ms, max 93 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 16:21:13 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-07 16:22:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 13 minutes 22 seconds
Variants: generated 200, build-succeeded 95, build-failed 67, syntax-invalid 34, redundant 4
Fitness: max 0.833(91), min 0.167(1), ave 0.821
Test execution time: sum 6941 ms, max 164 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:22:03 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-07 16:22:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 14 minutes 10 seconds
Variants: generated 200, build-succeeded 97, build-failed 61, syntax-invalid 37, redundant 5
Fitness: max 0.833(95), min 0.667(2), ave 0.83
Test execution time: sum 7070 ms, max 88 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:22:51 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-07 16:23:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 15 minutes 0 seconds
Variants: generated 200, build-succeeded 93, build-failed 56, syntax-invalid 45, redundant 6
Fitness: max 0.833(89), min 0.167(3), ave 0.81
Test execution time: sum 7182 ms, max 198 ms, min 62 ms
----------------------------------------------------------------

2023-08-07 16:23:40 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-07 16:24:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 15 minutes 52 seconds
Variants: generated 200, build-succeeded 102, build-failed 62, syntax-invalid 30, redundant 6
Fitness: max 0.833(100), min 0.167(1), ave 0.825
Test execution time: sum 7607 ms, max 149 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 16:24:33 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-07 16:25:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 16 minutes 41 seconds
Variants: generated 200, build-succeeded 97, build-failed 64, syntax-invalid 34, redundant 5
Fitness: max 0.833(96), min 0.667(1), ave 0.832
Test execution time: sum 7009 ms, max 91 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:25:22 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-07 16:26:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 30 seconds
Variants: generated 200, build-succeeded 91, build-failed 60, syntax-invalid 47, redundant 2
Fitness: max 0.833(90), min 0.167(1), ave 0.826
Test execution time: sum 6747 ms, max 154 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 16:26:10 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-07 16:26:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 18 minutes 19 seconds
Variants: generated 200, build-succeeded 99, build-failed 52, syntax-invalid 40, redundant 9
Fitness: max 0.833(95), min 0.167(2), ave 0.816
Test execution time: sum 7307 ms, max 132 ms, min 63 ms
----------------------------------------------------------------

2023-08-07 16:26:59 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-07 16:27:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 10 seconds
Variants: generated 200, build-succeeded 102, build-failed 59, syntax-invalid 34, redundant 5
Fitness: max 0.833(102), min 0.833(102), ave 0.833
Test execution time: sum 7512 ms, max 146 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 16:27:51 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-07 16:28:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 58 seconds
Variants: generated 200, build-succeeded 84, build-failed 61, syntax-invalid 52, redundant 3
Fitness: max 0.833(83), min 0.667(1), ave 0.831
Test execution time: sum 6329 ms, max 147 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:28:39 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-07 16:29:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 45 seconds
Variants: generated 200, build-succeeded 83, build-failed 65, syntax-invalid 45, redundant 7
Fitness: max 0.833(82), min 0.167(1), ave 0.825
Test execution time: sum 6113 ms, max 109 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 16:29:26 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-07 16:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 21 minutes 38 seconds
Variants: generated 200, build-succeeded 105, build-failed 58, syntax-invalid 36, redundant 1
Fitness: max 0.833(104), min 0.667(1), ave 0.832
Test execution time: sum 7875 ms, max 150 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:30:18 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-08-07 16:31:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 22 minutes 27 seconds
Variants: generated 200, build-succeeded 90, build-failed 63, syntax-invalid 44, redundant 3
Fitness: max 0.833(86), min 0.667(4), ave 0.826
Test execution time: sum 6883 ms, max 92 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:31:08 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-08-07 16:31:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 23 minutes 18 seconds
Variants: generated 200, build-succeeded 94, build-failed 60, syntax-invalid 43, redundant 3
Fitness: max 0.833(94), min 0.833(94), ave 0.833
Test execution time: sum 6995 ms, max 239 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:31:59 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-08-07 16:32:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 24 minutes 8 seconds
Variants: generated 200, build-succeeded 91, build-failed 58, syntax-invalid 46, redundant 5
Fitness: max 0.833(89), min 0.667(2), ave 0.83
Test execution time: sum 6888 ms, max 92 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:32:49 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-08-07 16:33:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 24 minutes 58 seconds
Variants: generated 200, build-succeeded 89, build-failed 59, syntax-invalid 49, redundant 3
Fitness: max 1(1), min 0.167(1), ave 0.824
Test execution time: sum 6681 ms, max 149 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:33:38 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-08-07 16:34:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 25 minutes 48 seconds
Variants: generated 200, build-succeeded 93, build-failed 55, syntax-invalid 44, redundant 8
Fitness: max 0.833(91), min 0.667(2), ave 0.83
Test execution time: sum 6985 ms, max 140 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:34:29 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-08-07 16:35:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 40 seconds
Variants: generated 200, build-succeeded 92, build-failed 63, syntax-invalid 43, redundant 2
Fitness: max 0.833(89), min 0.167(1), ave 0.822
Test execution time: sum 6803 ms, max 92 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 16:35:20 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-08-07 16:36:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 27 minutes 33 seconds
Variants: generated 200, build-succeeded 104, build-failed 52, syntax-invalid 34, redundant 10
Fitness: max 0.833(103), min 0.5(1), ave 0.83
Test execution time: sum 7626 ms, max 146 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:36:14 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-08-07 16:37:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 28 minutes 23 seconds
Variants: generated 200, build-succeeded 92, build-failed 55, syntax-invalid 47, redundant 6
Fitness: max 0.833(90), min 0.667(2), ave 0.83
Test execution time: sum 6988 ms, max 147 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:37:04 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-08-07 16:37:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 29 minutes 13 seconds
Variants: generated 200, build-succeeded 86, build-failed 68, syntax-invalid 43, redundant 3
Fitness: max 0.833(85), min 0.667(1), ave 0.831
Test execution time: sum 6414 ms, max 114 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:37:54 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-08-07 16:38:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 30 minutes 10 seconds
Variants: generated 200, build-succeeded 112, build-failed 55, syntax-invalid 29, redundant 4
Fitness: max 1(1), min 0.667(2), ave 0.832
Test execution time: sum 8489 ms, max 140 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:38:50 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-08-07 16:39:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 31 minutes 3 seconds
Variants: generated 200, build-succeeded 98, build-failed 62, syntax-invalid 36, redundant 4
Fitness: max 0.833(97), min 0.667(1), ave 0.832
Test execution time: sum 7677 ms, max 147 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 16:39:43 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-08-07 16:40:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 31 minutes 56 seconds
Variants: generated 200, build-succeeded 96, build-failed 63, syntax-invalid 34, redundant 7
Fitness: max 0.833(94), min 0.667(2), ave 0.83
Test execution time: sum 7190 ms, max 90 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 16:40:36 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-08-07 16:41:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 32 minutes 51 seconds
Variants: generated 200, build-succeeded 107, build-failed 53, syntax-invalid 33, redundant 7
Fitness: max 0.833(101), min 0.167(1), ave 0.819
Test execution time: sum 8055 ms, max 146 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 16:41:31 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-08-07 16:42:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 33 minutes 44 seconds
Variants: generated 200, build-succeeded 97, build-failed 61, syntax-invalid 38, redundant 4
Fitness: max 0.833(97), min 0.833(97), ave 0.833
Test execution time: sum 7416 ms, max 134 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 16:42:24 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-08-07 16:43:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 34 minutes 38 seconds
Variants: generated 200, build-succeeded 97, build-failed 58, syntax-invalid 37, redundant 8
Fitness: max 0.833(96), min 0.167(1), ave 0.826
Test execution time: sum 7413 ms, max 143 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 16:43:19 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-08-07 16:44:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 35 minutes 34 seconds
Variants: generated 200, build-succeeded 106, build-failed 59, syntax-invalid 33, redundant 2
Fitness: max 1(1), min 0.833(105), ave 0.835
Test execution time: sum 8031 ms, max 144 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 16:44:15 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-08-07 16:45:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 36 minutes 31 seconds
Variants: generated 200, build-succeeded 107, build-failed 57, syntax-invalid 31, redundant 5
Fitness: max 0.833(106), min 0.667(1), ave 0.832
Test execution time: sum 8225 ms, max 149 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:45:11 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-08-07 16:46:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 37 minutes 25 seconds
Variants: generated 200, build-succeeded 98, build-failed 61, syntax-invalid 34, redundant 7
Fitness: max 0.833(96), min 0.667(2), ave 0.83
Test execution time: sum 7300 ms, max 91 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 16:46:05 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-08-07 16:47:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 38 minutes 25 seconds
Variants: generated 200, build-succeeded 109, build-failed 57, syntax-invalid 31, redundant 3
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 8509 ms, max 167 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:47:05 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-08-07 16:48:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 39 minutes 21 seconds
Variants: generated 200, build-succeeded 107, build-failed 49, syntax-invalid 39, redundant 5
Fitness: max 0.833(105), min 0.167(1), ave 0.826
Test execution time: sum 8450 ms, max 260 ms, min 69 ms
----------------------------------------------------------------

2023-08-07 16:48:02 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-08-07 16:48:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 40 minutes 14 seconds
Variants: generated 200, build-succeeded 98, build-failed 61, syntax-invalid 38, redundant 3
Fitness: max 0.833(97), min 0.667(1), ave 0.832
Test execution time: sum 7303 ms, max 92 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:48:55 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-08-07 16:49:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 41 minutes 12 seconds
Variants: generated 200, build-succeeded 113, build-failed 50, syntax-invalid 31, redundant 6
Fitness: max 0.833(109), min 0.667(4), ave 0.827
Test execution time: sum 8606 ms, max 145 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 16:49:53 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-08-07 16:50:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 42 minutes 6 seconds
Variants: generated 200, build-succeeded 102, build-failed 52, syntax-invalid 42, redundant 4
Fitness: max 0.833(99), min 0.667(3), ave 0.828
Test execution time: sum 7913 ms, max 143 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 16:50:47 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-08-07 16:51:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 43 minutes 1 seconds
Variants: generated 200, build-succeeded 94, build-failed 59, syntax-invalid 38, redundant 9
Fitness: max 1(1), min 0.167(2), ave 0.816
Test execution time: sum 7142 ms, max 146 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 16:51:42 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-08-07 16:52:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 43 minutes 57 seconds
Variants: generated 200, build-succeeded 99, build-failed 62, syntax-invalid 36, redundant 3
Fitness: max 0.833(97), min 0.333(1), ave 0.827
Test execution time: sum 7526 ms, max 152 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 16:52:38 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-08-07 16:53:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 44 minutes 56 seconds
Variants: generated 200, build-succeeded 118, build-failed 46, syntax-invalid 31, redundant 5
Fitness: max 0.833(113), min 0.167(2), ave 0.818
Test execution time: sum 9137 ms, max 151 ms, min 64 ms
----------------------------------------------------------------

2023-08-07 16:53:36 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-08-07 16:54:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 45 minutes 55 seconds
Variants: generated 200, build-succeeded 107, build-failed 59, syntax-invalid 30, redundant 4
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 8401 ms, max 105 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 16:54:36 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-08-07 16:55:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 46 minutes 52 seconds
Variants: generated 200, build-succeeded 100, build-failed 58, syntax-invalid 34, redundant 8
Fitness: max 0.833(98), min 0.167(1), ave 0.825
Test execution time: sum 7739 ms, max 206 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 16:55:33 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-08-07 16:56:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 47 minutes 45 seconds
Variants: generated 200, build-succeeded 97, build-failed 54, syntax-invalid 44, redundant 5
Fitness: max 0.833(94), min 0.167(1), ave 0.823
Test execution time: sum 7487 ms, max 89 ms, min 68 ms
----------------------------------------------------------------

2023-08-07 16:56:26 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-08-07 16:57:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 48 minutes 40 seconds
Variants: generated 200, build-succeeded 100, build-failed 56, syntax-invalid 42, redundant 2
Fitness: max 0.833(100), min 0.833(100), ave 0.833
Test execution time: sum 7593 ms, max 138 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 16:57:20 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-08-07 16:58:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 49 minutes 33 seconds
Variants: generated 200, build-succeeded 90, build-failed 58, syntax-invalid 46, redundant 6
Fitness: max 1(1), min 0.167(1), ave 0.824
Test execution time: sum 7149 ms, max 237 ms, min 65 ms
----------------------------------------------------------------

2023-08-07 16:58:14 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-08-07 16:59:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 50 minutes 30 seconds
Variants: generated 200, build-succeeded 101, build-failed 62, syntax-invalid 32, redundant 5
Fitness: max 0.833(98), min 0.667(3), ave 0.828
Test execution time: sum 7741 ms, max 97 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 16:59:11 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-08-07 17:00:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 51 minutes 25 seconds
Variants: generated 200, build-succeeded 93, build-failed 60, syntax-invalid 42, redundant 5
Fitness: max 0.833(93), min 0.833(93), ave 0.833
Test execution time: sum 7217 ms, max 186 ms, min 70 ms
----------------------------------------------------------------

2023-08-07 17:00:06 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-08-07 17:01:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 52 minutes 22 seconds
Variants: generated 200, build-succeeded 104, build-failed 54, syntax-invalid 36, redundant 6
Fitness: max 0.833(103), min 0.667(1), ave 0.832
Test execution time: sum 8147 ms, max 147 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 17:01:03 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-08-07 17:01:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 16 seconds
Variants: generated 200, build-succeeded 95, build-failed 52, syntax-invalid 48, redundant 5
Fitness: max 0.833(92), min 0.667(3), ave 0.828
Test execution time: sum 7214 ms, max 95 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 17:01:56 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-08-07 17:02:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 54 minutes 9 seconds
Variants: generated 200, build-succeeded 82, build-failed 60, syntax-invalid 52, redundant 6
Fitness: max 0.833(81), min 0.167(1), ave 0.825
Test execution time: sum 6303 ms, max 145 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 17:02:49 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-08-07 17:03:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 5 seconds
Variants: generated 200, build-succeeded 99, build-failed 58, syntax-invalid 39, redundant 4
Fitness: max 0.833(97), min 0.5(1), ave 0.828
Test execution time: sum 7673 ms, max 91 ms, min 71 ms
----------------------------------------------------------------

2023-08-07 17:03:45 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-08-07 17:04:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 56 minutes 1 seconds
Variants: generated 200, build-succeeded 91, build-failed 66, syntax-invalid 39, redundant 4
Fitness: max 0.833(90), min 0.167(1), ave 0.826
Test execution time: sum 7070 ms, max 163 ms, min 67 ms
----------------------------------------------------------------

2023-08-07 17:04:42 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-08-07 17:05:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 56 minutes 58 seconds
Variants: generated 200, build-succeeded 104, build-failed 51, syntax-invalid 41, redundant 4
Fitness: max 0.833(102), min 0.667(2), ave 0.83
Test execution time: sum 8198 ms, max 138 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 17:05:39 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-08-07 17:06:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 57 minutes 49 seconds
Variants: generated 200, build-succeeded 94, build-failed 46, syntax-invalid 55, redundant 5
Fitness: max 0.833(91), min 0.167(1), ave 0.823
Test execution time: sum 7125 ms, max 93 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 17:06:30 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-08-07 17:07:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 58 minutes 47 seconds
Variants: generated 200, build-succeeded 97, build-failed 64, syntax-invalid 34, redundant 5
Fitness: max 0.833(95), min 0.167(1), ave 0.823
Test execution time: sum 7558 ms, max 141 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 17:07:28 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-08-07 17:08:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 59 minutes 47 seconds
Variants: generated 200, build-succeeded 108, build-failed 49, syntax-invalid 37, redundant 6
Fitness: max 0.833(104), min 0.667(4), ave 0.827
Test execution time: sum 8561 ms, max 151 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:08:27 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-08-07 17:09:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 seconds
Variants: generated 200, build-succeeded 93, build-failed 61, syntax-invalid 41, redundant 5
Fitness: max 0.833(89), min 0.167(1), ave 0.821
Test execution time: sum 7151 ms, max 96 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 17:09:23 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-08-07 17:10:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 1 minutes 39 seconds
Variants: generated 200, build-succeeded 95, build-failed 58, syntax-invalid 41, redundant 6
Fitness: max 0.833(94), min 0.667(1), ave 0.832
Test execution time: sum 7490 ms, max 139 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:10:20 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-08-07 17:11:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 2 minutes 36 seconds
Variants: generated 200, build-succeeded 94, build-failed 62, syntax-invalid 39, redundant 5
Fitness: max 0.833(93), min 0.667(1), ave 0.832
Test execution time: sum 7356 ms, max 92 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:11:17 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-08-07 17:12:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 3 minutes 35 seconds
Variants: generated 200, build-succeeded 100, build-failed 60, syntax-invalid 33, redundant 7
Fitness: max 0.833(96), min 0.667(4), ave 0.827
Test execution time: sum 7697 ms, max 162 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 17:12:16 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-08-07 17:13:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 4 minutes 32 seconds
Variants: generated 200, build-succeeded 90, build-failed 63, syntax-invalid 40, redundant 7
Fitness: max 0.833(88), min 0.667(2), ave 0.83
Test execution time: sum 7258 ms, max 240 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:13:12 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-08-07 17:14:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 5 minutes 30 seconds
Variants: generated 200, build-succeeded 102, build-failed 55, syntax-invalid 35, redundant 8
Fitness: max 0.833(100), min 0.167(2), ave 0.82
Test execution time: sum 7798 ms, max 91 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 17:14:10 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-08-07 17:15:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 6 minutes 27 seconds
Variants: generated 200, build-succeeded 96, build-failed 62, syntax-invalid 40, redundant 2
Fitness: max 0.833(96), min 0.833(96), ave 0.833
Test execution time: sum 7518 ms, max 146 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:15:08 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-08-07 17:16:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 7 minutes 26 seconds
Variants: generated 200, build-succeeded 89, build-failed 70, syntax-invalid 34, redundant 7
Fitness: max 0.833(86), min 0.667(3), ave 0.828
Test execution time: sum 7140 ms, max 147 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:16:07 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-08-07 17:17:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 8 minutes 23 seconds
Variants: generated 200, build-succeeded 89, build-failed 70, syntax-invalid 39, redundant 2
Fitness: max 0.833(86), min 0.167(2), ave 0.816
Test execution time: sum 6874 ms, max 92 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 17:17:04 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-08-07 17:18:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 9 minutes 21 seconds
Variants: generated 200, build-succeeded 90, build-failed 67, syntax-invalid 37, redundant 6
Fitness: max 0.833(89), min 0.667(1), ave 0.831
Test execution time: sum 7088 ms, max 201 ms, min 72 ms
----------------------------------------------------------------

2023-08-07 17:18:02 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-08-07 17:19:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 10 minutes 21 seconds
Variants: generated 200, build-succeeded 104, build-failed 57, syntax-invalid 37, redundant 2
Fitness: max 0.833(99), min 0.167(1), ave 0.821
Test execution time: sum 8333 ms, max 138 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:19:01 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-08-07 17:19:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 16 seconds
Variants: generated 200, build-succeeded 90, build-failed 57, syntax-invalid 47, redundant 6
Fitness: max 0.833(89), min 0.667(1), ave 0.831
Test execution time: sum 6945 ms, max 92 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:19:56 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-08-07 17:20:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 12 minutes 18 seconds
Variants: generated 200, build-succeeded 110, build-failed 57, syntax-invalid 33, redundant 0
Fitness: max 0.833(105), min 0.167(1), ave 0.82
Test execution time: sum 8534 ms, max 161 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 17:20:59 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-08-07 17:21:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 13 minutes 16 seconds
Variants: generated 200, build-succeeded 92, build-failed 55, syntax-invalid 48, redundant 5
Fitness: max 0.833(88), min 0.167(2), ave 0.815
Test execution time: sum 7418 ms, max 226 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:21:56 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-08-07 17:22:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 14 minutes 14 seconds
Variants: generated 200, build-succeeded 96, build-failed 54, syntax-invalid 41, redundant 9
Fitness: max 0.833(94), min 0.167(1), ave 0.825
Test execution time: sum 7275 ms, max 90 ms, min 66 ms
----------------------------------------------------------------

2023-08-07 17:22:55 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-08-07 17:23:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 15 seconds
Variants: generated 200, build-succeeded 98, build-failed 59, syntax-invalid 39, redundant 4
Fitness: max 0.833(97), min 0.667(1), ave 0.832
Test execution time: sum 7730 ms, max 162 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:23:55 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-08-07 17:25:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 16 minutes 20 seconds
Variants: generated 200, build-succeeded 107, build-failed 63, syntax-invalid 22, redundant 8
Fitness: max 0.833(106), min 0.667(1), ave 0.832
Test execution time: sum 8656 ms, max 150 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 17:25:00 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-08-07 17:26:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 17 minutes 21 seconds
Variants: generated 200, build-succeeded 101, build-failed 62, syntax-invalid 33, redundant 4
Fitness: max 0.833(99), min 0.167(1), ave 0.825
Test execution time: sum 7837 ms, max 92 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:26:02 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-08-07 17:27:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 18 minutes 23 seconds
Variants: generated 200, build-succeeded 101, build-failed 60, syntax-invalid 37, redundant 2
Fitness: max 0.833(100), min 0.667(1), ave 0.832
Test execution time: sum 8049 ms, max 157 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:27:03 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-08-07 17:28:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 19 minutes 24 seconds
Variants: generated 200, build-succeeded 97, build-failed 58, syntax-invalid 41, redundant 4
Fitness: max 0.833(95), min 0.667(2), ave 0.83
Test execution time: sum 7834 ms, max 141 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 17:28:04 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-08-07 17:29:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 20 minutes 28 seconds
Variants: generated 200, build-succeeded 112, build-failed 61, syntax-invalid 24, redundant 3
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 8706 ms, max 89 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:29:09 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-08-07 17:30:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 21 minutes 34 seconds
Variants: generated 200, build-succeeded 114, build-failed 54, syntax-invalid 24, redundant 8
Fitness: max 0.833(114), min 0.833(114), ave 0.833
Test execution time: sum 8979 ms, max 164 ms, min 73 ms
----------------------------------------------------------------

2023-08-07 17:30:15 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-08-07 17:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 21 minutes 37 seconds
Variants: generated 8, build-succeeded 3, build-failed 5, syntax-invalid 0, redundant 0
Fitness: max 1(1), min 0.833(2), ave 0.889
Test execution time: sum 227 ms, max 77 ms, min 74 ms
----------------------------------------------------------------

2023-08-07 17:30:18 [main] [INFO]  KGenProgMain - GA stopped
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v145)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v145)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v145)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v145)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v257)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v257)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v257)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v257)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v635)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v635)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v635)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v635)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v635)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int numIterations = 0;
             return result;
         }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v636)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v636)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v636)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v636)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1156)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1156)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1156)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1156)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -273,6 +271,7 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
+					this.defaultFunctionValueAccuracy = 1.0e-15;
                     double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1178)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1178)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1178)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1178)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1178)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,7 +227,11 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1201)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1201)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1201)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1201)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1763)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1763)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1763)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1763)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,7 +228,11 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1835)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -141,6 +141,7 @@
         this.result         = newResult;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
+		double m;
     }
 
     /**
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1835)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1835)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1835)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1835)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double p;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1900)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1900)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1900)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v1900)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,7 +227,11 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2098)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2098)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2098)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2098)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,22 +99,21 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double x1 = min;
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2287)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2287)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2287)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2287)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2287)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,7 +226,11 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2448)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2448)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2448)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2448)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2448)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,8 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+        resultComputed = true;
     }
 
     /**
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2621)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double x1 = min;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2801)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2801)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2801)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2801)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v2801)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,22 +99,21 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v3060)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v3060)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v3060)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v3060)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v3060)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x1 = max;
             return result;
         }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v3468)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v3468)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v3468)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v3468)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v3468)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
             return result;
         }
 
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4038)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4038)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4038)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4038)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,20 +99,21 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
             return result;
         }
 
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4278)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4278)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4278)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4278)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4278)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -240,11 +238,7 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
+            if ((y1 > 0) == (y2 > 0)) {
                 return result;
             }
             double dx = x2 - x1;
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4443)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4443)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4443)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4443)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4443)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:21 [main] [INFO]  PatchLogExporter - patch (v4443)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            clearResult();
             return result;
         }
 
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +182,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -240,7 +240,7 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
+            if ((y1 > 0) == (y2 > 0)) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v4452)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v4452)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v4452)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v4452)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v4452)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v4857)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v4857)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v4857)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v4857)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v4857)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v5494)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v5494)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v5494)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v5494)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v5494)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v5494)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +179,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7619)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -240,7 +239,7 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
+            if ((y1 > 0) == (y2 > 0)) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,8 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+        resultComputed = true;
     }
 
     /**
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double x;
+				this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -309,7 +308,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7651)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,8 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+        resultComputed = true;
     }
 
     /**
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7651)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7651)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7651)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7651)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,11 +174,12 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +243,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7660)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7660)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7660)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7660)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7660)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v7660)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -309,7 +307,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8061)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8061)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8061)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8061)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,12 +175,12 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.resultComputed = false;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -241,11 +239,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8818)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8818)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8818)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8818)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,7 +175,7 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8885)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8885)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8885)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8885)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v8885)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,11 +175,13 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +245,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9013)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,10 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -240,12 +240,11 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
+            if ((y1 > 0) == (y2 > 0)) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -312,7 +311,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9073)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9073)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9073)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9073)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -181,7 +179,10 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -240,12 +241,11 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
+            if ((y1 > 0) == (y2 > 0)) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -312,7 +312,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9228)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9228)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9228)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9228)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 0;
             return result;
         }
 
@@ -177,11 +175,14 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9260)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9260)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9260)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9260)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,10 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +246,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9655)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9655)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9655)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9655)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9655)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9655)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -309,7 +310,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9802)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9802)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9802)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9802)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9802)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +244,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -309,7 +309,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9872)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9872)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9872)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9872)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v9872)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +182,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +246,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10221)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10221)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10221)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10221)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10221)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,11 +174,12 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -240,7 +238,7 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
+            if ((y1 > 0) == (y2 > 0)) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10278)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10278)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10278)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10278)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10278)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,22 +99,19 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,11 +173,13 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10461)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -240,7 +240,7 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
+            if ((y1 > 0) == (y2 > 0)) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10658)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10658)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10658)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10658)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +181,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +245,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -309,10 +310,8 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            resultComputed = true;
             return result;
         }
 
@@ -181,7 +179,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +244,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -309,7 +307,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10899)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10899)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10899)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10899)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v10899)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +181,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +246,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -309,7 +309,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11429)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,8 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+        resultComputed = true;
     }
 
     /**
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11429)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11429)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11429)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11429)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v11492)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,17 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            int i = 0;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +183,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +248,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12019)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				clearResult();
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12072)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12072)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12072)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12072)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12072)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,17 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return result;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +246,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12078)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12078)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12078)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12078)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +245,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -309,7 +310,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12849)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12849)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12849)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12849)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v12849)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +245,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13433)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13433)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13433)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13433)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13433)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -312,7 +312,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13633)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13633)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13633)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13633)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +126,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double fm;
             return result;
         }
 
@@ -182,7 +184,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				clearResult();
+                setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,14 +249,14 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             if ((Math.abs(oldDelta) < tolerance) ||
                     (Math.abs(y0) <= Math.abs(y1))) {
@@ -309,7 +313,14 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
+                {
+					x0 = x1;
+					x1 = x2;
+					x2 = x0;
+					y0 = y1;
+					y1 = y2;
+					y2 = y0;
+				}
                 oldDelta = delta;
             }
             i++;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +182,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
                 ret = max;
+				double delta;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +247,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13863)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13863)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13863)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13863)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v13863)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +182,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				clearResult();
+                setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +247,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v14872)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v14872)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v14872)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v14872)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			return solve(f, min, max);
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,14 +246,15 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
             }
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             if ((Math.abs(oldDelta) < tolerance) ||
                     (Math.abs(y0) <= Math.abs(y1))) {
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15008)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15008)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15008)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15008)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15008)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +182,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +246,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -267,7 +268,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    this.resultComputed = false;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
@@ -312,7 +314,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15227)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,7 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15227)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15227)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15227)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15227)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15227)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +127,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x2 = max;
             return result;
         }
 
@@ -182,7 +185,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +179,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.resultComputed = false;
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +244,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v16632)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v16632)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v16632)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v16632)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v16632)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v16632)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +179,10 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				clearResult();
+                setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +245,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v17040)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v17040)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v17040)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v17040)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v17040)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:22 [main] [INFO]  PatchLogExporter - patch (v17040)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,10 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17499)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -244,7 +243,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17499)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17499)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17499)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17499)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17499)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +182,12 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
                 setResult(max, 0);
-                ret = max;
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17874)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17874)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17874)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,8 +59,10 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.relativeAccuracy = defaultRelativeAccuracy;
+		this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17874)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v17874)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            int i = 0;
             return result;
         }
 
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +184,11 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				clearResult();
+				clearResult();
+				clearResult();
+                int i = 1;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v18007)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v18007)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v18007)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v18007)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,18 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +129,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +185,10 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v19259)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v19259)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v19259)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v19259)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,19 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +130,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +187,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                setResult(max, 0);
+				ret = max;
+				return result;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -241,11 +248,8 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
+                clearResult();
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v19423)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v19423)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v19423)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v19423)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +127,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double oldx = Double.POSITIVE_INFINITY;
             return result;
         }
 
@@ -181,7 +184,11 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				clearResult();
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -241,11 +248,9 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
+                double m;
+				setResult(x1, i);
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v20428)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v20428)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v20428)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v20428)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v20428)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +184,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				clearResult();
+				clearResult();
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -241,11 +246,9 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
+                double m;
+				setResult(x1, i);
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,21 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            verifySequence(min, initial, max);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            setResult(min, 0);
             return result;
         }
 
@@ -124,7 +132,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +188,13 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                this.resultComputed = false;
+				setResult(max, 0);
+				double x2 = max;
+				clearResult();
                 setResult(max, 0);
-                ret = max;
+				ret = max;
+				return result;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +257,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v21691)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v21691)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v21691)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v21691)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v21691)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,19 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.iterationCount = iterationCount;
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifyBracketing(min, max, f);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +129,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +185,10 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +252,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v22294)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v22294)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v22294)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v22294)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v22294)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,21 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			verifySequence(min, initial, max);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double x0 = min;
             return result;
         }
 
@@ -124,7 +132,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +189,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				double x2 = max;
+                setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +254,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double m;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v22899)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v22899)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v22899)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v22899)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v22899)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,21 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			verifySequence(min, initial, max);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            setResult(min, 0);
             return result;
         }
 
@@ -124,7 +132,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +188,11 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				clearResult();
+				ret = max;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +256,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v23082)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v23082)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v23082)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v23082)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,9 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.relativeAccuracy = defaultRelativeAccuracy;
+		this.relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v23082)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v23082)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,17 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            setResult(min, 0);
             return result;
         }
 
@@ -124,7 +128,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +185,10 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				clearResult();
+				setResult(max, 0);
+				ret = max;
+				return result;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v24644)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v24644)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v24644)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v24644)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +183,19 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				clearResult();
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v24880)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v24880)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v24880)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v24880)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v24880)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +183,17 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                this.resultComputed = false;
+				setResult(max, 0);
+				ret = max;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 setResult(max, 0);
-                ret = max;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,6 +256,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				clearResult();
                 return result;
             }
             double dx = x2 - x1;
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v25674)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v25674)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v25674)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v25674)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,22 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			double x0 = min;
             return result;
         }
 
@@ -124,7 +133,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +189,12 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
                 setResult(max, 0);
-                ret = max;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +257,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                resultComputed = true;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v25819)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -244,7 +243,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v25819)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v25819)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v25819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v25819)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,18 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +129,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +185,13 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26032)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26032)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26032)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26032)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26032)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,17 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +183,12 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26286)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26286)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26286)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26286)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26286)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,20 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifyBracketing(min, max, f);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +130,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +186,16 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				clearResult();
                 setResult(max, 0);
-                ret = max;
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26860)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26860)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26860)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v26860)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,19 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			verifySequence(min, initial, max);
+			setResult(initial, 0);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +130,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +186,16 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v30263)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v30263)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v30263)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v30263)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,19 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifyBracketing(min, max, f);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +129,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +185,17 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v30840)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
@@ -179,7 +178,8 @@
     protected boolean isBracketing(final double lower, final double upper,
                                    final UnivariateRealFunction function)
         throws FunctionEvaluationException {
-        final double f1 = function.value(lower);
+        double x1;
+		final double f1 = function.value(lower);
         final double f2 = function.value(upper);
         return (f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0);
     }
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v30840)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v30840)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v30840)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v30840)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            verifySequence(min, initial, max);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +182,17 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				ret = max;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v31259)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -179,7 +179,8 @@
     protected boolean isBracketing(final double lower, final double upper,
                                    final UnivariateRealFunction function)
         throws FunctionEvaluationException {
-        final double f1 = function.value(lower);
+        double x1;
+		final double f1 = function.value(lower);
         final double f2 = function.value(upper);
         return (f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0);
     }
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v31259)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v31259)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v31259)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v31259)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,22 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				clearResult();
+				clearResult();
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v31818)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v31818)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v31818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v31818)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,20 +99,24 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +128,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +184,19 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double x1 = max;
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				ret = max;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v36493)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v36493)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v36493)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v36493)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,19 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +130,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +186,23 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.resultComputed = false;
+				clearResult();
+				clearResult();
+				clearResult();
+                this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v37078)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v37078)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v37078)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v37078)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,22 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +132,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            clearResult();
             return result;
         }
 
@@ -181,7 +189,23 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				setResult(max, 0);
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				clearResult();
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = max;
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v38677)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v38677)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v38677)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v38677)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,19 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +128,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +184,22 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
                 setResult(max, 0);
-                ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +262,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v42038)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v42038)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v42038)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v42038)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +182,29 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                this.resultComputed = false;
+				functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				ret = max;
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				clearResult();
                 setResult(max, 0);
-                ret = max;
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v54064)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v54064)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v54064)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v54064)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v54064)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,21 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(min) == 0.0) {
+            verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +132,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -181,8 +189,31 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
                 setResult(max, 0);
-                ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				this.f = f;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -312,7 +343,14 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
+            {
+				x0 = x1;
+				x1 = x2;
+				x2 = x0;
+				y0 = y1;
+				y1 = y2;
+				y2 = y0;
+			}
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v55887)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -180,6 +180,7 @@
                                    final UnivariateRealFunction function)
         throws FunctionEvaluationException {
         final double f1 = function.value(lower);
+		int iterationCount = 0;
         final double f2 = function.value(upper);
         return (f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0);
     }
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v55887)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v55887)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v55887)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v55887)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,20 +99,31 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(yInitial) <= functionValueAccuracy) {
+            verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +135,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +191,24 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				ret = max;
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(yMin, 0);
                 setResult(max, 0);
-                ret = max;
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v56294)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v56294)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v56294)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v56294)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,22 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(min) == 0.0) {
+            verifyBracketing(min, max, f);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +133,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +189,27 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.resultComputed = false;
+				this.resultComputed = false;
+				resultComputed = true;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				double fb;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				ret = max;
+				resultComputed = true;
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v58855)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v58855)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v58855)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v58855)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,24 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(yInitial) <= functionValueAccuracy) {
+            verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			verifyBracketing(min, max, f);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +135,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,12 +187,32 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f.value(max) == 0.0) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                resultComputed = true;
+				this.resultComputed = false;
+				resultComputed = true;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v59855)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v59855)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v59855)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v59855)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v59855)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,21 +99,28 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifyBracketing(min, max, f);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +131,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +187,36 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                int i = 0;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
                 setResult(max, 0);
-                ret = max;
+				clearResult();
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v60059)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v60059)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v60059)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v60059)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v60059)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +181,35 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                int i = 0;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				resultComputed = true;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				ret = max;
                 setResult(max, 0);
-                ret = max;
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v64841)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v64841)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v64841)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v64841)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,20 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +131,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +187,40 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v66016)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v66016)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v66016)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v66016)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,24 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifyBracketing(min, max, f);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +134,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,11 +186,33 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f.value(max) == 0.0) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				clearResult();
+				clearResult();
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				resultComputed = true;
+				ret = max;
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v67218)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v67218)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v67218)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v67218)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v67218)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,21 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +132,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,12 +184,48 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f.value(max) == 0.0) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				clearResult();
                 setResult(max, 0);
-                ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v67862)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v67862)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v67862)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v67862)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v67862)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,21 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +132,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,12 +184,49 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f.value(max) == 0.0) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                resultComputed = true;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				double x0 = min;
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				clearResult();
                 setResult(max, 0);
-                ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v68853)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v68853)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v68853)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v68853)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,23 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +134,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +190,43 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
+				resultComputed = true;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				ret = max;
+				ret = max;
+				ret = max;
+				clearResult();
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
                 setResult(max, 0);
-                ret = max;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v69475)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v69475)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v69475)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v69475)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,19 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +130,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +186,36 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				setResult(max, 0);
+				ret = max;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v70234)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v70234)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v70234)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:23 [main] [INFO]  PatchLogExporter - patch (v70234)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +183,40 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.resultComputed = false;
+				double p1;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				iterationCount += this.iterationCount;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				clearResult();
+				this.resultComputed = false;
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:24 [main] [INFO]  PatchLogExporter - patch (v76693)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:24 [main] [INFO]  PatchLogExporter - patch (v76693)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:24 [main] [INFO]  PatchLogExporter - patch (v76693)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:24 [main] [INFO]  PatchLogExporter - patch (v76693)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +181,55 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				setResult(max, 0);
+				resultComputed = true;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				resultComputed = true;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:24 [main] [INFO]  PatchLogExporter - patch (v77008)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-07 17:30:24 [main] [INFO]  PatchLogExporter - patch (v77008)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-07 17:30:24 [main] [INFO]  PatchLogExporter - patch (v77008)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-07 17:30:24 [main] [INFO]  PatchLogExporter - patch (v77008)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 17:30:24 [main] [INFO]  PatchLogExporter - patch (v77008)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,18 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			setResult(initial, 0);
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +129,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +185,54 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				clearResult();
+                this.resultComputed = false;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				resultComputed = true;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				this.resultComputed = false;
+				clearResult();
+				clearResult();
+				this.resultComputed = false;
+				this.iterationCount = iterationCount;
+				this.resultComputed = false;
+				clearResult();
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				this.resultComputed = false;
+				clearResult();
+				this.resultComputed = false;
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				clearResult();
+				setResult(max, 0);
+				ret = max;
+				ret = max;
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
+				setResult(max, 0);
+				setResult(max, 0);
+				resultComputed = true;
+				setResult(max, 0);
+				setResult(max, 0);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-07 17:30:24 [main] [INFO]  KGenProgMain - Summary
Reached generation = 387
Generated variants = 77008
Syntax valid variants = 64744
Build succeeded variants = 38704
Time elapsed = 8 hours 21 minutes 43 seconds
Exit status = SUCCESS
