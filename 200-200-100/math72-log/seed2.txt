2023-06-26 00:31:25 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-06-26 00:31:25 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-06-26 00:31:25 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-06-26 00:31:25 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/kgenprog-72.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 1000 (set in config file)
timeLimit = PT277H46M40S (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 2 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/research
version = 1.8.2
================================================================
2023-06-26 00:31:44 [main] [INFO]  KGenProgMain - initial failed tests (1/6)
org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints: null

2023-06-26 00:31:45 [main] [INFO]  KGenProgMain - GA started
2023-06-26 00:31:45 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-06-26 00:31:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 200, build-succeeded 43, build-failed 87, syntax-invalid 21, redundant 49
Fitness: max 0.833(29), min 0.167(6), ave 0.705
Test execution time: sum 4467 ms, max 296 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 00:31:59 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-06-26 00:32:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 200, build-succeeded 50, build-failed 109, syntax-invalid 16, redundant 25
Fitness: max 1(2), min 0.167(7), ave 0.717
Test execution time: sum 3603 ms, max 242 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 00:32:10 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-06-26 00:32:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 seconds
Variants: generated 400, build-succeeded 143, build-failed 117, syntax-invalid 29, redundant 111
Fitness: max 1(1), min 0.167(26), ave 0.662
Test execution time: sum 9182 ms, max 143 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 00:32:30 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-06-26 00:32:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 4 seconds
Variants: generated 400, build-succeeded 137, build-failed 99, syntax-invalid 43, redundant 121
Fitness: max 1(1), min 0.167(4), ave 0.804
Test execution time: sum 8410 ms, max 205 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 00:32:49 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-06-26 00:33:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 22 seconds
Variants: generated 400, build-succeeded 129, build-failed 124, syntax-invalid 44, redundant 103
Fitness: max 1(1), min 0.167(6), ave 0.796
Test execution time: sum 7837 ms, max 204 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:33:07 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-06-26 00:33:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 42 seconds
Variants: generated 400, build-succeeded 157, build-failed 106, syntax-invalid 41, redundant 96
Fitness: max 1(2), min 0.167(8), ave 0.79
Test execution time: sum 9406 ms, max 129 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 00:33:27 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-06-26 00:33:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 5 seconds
Variants: generated 400, build-succeeded 173, build-failed 106, syntax-invalid 37, redundant 84
Fitness: max 1(2), min 0.167(13), ave 0.774
Test execution time: sum 10515 ms, max 188 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:33:50 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-06-26 00:34:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 25 seconds
Variants: generated 400, build-succeeded 147, build-failed 117, syntax-invalid 51, redundant 85
Fitness: max 1(1), min 0.167(9), ave 0.789
Test execution time: sum 8653 ms, max 138 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:34:10 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-06-26 00:34:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 48 seconds
Variants: generated 400, build-succeeded 174, build-failed 111, syntax-invalid 58, redundant 57
Fitness: max 0.833(159), min 0.167(6), ave 0.802
Test execution time: sum 10438 ms, max 186 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:34:34 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-06-26 00:35:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 15 seconds
Variants: generated 400, build-succeeded 201, build-failed 122, syntax-invalid 31, redundant 46
Fitness: max 0.833(181), min 0.167(9), ave 0.794
Test execution time: sum 12145 ms, max 195 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 00:35:00 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-06-26 00:35:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 41 seconds
Variants: generated 400, build-succeeded 194, build-failed 109, syntax-invalid 38, redundant 59
Fitness: max 0.833(178), min 0.167(8), ave 0.796
Test execution time: sum 11656 ms, max 192 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:35:26 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-06-26 00:35:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 6 seconds
Variants: generated 400, build-succeeded 186, build-failed 112, syntax-invalid 51, redundant 51
Fitness: max 0.833(157), min 0.167(16), ave 0.763
Test execution time: sum 11250 ms, max 202 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:35:52 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-06-26 00:36:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 33 seconds
Variants: generated 400, build-succeeded 204, build-failed 111, syntax-invalid 41, redundant 44
Fitness: max 1(2), min 0.167(6), ave 0.807
Test execution time: sum 12074 ms, max 128 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 00:36:19 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-06-26 00:36:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 0 seconds
Variants: generated 400, build-succeeded 193, build-failed 105, syntax-invalid 47, redundant 55
Fitness: max 1(2), min 0.167(12), ave 0.785
Test execution time: sum 11575 ms, max 129 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 00:36:45 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-06-26 00:37:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 26 seconds
Variants: generated 400, build-succeeded 194, build-failed 108, syntax-invalid 48, redundant 50
Fitness: max 0.833(172), min 0.167(10), ave 0.787
Test execution time: sum 11583 ms, max 187 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:37:11 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-06-26 00:37:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 52 seconds
Variants: generated 400, build-succeeded 201, build-failed 117, syntax-invalid 44, redundant 38
Fitness: max 0.833(177), min 0.167(14), ave 0.779
Test execution time: sum 11988 ms, max 183 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:37:37 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-06-26 00:38:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 19 seconds
Variants: generated 400, build-succeeded 209, build-failed 113, syntax-invalid 46, redundant 32
Fitness: max 1(2), min 0.167(9), ave 0.8
Test execution time: sum 12309 ms, max 134 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 00:38:05 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-06-26 00:38:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 47 seconds
Variants: generated 400, build-succeeded 210, build-failed 114, syntax-invalid 48, redundant 28
Fitness: max 0.833(189), min 0.167(12), ave 0.787
Test execution time: sum 12419 ms, max 169 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:38:33 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-06-26 00:39:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 15 seconds
Variants: generated 400, build-succeeded 195, build-failed 133, syntax-invalid 54, redundant 18
Fitness: max 0.833(181), min 0.167(5), ave 0.809
Test execution time: sum 11761 ms, max 182 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:39:00 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-06-26 00:39:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 42 seconds
Variants: generated 400, build-succeeded 197, build-failed 117, syntax-invalid 60, redundant 26
Fitness: max 0.833(177), min 0.167(10), ave 0.79
Test execution time: sum 11852 ms, max 159 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:39:28 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-06-26 00:39:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 9 seconds
Variants: generated 400, build-succeeded 180, build-failed 116, syntax-invalid 70, redundant 34
Fitness: max 0.833(162), min 0.167(8), ave 0.794
Test execution time: sum 10913 ms, max 180 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:39:54 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-06-26 00:40:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 38 seconds
Variants: generated 400, build-succeeded 219, build-failed 111, syntax-invalid 44, redundant 26
Fitness: max 0.833(197), min 0.167(13), ave 0.786
Test execution time: sum 13165 ms, max 137 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 00:40:24 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-06-26 00:55:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 8 seconds
Variants: generated 400, build-succeeded 205, build-failed 116, syntax-invalid 44, redundant 35
Fitness: max 0.833(181), min 0.167(17), ave 0.771
Test execution time: sum 912499 ms, max 900131 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:55:54 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-06-26 00:56:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 40 seconds
Variants: generated 400, build-succeeded 206, build-failed 121, syntax-invalid 55, redundant 18
Fitness: max 0.833(191), min 0.167(9), ave 0.798
Test execution time: sum 12817 ms, max 184 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 00:56:25 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-06-26 00:56:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 10 seconds
Variants: generated 400, build-succeeded 208, build-failed 116, syntax-invalid 53, redundant 23
Fitness: max 1(1), min 0.167(16), ave 0.772
Test execution time: sum 12897 ms, max 130 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 00:56:55 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-06-26 00:57:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 42 seconds
Variants: generated 400, build-succeeded 215, build-failed 108, syntax-invalid 59, redundant 18
Fitness: max 0.833(197), min 0.167(10), ave 0.795
Test execution time: sum 13594 ms, max 188 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 00:57:27 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-06-26 00:58:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 16 seconds
Variants: generated 400, build-succeeded 222, build-failed 113, syntax-invalid 35, redundant 30
Fitness: max 1(1), min 0.167(13), ave 0.787
Test execution time: sum 13882 ms, max 182 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:58:01 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-06-26 00:58:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 47 seconds
Variants: generated 400, build-succeeded 221, build-failed 110, syntax-invalid 51, redundant 18
Fitness: max 0.833(190), min 0.167(18), ave 0.768
Test execution time: sum 13685 ms, max 193 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:58:33 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-06-26 00:59:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 19 seconds
Variants: generated 400, build-succeeded 212, build-failed 120, syntax-invalid 45, redundant 23
Fitness: max 1(1), min 0.167(14), ave 0.783
Test execution time: sum 13053 ms, max 125 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 00:59:04 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-06-26 00:59:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 52 seconds
Variants: generated 400, build-succeeded 221, build-failed 122, syntax-invalid 38, redundant 19
Fitness: max 0.833(206), min 0(1), ave 0.796
Test execution time: sum 13595 ms, max 131 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:59:37 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-06-26 01:00:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 25 seconds
Variants: generated 400, build-succeeded 221, build-failed 116, syntax-invalid 40, redundant 23
Fitness: max 0.833(202), min 0.167(13), ave 0.789
Test execution time: sum 13893 ms, max 198 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 01:00:10 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-06-26 01:00:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 57 seconds
Variants: generated 400, build-succeeded 227, build-failed 114, syntax-invalid 40, redundant 19
Fitness: max 0.833(211), min 0.167(8), ave 0.803
Test execution time: sum 14017 ms, max 153 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 01:00:43 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-06-26 01:01:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 30 seconds
Variants: generated 400, build-succeeded 217, build-failed 125, syntax-invalid 35, redundant 23
Fitness: max 0.833(209), min 0.167(5), ave 0.813
Test execution time: sum 13247 ms, max 177 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 01:01:16 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-06-26 01:01:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 4 seconds
Variants: generated 400, build-succeeded 216, build-failed 122, syntax-invalid 47, redundant 15
Fitness: max 0.833(197), min 0.167(12), ave 0.79
Test execution time: sum 13493 ms, max 208 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 01:01:49 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-06-26 01:02:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 37 seconds
Variants: generated 400, build-succeeded 226, build-failed 107, syntax-invalid 51, redundant 16
Fitness: max 1(2), min 0.167(11), ave 0.794
Test execution time: sum 14018 ms, max 184 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 01:02:23 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-06-26 01:02:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 11 seconds
Variants: generated 400, build-succeeded 216, build-failed 117, syntax-invalid 45, redundant 22
Fitness: max 0.833(202), min 0.167(8), ave 0.802
Test execution time: sum 13383 ms, max 138 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 01:02:56 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-06-26 01:33:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 44 seconds
Variants: generated 400, build-succeeded 219, build-failed 112, syntax-invalid 51, redundant 18
Fitness: max 0.833(198), min 0.167(16), ave 0.781
Test execution time: sum 1813689 ms, max 900118 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 01:33:29 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-06-26 01:49:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 17 seconds
Variants: generated 400, build-succeeded 225, build-failed 100, syntax-invalid 59, redundant 16
Fitness: max 0.833(209), min 0.167(10), ave 0.799
Test execution time: sum 913892 ms, max 900106 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 01:49:03 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-06-26 01:49:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 50 seconds
Variants: generated 400, build-succeeded 210, build-failed 126, syntax-invalid 52, redundant 12
Fitness: max 0.833(198), min 0.167(8), ave 0.804
Test execution time: sum 12873 ms, max 178 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 01:49:35 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-06-26 01:50:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 22 seconds
Variants: generated 400, build-succeeded 201, build-failed 123, syntax-invalid 60, redundant 16
Fitness: max 1(1), min 0.167(10), ave 0.791
Test execution time: sum 12616 ms, max 129 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 01:50:07 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-06-26 02:05:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 56 seconds
Variants: generated 400, build-succeeded 215, build-failed 125, syntax-invalid 50, redundant 10
Fitness: max 0.833(193), min 0.167(14), ave 0.78
Test execution time: sum 913086 ms, max 900124 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 02:05:41 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-06-26 02:06:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 30 seconds
Variants: generated 400, build-succeeded 216, build-failed 113, syntax-invalid 55, redundant 16
Fitness: max 0.833(198), min 0.167(10), ave 0.796
Test execution time: sum 13495 ms, max 157 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:06:15 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-06-26 02:06:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 5 seconds
Variants: generated 400, build-succeeded 211, build-failed 127, syntax-invalid 47, redundant 15
Fitness: max 0.833(195), min 0.167(9), ave 0.799
Test execution time: sum 13136 ms, max 160 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:06:50 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-06-26 02:22:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 39 seconds
Variants: generated 400, build-succeeded 220, build-failed 125, syntax-invalid 46, redundant 9
Fitness: max 0.833(194), min 0.167(16), ave 0.777
Test execution time: sum 913561 ms, max 900140 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:22:25 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-06-26 02:22:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 14 seconds
Variants: generated 400, build-succeeded 215, build-failed 127, syntax-invalid 44, redundant 14
Fitness: max 1(1), min 0.167(8), ave 0.808
Test execution time: sum 13403 ms, max 178 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:22:59 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-06-26 02:23:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 49 seconds
Variants: generated 400, build-succeeded 215, build-failed 123, syntax-invalid 46, redundant 16
Fitness: max 1(1), min 0.167(9), ave 0.798
Test execution time: sum 13504 ms, max 132 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:23:34 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-06-26 02:24:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 23 seconds
Variants: generated 400, build-succeeded 209, build-failed 125, syntax-invalid 48, redundant 18
Fitness: max 0.833(184), min 0.167(15), ave 0.778
Test execution time: sum 13092 ms, max 181 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:24:09 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-06-26 02:24:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 57 seconds
Variants: generated 400, build-succeeded 201, build-failed 120, syntax-invalid 56, redundant 23
Fitness: max 0.833(184), min 0.167(7), ave 0.8
Test execution time: sum 12451 ms, max 183 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:24:42 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-06-26 02:25:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 31 seconds
Variants: generated 400, build-succeeded 204, build-failed 130, syntax-invalid 52, redundant 14
Fitness: max 1(1), min 0.167(9), ave 0.797
Test execution time: sum 12774 ms, max 176 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:25:17 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-06-26 02:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 6 seconds
Variants: generated 400, build-succeeded 213, build-failed 120, syntax-invalid 47, redundant 20
Fitness: max 0.833(199), min 0.167(8), ave 0.803
Test execution time: sum 13339 ms, max 139 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:25:52 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-06-26 02:26:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 44 seconds
Variants: generated 400, build-succeeded 234, build-failed 118, syntax-invalid 32, redundant 16
Fitness: max 1(1), min 0.167(8), ave 0.805
Test execution time: sum 14535 ms, max 184 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:26:29 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-06-26 02:27:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 19 seconds
Variants: generated 400, build-succeeded 211, build-failed 117, syntax-invalid 61, redundant 11
Fitness: max 1(1), min 0.167(9), ave 0.792
Test execution time: sum 12925 ms, max 126 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:27:04 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-06-26 02:27:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 55 seconds
Variants: generated 400, build-succeeded 208, build-failed 126, syntax-invalid 48, redundant 18
Fitness: max 1(1), min 0.167(12), ave 0.788
Test execution time: sum 12994 ms, max 131 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:27:40 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-06-26 02:28:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 31 seconds
Variants: generated 400, build-succeeded 215, build-failed 123, syntax-invalid 53, redundant 9
Fitness: max 0.833(196), min 0.167(8), ave 0.799
Test execution time: sum 13346 ms, max 152 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:28:16 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-06-26 02:28:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 8 seconds
Variants: generated 400, build-succeeded 210, build-failed 136, syntax-invalid 38, redundant 16
Fitness: max 1(1), min 0.167(7), ave 0.805
Test execution time: sum 12978 ms, max 184 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:28:53 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-06-26 02:29:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 44 seconds
Variants: generated 400, build-succeeded 204, build-failed 125, syntax-invalid 54, redundant 17
Fitness: max 0.833(184), min 0.167(10), ave 0.79
Test execution time: sum 12693 ms, max 129 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:29:29 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-06-26 02:30:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 22 seconds
Variants: generated 400, build-succeeded 224, build-failed 130, syntax-invalid 29, redundant 17
Fitness: max 0.833(202), min 0.167(8), ave 0.798
Test execution time: sum 13922 ms, max 192 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:30:07 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-06-26 02:30:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 59 seconds
Variants: generated 400, build-succeeded 211, build-failed 132, syntax-invalid 47, redundant 10
Fitness: max 0.833(201), min 0.167(4), ave 0.814
Test execution time: sum 13210 ms, max 185 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:30:44 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-06-26 02:31:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 35 seconds
Variants: generated 400, build-succeeded 208, build-failed 118, syntax-invalid 58, redundant 16
Fitness: max 0.833(194), min 0.167(7), ave 0.805
Test execution time: sum 13147 ms, max 132 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:31:20 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-06-26 02:31:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 seconds
Variants: generated 400, build-succeeded 207, build-failed 131, syntax-invalid 44, redundant 18
Fitness: max 0.833(189), min 0.167(11), ave 0.792
Test execution time: sum 12874 ms, max 179 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:31:56 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-06-26 02:32:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 seconds
Variants: generated 400, build-succeeded 203, build-failed 131, syntax-invalid 51, redundant 15
Fitness: max 0.833(187), min 0.167(8), ave 0.8
Test execution time: sum 12649 ms, max 119 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:32:33 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-06-26 02:33:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 27 seconds
Variants: generated 400, build-succeeded 229, build-failed 117, syntax-invalid 41, redundant 13
Fitness: max 1(1), min 0.167(14), ave 0.788
Test execution time: sum 14396 ms, max 191 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:33:12 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-06-26 02:33:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 3 seconds
Variants: generated 400, build-succeeded 203, build-failed 128, syntax-invalid 62, redundant 7
Fitness: max 0.833(171), min 0.167(19), ave 0.757
Test execution time: sum 12844 ms, max 125 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:33:49 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-06-26 02:34:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 41 seconds
Variants: generated 400, build-succeeded 215, build-failed 126, syntax-invalid 48, redundant 11
Fitness: max 0.833(194), min 0.167(13), ave 0.787
Test execution time: sum 13557 ms, max 129 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 02:34:27 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-06-26 02:35:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 18 seconds
Variants: generated 400, build-succeeded 199, build-failed 121, syntax-invalid 66, redundant 14
Fitness: max 1(2), min 0.167(6), ave 0.807
Test execution time: sum 12564 ms, max 133 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:35:03 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-06-26 02:35:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 57 seconds
Variants: generated 400, build-succeeded 222, build-failed 118, syntax-invalid 42, redundant 18
Fitness: max 0.833(204), min 0.167(9), ave 0.799
Test execution time: sum 13813 ms, max 180 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:35:42 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-06-26 02:36:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 34 seconds
Variants: generated 400, build-succeeded 213, build-failed 131, syntax-invalid 48, redundant 8
Fitness: max 0.833(194), min 0.167(7), ave 0.802
Test execution time: sum 13495 ms, max 143 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:36:20 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-06-26 02:37:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 15 seconds
Variants: generated 400, build-succeeded 233, build-failed 122, syntax-invalid 35, redundant 10
Fitness: max 1(1), min 0.167(10), ave 0.795
Test execution time: sum 15000 ms, max 180 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:37:00 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-06-26 02:37:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 54 seconds
Variants: generated 400, build-succeeded 222, build-failed 118, syntax-invalid 42, redundant 18
Fitness: max 0.833(198), min 0.167(16), ave 0.779
Test execution time: sum 14286 ms, max 130 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:37:39 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-06-26 02:38:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 34 seconds
Variants: generated 400, build-succeeded 227, build-failed 121, syntax-invalid 36, redundant 16
Fitness: max 1(1), min 0.167(12), ave 0.794
Test execution time: sum 14497 ms, max 190 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:38:19 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-06-26 02:38:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 13 seconds
Variants: generated 400, build-succeeded 224, build-failed 111, syntax-invalid 52, redundant 13
Fitness: max 0.833(203), min 0.167(13), ave 0.789
Test execution time: sum 14083 ms, max 132 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:38:58 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-06-26 02:39:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 53 seconds
Variants: generated 400, build-succeeded 225, build-failed 126, syntax-invalid 37, redundant 12
Fitness: max 0.833(207), min 0.167(9), ave 0.799
Test execution time: sum 14294 ms, max 179 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:39:38 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-06-26 02:40:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 32 seconds
Variants: generated 400, build-succeeded 209, build-failed 126, syntax-invalid 49, redundant 16
Fitness: max 0.833(183), min 0.167(13), ave 0.779
Test execution time: sum 13076 ms, max 134 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 02:40:17 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-06-26 02:40:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 9 seconds
Variants: generated 400, build-succeeded 200, build-failed 118, syntax-invalid 65, redundant 17
Fitness: max 0.833(187), min 0.167(7), ave 0.805
Test execution time: sum 12855 ms, max 124 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:40:55 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-06-26 02:41:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 50 seconds
Variants: generated 400, build-succeeded 214, build-failed 125, syntax-invalid 43, redundant 18
Fitness: max 1(1), min 0.167(9), ave 0.795
Test execution time: sum 13781 ms, max 139 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:41:35 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-06-26 02:42:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 32 seconds
Variants: generated 400, build-succeeded 240, build-failed 115, syntax-invalid 33, redundant 12
Fitness: max 0.833(227), min 0.167(5), ave 0.814
Test execution time: sum 15507 ms, max 178 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:42:17 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-06-26 02:42:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 13 seconds
Variants: generated 400, build-succeeded 223, build-failed 118, syntax-invalid 49, redundant 10
Fitness: max 0.833(210), min 0.167(6), ave 0.81
Test execution time: sum 14242 ms, max 131 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:42:58 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-06-26 02:43:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 55 seconds
Variants: generated 400, build-succeeded 230, build-failed 120, syntax-invalid 39, redundant 11
Fitness: max 0.833(215), min 0.167(6), ave 0.808
Test execution time: sum 14779 ms, max 144 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:43:40 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-06-26 02:44:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 35 seconds
Variants: generated 400, build-succeeded 208, build-failed 119, syntax-invalid 53, redundant 20
Fitness: max 1(1), min 0.167(11), ave 0.788
Test execution time: sum 13415 ms, max 191 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:44:20 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-06-26 02:45:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 16 seconds
Variants: generated 400, build-succeeded 210, build-failed 124, syntax-invalid 51, redundant 15
Fitness: max 0.833(192), min 0.167(10), ave 0.791
Test execution time: sum 13558 ms, max 190 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:45:01 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-06-26 02:45:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 56 seconds
Variants: generated 400, build-succeeded 196, build-failed 132, syntax-invalid 60, redundant 12
Fitness: max 0.833(179), min 0.167(6), ave 0.804
Test execution time: sum 12825 ms, max 133 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:45:41 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-06-26 02:46:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 36 seconds
Variants: generated 400, build-succeeded 212, build-failed 113, syntax-invalid 63, redundant 12
Fitness: max 0.833(193), min 0.167(10), ave 0.794
Test execution time: sum 13876 ms, max 131 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:46:22 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-06-26 02:47:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 18 seconds
Variants: generated 400, build-succeeded 210, build-failed 119, syntax-invalid 59, redundant 12
Fitness: max 0.833(185), min 0.167(6), ave 0.798
Test execution time: sum 13879 ms, max 160 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:47:03 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-06-26 02:47:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 59 seconds
Variants: generated 400, build-succeeded 216, build-failed 109, syntax-invalid 62, redundant 13
Fitness: max 0.833(195), min 0.167(9), ave 0.792
Test execution time: sum 13945 ms, max 128 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:47:44 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-06-26 02:48:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 40 seconds
Variants: generated 400, build-succeeded 206, build-failed 120, syntax-invalid 61, redundant 13
Fitness: max 0.833(191), min 0.167(6), ave 0.807
Test execution time: sum 13247 ms, max 137 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:48:25 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-06-26 02:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 22 seconds
Variants: generated 400, build-succeeded 219, build-failed 102, syntax-invalid 61, redundant 18
Fitness: max 1(1), min 0.167(6), ave 0.806
Test execution time: sum 14362 ms, max 146 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 02:49:08 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-06-26 02:49:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 6 seconds
Variants: generated 400, build-succeeded 222, build-failed 108, syntax-invalid 51, redundant 19
Fitness: max 1(1), min 0.167(10), ave 0.8
Test execution time: sum 14817 ms, max 188 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 02:49:52 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-06-26 02:50:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 48 seconds
Variants: generated 400, build-succeeded 201, build-failed 112, syntax-invalid 64, redundant 23
Fitness: max 1(1), min 0.167(5), ave 0.813
Test execution time: sum 13351 ms, max 176 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:50:34 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-06-26 02:51:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 32 seconds
Variants: generated 400, build-succeeded 211, build-failed 117, syntax-invalid 61, redundant 11
Fitness: max 0.833(192), min 0.167(8), ave 0.798
Test execution time: sum 14128 ms, max 210 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 02:51:17 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-06-26 02:52:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 16 seconds
Variants: generated 400, build-succeeded 212, build-failed 126, syntax-invalid 56, redundant 6
Fitness: max 0.833(204), min 0.167(4), ave 0.817
Test execution time: sum 14086 ms, max 133 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 02:52:01 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-06-26 02:52:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 58 seconds
Variants: generated 400, build-succeeded 199, build-failed 126, syntax-invalid 65, redundant 10
Fitness: max 0.833(183), min 0.167(7), ave 0.8
Test execution time: sum 13218 ms, max 132 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:52:43 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-06-26 02:53:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 40 seconds
Variants: generated 400, build-succeeded 197, build-failed 114, syntax-invalid 72, redundant 17
Fitness: max 1(1), min 0.167(9), ave 0.795
Test execution time: sum 13211 ms, max 192 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:53:25 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-06-26 02:54:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 23 seconds
Variants: generated 400, build-succeeded 206, build-failed 125, syntax-invalid 61, redundant 8
Fitness: max 0.833(195), min 0.167(3), ave 0.816
Test execution time: sum 13787 ms, max 135 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:54:09 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-06-26 02:54:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 9 seconds
Variants: generated 400, build-succeeded 216, build-failed 116, syntax-invalid 57, redundant 11
Fitness: max 0.833(198), min 0.167(5), ave 0.806
Test execution time: sum 14520 ms, max 134 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 02:54:54 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-06-26 02:55:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 53 seconds
Variants: generated 400, build-succeeded 211, build-failed 114, syntax-invalid 62, redundant 13
Fitness: max 1(1), min 0.167(8), ave 0.799
Test execution time: sum 14401 ms, max 196 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 02:55:39 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-06-26 02:56:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 40 seconds
Variants: generated 400, build-succeeded 222, build-failed 111, syntax-invalid 50, redundant 17
Fitness: max 0.833(203), min 0.167(10), ave 0.795
Test execution time: sum 15244 ms, max 196 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:56:25 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-06-26 02:57:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 26 seconds
Variants: generated 400, build-succeeded 202, build-failed 120, syntax-invalid 57, redundant 21
Fitness: max 0.833(182), min 0.167(6), ave 0.801
Test execution time: sum 13710 ms, max 129 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 02:57:11 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-06-26 03:12:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 13 seconds
Variants: generated 400, build-succeeded 219, build-failed 112, syntax-invalid 52, redundant 17
Fitness: max 0.833(206), min 0.167(7), ave 0.807
Test execution time: sum 915001 ms, max 900107 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 03:12:58 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-06-26 03:13:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 2 seconds
Variants: generated 400, build-succeeded 217, build-failed 123, syntax-invalid 47, redundant 13
Fitness: max 0.833(197), min 0.167(13), ave 0.787
Test execution time: sum 15051 ms, max 196 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 03:13:47 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-06-26 03:14:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 51 seconds
Variants: generated 400, build-succeeded 221, build-failed 115, syntax-invalid 51, redundant 13
Fitness: max 0.833(200), min 0.167(4), ave 0.806
Test execution time: sum 15563 ms, max 226 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 03:14:36 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-06-26 03:15:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 42 seconds
Variants: generated 400, build-succeeded 225, build-failed 110, syntax-invalid 54, redundant 11
Fitness: max 0.833(200), min 0.167(11), ave 0.787
Test execution time: sum 16057 ms, max 235 ms, min 59 ms
----------------------------------------------------------------

2023-06-26 03:15:27 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-06-26 03:16:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 31 seconds
Variants: generated 400, build-succeeded 221, build-failed 103, syntax-invalid 56, redundant 20
Fitness: max 0.833(202), min 0.167(2), ave 0.809
Test execution time: sum 15257 ms, max 187 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 03:16:16 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-06-26 03:17:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 20 seconds
Variants: generated 400, build-succeeded 224, build-failed 118, syntax-invalid 42, redundant 16
Fitness: max 0.833(206), min 0.167(7), ave 0.8
Test execution time: sum 15487 ms, max 131 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 03:17:05 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-06-26 03:17:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 10 seconds
Variants: generated 400, build-succeeded 231, build-failed 102, syntax-invalid 49, redundant 18
Fitness: max 0.833(208), min 0.167(13), ave 0.786
Test execution time: sum 16026 ms, max 184 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 03:17:55 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-06-26 03:18:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 0 seconds
Variants: generated 400, build-succeeded 217, build-failed 111, syntax-invalid 52, redundant 20
Fitness: max 0.833(193), min 0.167(13), ave 0.783
Test execution time: sum 15134 ms, max 144 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 03:18:45 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-06-26 03:19:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 46 seconds
Variants: generated 400, build-succeeded 206, build-failed 119, syntax-invalid 63, redundant 12
Fitness: max 1(1), min 0.167(9), ave 0.794
Test execution time: sum 14170 ms, max 182 ms, min 58 ms
----------------------------------------------------------------

2023-06-26 03:19:31 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-06-26 03:20:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 35 seconds
Variants: generated 400, build-succeeded 217, build-failed 116, syntax-invalid 51, redundant 16
Fitness: max 0.833(197), min 0.167(10), ave 0.794
Test execution time: sum 15064 ms, max 136 ms, min 58 ms
----------------------------------------------------------------

2023-06-26 03:20:20 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-06-26 03:21:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 23 seconds
Variants: generated 400, build-succeeded 217, build-failed 110, syntax-invalid 58, redundant 15
Fitness: max 0.833(199), min 0.167(6), ave 0.801
Test execution time: sum 14910 ms, max 186 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 03:21:09 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-06-26 03:21:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 11 seconds
Variants: generated 400, build-succeeded 204, build-failed 121, syntax-invalid 61, redundant 14
Fitness: max 0.833(189), min 0.167(9), ave 0.799
Test execution time: sum 14480 ms, max 183 ms, min 58 ms
----------------------------------------------------------------

2023-06-26 03:21:57 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-06-26 03:37:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 0 seconds
Variants: generated 400, build-succeeded 204, build-failed 120, syntax-invalid 61, redundant 15
Fitness: max 0.833(181), min 0.167(10), ave 0.787
Test execution time: sum 914513 ms, max 900135 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 03:37:45 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-06-26 03:38:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 50 seconds
Variants: generated 400, build-succeeded 218, build-failed 115, syntax-invalid 47, redundant 20
Fitness: max 0.833(198), min 0.167(6), ave 0.8
Test execution time: sum 15550 ms, max 149 ms, min 58 ms
----------------------------------------------------------------

2023-06-26 03:38:35 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-06-26 03:39:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 39 seconds
Variants: generated 400, build-succeeded 192, build-failed 116, syntax-invalid 75, redundant 17
Fitness: max 0.833(170), min 0.167(11), ave 0.784
Test execution time: sum 14189 ms, max 190 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 03:39:26 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-06-26 03:40:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 29 seconds
Variants: generated 400, build-succeeded 202, build-failed 128, syntax-invalid 56, redundant 14
Fitness: max 0.833(183), min 0.167(7), ave 0.795
Test execution time: sum 14686 ms, max 182 ms, min 59 ms
----------------------------------------------------------------

2023-06-26 03:40:16 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-06-26 03:41:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 19 seconds
Variants: generated 400, build-succeeded 209, build-failed 125, syntax-invalid 57, redundant 9
Fitness: max 0.833(193), min 0.167(9), ave 0.796
Test execution time: sum 15353 ms, max 163 ms, min 59 ms
----------------------------------------------------------------

2023-06-26 03:41:06 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-06-26 03:41:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 9 seconds
Variants: generated 400, build-succeeded 198, build-failed 124, syntax-invalid 73, redundant 5
Fitness: max 0.833(182), min 0.167(8), ave 0.798
Test execution time: sum 14342 ms, max 186 ms, min 58 ms
----------------------------------------------------------------

2023-06-26 03:41:56 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-06-26 03:42:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 0 seconds
Variants: generated 400, build-succeeded 215, build-failed 113, syntax-invalid 52, redundant 20
Fitness: max 0.833(204), min 0.167(4), ave 0.816
Test execution time: sum 15460 ms, max 186 ms, min 59 ms
----------------------------------------------------------------

2023-06-26 03:42:47 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-06-26 03:43:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 50 seconds
Variants: generated 400, build-succeeded 203, build-failed 128, syntax-invalid 58, redundant 11
Fitness: max 0.833(191), min 0.167(3), ave 0.815
Test execution time: sum 14677 ms, max 182 ms, min 59 ms
----------------------------------------------------------------

2023-06-26 03:43:37 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-06-26 03:44:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 43 seconds
Variants: generated 400, build-succeeded 220, build-failed 118, syntax-invalid 49, redundant 13
Fitness: max 0.833(208), min 0.167(4), ave 0.815
Test execution time: sum 15999 ms, max 190 ms, min 59 ms
----------------------------------------------------------------

2023-06-26 03:44:30 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-06-26 03:45:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 35 seconds
Variants: generated 400, build-succeeded 221, build-failed 111, syntax-invalid 52, redundant 16
Fitness: max 1(1), min 0.167(6), ave 0.804
Test execution time: sum 16354 ms, max 187 ms, min 58 ms
----------------------------------------------------------------

2023-06-26 03:45:22 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-06-26 03:46:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 27 seconds
Variants: generated 400, build-succeeded 215, build-failed 122, syntax-invalid 45, redundant 18
Fitness: max 0.833(199), min 0.167(4), ave 0.81
Test execution time: sum 15894 ms, max 186 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 03:46:15 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-06-26 03:47:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 20 seconds
Variants: generated 400, build-succeeded 220, build-failed 115, syntax-invalid 57, redundant 8
Fitness: max 0.833(202), min 0.167(11), ave 0.795
Test execution time: sum 15977 ms, max 183 ms, min 58 ms
----------------------------------------------------------------

2023-06-26 03:47:08 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-06-26 03:48:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 13 seconds
Variants: generated 400, build-succeeded 204, build-failed 124, syntax-invalid 56, redundant 16
Fitness: max 0.833(194), min 0.167(3), ave 0.817
Test execution time: sum 15324 ms, max 180 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 03:48:00 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-06-26 03:48:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 10 seconds
Variants: generated 400, build-succeeded 217, build-failed 116, syntax-invalid 49, redundant 18
Fitness: max 0.833(206), min 0.167(3), ave 0.818
Test execution time: sum 16789 ms, max 206 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 03:48:57 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-06-26 03:49:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 5 seconds
Variants: generated 400, build-succeeded 218, build-failed 106, syntax-invalid 66, redundant 10
Fitness: max 1(1), min 0.167(5), ave 0.807
Test execution time: sum 16387 ms, max 173 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 03:49:52 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-06-26 03:50:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 0 seconds
Variants: generated 400, build-succeeded 214, build-failed 114, syntax-invalid 59, redundant 13
Fitness: max 0.833(194), min 0.167(9), ave 0.795
Test execution time: sum 16052 ms, max 185 ms, min 59 ms
----------------------------------------------------------------

2023-06-26 03:50:47 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-06-26 03:51:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 52 seconds
Variants: generated 400, build-succeeded 214, build-failed 112, syntax-invalid 61, redundant 13
Fitness: max 0.833(199), min 0.167(8), ave 0.801
Test execution time: sum 15967 ms, max 216 ms, min 59 ms
----------------------------------------------------------------

2023-06-26 03:51:40 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-06-26 03:52:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 44 seconds
Variants: generated 400, build-succeeded 200, build-failed 110, syntax-invalid 74, redundant 16
Fitness: max 0.833(180), min 0.167(9), ave 0.793
Test execution time: sum 14799 ms, max 224 ms, min 58 ms
----------------------------------------------------------------

2023-06-26 03:52:31 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-06-26 04:08:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 37 seconds
Variants: generated 400, build-succeeded 202, build-failed 114, syntax-invalid 65, redundant 19
Fitness: max 0.833(186), min 0.167(4), ave 0.81
Test execution time: sum 915216 ms, max 900124 ms, min 59 ms
----------------------------------------------------------------

2023-06-26 04:08:25 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-06-26 04:09:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 30 seconds
Variants: generated 400, build-succeeded 192, build-failed 126, syntax-invalid 73, redundant 9
Fitness: max 0.833(177), min 0.167(8), ave 0.799
Test execution time: sum 14513 ms, max 199 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 04:09:17 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-06-26 04:10:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 28 seconds
Variants: generated 400, build-succeeded 214, build-failed 132, syntax-invalid 46, redundant 8
Fitness: max 1(1), min 0.167(7), ave 0.808
Test execution time: sum 16636 ms, max 206 ms, min 58 ms
----------------------------------------------------------------

2023-06-26 04:10:15 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-06-26 04:11:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 25 seconds
Variants: generated 400, build-succeeded 206, build-failed 127, syntax-invalid 56, redundant 11
Fitness: max 0.833(191), min 0.167(3), ave 0.811
Test execution time: sum 15912 ms, max 155 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:11:13 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-06-26 04:12:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 24 seconds
Variants: generated 400, build-succeeded 211, build-failed 126, syntax-invalid 52, redundant 11
Fitness: max 0.833(200), min 0.167(4), ave 0.814
Test execution time: sum 16176 ms, max 150 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:12:11 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-06-26 04:13:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 21 seconds
Variants: generated 400, build-succeeded 218, build-failed 120, syntax-invalid 53, redundant 9
Fitness: max 0.833(204), min 0.167(4), ave 0.813
Test execution time: sum 16210 ms, max 166 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 04:13:09 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-06-26 04:14:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 18 seconds
Variants: generated 400, build-succeeded 213, build-failed 125, syntax-invalid 48, redundant 14
Fitness: max 0.833(197), min 0.167(4), ave 0.809
Test execution time: sum 16333 ms, max 196 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 04:14:05 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-06-26 04:15:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 13 seconds
Variants: generated 400, build-succeeded 203, build-failed 124, syntax-invalid 58, redundant 15
Fitness: max 0.833(195), min 0.167(3), ave 0.819
Test execution time: sum 15815 ms, max 192 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:15:01 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-06-26 04:16:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 44 minutes 15 seconds
Variants: generated 400, build-succeeded 227, build-failed 118, syntax-invalid 44, redundant 11
Fitness: max 0.833(213), min 0.167(5), ave 0.811
Test execution time: sum 18068 ms, max 200 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:16:02 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-06-26 04:17:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 minutes 17 seconds
Variants: generated 400, build-succeeded 225, build-failed 113, syntax-invalid 55, redundant 7
Fitness: max 0.833(209), min 0.167(5), ave 0.81
Test execution time: sum 17569 ms, max 192 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:17:04 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-06-26 04:18:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 18 seconds
Variants: generated 400, build-succeeded 216, build-failed 119, syntax-invalid 53, redundant 12
Fitness: max 0.833(202), min 0.167(6), ave 0.809
Test execution time: sum 17286 ms, max 190 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 04:18:05 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-06-26 04:19:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 19 seconds
Variants: generated 400, build-succeeded 216, build-failed 112, syntax-invalid 53, redundant 19
Fitness: max 0.833(202), min 0.167(4), ave 0.811
Test execution time: sum 17306 ms, max 192 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:19:07 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-06-26 04:20:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 22 seconds
Variants: generated 400, build-succeeded 220, build-failed 114, syntax-invalid 49, redundant 17
Fitness: max 0.833(209), min 0.167(7), ave 0.809
Test execution time: sum 17551 ms, max 182 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 04:20:10 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-06-26 04:21:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 49 minutes 29 seconds
Variants: generated 400, build-succeeded 225, build-failed 119, syntax-invalid 40, redundant 16
Fitness: max 0.833(216), min 0.167(3), ave 0.819
Test execution time: sum 18402 ms, max 216 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 04:21:16 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-06-26 04:22:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 36 seconds
Variants: generated 400, build-succeeded 231, build-failed 104, syntax-invalid 46, redundant 19
Fitness: max 0.833(212), min 0.167(6), ave 0.805
Test execution time: sum 18778 ms, max 190 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:22:23 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-06-26 04:23:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 42 seconds
Variants: generated 400, build-succeeded 230, build-failed 105, syntax-invalid 52, redundant 13
Fitness: max 0.833(211), min 0.167(10), ave 0.796
Test execution time: sum 18473 ms, max 176 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:23:29 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-06-26 04:24:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 42 seconds
Variants: generated 400, build-succeeded 221, build-failed 110, syntax-invalid 49, redundant 20
Fitness: max 0.833(206), min 0.167(3), ave 0.814
Test execution time: sum 17018 ms, max 190 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:24:30 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-06-26 04:25:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 46 seconds
Variants: generated 400, build-succeeded 225, build-failed 118, syntax-invalid 46, redundant 11
Fitness: max 0.833(212), min 0.167(3), ave 0.816
Test execution time: sum 17852 ms, max 192 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:25:33 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-06-26 04:26:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 56 seconds
Variants: generated 400, build-succeeded 242, build-failed 108, syntax-invalid 42, redundant 8
Fitness: max 0.833(223), min 0.167(5), ave 0.81
Test execution time: sum 20215 ms, max 232 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:26:44 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-06-26 04:27:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 58 seconds
Variants: generated 400, build-succeeded 200, build-failed 119, syntax-invalid 69, redundant 12
Fitness: max 0.833(186), min 0.167(3), ave 0.812
Test execution time: sum 16179 ms, max 238 ms, min 59 ms
----------------------------------------------------------------

2023-06-26 04:27:45 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-06-26 04:43:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 2 seconds
Variants: generated 400, build-succeeded 206, build-failed 122, syntax-invalid 62, redundant 10
Fitness: max 0.833(185), min 0.167(9), ave 0.794
Test execution time: sum 917157 ms, max 900139 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:43:49 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-06-26 04:44:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 9 seconds
Variants: generated 400, build-succeeded 233, build-failed 104, syntax-invalid 46, redundant 17
Fitness: max 1(1), min 0.167(4), ave 0.818
Test execution time: sum 19365 ms, max 215 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 04:44:56 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-06-26 04:46:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 17 seconds
Variants: generated 400, build-succeeded 228, build-failed 106, syntax-invalid 54, redundant 12
Fitness: max 0.833(210), min 0.167(6), ave 0.806
Test execution time: sum 18860 ms, max 220 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:46:04 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-06-26 04:47:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 27 seconds
Variants: generated 400, build-succeeded 232, build-failed 100, syntax-invalid 54, redundant 14
Fitness: max 0.833(211), min 0.167(6), ave 0.803
Test execution time: sum 19512 ms, max 220 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:47:14 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-06-26 04:48:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 29 seconds
Variants: generated 400, build-succeeded 215, build-failed 100, syntax-invalid 68, redundant 17
Fitness: max 1(1), min 0.167(7), ave 0.803
Test execution time: sum 17280 ms, max 195 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:48:16 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-06-26 04:49:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 32 seconds
Variants: generated 400, build-succeeded 206, build-failed 112, syntax-invalid 59, redundant 23
Fitness: max 0.833(194), min 0.167(4), ave 0.814
Test execution time: sum 16711 ms, max 188 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:49:20 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-06-26 04:50:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 39 seconds
Variants: generated 400, build-succeeded 214, build-failed 113, syntax-invalid 59, redundant 14
Fitness: max 0.833(198), min 0.167(5), ave 0.808
Test execution time: sum 17914 ms, max 217 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 04:50:27 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-06-26 04:51:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 48 seconds
Variants: generated 400, build-succeeded 231, build-failed 110, syntax-invalid 45, redundant 14
Fitness: max 0.833(218), min 0.167(2), ave 0.818
Test execution time: sum 19001 ms, max 181 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 04:51:35 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-06-26 04:52:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 2 seconds
Variants: generated 400, build-succeeded 229, build-failed 117, syntax-invalid 43, redundant 11
Fitness: max 0.833(221), min 0.167(3), ave 0.82
Test execution time: sum 19971 ms, max 192 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 04:52:50 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-06-26 04:53:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 22 minutes 7 seconds
Variants: generated 400, build-succeeded 209, build-failed 115, syntax-invalid 60, redundant 16
Fitness: max 1(1), min 0.167(4), ave 0.813
Test execution time: sum 17212 ms, max 234 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:53:55 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-06-26 04:55:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 18 seconds
Variants: generated 400, build-succeeded 234, build-failed 110, syntax-invalid 41, redundant 15
Fitness: max 0.833(217), min 0.167(9), ave 0.801
Test execution time: sum 19848 ms, max 205 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:55:06 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-06-26 04:56:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 26 seconds
Variants: generated 400, build-succeeded 221, build-failed 116, syntax-invalid 50, redundant 13
Fitness: max 0.833(205), min 0.167(3), ave 0.814
Test execution time: sum 18239 ms, max 200 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:56:14 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-06-26 04:57:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 25 minutes 37 seconds
Variants: generated 400, build-succeeded 233, build-failed 91, syntax-invalid 58, redundant 18
Fitness: max 0.833(210), min 0.167(9), ave 0.794
Test execution time: sum 19422 ms, max 198 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:57:25 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-06-26 04:58:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 53 seconds
Variants: generated 400, build-succeeded 241, build-failed 100, syntax-invalid 43, redundant 16
Fitness: max 1(1), min 0.167(2), ave 0.819
Test execution time: sum 20584 ms, max 196 ms, min 61 ms
----------------------------------------------------------------

2023-06-26 04:58:40 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-06-26 04:59:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 59 seconds
Variants: generated 400, build-succeeded 204, build-failed 108, syntax-invalid 64, redundant 24
Fitness: max 0.833(187), min 0.167(7), ave 0.8
Test execution time: sum 16892 ms, max 214 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 04:59:46 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-06-26 05:00:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 minutes 7 seconds
Variants: generated 400, build-succeeded 210, build-failed 113, syntax-invalid 66, redundant 11
Fitness: max 0.833(197), min 0.167(5), ave 0.81
Test execution time: sum 17360 ms, max 199 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 05:00:55 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-06-26 05:02:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 15 seconds
Variants: generated 400, build-succeeded 220, build-failed 93, syntax-invalid 68, redundant 19
Fitness: max 1(1), min 0.167(7), ave 0.804
Test execution time: sum 18384 ms, max 197 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 05:02:03 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-06-26 05:03:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 29 seconds
Variants: generated 400, build-succeeded 223, build-failed 118, syntax-invalid 50, redundant 9
Fitness: max 1(1), min 0.167(7), ave 0.804
Test execution time: sum 19143 ms, max 208 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 05:03:16 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-06-26 05:04:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 32 minutes 40 seconds
Variants: generated 400, build-succeeded 210, build-failed 104, syntax-invalid 64, redundant 22
Fitness: max 1(1), min 0.167(5), ave 0.811
Test execution time: sum 18037 ms, max 197 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 05:04:27 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-06-26 05:05:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 33 minutes 49 seconds
Variants: generated 400, build-succeeded 212, build-failed 114, syntax-invalid 61, redundant 13
Fitness: max 0.833(198), min 0.167(6), ave 0.804
Test execution time: sum 17745 ms, max 208 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 05:05:36 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-06-26 05:21:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 58 seconds
Variants: generated 400, build-succeeded 209, build-failed 108, syntax-invalid 68, redundant 15
Fitness: max 1(1), min 0.167(4), ave 0.816
Test execution time: sum 917538 ms, max 900131 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 05:21:45 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-06-26 05:22:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 9 seconds
Variants: generated 400, build-succeeded 205, build-failed 109, syntax-invalid 68, redundant 18
Fitness: max 0.833(192), min 0.167(4), ave 0.808
Test execution time: sum 17741 ms, max 215 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 05:22:57 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-06-26 05:24:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 23 seconds
Variants: generated 400, build-succeeded 206, build-failed 127, syntax-invalid 55, redundant 12
Fitness: max 0.833(200), min 0.167(2), ave 0.822
Test execution time: sum 18105 ms, max 196 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 05:24:10 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-06-26 05:25:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 53 minutes 35 seconds
Variants: generated 400, build-succeeded 219, build-failed 115, syntax-invalid 47, redundant 19
Fitness: max 0.833(213), min 0.167(4), ave 0.82
Test execution time: sum 18680 ms, max 197 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 05:25:22 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-06-26 05:26:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 54 minutes 48 seconds
Variants: generated 400, build-succeeded 213, build-failed 123, syntax-invalid 51, redundant 13
Fitness: max 0.833(203), min 0.167(2), ave 0.821
Test execution time: sum 18700 ms, max 193 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 05:26:36 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-06-26 05:27:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 56 minutes 3 seconds
Variants: generated 400, build-succeeded 228, build-failed 99, syntax-invalid 53, redundant 20
Fitness: max 0.833(216), min 0.167(5), ave 0.813
Test execution time: sum 19203 ms, max 188 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 05:27:50 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-06-26 05:29:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 57 minutes 16 seconds
Variants: generated 400, build-succeeded 234, build-failed 95, syntax-invalid 49, redundant 22
Fitness: max 0.833(218), min 0.167(6), ave 0.808
Test execution time: sum 19696 ms, max 197 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 05:29:03 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-06-26 05:30:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 27 seconds
Variants: generated 400, build-succeeded 217, build-failed 111, syntax-invalid 53, redundant 19
Fitness: max 0.833(205), min 0.167(4), ave 0.815
Test execution time: sum 18379 ms, max 217 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 05:30:14 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-06-26 05:31:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 39 seconds
Variants: generated 400, build-succeeded 220, build-failed 119, syntax-invalid 49, redundant 12
Fitness: max 0.833(200), min 0.167(8), ave 0.799
Test execution time: sum 18798 ms, max 200 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 05:31:26 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-06-26 05:32:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 seconds
Variants: generated 400, build-succeeded 229, build-failed 122, syntax-invalid 39, redundant 10
Fitness: max 0.833(217), min 0.167(5), ave 0.814
Test execution time: sum 18860 ms, max 194 ms, min 60 ms
----------------------------------------------------------------

2023-06-26 05:32:40 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-06-26 05:33:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 2 seconds
Variants: generated 400, build-succeeded 216, build-failed 114, syntax-invalid 56, redundant 14
Fitness: max 0.833(205), min 0.167(2), ave 0.819
Test execution time: sum 17960 ms, max 192 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 05:33:49 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-06-26 05:49:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 7 seconds
Variants: generated 400, build-succeeded 193, build-failed 118, syntax-invalid 72, redundant 17
Fitness: max 0.833(179), min 0.167(8), ave 0.798
Test execution time: sum 915667 ms, max 900116 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 05:49:54 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-06-26 05:51:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 15 seconds
Variants: generated 400, build-succeeded 222, build-failed 109, syntax-invalid 54, redundant 15
Fitness: max 0.833(211), min 0.167(5), ave 0.813
Test execution time: sum 17928 ms, max 191 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 05:51:03 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-06-26 05:52:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 26 seconds
Variants: generated 400, build-succeeded 214, build-failed 118, syntax-invalid 53, redundant 15
Fitness: max 0.833(200), min 0.167(9), ave 0.8
Test execution time: sum 17912 ms, max 195 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 05:52:13 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-06-26 05:53:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 38 seconds
Variants: generated 400, build-succeeded 246, build-failed 93, syntax-invalid 41, redundant 20
Fitness: max 0.833(230), min 0.167(10), ave 0.8
Test execution time: sum 19778 ms, max 202 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 05:53:26 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-06-26 05:54:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 50 seconds
Variants: generated 400, build-succeeded 238, build-failed 104, syntax-invalid 42, redundant 16
Fitness: max 0.833(222), min 0.167(7), ave 0.807
Test execution time: sum 19300 ms, max 197 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 05:54:38 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-06-26 05:55:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 0 seconds
Variants: generated 400, build-succeeded 209, build-failed 113, syntax-invalid 56, redundant 22
Fitness: max 0.833(191), min 0.167(10), ave 0.794
Test execution time: sum 17091 ms, max 186 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 05:55:47 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-06-26 06:12:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 40 minutes 12 seconds
Variants: generated 400, build-succeeded 227, build-failed 108, syntax-invalid 41, redundant 24
Fitness: max 0.833(205), min 0.167(15), ave 0.783
Test execution time: sum 918704 ms, max 900132 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 06:12:00 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-06-26 06:28:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 56 minutes 26 seconds
Variants: generated 400, build-succeeded 219, build-failed 124, syntax-invalid 38, redundant 19
Fitness: max 0.833(201), min 0.167(12), ave 0.791
Test execution time: sum 918588 ms, max 900131 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 06:28:14 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-06-26 06:29:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 43 seconds
Variants: generated 400, build-succeeded 229, build-failed 117, syntax-invalid 36, redundant 18
Fitness: max 0.833(215), min 0.167(8), ave 0.805
Test execution time: sum 19057 ms, max 195 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 06:29:30 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-06-26 06:30:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 minutes 59 seconds
Variants: generated 400, build-succeeded 231, build-failed 116, syntax-invalid 31, redundant 22
Fitness: max 0.833(220), min 0(1), ave 0.809
Test execution time: sum 19277 ms, max 185 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 06:30:47 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-06-26 06:32:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 seconds
Variants: generated 400, build-succeeded 234, build-failed 99, syntax-invalid 41, redundant 26
Fitness: max 0.833(215), min 0.167(11), ave 0.795
Test execution time: sum 19248 ms, max 194 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 06:32:02 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-06-26 06:33:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 1 minutes 32 seconds
Variants: generated 400, build-succeeded 233, build-failed 113, syntax-invalid 37, redundant 17
Fitness: max 0.833(220), min 0.167(6), ave 0.81
Test execution time: sum 19624 ms, max 200 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 06:33:19 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-06-26 06:34:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 46 seconds
Variants: generated 400, build-succeeded 214, build-failed 118, syntax-invalid 40, redundant 28
Fitness: max 0.833(203), min 0.167(4), ave 0.815
Test execution time: sum 18220 ms, max 224 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 06:34:34 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-06-26 06:35:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 4 minutes 4 seconds
Variants: generated 400, build-succeeded 234, build-failed 109, syntax-invalid 37, redundant 20
Fitness: max 1(1), min 0.167(4), ave 0.811
Test execution time: sum 19613 ms, max 191 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 06:35:51 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-06-26 06:37:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 5 minutes 22 seconds
Variants: generated 400, build-succeeded 227, build-failed 118, syntax-invalid 41, redundant 14
Fitness: max 0.833(217), min 0.167(4), ave 0.816
Test execution time: sum 19184 ms, max 196 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 06:37:09 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-06-26 06:38:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 6 minutes 38 seconds
Variants: generated 400, build-succeeded 215, build-failed 119, syntax-invalid 46, redundant 20
Fitness: max 0.833(207), min 0.167(6), ave 0.813
Test execution time: sum 18146 ms, max 181 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 06:38:25 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-06-26 06:39:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 7 minutes 54 seconds
Variants: generated 400, build-succeeded 214, build-failed 112, syntax-invalid 47, redundant 27
Fitness: max 1(2), min 0.167(7), ave 0.81
Test execution time: sum 18222 ms, max 200 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 06:39:41 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-06-26 06:40:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 11 seconds
Variants: generated 400, build-succeeded 206, build-failed 128, syntax-invalid 37, redundant 29
Fitness: max 0.833(189), min 0(1), ave 0.793
Test execution time: sum 18042 ms, max 190 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 06:40:59 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-06-26 06:42:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 10 minutes 29 seconds
Variants: generated 400, build-succeeded 213, build-failed 116, syntax-invalid 51, redundant 20
Fitness: max 0.833(201), min 0.167(6), ave 0.808
Test execution time: sum 18360 ms, max 214 ms, min 62 ms
----------------------------------------------------------------

2023-06-26 06:42:16 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-06-26 06:43:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 11 minutes 43 seconds
Variants: generated 400, build-succeeded 212, build-failed 101, syntax-invalid 58, redundant 29
Fitness: max 0.833(192), min 0.167(13), ave 0.786
Test execution time: sum 17871 ms, max 203 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 06:43:30 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-06-26 06:59:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 59 seconds
Variants: generated 400, build-succeeded 212, build-failed 114, syntax-invalid 51, redundant 23
Fitness: max 0.833(196), min 0.167(11), ave 0.792
Test execution time: sum 918344 ms, max 900131 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 06:59:47 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-06-26 07:16:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 18 seconds
Variants: generated 400, build-succeeded 218, build-failed 122, syntax-invalid 40, redundant 20
Fitness: max 0.833(200), min 0.167(12), ave 0.791
Test execution time: sum 919141 ms, max 900143 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 07:16:03 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-06-26 07:17:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 39 seconds
Variants: generated 400, build-succeeded 225, build-failed 112, syntax-invalid 43, redundant 20
Fitness: max 0.833(207), min 0.167(12), ave 0.792
Test execution time: sum 19540 ms, max 240 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 07:17:24 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-06-26 07:33:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 minutes 58 seconds
Variants: generated 400, build-succeeded 222, build-failed 118, syntax-invalid 40, redundant 20
Fitness: max 0.833(211), min 0.167(6), ave 0.812
Test execution time: sum 919205 ms, max 900119 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 07:33:43 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-06-26 07:35:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 3 minutes 18 seconds
Variants: generated 400, build-succeeded 238, build-failed 97, syntax-invalid 42, redundant 23
Fitness: max 0.833(222), min 0.167(7), ave 0.805
Test execution time: sum 20900 ms, max 172 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 07:35:03 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-06-26 07:36:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 4 minutes 37 seconds
Variants: generated 400, build-succeeded 222, build-failed 107, syntax-invalid 48, redundant 23
Fitness: max 0.833(205), min 0.167(11), ave 0.795
Test execution time: sum 19389 ms, max 196 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 07:36:22 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-06-26 07:52:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 59 seconds
Variants: generated 400, build-succeeded 241, build-failed 107, syntax-invalid 31, redundant 21
Fitness: max 0.833(228), min 0.167(8), ave 0.803
Test execution time: sum 921070 ms, max 900128 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 07:52:44 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-06-26 07:54:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 22 minutes 17 seconds
Variants: generated 400, build-succeeded 220, build-failed 113, syntax-invalid 42, redundant 25
Fitness: max 0.833(207), min 0.167(9), ave 0.803
Test execution time: sum 18724 ms, max 198 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 07:54:02 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-06-26 07:55:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 23 minutes 35 seconds
Variants: generated 400, build-succeeded 203, build-failed 127, syntax-invalid 52, redundant 18
Fitness: max 0.833(198), min 0.167(3), ave 0.822
Test execution time: sum 17807 ms, max 195 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 07:55:20 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-06-26 07:56:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 24 minutes 56 seconds
Variants: generated 400, build-succeeded 226, build-failed 121, syntax-invalid 32, redundant 21
Fitness: max 0.833(211), min 0.167(6), ave 0.808
Test execution time: sum 20092 ms, max 196 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 07:56:41 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-06-26 07:58:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 19 seconds
Variants: generated 400, build-succeeded 230, build-failed 114, syntax-invalid 37, redundant 19
Fitness: max 1(1), min 0.167(5), ave 0.817
Test execution time: sum 20136 ms, max 238 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 07:58:05 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-06-26 07:59:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 27 minutes 38 seconds
Variants: generated 400, build-succeeded 210, build-failed 116, syntax-invalid 52, redundant 22
Fitness: max 0.833(199), min 0.167(4), ave 0.815
Test execution time: sum 18646 ms, max 234 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 07:59:23 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-06-26 08:00:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 28 minutes 57 seconds
Variants: generated 400, build-succeeded 216, build-failed 115, syntax-invalid 49, redundant 20
Fitness: max 0.833(209), min 0.167(3), ave 0.82
Test execution time: sum 18865 ms, max 199 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 08:00:42 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-06-26 08:17:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 45 minutes 20 seconds
Variants: generated 400, build-succeeded 230, build-failed 109, syntax-invalid 46, redundant 15
Fitness: max 1(1), min 0.167(7), ave 0.808
Test execution time: sum 920692 ms, max 900147 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 08:17:05 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-06-26 08:33:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 1 minutes 42 seconds
Variants: generated 400, build-succeeded 226, build-failed 107, syntax-invalid 51, redundant 16
Fitness: max 0.833(214), min 0.167(7), ave 0.808
Test execution time: sum 920273 ms, max 900125 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 08:33:27 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-06-26 08:35:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 3 minutes 22 seconds
Variants: generated 400, build-succeeded 229, build-failed 105, syntax-invalid 45, redundant 21
Fitness: max 0.833(221), min 0.167(4), ave 0.819
Test execution time: sum 22897 ms, max 203 ms, min 68 ms
----------------------------------------------------------------

2023-06-26 08:35:07 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-06-26 08:51:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 20 minutes 3 seconds
Variants: generated 400, build-succeeded 228, build-failed 109, syntax-invalid 42, redundant 21
Fitness: max 0.833(215), min 0.167(8), ave 0.804
Test execution time: sum 923051 ms, max 900171 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 08:51:48 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-06-26 08:53:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 21 minutes 39 seconds
Variants: generated 400, build-succeeded 211, build-failed 108, syntax-invalid 56, redundant 25
Fitness: max 0.833(202), min 0.167(2), ave 0.821
Test execution time: sum 21172 ms, max 236 ms, min 70 ms
----------------------------------------------------------------

2023-06-26 08:53:24 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-06-26 08:55:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 18 seconds
Variants: generated 400, build-succeeded 230, build-failed 116, syntax-invalid 41, redundant 13
Fitness: max 0.833(212), min 0.167(9), ave 0.799
Test execution time: sum 22764 ms, max 239 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 08:55:03 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-06-26 08:56:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 24 minutes 50 seconds
Variants: generated 400, build-succeeded 220, build-failed 109, syntax-invalid 50, redundant 21
Fitness: max 0.833(208), min 0.167(5), ave 0.813
Test execution time: sum 20739 ms, max 210 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 08:56:35 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-06-26 09:13:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 28 seconds
Variants: generated 400, build-succeeded 240, build-failed 107, syntax-invalid 35, redundant 18
Fitness: max 1(1), min 0.167(9), ave 0.8
Test execution time: sum 922893 ms, max 900113 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 09:13:13 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-06-26 09:14:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 57 seconds
Variants: generated 400, build-succeeded 213, build-failed 110, syntax-invalid 59, redundant 18
Fitness: max 0.833(197), min 0.167(3), ave 0.812
Test execution time: sum 20221 ms, max 241 ms, min 74 ms
----------------------------------------------------------------

2023-06-26 09:14:42 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-06-26 09:28:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 56 minutes 29 seconds
Variants: generated 400, build-succeeded 230, build-failed 111, syntax-invalid 36, redundant 23
Fitness: max 0.833(218), min 0.167(6), ave 0.81
Test execution time: sum 742102 ms, max 720156 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 09:28:15 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-06-26 09:29:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 58 minutes 13 seconds
Variants: generated 400, build-succeeded 221, build-failed 121, syntax-invalid 33, redundant 25
Fitness: max 0.833(212), min 0.167(6), ave 0.812
Test execution time: sum 22282 ms, max 204 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 09:29:58 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-06-26 09:31:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 59 minutes 49 seconds
Variants: generated 400, build-succeeded 227, build-failed 106, syntax-invalid 52, redundant 15
Fitness: max 0.833(209), min 0.167(6), ave 0.806
Test execution time: sum 22076 ms, max 207 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 09:31:34 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-06-26 09:33:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 1 minutes 24 seconds
Variants: generated 400, build-succeeded 223, build-failed 107, syntax-invalid 58, redundant 12
Fitness: max 1(1), min 0.167(8), ave 0.801
Test execution time: sum 21754 ms, max 227 ms, min 68 ms
----------------------------------------------------------------

2023-06-26 09:33:09 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-06-26 09:34:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 2 minutes 56 seconds
Variants: generated 400, build-succeeded 211, build-failed 109, syntax-invalid 65, redundant 15
Fitness: max 1(2), min 0.167(5), ave 0.816
Test execution time: sum 20168 ms, max 205 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 09:34:42 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-06-26 09:36:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 28 seconds
Variants: generated 400, build-succeeded 219, build-failed 101, syntax-invalid 52, redundant 28
Fitness: max 0.833(205), min 0.167(7), ave 0.806
Test execution time: sum 20951 ms, max 206 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 09:36:13 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-06-26 09:37:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 5 minutes 58 seconds
Variants: generated 400, build-succeeded 221, build-failed 105, syntax-invalid 51, redundant 23
Fitness: max 1(1), min 0.167(6), ave 0.807
Test execution time: sum 20659 ms, max 208 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 09:37:43 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-06-26 09:39:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 25 seconds
Variants: generated 400, build-succeeded 216, build-failed 111, syntax-invalid 60, redundant 13
Fitness: max 0.833(204), min 0.167(2), ave 0.819
Test execution time: sum 20144 ms, max 207 ms, min 68 ms
----------------------------------------------------------------

2023-06-26 09:39:10 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-06-26 09:40:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 55 seconds
Variants: generated 400, build-succeeded 219, build-failed 120, syntax-invalid 46, redundant 15
Fitness: max 0.833(215), min 0.167(1), ave 0.824
Test execution time: sum 20602 ms, max 205 ms, min 68 ms
----------------------------------------------------------------

2023-06-26 09:40:40 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-06-26 09:42:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 24 seconds
Variants: generated 400, build-succeeded 222, build-failed 113, syntax-invalid 43, redundant 22
Fitness: max 1(1), min 0(1), ave 0.812
Test execution time: sum 20493 ms, max 224 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 09:42:10 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-06-26 09:43:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 11 minutes 55 seconds
Variants: generated 400, build-succeeded 226, build-failed 124, syntax-invalid 32, redundant 18
Fitness: max 1(1), min 0.167(7), ave 0.805
Test execution time: sum 20042 ms, max 198 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 09:43:40 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-06-26 09:45:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 22 seconds
Variants: generated 400, build-succeeded 223, build-failed 115, syntax-invalid 45, redundant 17
Fitness: max 0.833(216), min 0.167(2), ave 0.823
Test execution time: sum 20148 ms, max 226 ms, min 75 ms
----------------------------------------------------------------

2023-06-26 09:45:07 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-06-26 09:46:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 49 seconds
Variants: generated 400, build-succeeded 217, build-failed 118, syntax-invalid 46, redundant 19
Fitness: max 0.833(209), min 0.167(8), ave 0.809
Test execution time: sum 19455 ms, max 206 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 09:46:35 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-06-26 09:48:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 16 minutes 18 seconds
Variants: generated 400, build-succeeded 222, build-failed 111, syntax-invalid 49, redundant 18
Fitness: max 0.833(208), min 0.167(9), ave 0.8
Test execution time: sum 19888 ms, max 221 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 09:48:03 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-06-26 09:49:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 17 minutes 46 seconds
Variants: generated 400, build-succeeded 213, build-failed 119, syntax-invalid 46, redundant 22
Fitness: max 0.833(198), min 0.167(6), ave 0.807
Test execution time: sum 18566 ms, max 158 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 09:49:32 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-06-26 09:50:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 19 minutes 13 seconds
Variants: generated 400, build-succeeded 211, build-failed 119, syntax-invalid 49, redundant 21
Fitness: max 0.833(198), min 0.167(7), ave 0.806
Test execution time: sum 18753 ms, max 223 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 09:50:58 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-06-26 09:52:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 20 minutes 41 seconds
Variants: generated 400, build-succeeded 218, build-failed 113, syntax-invalid 51, redundant 18
Fitness: max 0.833(207), min 0.167(7), ave 0.809
Test execution time: sum 19206 ms, max 204 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 09:52:26 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-06-26 09:53:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 22 minutes 12 seconds
Variants: generated 400, build-succeeded 240, build-failed 99, syntax-invalid 37, redundant 24
Fitness: max 0.833(223), min 0.167(5), ave 0.809
Test execution time: sum 21711 ms, max 219 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 09:53:58 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-06-26 09:55:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 23 minutes 43 seconds
Variants: generated 400, build-succeeded 224, build-failed 112, syntax-invalid 43, redundant 21
Fitness: max 0.833(209), min 0.167(11), ave 0.798
Test execution time: sum 20052 ms, max 199 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 09:55:28 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-06-26 09:56:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 minutes 10 seconds
Variants: generated 400, build-succeeded 210, build-failed 110, syntax-invalid 51, redundant 29
Fitness: max 0.833(194), min 0.167(4), ave 0.809
Test execution time: sum 18551 ms, max 199 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 09:56:55 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-06-26 09:58:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 26 minutes 41 seconds
Variants: generated 400, build-succeeded 225, build-failed 113, syntax-invalid 41, redundant 21
Fitness: max 0.833(214), min 0.167(5), ave 0.814
Test execution time: sum 20454 ms, max 205 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 09:58:26 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-06-26 09:59:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 28 minutes 12 seconds
Variants: generated 400, build-succeeded 228, build-failed 110, syntax-invalid 44, redundant 18
Fitness: max 0.833(218), min 0.167(1), ave 0.822
Test execution time: sum 20490 ms, max 203 ms, min 76 ms
----------------------------------------------------------------

2023-06-26 09:59:57 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-06-26 10:01:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 29 minutes 44 seconds
Variants: generated 400, build-succeeded 228, build-failed 106, syntax-invalid 40, redundant 26
Fitness: max 0.833(213), min 0.167(3), ave 0.815
Test execution time: sum 21023 ms, max 213 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 10:01:29 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-06-26 10:03:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 16 seconds
Variants: generated 400, build-succeeded 232, build-failed 102, syntax-invalid 45, redundant 21
Fitness: max 0.833(222), min 0.167(5), ave 0.815
Test execution time: sum 20895 ms, max 258 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 10:03:02 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-06-26 10:04:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 47 seconds
Variants: generated 400, build-succeeded 225, build-failed 101, syntax-invalid 47, redundant 27
Fitness: max 0.833(216), min 0.167(2), ave 0.822
Test execution time: sum 20021 ms, max 221 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 10:04:32 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-06-26 10:06:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 21 seconds
Variants: generated 400, build-succeeded 221, build-failed 115, syntax-invalid 44, redundant 20
Fitness: max 0.833(209), min 0.167(8), ave 0.805
Test execution time: sum 20294 ms, max 200 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 10:06:06 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-06-26 10:07:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 35 minutes 54 seconds
Variants: generated 400, build-succeeded 229, build-failed 111, syntax-invalid 45, redundant 15
Fitness: max 0.833(217), min 0.167(5), ave 0.814
Test execution time: sum 20882 ms, max 206 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 10:07:40 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-06-26 10:09:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 37 minutes 29 seconds
Variants: generated 400, build-succeeded 229, build-failed 124, syntax-invalid 31, redundant 16
Fitness: max 0.833(213), min 0.167(11), ave 0.797
Test execution time: sum 19845 ms, max 199 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 10:09:14 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-06-26 10:10:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 39 minutes 2 seconds
Variants: generated 400, build-succeeded 233, build-failed 108, syntax-invalid 39, redundant 20
Fitness: max 0.833(216), min 0.167(6), ave 0.805
Test execution time: sum 21164 ms, max 215 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 10:10:48 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-06-26 10:12:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 36 seconds
Variants: generated 400, build-succeeded 222, build-failed 116, syntax-invalid 39, redundant 23
Fitness: max 0.833(210), min 0.167(5), ave 0.812
Test execution time: sum 20139 ms, max 204 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 10:12:21 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-06-26 10:13:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 42 minutes 12 seconds
Variants: generated 400, build-succeeded 235, build-failed 111, syntax-invalid 35, redundant 19
Fitness: max 0.833(219), min 0.167(7), ave 0.806
Test execution time: sum 21214 ms, max 194 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 10:13:57 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-06-26 10:15:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 43 minutes 46 seconds
Variants: generated 400, build-succeeded 227, build-failed 116, syntax-invalid 41, redundant 16
Fitness: max 0.833(216), min 0.167(6), ave 0.812
Test execution time: sum 20422 ms, max 207 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 10:15:31 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-06-26 10:17:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 45 minutes 20 seconds
Variants: generated 400, build-succeeded 230, build-failed 105, syntax-invalid 45, redundant 20
Fitness: max 0.833(216), min 0(1), ave 0.806
Test execution time: sum 20965 ms, max 196 ms, min 68 ms
----------------------------------------------------------------

2023-06-26 10:17:06 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-06-26 10:18:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 46 minutes 52 seconds
Variants: generated 400, build-succeeded 213, build-failed 118, syntax-invalid 43, redundant 26
Fitness: max 0.833(202), min 0.167(4), ave 0.815
Test execution time: sum 19170 ms, max 210 ms, min 68 ms
----------------------------------------------------------------

2023-06-26 10:18:37 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-06-26 10:20:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 48 minutes 24 seconds
Variants: generated 400, build-succeeded 213, build-failed 127, syntax-invalid 42, redundant 18
Fitness: max 0.833(199), min 0.167(5), ave 0.809
Test execution time: sum 19387 ms, max 206 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 10:20:09 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-06-26 10:21:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 49 minutes 51 seconds
Variants: generated 400, build-succeeded 204, build-failed 112, syntax-invalid 62, redundant 22
Fitness: max 0.833(198), min 0.167(2), ave 0.821
Test execution time: sum 18079 ms, max 186 ms, min 70 ms
----------------------------------------------------------------

2023-06-26 10:21:36 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-06-26 10:23:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 51 minutes 18 seconds
Variants: generated 400, build-succeeded 201, build-failed 122, syntax-invalid 58, redundant 19
Fitness: max 0.833(193), min 0.167(2), ave 0.822
Test execution time: sum 17856 ms, max 159 ms, min 77 ms
----------------------------------------------------------------

2023-06-26 10:23:03 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-06-26 10:24:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 52 minutes 49 seconds
Variants: generated 400, build-succeeded 216, build-failed 107, syntax-invalid 58, redundant 19
Fitness: max 0.833(206), min 0.167(6), ave 0.81
Test execution time: sum 19220 ms, max 201 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 10:24:34 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-06-26 10:26:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 54 minutes 21 seconds
Variants: generated 400, build-succeeded 214, build-failed 111, syntax-invalid 52, redundant 23
Fitness: max 0.833(202), min 0.167(5), ave 0.812
Test execution time: sum 19658 ms, max 206 ms, min 68 ms
----------------------------------------------------------------

2023-06-26 10:26:06 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-06-26 10:27:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 55 minutes 51 seconds
Variants: generated 400, build-succeeded 213, build-failed 119, syntax-invalid 57, redundant 11
Fitness: max 0.833(200), min 0.167(3), ave 0.815
Test execution time: sum 19502 ms, max 208 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 10:27:37 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-06-26 10:29:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 57 minutes 20 seconds
Variants: generated 400, build-succeeded 201, build-failed 116, syntax-invalid 67, redundant 16
Fitness: max 0.833(185), min 0.167(7), ave 0.803
Test execution time: sum 18008 ms, max 176 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 10:29:05 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-06-26 10:30:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 58 minutes 51 seconds
Variants: generated 400, build-succeeded 217, build-failed 103, syntax-invalid 58, redundant 22
Fitness: max 0.833(204), min 0.167(9), ave 0.802
Test execution time: sum 19139 ms, max 151 ms, min 67 ms
----------------------------------------------------------------

2023-06-26 10:30:36 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-06-26 10:32:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 21 seconds
Variants: generated 400, build-succeeded 217, build-failed 111, syntax-invalid 59, redundant 13
Fitness: max 0.833(201), min 0.167(9), ave 0.8
Test execution time: sum 19210 ms, max 203 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 10:32:06 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-06-26 10:33:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 1 minutes 50 seconds
Variants: generated 400, build-succeeded 194, build-failed 124, syntax-invalid 57, redundant 25
Fitness: max 0.833(182), min 0.167(6), ave 0.806
Test execution time: sum 17744 ms, max 196 ms, min 68 ms
----------------------------------------------------------------

2023-06-26 10:33:36 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-06-26 10:35:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 3 minutes 22 seconds
Variants: generated 400, build-succeeded 209, build-failed 117, syntax-invalid 58, redundant 16
Fitness: max 0.833(198), min 0.167(7), ave 0.806
Test execution time: sum 18849 ms, max 170 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 10:35:07 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-06-26 10:36:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 4 minutes 49 seconds
Variants: generated 400, build-succeeded 186, build-failed 114, syntax-invalid 70, redundant 30
Fitness: max 0.833(176), min 0(1), ave 0.806
Test execution time: sum 17053 ms, max 180 ms, min 68 ms
----------------------------------------------------------------

2023-06-26 10:36:35 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-06-26 10:53:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 21 minutes 38 seconds
Variants: generated 400, build-succeeded 194, build-failed 120, syntax-invalid 67, redundant 19
Fitness: max 0.833(178), min 0.167(8), ave 0.796
Test execution time: sum 921778 ms, max 900138 ms, min 68 ms
----------------------------------------------------------------

2023-06-26 10:53:24 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-06-26 10:55:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 23 minutes 35 seconds
Variants: generated 400, build-succeeded 202, build-failed 123, syntax-invalid 53, redundant 22
Fitness: max 0.833(194), min 0.167(3), ave 0.819
Test execution time: sum 22640 ms, max 202 ms, min 80 ms
----------------------------------------------------------------

2023-06-26 10:55:20 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-06-26 10:57:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 25 minutes 42 seconds
Variants: generated 400, build-succeeded 213, build-failed 116, syntax-invalid 51, redundant 20
Fitness: max 1(1), min 0.167(8), ave 0.804
Test execution time: sum 26317 ms, max 280 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 10:57:27 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-06-26 10:59:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 28 minutes 0 seconds
Variants: generated 400, build-succeeded 223, build-failed 105, syntax-invalid 51, redundant 21
Fitness: max 0.833(216), min 0.167(6), ave 0.815
Test execution time: sum 29086 ms, max 254 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 10:59:45 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-06-26 11:02:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 30 minutes 21 seconds
Variants: generated 400, build-succeeded 232, build-failed 105, syntax-invalid 39, redundant 24
Fitness: max 0.833(214), min 0.167(13), ave 0.792
Test execution time: sum 29301 ms, max 323 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 11:02:06 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-06-26 11:04:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 32 minutes 29 seconds
Variants: generated 400, build-succeeded 206, build-failed 120, syntax-invalid 59, redundant 15
Fitness: max 0.833(191), min 0.167(9), ave 0.797
Test execution time: sum 25657 ms, max 279 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 11:04:14 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-06-26 11:06:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 34 minutes 44 seconds
Variants: generated 400, build-succeeded 214, build-failed 127, syntax-invalid 41, redundant 18
Fitness: max 0.833(199), min 0.167(11), ave 0.796
Test execution time: sum 26659 ms, max 264 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 11:06:30 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-06-26 11:08:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 36 minutes 58 seconds
Variants: generated 400, build-succeeded 219, build-failed 114, syntax-invalid 38, redundant 29
Fitness: max 0.833(204), min 0.167(10), ave 0.798
Test execution time: sum 27337 ms, max 290 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 11:08:44 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-06-26 11:10:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 39 minutes 14 seconds
Variants: generated 400, build-succeeded 232, build-failed 103, syntax-invalid 50, redundant 15
Fitness: max 0.833(212), min 0(1), ave 0.796
Test execution time: sum 28824 ms, max 297 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 11:10:59 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-06-26 11:13:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 41 minutes 26 seconds
Variants: generated 400, build-succeeded 214, build-failed 109, syntax-invalid 44, redundant 33
Fitness: max 0.833(194), min 0.167(13), ave 0.785
Test execution time: sum 26895 ms, max 342 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 11:13:12 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-06-26 11:15:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 43 minutes 38 seconds
Variants: generated 400, build-succeeded 207, build-failed 112, syntax-invalid 55, redundant 26
Fitness: max 1(1), min 0.167(10), ave 0.794
Test execution time: sum 26229 ms, max 284 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 11:15:23 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-06-26 11:17:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 45 minutes 52 seconds
Variants: generated 400, build-succeeded 221, build-failed 109, syntax-invalid 52, redundant 18
Fitness: max 0.833(204), min 0.167(12), ave 0.79
Test execution time: sum 27650 ms, max 253 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 11:17:38 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-06-26 11:34:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 3 minutes 9 seconds
Variants: generated 400, build-succeeded 212, build-failed 119, syntax-invalid 45, redundant 24
Fitness: max 1(1), min 0.167(12), ave 0.789
Test execution time: sum 927578 ms, max 900169 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 11:34:54 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-06-26 11:37:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 5 minutes 28 seconds
Variants: generated 400, build-succeeded 223, build-failed 94, syntax-invalid 50, redundant 33
Fitness: max 0.833(207), min 0.167(13), ave 0.788
Test execution time: sum 28470 ms, max 284 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 11:37:13 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-06-26 11:39:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 7 minutes 48 seconds
Variants: generated 400, build-succeeded 219, build-failed 122, syntax-invalid 44, redundant 15
Fitness: max 0.833(205), min 0.167(10), ave 0.799
Test execution time: sum 27588 ms, max 262 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 11:39:33 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-06-26 11:41:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 10 minutes 6 seconds
Variants: generated 400, build-succeeded 223, build-failed 106, syntax-invalid 55, redundant 16
Fitness: max 0.833(210), min 0.167(9), ave 0.802
Test execution time: sum 28512 ms, max 253 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 11:41:51 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-06-26 11:44:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 12 minutes 21 seconds
Variants: generated 400, build-succeeded 232, build-failed 98, syntax-invalid 51, redundant 19
Fitness: max 0.833(215), min 0.167(7), ave 0.805
Test execution time: sum 28179 ms, max 290 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 11:44:06 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-06-26 11:46:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 37 seconds
Variants: generated 400, build-succeeded 236, build-failed 113, syntax-invalid 35, redundant 16
Fitness: max 0.833(225), min 0.167(6), ave 0.813
Test execution time: sum 28011 ms, max 243 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 11:46:22 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-06-26 11:48:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 16 minutes 47 seconds
Variants: generated 400, build-succeeded 219, build-failed 119, syntax-invalid 42, redundant 20
Fitness: max 0.833(205), min 0.167(8), ave 0.804
Test execution time: sum 25840 ms, max 308 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 11:48:33 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-06-26 11:50:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 18 minutes 59 seconds
Variants: generated 400, build-succeeded 225, build-failed 113, syntax-invalid 37, redundant 25
Fitness: max 0.833(218), min 0.167(2), ave 0.821
Test execution time: sum 26626 ms, max 247 ms, min 83 ms
----------------------------------------------------------------

2023-06-26 11:50:45 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-06-26 11:52:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 21 minutes 9 seconds
Variants: generated 400, build-succeeded 214, build-failed 108, syntax-invalid 46, redundant 32
Fitness: max 0.833(206), min 0.167(3), ave 0.82
Test execution time: sum 25481 ms, max 273 ms, min 99 ms
----------------------------------------------------------------

2023-06-26 11:52:54 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-06-26 11:55:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 23 minutes 16 seconds
Variants: generated 400, build-succeeded 211, build-failed 114, syntax-invalid 52, redundant 23
Fitness: max 0.833(201), min 0.167(7), ave 0.809
Test execution time: sum 24476 ms, max 268 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 11:55:01 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-06-26 11:57:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 27 seconds
Variants: generated 400, build-succeeded 221, build-failed 114, syntax-invalid 45, redundant 20
Fitness: max 0.833(210), min 0.167(7), ave 0.808
Test execution time: sum 25769 ms, max 276 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 11:57:12 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-06-26 11:59:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 39 seconds
Variants: generated 400, build-succeeded 228, build-failed 101, syntax-invalid 53, redundant 18
Fitness: max 0.833(210), min 0.167(11), ave 0.794
Test execution time: sum 26487 ms, max 249 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 11:59:25 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-06-26 12:01:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 29 minutes 51 seconds
Variants: generated 400, build-succeeded 222, build-failed 109, syntax-invalid 44, redundant 25
Fitness: max 0.833(208), min 0.167(9), ave 0.802
Test execution time: sum 25633 ms, max 239 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 12:01:36 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-06-26 12:03:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 32 minutes 4 seconds
Variants: generated 400, build-succeeded 225, build-failed 116, syntax-invalid 40, redundant 19
Fitness: max 1(1), min 0.167(8), ave 0.807
Test execution time: sum 26223 ms, max 265 ms, min 83 ms
----------------------------------------------------------------

2023-06-26 12:03:50 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-06-26 12:05:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 34 minutes 14 seconds
Variants: generated 400, build-succeeded 204, build-failed 126, syntax-invalid 54, redundant 16
Fitness: max 0.833(193), min 0.167(5), ave 0.812
Test execution time: sum 24061 ms, max 239 ms, min 97 ms
----------------------------------------------------------------

2023-06-26 12:05:59 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-06-26 12:08:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 36 minutes 30 seconds
Variants: generated 400, build-succeeded 230, build-failed 109, syntax-invalid 45, redundant 16
Fitness: max 0.833(206), min 0.167(13), ave 0.788
Test execution time: sum 27421 ms, max 252 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 12:08:16 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-06-26 12:10:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 38 minutes 49 seconds
Variants: generated 400, build-succeeded 221, build-failed 117, syntax-invalid 48, redundant 14
Fitness: max 0.833(200), min 0.167(12), ave 0.79
Test execution time: sum 27044 ms, max 319 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 12:10:34 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-06-26 12:12:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 41 minutes 9 seconds
Variants: generated 400, build-succeeded 225, build-failed 121, syntax-invalid 41, redundant 13
Fitness: max 0.833(200), min 0.167(17), ave 0.776
Test execution time: sum 27587 ms, max 338 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 12:12:54 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-06-26 12:15:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 43 minutes 25 seconds
Variants: generated 400, build-succeeded 229, build-failed 113, syntax-invalid 39, redundant 19
Fitness: max 0.833(209), min 0.167(12), ave 0.792
Test execution time: sum 26806 ms, max 239 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 12:15:11 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-06-26 12:17:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 45 minutes 51 seconds
Variants: generated 400, build-succeeded 235, build-failed 119, syntax-invalid 37, redundant 9
Fitness: max 1(1), min 0.167(23), ave 0.765
Test execution time: sum 28936 ms, max 234 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 12:17:37 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-06-26 12:20:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 16 seconds
Variants: generated 400, build-succeeded 238, build-failed 121, syntax-invalid 28, redundant 13
Fitness: max 0.833(219), min 0.167(12), ave 0.794
Test execution time: sum 28409 ms, max 305 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 12:20:01 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-06-26 12:22:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 50 minutes 45 seconds
Variants: generated 400, build-succeeded 250, build-failed 101, syntax-invalid 31, redundant 18
Fitness: max 0.833(224), min 0.167(20), ave 0.775
Test execution time: sum 30433 ms, max 264 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 12:22:30 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-06-26 12:24:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 11 seconds
Variants: generated 400, build-succeeded 227, build-failed 127, syntax-invalid 29, redundant 17
Fitness: max 0.833(214), min 0.167(11), ave 0.8
Test execution time: sum 29104 ms, max 263 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 12:24:57 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-06-26 12:42:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 10 minutes 38 seconds
Variants: generated 400, build-succeeded 230, build-failed 123, syntax-invalid 30, redundant 17
Fitness: max 0.833(213), min 0.167(10), ave 0.799
Test execution time: sum 929074 ms, max 900179 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 12:42:24 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-06-26 12:44:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 13 minutes 2 seconds
Variants: generated 400, build-succeeded 242, build-failed 103, syntax-invalid 39, redundant 16
Fitness: max 0.833(224), min 0.167(12), ave 0.794
Test execution time: sum 29983 ms, max 333 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 12:44:48 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-06-26 12:47:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 15 minutes 24 seconds
Variants: generated 400, build-succeeded 226, build-failed 116, syntax-invalid 48, redundant 10
Fitness: max 0.833(207), min 0(1), ave 0.788
Test execution time: sum 28654 ms, max 259 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 12:47:09 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-06-26 12:49:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 17 minutes 47 seconds
Variants: generated 400, build-succeeded 224, build-failed 112, syntax-invalid 45, redundant 19
Fitness: max 0.833(205), min 0.167(14), ave 0.788
Test execution time: sum 28102 ms, max 324 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 12:49:32 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-06-26 12:51:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 20 minutes 10 seconds
Variants: generated 400, build-succeeded 228, build-failed 102, syntax-invalid 46, redundant 24
Fitness: max 0.833(208), min 0.167(11), ave 0.795
Test execution time: sum 28312 ms, max 291 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 12:51:55 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-06-26 12:54:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 22 minutes 38 seconds
Variants: generated 400, build-succeeded 237, build-failed 117, syntax-invalid 29, redundant 17
Fitness: max 1(1), min 0.167(14), ave 0.791
Test execution time: sum 29294 ms, max 208 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 12:54:23 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-06-26 12:56:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 25 minutes 0 seconds
Variants: generated 400, build-succeeded 220, build-failed 109, syntax-invalid 40, redundant 31
Fitness: max 0.833(203), min 0.167(12), ave 0.792
Test execution time: sum 28036 ms, max 313 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 12:56:46 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-06-26 12:59:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 27 minutes 30 seconds
Variants: generated 400, build-succeeded 236, build-failed 102, syntax-invalid 41, redundant 21
Fitness: max 0.833(220), min 0.167(10), ave 0.799
Test execution time: sum 30362 ms, max 244 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 12:59:15 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-06-26 13:01:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 30 minutes 1 seconds
Variants: generated 400, build-succeeded 232, build-failed 112, syntax-invalid 35, redundant 21
Fitness: max 0.833(221), min 0.167(6), ave 0.811
Test execution time: sum 29517 ms, max 358 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 13:01:46 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-06-26 13:04:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 32 minutes 31 seconds
Variants: generated 400, build-succeeded 238, build-failed 100, syntax-invalid 42, redundant 20
Fitness: max 0.833(221), min 0.167(13), ave 0.794
Test execution time: sum 30680 ms, max 377 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 13:04:16 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-06-26 13:06:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 34 minutes 54 seconds
Variants: generated 400, build-succeeded 227, build-failed 113, syntax-invalid 45, redundant 15
Fitness: max 0.833(214), min 0.167(8), ave 0.804
Test execution time: sum 28473 ms, max 262 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 13:06:40 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-06-26 13:09:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 37 minutes 19 seconds
Variants: generated 400, build-succeeded 236, build-failed 107, syntax-invalid 41, redundant 16
Fitness: max 0.833(218), min 0(1), ave 0.798
Test execution time: sum 29547 ms, max 309 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 13:09:04 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-06-26 13:11:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 39 minutes 45 seconds
Variants: generated 400, build-succeeded 216, build-failed 115, syntax-invalid 50, redundant 19
Fitness: max 0.833(203), min 0.167(11), ave 0.797
Test execution time: sum 28054 ms, max 330 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 13:11:31 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-06-26 13:14:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 42 minutes 16 seconds
Variants: generated 400, build-succeeded 238, build-failed 112, syntax-invalid 32, redundant 18
Fitness: max 0.833(221), min 0.167(11), ave 0.796
Test execution time: sum 29810 ms, max 747 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 13:14:01 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-06-26 13:16:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 44 minutes 34 seconds
Variants: generated 400, build-succeeded 217, build-failed 115, syntax-invalid 55, redundant 13
Fitness: max 1(1), min 0.167(7), ave 0.809
Test execution time: sum 26302 ms, max 242 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 13:16:19 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-06-26 13:18:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 46 minutes 54 seconds
Variants: generated 400, build-succeeded 220, build-failed 125, syntax-invalid 41, redundant 14
Fitness: max 0.833(206), min 0.167(12), ave 0.795
Test execution time: sum 26902 ms, max 246 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 13:18:40 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-06-26 13:21:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 49 minutes 21 seconds
Variants: generated 400, build-succeeded 230, build-failed 119, syntax-invalid 35, redundant 16
Fitness: max 0.833(216), min 0.167(7), ave 0.807
Test execution time: sum 28294 ms, max 333 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 13:21:06 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-06-26 13:38:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 6 minutes 46 seconds
Variants: generated 400, build-succeeded 235, build-failed 110, syntax-invalid 41, redundant 14
Fitness: max 0.833(219), min 0.167(12), ave 0.796
Test execution time: sum 927949 ms, max 900164 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 13:38:31 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-06-26 13:40:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 9 minutes 12 seconds
Variants: generated 400, build-succeeded 230, build-failed 122, syntax-invalid 30, redundant 18
Fitness: max 0.833(221), min 0.167(4), ave 0.818
Test execution time: sum 28621 ms, max 326 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 13:40:58 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-06-26 13:43:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 11 minutes 38 seconds
Variants: generated 400, build-succeeded 227, build-failed 119, syntax-invalid 34, redundant 20
Fitness: max 0.833(210), min 0.167(7), ave 0.803
Test execution time: sum 27326 ms, max 202 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 13:43:23 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-06-26 13:45:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 13 minutes 58 seconds
Variants: generated 400, build-succeeded 216, build-failed 124, syntax-invalid 45, redundant 15
Fitness: max 0.833(204), min 0.167(10), ave 0.801
Test execution time: sum 26531 ms, max 369 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 13:45:43 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-06-26 13:48:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 16 minutes 24 seconds
Variants: generated 400, build-succeeded 225, build-failed 121, syntax-invalid 36, redundant 18
Fitness: max 0.833(207), min 0.167(12), ave 0.79
Test execution time: sum 27111 ms, max 212 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 13:48:09 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-06-26 13:50:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 18 minutes 55 seconds
Variants: generated 400, build-succeeded 244, build-failed 111, syntax-invalid 35, redundant 10
Fitness: max 0.833(232), min 0.167(8), ave 0.808
Test execution time: sum 29654 ms, max 285 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 13:50:40 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-06-26 13:53:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 21 minutes 22 seconds
Variants: generated 400, build-succeeded 232, build-failed 117, syntax-invalid 30, redundant 21
Fitness: max 0.833(216), min 0.167(10), ave 0.799
Test execution time: sum 28626 ms, max 411 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 13:53:08 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-06-26 13:55:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 23 minutes 55 seconds
Variants: generated 400, build-succeeded 237, build-failed 124, syntax-invalid 26, redundant 13
Fitness: max 0.833(222), min 0.167(11), ave 0.799
Test execution time: sum 29047 ms, max 266 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 13:55:40 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-06-26 13:58:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 26 minutes 20 seconds
Variants: generated 400, build-succeeded 237, build-failed 106, syntax-invalid 29, redundant 28
Fitness: max 0.833(222), min 0.167(8), ave 0.806
Test execution time: sum 28345 ms, max 387 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 13:58:05 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-06-26 14:00:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 28 minutes 21 seconds
Variants: generated 400, build-succeeded 231, build-failed 117, syntax-invalid 38, redundant 14
Fitness: max 0.833(213), min 0(1), ave 0.791
Test execution time: sum 25186 ms, max 184 ms, min 74 ms
----------------------------------------------------------------

2023-06-26 14:00:06 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-06-26 14:02:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 30 minutes 29 seconds
Variants: generated 400, build-succeeded 237, build-failed 116, syntax-invalid 36, redundant 11
Fitness: max 0.833(225), min 0.167(6), ave 0.812
Test execution time: sum 27891 ms, max 246 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 14:02:15 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-06-26 14:04:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 48 seconds
Variants: generated 400, build-succeeded 250, build-failed 101, syntax-invalid 33, redundant 16
Fitness: max 0.833(234), min 0.167(11), ave 0.799
Test execution time: sum 29268 ms, max 262 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 14:04:33 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-06-26 14:06:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 35 minutes 3 seconds
Variants: generated 400, build-succeeded 251, build-failed 104, syntax-invalid 27, redundant 18
Fitness: max 1(1), min 0.167(11), ave 0.799
Test execution time: sum 29132 ms, max 292 ms, min 77 ms
----------------------------------------------------------------

2023-06-26 14:06:48 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-06-26 14:08:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 37 minutes 2 seconds
Variants: generated 400, build-succeeded 227, build-failed 113, syntax-invalid 41, redundant 19
Fitness: max 0.833(217), min 0.167(5), ave 0.814
Test execution time: sum 24022 ms, max 211 ms, min 77 ms
----------------------------------------------------------------

2023-06-26 14:08:47 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-06-26 14:10:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 39 minutes 10 seconds
Variants: generated 400, build-succeeded 233, build-failed 111, syntax-invalid 44, redundant 12
Fitness: max 0.833(217), min 0.167(10), ave 0.8
Test execution time: sum 27622 ms, max 420 ms, min 72 ms
----------------------------------------------------------------

2023-06-26 14:10:56 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-06-26 14:13:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 41 minutes 20 seconds
Variants: generated 400, build-succeeded 252, build-failed 112, syntax-invalid 17, redundant 19
Fitness: max 0.833(241), min 0.167(9), ave 0.808
Test execution time: sum 27784 ms, max 255 ms, min 74 ms
----------------------------------------------------------------

2023-06-26 14:13:05 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-06-26 14:15:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 43 minutes 34 seconds
Variants: generated 400, build-succeeded 220, build-failed 115, syntax-invalid 47, redundant 18
Fitness: max 0.833(203), min 0.167(12), ave 0.792
Test execution time: sum 26955 ms, max 654 ms, min 74 ms
----------------------------------------------------------------

2023-06-26 14:15:19 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-06-26 14:17:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 45 minutes 51 seconds
Variants: generated 400, build-succeeded 233, build-failed 104, syntax-invalid 44, redundant 19
Fitness: max 0.833(216), min 0.167(13), ave 0.793
Test execution time: sum 28862 ms, max 741 ms, min 75 ms
----------------------------------------------------------------

2023-06-26 14:17:36 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-06-26 14:19:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 48 minutes 6 seconds
Variants: generated 400, build-succeeded 229, build-failed 120, syntax-invalid 38, redundant 13
Fitness: max 0.833(213), min 0.167(14), ave 0.791
Test execution time: sum 26899 ms, max 229 ms, min 77 ms
----------------------------------------------------------------

2023-06-26 14:19:51 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-06-26 14:21:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 50 minutes 7 seconds
Variants: generated 400, build-succeeded 233, build-failed 105, syntax-invalid 43, redundant 19
Fitness: max 0.833(215), min 0.167(12), ave 0.794
Test execution time: sum 25338 ms, max 198 ms, min 73 ms
----------------------------------------------------------------

2023-06-26 14:21:53 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-06-26 14:23:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 52 minutes 14 seconds
Variants: generated 400, build-succeeded 225, build-failed 103, syntax-invalid 53, redundant 19
Fitness: max 0.833(209), min 0.167(11), ave 0.796
Test execution time: sum 25905 ms, max 277 ms, min 77 ms
----------------------------------------------------------------

2023-06-26 14:23:59 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-06-26 14:26:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 54 minutes 24 seconds
Variants: generated 400, build-succeeded 237, build-failed 114, syntax-invalid 30, redundant 19
Fitness: max 0.833(226), min 0.167(6), ave 0.813
Test execution time: sum 26507 ms, max 306 ms, min 76 ms
----------------------------------------------------------------

2023-06-26 14:26:09 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-06-26 14:28:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 56 minutes 32 seconds
Variants: generated 400, build-succeeded 235, build-failed 103, syntax-invalid 45, redundant 17
Fitness: max 0.833(219), min 0.167(7), ave 0.805
Test execution time: sum 26441 ms, max 370 ms, min 77 ms
----------------------------------------------------------------

2023-06-26 14:28:17 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-06-26 14:30:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 58 minutes 38 seconds
Variants: generated 400, build-succeeded 238, build-failed 118, syntax-invalid 32, redundant 12
Fitness: max 0.833(224), min 0.167(8), ave 0.807
Test execution time: sum 25587 ms, max 202 ms, min 76 ms
----------------------------------------------------------------

2023-06-26 14:30:24 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-06-26 14:48:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 16 minutes 16 seconds
Variants: generated 400, build-succeeded 236, build-failed 114, syntax-invalid 35, redundant 15
Fitness: max 0.833(226), min 0.167(7), ave 0.811
Test execution time: sum 931709 ms, max 900160 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 14:48:02 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-06-26 14:50:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 18 minutes 51 seconds
Variants: generated 400, build-succeeded 227, build-failed 114, syntax-invalid 39, redundant 20
Fitness: max 0.833(221), min 0.167(3), ave 0.822
Test execution time: sum 29474 ms, max 371 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 14:50:36 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-06-26 14:53:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 21 minutes 35 seconds
Variants: generated 400, build-succeeded 227, build-failed 121, syntax-invalid 38, redundant 14
Fitness: max 0.833(219), min 0.167(6), ave 0.814
Test execution time: sum 31359 ms, max 380 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 14:53:21 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-06-26 14:56:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 24 minutes 21 seconds
Variants: generated 400, build-succeeded 240, build-failed 111, syntax-invalid 38, redundant 11
Fitness: max 0.833(227), min 0.167(9), ave 0.803
Test execution time: sum 32652 ms, max 323 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 14:56:06 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-06-26 14:58:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 26 minutes 55 seconds
Variants: generated 400, build-succeeded 226, build-failed 109, syntax-invalid 46, redundant 19
Fitness: max 0.833(208), min 0.167(14), ave 0.788
Test execution time: sum 28545 ms, max 403 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 14:58:40 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-06-26 15:01:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 29 minutes 27 seconds
Variants: generated 400, build-succeeded 224, build-failed 102, syntax-invalid 49, redundant 25
Fitness: max 0.833(211), min 0.167(10), ave 0.8
Test execution time: sum 28391 ms, max 270 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 15:01:13 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-06-26 15:03:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 32 minutes 3 seconds
Variants: generated 400, build-succeeded 234, build-failed 111, syntax-invalid 42, redundant 13
Fitness: max 0.833(212), min 0.167(14), ave 0.784
Test execution time: sum 29552 ms, max 249 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 15:03:49 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-06-26 15:06:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 34 minutes 34 seconds
Variants: generated 400, build-succeeded 208, build-failed 119, syntax-invalid 58, redundant 15
Fitness: max 0.833(196), min 0.167(9), ave 0.802
Test execution time: sum 26538 ms, max 227 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 15:06:19 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-06-26 15:08:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 37 minutes 12 seconds
Variants: generated 400, build-succeeded 224, build-failed 116, syntax-invalid 41, redundant 19
Fitness: max 0.833(213), min 0.167(8), ave 0.807
Test execution time: sum 28524 ms, max 449 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 15:08:57 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-06-26 15:11:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 39 minutes 46 seconds
Variants: generated 400, build-succeeded 225, build-failed 105, syntax-invalid 56, redundant 14
Fitness: max 0.833(208), min 0.167(8), ave 0.802
Test execution time: sum 29705 ms, max 260 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 15:11:31 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-06-26 15:14:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 42 minutes 21 seconds
Variants: generated 400, build-succeeded 218, build-failed 114, syntax-invalid 48, redundant 20
Fitness: max 0.833(206), min 0.167(5), ave 0.812
Test execution time: sum 28334 ms, max 225 ms, min 103 ms
----------------------------------------------------------------

2023-06-26 15:14:07 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-06-26 15:16:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 44 minutes 52 seconds
Variants: generated 400, build-succeeded 217, build-failed 103, syntax-invalid 58, redundant 22
Fitness: max 0.833(209), min 0.167(6), ave 0.813
Test execution time: sum 28192 ms, max 275 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 15:16:38 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-06-26 15:19:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 47 minutes 31 seconds
Variants: generated 400, build-succeeded 231, build-failed 105, syntax-invalid 45, redundant 19
Fitness: max 0.833(218), min 0.167(9), ave 0.804
Test execution time: sum 30598 ms, max 282 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 15:19:16 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-06-26 15:21:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 50 minutes 8 seconds
Variants: generated 400, build-succeeded 210, build-failed 114, syntax-invalid 58, redundant 18
Fitness: max 1(2), min 0.167(10), ave 0.798
Test execution time: sum 29220 ms, max 483 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 15:21:53 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-06-26 15:24:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 52 minutes 36 seconds
Variants: generated 400, build-succeeded 208, build-failed 108, syntax-invalid 69, redundant 15
Fitness: max 0.833(194), min 0.167(9), ave 0.799
Test execution time: sum 26724 ms, max 221 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 15:24:21 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-06-26 15:27:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 55 minutes 17 seconds
Variants: generated 400, build-succeeded 225, build-failed 112, syntax-invalid 49, redundant 14
Fitness: max 0.833(212), min 0.167(6), ave 0.808
Test execution time: sum 30646 ms, max 398 ms, min 96 ms
----------------------------------------------------------------

2023-06-26 15:27:02 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-06-26 15:29:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 57 minutes 52 seconds
Variants: generated 400, build-succeeded 214, build-failed 113, syntax-invalid 56, redundant 17
Fitness: max 0.833(204), min 0.167(5), ave 0.814
Test execution time: sum 27995 ms, max 302 ms, min 94 ms
----------------------------------------------------------------

2023-06-26 15:29:37 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-06-26 15:32:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 25 seconds
Variants: generated 400, build-succeeded 214, build-failed 118, syntax-invalid 50, redundant 18
Fitness: max 0.833(193), min 0.167(15), ave 0.782
Test execution time: sum 27082 ms, max 219 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 15:32:10 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-06-26 15:49:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 18 minutes 5 seconds
Variants: generated 400, build-succeeded 227, build-failed 120, syntax-invalid 35, redundant 18
Fitness: max 0.833(216), min 0.167(9), ave 0.805
Test execution time: sum 929644 ms, max 900157 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 15:49:50 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-06-26 15:52:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 20 minutes 37 seconds
Variants: generated 400, build-succeeded 205, build-failed 130, syntax-invalid 50, redundant 15
Fitness: max 0.833(192), min 0.167(7), ave 0.806
Test execution time: sum 26271 ms, max 267 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 15:52:22 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-06-26 15:55:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 23 minutes 18 seconds
Variants: generated 400, build-succeeded 226, build-failed 114, syntax-invalid 42, redundant 18
Fitness: max 0.833(207), min 0(1), ave 0.788
Test execution time: sum 29287 ms, max 257 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 15:55:03 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-06-26 15:57:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 25 minutes 54 seconds
Variants: generated 400, build-succeeded 219, build-failed 111, syntax-invalid 58, redundant 12
Fitness: max 0.833(208), min 0.167(3), ave 0.817
Test execution time: sum 29045 ms, max 303 ms, min 94 ms
----------------------------------------------------------------

2023-06-26 15:57:39 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-06-26 16:00:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 28 minutes 30 seconds
Variants: generated 400, build-succeeded 205, build-failed 126, syntax-invalid 53, redundant 16
Fitness: max 0.833(191), min 0.167(11), ave 0.794
Test execution time: sum 26854 ms, max 271 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 16:00:15 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-06-26 16:02:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 31 minutes 5 seconds
Variants: generated 400, build-succeeded 214, build-failed 111, syntax-invalid 62, redundant 13
Fitness: max 0.833(198), min 0.167(10), ave 0.798
Test execution time: sum 27656 ms, max 305 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 16:02:51 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-06-26 16:05:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 33 minutes 43 seconds
Variants: generated 400, build-succeeded 214, build-failed 120, syntax-invalid 54, redundant 12
Fitness: max 1(2), min 0.167(9), ave 0.802
Test execution time: sum 28811 ms, max 265 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 16:05:29 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-06-26 16:08:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 36 minutes 26 seconds
Variants: generated 400, build-succeeded 218, build-failed 111, syntax-invalid 53, redundant 18
Fitness: max 0.833(199), min 0.167(14), ave 0.785
Test execution time: sum 30188 ms, max 499 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 16:08:11 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-06-26 16:10:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 38 minutes 57 seconds
Variants: generated 400, build-succeeded 217, build-failed 102, syntax-invalid 64, redundant 17
Fitness: max 0.833(203), min 0.167(8), ave 0.804
Test execution time: sum 27915 ms, max 325 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 16:10:42 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-06-26 16:13:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 41 minutes 28 seconds
Variants: generated 400, build-succeeded 208, build-failed 117, syntax-invalid 63, redundant 12
Fitness: max 0.833(196), min 0.167(7), ave 0.805
Test execution time: sum 26637 ms, max 292 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 16:13:13 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-06-26 16:15:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 43 minutes 59 seconds
Variants: generated 400, build-succeeded 188, build-failed 120, syntax-invalid 77, redundant 15
Fitness: max 0.833(182), min 0.167(3), ave 0.82
Test execution time: sum 25519 ms, max 297 ms, min 96 ms
----------------------------------------------------------------

2023-06-26 16:15:45 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-06-26 16:18:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 46 minutes 27 seconds
Variants: generated 400, build-succeeded 192, build-failed 124, syntax-invalid 68, redundant 16
Fitness: max 0.833(187), min 0.167(1), ave 0.826
Test execution time: sum 24278 ms, max 227 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 16:18:12 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-06-26 16:20:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 49 minutes 2 seconds
Variants: generated 400, build-succeeded 217, build-failed 117, syntax-invalid 52, redundant 14
Fitness: max 0.833(209), min 0.167(3), ave 0.82
Test execution time: sum 27706 ms, max 377 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 16:20:47 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-06-26 16:23:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 51 minutes 42 seconds
Variants: generated 400, build-succeeded 214, build-failed 117, syntax-invalid 51, redundant 18
Fitness: max 0.833(204), min 0.167(6), ave 0.812
Test execution time: sum 27385 ms, max 304 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 16:23:27 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-06-26 16:26:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 54 minutes 22 seconds
Variants: generated 400, build-succeeded 227, build-failed 110, syntax-invalid 46, redundant 17
Fitness: max 0.833(220), min 0.167(4), ave 0.819
Test execution time: sum 29594 ms, max 439 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 16:26:08 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-06-26 16:28:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 57 minutes 0 seconds
Variants: generated 400, build-succeeded 228, build-failed 113, syntax-invalid 46, redundant 13
Fitness: max 0.833(216), min 0.167(6), ave 0.811
Test execution time: sum 29016 ms, max 299 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 16:28:45 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-06-26 16:37:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 6 minutes 1 seconds
Variants: generated 400, build-succeeded 226, build-failed 115, syntax-invalid 47, redundant 12
Fitness: max 0.833(221), min 0.167(1), ave 0.827
Test execution time: sum 393474 ms, max 360260 ms, min 115 ms
----------------------------------------------------------------

2023-06-26 16:37:47 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-06-26 16:40:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 9 minutes 2 seconds
Variants: generated 400, build-succeeded 214, build-failed 123, syntax-invalid 41, redundant 22
Fitness: max 0.833(203), min 0.167(6), ave 0.81
Test execution time: sum 33447 ms, max 611 ms, min 95 ms
----------------------------------------------------------------

2023-06-26 16:40:47 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-06-26 16:43:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 12 minutes 5 seconds
Variants: generated 400, build-succeeded 237, build-failed 108, syntax-invalid 40, redundant 15
Fitness: max 0.833(228), min 0.167(6), ave 0.813
Test execution time: sum 33837 ms, max 436 ms, min 94 ms
----------------------------------------------------------------

2023-06-26 16:43:51 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-06-26 16:46:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 14 minutes 55 seconds
Variants: generated 400, build-succeeded 226, build-failed 110, syntax-invalid 46, redundant 18
Fitness: max 0.833(219), min 0.167(1), ave 0.825
Test execution time: sum 30780 ms, max 313 ms, min 99 ms
----------------------------------------------------------------

2023-06-26 16:46:40 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-06-26 16:49:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 17 minutes 43 seconds
Variants: generated 400, build-succeeded 227, build-failed 105, syntax-invalid 49, redundant 19
Fitness: max 1(1), min 0.167(2), ave 0.824
Test execution time: sum 31772 ms, max 527 ms, min 94 ms
----------------------------------------------------------------

2023-06-26 16:49:29 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-06-26 16:52:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 20 minutes 45 seconds
Variants: generated 400, build-succeeded 213, build-failed 128, syntax-invalid 48, redundant 11
Fitness: max 0.833(205), min 0.167(4), ave 0.818
Test execution time: sum 32200 ms, max 513 ms, min 97 ms
----------------------------------------------------------------

2023-06-26 16:52:31 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-06-26 16:55:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 23 minutes 35 seconds
Variants: generated 400, build-succeeded 228, build-failed 122, syntax-invalid 32, redundant 18
Fitness: max 0.833(220), min 0.167(4), ave 0.819
Test execution time: sum 32094 ms, max 328 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 16:55:20 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-06-26 16:57:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 26 minutes 2 seconds
Variants: generated 400, build-succeeded 214, build-failed 115, syntax-invalid 52, redundant 19
Fitness: max 0.833(207), min 0.167(3), ave 0.821
Test execution time: sum 28154 ms, max 590 ms, min 81 ms
----------------------------------------------------------------

2023-06-26 16:57:48 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-06-26 17:00:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 28 minutes 42 seconds
Variants: generated 400, build-succeeded 227, build-failed 110, syntax-invalid 46, redundant 17
Fitness: max 0.833(218), min 0.167(8), ave 0.808
Test execution time: sum 31627 ms, max 439 ms, min 81 ms
----------------------------------------------------------------

2023-06-26 17:00:28 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-06-26 17:02:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 31 minutes 8 seconds
Variants: generated 400, build-succeeded 201, build-failed 129, syntax-invalid 56, redundant 14
Fitness: max 0.833(193), min 0.167(5), ave 0.814
Test execution time: sum 26408 ms, max 620 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 17:02:53 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-06-26 17:05:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 33 minutes 27 seconds
Variants: generated 400, build-succeeded 226, build-failed 110, syntax-invalid 41, redundant 23
Fitness: max 0.833(212), min 0.167(3), ave 0.816
Test execution time: sum 26418 ms, max 366 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 17:05:13 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-06-26 17:07:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 35 minutes 36 seconds
Variants: generated 400, build-succeeded 218, build-failed 111, syntax-invalid 51, redundant 20
Fitness: max 0.833(212), min 0.167(3), ave 0.821
Test execution time: sum 23965 ms, max 240 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 17:07:21 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-06-26 17:09:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 37 minutes 53 seconds
Variants: generated 400, build-succeeded 235, build-failed 111, syntax-invalid 36, redundant 18
Fitness: max 0.833(227), min 0.167(5), ave 0.816
Test execution time: sum 26530 ms, max 232 ms, min 80 ms
----------------------------------------------------------------

2023-06-26 17:09:38 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-06-26 17:12:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 40 minutes 16 seconds
Variants: generated 400, build-succeeded 236, build-failed 113, syntax-invalid 34, redundant 17
Fitness: max 0.833(232), min 0.667(4), ave 0.831
Test execution time: sum 28918 ms, max 287 ms, min 99 ms
----------------------------------------------------------------

2023-06-26 17:12:02 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-06-26 17:14:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 42 minutes 37 seconds
Variants: generated 400, build-succeeded 218, build-failed 118, syntax-invalid 48, redundant 16
Fitness: max 0.833(211), min 0.167(4), ave 0.819
Test execution time: sum 26607 ms, max 335 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 17:14:22 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-06-26 17:16:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 45 minutes 3 seconds
Variants: generated 400, build-succeeded 213, build-failed 116, syntax-invalid 52, redundant 19
Fitness: max 0.833(207), min 0.167(3), ave 0.819
Test execution time: sum 28504 ms, max 461 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 17:16:48 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-06-26 17:19:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 47 minutes 29 seconds
Variants: generated 400, build-succeeded 218, build-failed 112, syntax-invalid 47, redundant 23
Fitness: max 0.833(210), min 0.167(3), ave 0.82
Test execution time: sum 27639 ms, max 352 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 17:19:14 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-06-26 17:21:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 49 minutes 56 seconds
Variants: generated 400, build-succeeded 218, build-failed 112, syntax-invalid 53, redundant 17
Fitness: max 0.833(213), min 0.167(3), ave 0.823
Test execution time: sum 27104 ms, max 320 ms, min 83 ms
----------------------------------------------------------------

2023-06-26 17:21:41 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-06-26 17:23:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 52 minutes 11 seconds
Variants: generated 400, build-succeeded 229, build-failed 110, syntax-invalid 43, redundant 18
Fitness: max 0.833(223), min 0.167(3), ave 0.821
Test execution time: sum 26438 ms, max 326 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 17:23:56 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-06-26 17:26:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 54 minutes 45 seconds
Variants: generated 400, build-succeeded 218, build-failed 117, syntax-invalid 54, redundant 11
Fitness: max 0.833(212), min 0.167(2), ave 0.824
Test execution time: sum 29250 ms, max 260 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 17:26:30 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-06-26 17:29:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 57 minutes 34 seconds
Variants: generated 400, build-succeeded 219, build-failed 117, syntax-invalid 48, redundant 16
Fitness: max 0.833(210), min 0.167(2), ave 0.822
Test execution time: sum 32106 ms, max 466 ms, min 108 ms
----------------------------------------------------------------

2023-06-26 17:29:19 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-06-26 17:32:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 22 seconds
Variants: generated 400, build-succeeded 231, build-failed 107, syntax-invalid 42, redundant 20
Fitness: max 0.833(224), min 0.167(2), ave 0.824
Test execution time: sum 34456 ms, max 361 ms, min 105 ms
----------------------------------------------------------------

2023-06-26 17:32:07 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-06-26 17:34:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 3 minutes 10 seconds
Variants: generated 400, build-succeeded 216, build-failed 117, syntax-invalid 52, redundant 15
Fitness: max 0.833(208), min 0.167(3), ave 0.82
Test execution time: sum 33229 ms, max 633 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 17:34:55 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-06-26 17:37:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 6 minutes 12 seconds
Variants: generated 400, build-succeeded 227, build-failed 114, syntax-invalid 43, redundant 16
Fitness: max 0.833(221), min 0.167(3), ave 0.822
Test execution time: sum 38725 ms, max 590 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 17:37:57 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-06-26 17:40:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 9 minutes 0 seconds
Variants: generated 400, build-succeeded 220, build-failed 112, syntax-invalid 36, redundant 32
Fitness: max 0.833(216), min 0.167(3), ave 0.823
Test execution time: sum 33226 ms, max 456 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 17:40:45 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-06-26 17:43:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 11 minutes 57 seconds
Variants: generated 400, build-succeeded 229, build-failed 116, syntax-invalid 40, redundant 15
Fitness: max 0.833(224), min 0.167(2), ave 0.825
Test execution time: sum 37069 ms, max 703 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 17:43:42 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-06-26 17:46:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 14 minutes 41 seconds
Variants: generated 400, build-succeeded 235, build-failed 114, syntax-invalid 32, redundant 19
Fitness: max 0.833(226), min 0.167(4), ave 0.818
Test execution time: sum 32519 ms, max 426 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 17:46:26 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-06-26 17:49:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 17 minutes 40 seconds
Variants: generated 400, build-succeeded 229, build-failed 118, syntax-invalid 36, redundant 17
Fitness: max 0.833(227), min 0.167(1), ave 0.83
Test execution time: sum 36445 ms, max 572 ms, min 108 ms
----------------------------------------------------------------

2023-06-26 17:49:25 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-06-26 17:52:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 20 minutes 25 seconds
Variants: generated 400, build-succeeded 220, build-failed 115, syntax-invalid 39, redundant 26
Fitness: max 0.833(214), min 0.167(2), ave 0.824
Test execution time: sum 32820 ms, max 437 ms, min 108 ms
----------------------------------------------------------------

2023-06-26 17:52:10 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-06-26 17:55:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 23 minutes 21 seconds
Variants: generated 400, build-succeeded 227, build-failed 107, syntax-invalid 39, redundant 27
Fitness: max 0.833(220), min 0.167(4), ave 0.819
Test execution time: sum 35837 ms, max 588 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 17:55:06 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-06-26 17:58:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 26 minutes 37 seconds
Variants: generated 400, build-succeeded 216, build-failed 109, syntax-invalid 56, redundant 19
Fitness: max 0.833(205), min 0.167(5), ave 0.812
Test execution time: sum 40146 ms, max 824 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 17:58:22 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-06-26 18:01:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 29 minutes 43 seconds
Variants: generated 400, build-succeeded 214, build-failed 117, syntax-invalid 49, redundant 20
Fitness: max 0.833(204), min 0.167(2), ave 0.818
Test execution time: sum 37749 ms, max 525 ms, min 111 ms
----------------------------------------------------------------

2023-06-26 18:01:28 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-06-26 18:04:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 32 minutes 31 seconds
Variants: generated 400, build-succeeded 231, build-failed 117, syntax-invalid 41, redundant 11
Fitness: max 0.833(222), min 0.167(6), ave 0.814
Test execution time: sum 32402 ms, max 342 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 18:04:16 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-06-26 18:07:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 35 minutes 25 seconds
Variants: generated 400, build-succeeded 228, build-failed 111, syntax-invalid 38, redundant 23
Fitness: max 0.833(218), min 0.167(7), ave 0.811
Test execution time: sum 33522 ms, max 421 ms, min 94 ms
----------------------------------------------------------------

2023-06-26 18:07:10 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-06-26 18:09:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 37 minutes 54 seconds
Variants: generated 400, build-succeeded 213, build-failed 110, syntax-invalid 52, redundant 25
Fitness: max 0.833(206), min 0.167(3), ave 0.819
Test execution time: sum 27680 ms, max 365 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 18:09:40 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-06-26 18:12:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 40 minutes 32 seconds
Variants: generated 400, build-succeeded 216, build-failed 124, syntax-invalid 47, redundant 13
Fitness: max 0.833(208), min 0.167(3), ave 0.82
Test execution time: sum 30705 ms, max 504 ms, min 83 ms
----------------------------------------------------------------

2023-06-26 18:12:17 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-06-26 18:15:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 43 minutes 23 seconds
Variants: generated 400, build-succeeded 226, build-failed 113, syntax-invalid 49, redundant 12
Fitness: max 0.833(222), min 0.167(2), ave 0.825
Test execution time: sum 34304 ms, max 507 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 18:15:09 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-06-26 18:18:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 46 minutes 47 seconds
Variants: generated 400, build-succeeded 223, build-failed 112, syntax-invalid 51, redundant 14
Fitness: max 0.833(215), min 0.167(4), ave 0.818
Test execution time: sum 41985 ms, max 867 ms, min 94 ms
----------------------------------------------------------------

2023-06-26 18:18:32 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-06-26 18:21:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 49 minutes 37 seconds
Variants: generated 400, build-succeeded 226, build-failed 112, syntax-invalid 48, redundant 14
Fitness: max 0.833(214), min 0.167(9), ave 0.805
Test execution time: sum 32437 ms, max 558 ms, min 81 ms
----------------------------------------------------------------

2023-06-26 18:21:23 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-06-26 18:23:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 52 minutes 6 seconds
Variants: generated 400, build-succeeded 213, build-failed 123, syntax-invalid 51, redundant 13
Fitness: max 0.833(204), min 0.167(3), ave 0.818
Test execution time: sum 26316 ms, max 227 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 18:23:51 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-06-26 18:26:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 54 minutes 39 seconds
Variants: generated 400, build-succeeded 228, build-failed 100, syntax-invalid 48, redundant 24
Fitness: max 0.833(213), min 0.167(11), ave 0.798
Test execution time: sum 28210 ms, max 304 ms, min 78 ms
----------------------------------------------------------------

2023-06-26 18:26:24 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-06-26 18:28:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 57 minutes 3 seconds
Variants: generated 400, build-succeeded 219, build-failed 125, syntax-invalid 45, redundant 11
Fitness: max 0.833(210), min 0.167(3), ave 0.82
Test execution time: sum 26317 ms, max 246 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 18:28:49 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-06-26 18:46:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 14 minutes 25 seconds
Variants: generated 400, build-succeeded 205, build-failed 127, syntax-invalid 54, redundant 14
Fitness: max 0.833(195), min 0.167(7), ave 0.808
Test execution time: sum 924383 ms, max 900185 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 18:46:10 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-06-26 18:48:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 16 minutes 47 seconds
Variants: generated 400, build-succeeded 215, build-failed 121, syntax-invalid 52, redundant 12
Fitness: max 0.833(207), min 0.167(4), ave 0.818
Test execution time: sum 25476 ms, max 194 ms, min 80 ms
----------------------------------------------------------------

2023-06-26 18:48:32 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-06-26 18:50:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 19 minutes 12 seconds
Variants: generated 400, build-succeeded 216, build-failed 127, syntax-invalid 46, redundant 11
Fitness: max 0.833(203), min 0.167(9), ave 0.801
Test execution time: sum 25472 ms, max 222 ms, min 81 ms
----------------------------------------------------------------

2023-06-26 18:50:57 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-06-26 18:53:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 21 minutes 43 seconds
Variants: generated 400, build-succeeded 220, build-failed 131, syntax-invalid 32, redundant 17
Fitness: max 1(1), min 0.167(4), ave 0.817
Test execution time: sum 26390 ms, max 254 ms, min 82 ms
----------------------------------------------------------------

2023-06-26 18:53:28 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-06-26 18:55:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 24 minutes 9 seconds
Variants: generated 400, build-succeeded 223, build-failed 115, syntax-invalid 47, redundant 15
Fitness: max 0.833(215), min 0.167(6), ave 0.813
Test execution time: sum 26186 ms, max 224 ms, min 79 ms
----------------------------------------------------------------

2023-06-26 18:55:54 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-06-26 18:58:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 26 minutes 37 seconds
Variants: generated 400, build-succeeded 237, build-failed 102, syntax-invalid 43, redundant 18
Fitness: max 0.833(230), min 0.167(3), ave 0.822
Test execution time: sum 28039 ms, max 226 ms, min 83 ms
----------------------------------------------------------------

2023-06-26 18:58:23 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-06-26 19:00:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 29 minutes 10 seconds
Variants: generated 400, build-succeeded 221, build-failed 122, syntax-invalid 45, redundant 12
Fitness: max 0.833(211), min 0.167(5), ave 0.814
Test execution time: sum 27318 ms, max 253 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 19:00:56 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-06-26 19:03:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 31 minutes 41 seconds
Variants: generated 400, build-succeeded 228, build-failed 124, syntax-invalid 31, redundant 17
Fitness: max 1(1), min 0.167(2), ave 0.825
Test execution time: sum 27357 ms, max 225 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 19:03:27 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-06-26 19:05:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 34 minutes 13 seconds
Variants: generated 400, build-succeeded 218, build-failed 128, syntax-invalid 39, redundant 15
Fitness: max 0.833(210), min 0.167(2), ave 0.822
Test execution time: sum 26696 ms, max 213 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 19:05:58 [main] [INFO]  KGenProgMain - entered the era of 428th generation.
2023-06-26 19:08:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 36 minutes 51 seconds
Variants: generated 400, build-succeeded 238, build-failed 113, syntax-invalid 34, redundant 15
Fitness: max 0.833(227), min 0.167(7), ave 0.809
Test execution time: sum 29508 ms, max 232 ms, min 83 ms
----------------------------------------------------------------

2023-06-26 19:08:37 [main] [INFO]  KGenProgMain - entered the era of 429th generation.
2023-06-26 19:11:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 39 minutes 18 seconds
Variants: generated 400, build-succeeded 230, build-failed 114, syntax-invalid 46, redundant 10
Fitness: max 0.833(227), min 0.167(3), ave 0.825
Test execution time: sum 27415 ms, max 198 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 19:11:04 [main] [INFO]  KGenProgMain - entered the era of 430th generation.
2023-06-26 19:13:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 41 minutes 46 seconds
Variants: generated 400, build-succeeded 209, build-failed 124, syntax-invalid 47, redundant 20
Fitness: max 0.833(202), min 0.167(6), ave 0.813
Test execution time: sum 25658 ms, max 239 ms, min 82 ms
----------------------------------------------------------------

2023-06-26 19:13:31 [main] [INFO]  KGenProgMain - entered the era of 431st generation.
2023-06-26 19:16:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 44 minutes 14 seconds
Variants: generated 400, build-succeeded 231, build-failed 112, syntax-invalid 39, redundant 18
Fitness: max 0.833(219), min 0.167(8), ave 0.807
Test execution time: sum 27845 ms, max 220 ms, min 81 ms
----------------------------------------------------------------

2023-06-26 19:16:00 [main] [INFO]  KGenProgMain - entered the era of 432nd generation.
2023-06-26 19:18:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 46 minutes 47 seconds
Variants: generated 400, build-succeeded 232, build-failed 115, syntax-invalid 39, redundant 14
Fitness: max 0.833(224), min 0.167(3), ave 0.82
Test execution time: sum 27939 ms, max 250 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 19:18:32 [main] [INFO]  KGenProgMain - entered the era of 433rd generation.
2023-06-26 19:21:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 49 minutes 22 seconds
Variants: generated 400, build-succeeded 241, build-failed 115, syntax-invalid 35, redundant 9
Fitness: max 0.833(232), min 0.167(3), ave 0.82
Test execution time: sum 29143 ms, max 241 ms, min 82 ms
----------------------------------------------------------------

2023-06-26 19:21:07 [main] [INFO]  KGenProgMain - entered the era of 434th generation.
2023-06-26 19:23:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 51 minutes 49 seconds
Variants: generated 400, build-succeeded 221, build-failed 110, syntax-invalid 49, redundant 20
Fitness: max 0.833(215), min 0.167(4), ave 0.817
Test execution time: sum 26318 ms, max 238 ms, min 82 ms
----------------------------------------------------------------

2023-06-26 19:23:34 [main] [INFO]  KGenProgMain - entered the era of 435th generation.
2023-06-26 19:26:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 54 minutes 20 seconds
Variants: generated 400, build-succeeded 228, build-failed 110, syntax-invalid 43, redundant 19
Fitness: max 0.833(219), min 0.167(7), ave 0.811
Test execution time: sum 27198 ms, max 203 ms, min 82 ms
----------------------------------------------------------------

2023-06-26 19:26:05 [main] [INFO]  KGenProgMain - entered the era of 436th generation.
2023-06-26 19:28:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 56 minutes 52 seconds
Variants: generated 400, build-succeeded 223, build-failed 113, syntax-invalid 42, redundant 22
Fitness: max 0.833(215), min 0.167(3), ave 0.82
Test execution time: sum 27266 ms, max 238 ms, min 80 ms
----------------------------------------------------------------

2023-06-26 19:28:37 [main] [INFO]  KGenProgMain - entered the era of 437th generation.
2023-06-26 19:31:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 59 minutes 20 seconds
Variants: generated 400, build-succeeded 227, build-failed 111, syntax-invalid 47, redundant 15
Fitness: max 0.833(217), min 0(1), ave 0.817
Test execution time: sum 27380 ms, max 203 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 19:31:06 [main] [INFO]  KGenProgMain - entered the era of 438th generation.
2023-06-26 19:33:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 1 minutes 59 seconds
Variants: generated 400, build-succeeded 229, build-failed 124, syntax-invalid 33, redundant 14
Fitness: max 0.833(220), min 0(1), ave 0.811
Test execution time: sum 28308 ms, max 242 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 19:33:44 [main] [INFO]  KGenProgMain - entered the era of 439th generation.
2023-06-26 19:36:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 4 minutes 31 seconds
Variants: generated 400, build-succeeded 232, build-failed 110, syntax-invalid 41, redundant 17
Fitness: max 0.833(221), min 0.167(6), ave 0.812
Test execution time: sum 28271 ms, max 186 ms, min 82 ms
----------------------------------------------------------------

2023-06-26 19:36:16 [main] [INFO]  KGenProgMain - entered the era of 440th generation.
2023-06-26 19:38:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 7 minutes 1 seconds
Variants: generated 400, build-succeeded 213, build-failed 124, syntax-invalid 40, redundant 23
Fitness: max 0.833(208), min 0.167(3), ave 0.822
Test execution time: sum 26143 ms, max 221 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 19:38:46 [main] [INFO]  KGenProgMain - entered the era of 441st generation.
2023-06-26 19:41:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 9 minutes 31 seconds
Variants: generated 400, build-succeeded 224, build-failed 118, syntax-invalid 42, redundant 16
Fitness: max 0.833(216), min 0.167(6), ave 0.812
Test execution time: sum 27154 ms, max 237 ms, min 82 ms
----------------------------------------------------------------

2023-06-26 19:41:17 [main] [INFO]  KGenProgMain - entered the era of 442nd generation.
2023-06-26 19:43:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 12 minutes 5 seconds
Variants: generated 400, build-succeeded 226, build-failed 107, syntax-invalid 41, redundant 26
Fitness: max 0.833(219), min 0.167(2), ave 0.824
Test execution time: sum 27780 ms, max 241 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 19:43:50 [main] [INFO]  KGenProgMain - entered the era of 443rd generation.
2023-06-26 19:46:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 14 minutes 34 seconds
Variants: generated 400, build-succeeded 215, build-failed 115, syntax-invalid 51, redundant 19
Fitness: max 0.833(212), min 0.167(1), ave 0.829
Test execution time: sum 26303 ms, max 235 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 19:46:20 [main] [INFO]  KGenProgMain - entered the era of 444th generation.
2023-06-26 19:48:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 17 minutes 2 seconds
Variants: generated 400, build-succeeded 210, build-failed 114, syntax-invalid 55, redundant 21
Fitness: max 0.833(204), min 0.167(3), ave 0.821
Test execution time: sum 25718 ms, max 231 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 19:48:48 [main] [INFO]  KGenProgMain - entered the era of 445th generation.
2023-06-26 19:51:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 19 minutes 30 seconds
Variants: generated 400, build-succeeded 208, build-failed 113, syntax-invalid 53, redundant 26
Fitness: max 1(1), min 0.167(2), ave 0.825
Test execution time: sum 25397 ms, max 219 ms, min 82 ms
----------------------------------------------------------------

2023-06-26 19:51:15 [main] [INFO]  KGenProgMain - entered the era of 446th generation.
2023-06-26 20:08:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 37 minutes 1 seconds
Variants: generated 400, build-succeeded 222, build-failed 114, syntax-invalid 43, redundant 21
Fitness: max 0.833(217), min 0.167(2), ave 0.825
Test execution time: sum 926912 ms, max 900146 ms, min 107 ms
----------------------------------------------------------------

2023-06-26 20:08:47 [main] [INFO]  KGenProgMain - entered the era of 447th generation.
2023-06-26 20:11:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 39 minutes 37 seconds
Variants: generated 400, build-succeeded 205, build-failed 119, syntax-invalid 51, redundant 25
Fitness: max 0.833(198), min 0.167(4), ave 0.818
Test execution time: sum 26192 ms, max 233 ms, min 83 ms
----------------------------------------------------------------

2023-06-26 20:11:22 [main] [INFO]  KGenProgMain - entered the era of 448th generation.
2023-06-26 20:13:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 42 minutes 4 seconds
Variants: generated 400, build-succeeded 214, build-failed 107, syntax-invalid 52, redundant 27
Fitness: max 0.833(210), min 0.167(2), ave 0.826
Test execution time: sum 25933 ms, max 197 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 20:13:50 [main] [INFO]  KGenProgMain - entered the era of 449th generation.
2023-06-26 20:16:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 44 minutes 36 seconds
Variants: generated 400, build-succeeded 220, build-failed 119, syntax-invalid 43, redundant 18
Fitness: max 0.833(213), min 0.167(2), ave 0.823
Test execution time: sum 26844 ms, max 234 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 20:16:21 [main] [INFO]  KGenProgMain - entered the era of 450th generation.
2023-06-26 20:18:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 47 minutes 11 seconds
Variants: generated 400, build-succeeded 225, build-failed 100, syntax-invalid 49, redundant 26
Fitness: max 0.833(220), min 0.167(3), ave 0.821
Test execution time: sum 28233 ms, max 241 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 20:18:56 [main] [INFO]  KGenProgMain - entered the era of 451st generation.
2023-06-26 20:21:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 49 minutes 50 seconds
Variants: generated 400, build-succeeded 226, build-failed 110, syntax-invalid 36, redundant 28
Fitness: max 0.833(217), min 0.167(4), ave 0.818
Test execution time: sum 28102 ms, max 198 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 20:21:35 [main] [INFO]  KGenProgMain - entered the era of 452nd generation.
2023-06-26 20:24:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 52 minutes 28 seconds
Variants: generated 400, build-succeeded 231, build-failed 114, syntax-invalid 36, redundant 19
Fitness: max 0.833(224), min 0.167(5), ave 0.816
Test execution time: sum 28618 ms, max 227 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 20:24:13 [main] [INFO]  KGenProgMain - entered the era of 453rd generation.
2023-06-26 20:26:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 55 minutes 5 seconds
Variants: generated 400, build-succeeded 222, build-failed 117, syntax-invalid 37, redundant 24
Fitness: max 0.833(213), min 0(1), ave 0.815
Test execution time: sum 27708 ms, max 214 ms, min 82 ms
----------------------------------------------------------------

2023-06-26 20:26:51 [main] [INFO]  KGenProgMain - entered the era of 454th generation.
2023-06-26 20:29:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 57 minutes 41 seconds
Variants: generated 400, build-succeeded 224, build-failed 122, syntax-invalid 35, redundant 19
Fitness: max 0.833(219), min 0.167(3), ave 0.822
Test execution time: sum 27961 ms, max 258 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 20:29:26 [main] [INFO]  KGenProgMain - entered the era of 455th generation.
2023-06-26 20:32:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 19 seconds
Variants: generated 400, build-succeeded 214, build-failed 122, syntax-invalid 46, redundant 18
Fitness: max 0.833(208), min 0.167(3), ave 0.822
Test execution time: sum 27347 ms, max 217 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 20:32:05 [main] [INFO]  KGenProgMain - entered the era of 456th generation.
2023-06-26 20:34:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 2 minutes 52 seconds
Variants: generated 400, build-succeeded 222, build-failed 103, syntax-invalid 45, redundant 30
Fitness: max 0.833(217), min 0.167(1), ave 0.827
Test execution time: sum 27458 ms, max 201 ms, min 104 ms
----------------------------------------------------------------

2023-06-26 20:34:37 [main] [INFO]  KGenProgMain - entered the era of 457th generation.
2023-06-26 20:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 5 minutes 32 seconds
Variants: generated 400, build-succeeded 232, build-failed 116, syntax-invalid 38, redundant 14
Fitness: max 0.833(222), min 0.167(5), ave 0.815
Test execution time: sum 28619 ms, max 227 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 20:37:17 [main] [INFO]  KGenProgMain - entered the era of 458th generation.
2023-06-26 20:39:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 8 minutes 4 seconds
Variants: generated 400, build-succeeded 210, build-failed 128, syntax-invalid 46, redundant 16
Fitness: max 0.833(205), min 0.167(2), ave 0.824
Test execution time: sum 25849 ms, max 268 ms, min 82 ms
----------------------------------------------------------------

2023-06-26 20:39:49 [main] [INFO]  KGenProgMain - entered the era of 459th generation.
2023-06-26 20:42:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 10 minutes 38 seconds
Variants: generated 400, build-succeeded 209, build-failed 123, syntax-invalid 47, redundant 21
Fitness: max 0.833(204), min 0.167(3), ave 0.821
Test execution time: sum 26046 ms, max 195 ms, min 93 ms
----------------------------------------------------------------

2023-06-26 20:42:23 [main] [INFO]  KGenProgMain - entered the era of 460th generation.
2023-06-26 20:44:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 13 minutes 12 seconds
Variants: generated 400, build-succeeded 196, build-failed 124, syntax-invalid 61, redundant 19
Fitness: max 0.833(193), min 0.5(2), ave 0.829
Test execution time: sum 25367 ms, max 230 ms, min 97 ms
----------------------------------------------------------------

2023-06-26 20:44:58 [main] [INFO]  KGenProgMain - entered the era of 461st generation.
2023-06-26 20:47:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 15 minutes 51 seconds
Variants: generated 400, build-succeeded 216, build-failed 123, syntax-invalid 46, redundant 15
Fitness: max 0.833(209), min 0.167(3), ave 0.821
Test execution time: sum 27390 ms, max 205 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 20:47:37 [main] [INFO]  KGenProgMain - entered the era of 462nd generation.
2023-06-26 20:50:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 18 minutes 36 seconds
Variants: generated 400, build-succeeded 223, build-failed 114, syntax-invalid 42, redundant 21
Fitness: max 0.833(215), min 0.167(3), ave 0.82
Test execution time: sum 28873 ms, max 223 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 20:50:21 [main] [INFO]  KGenProgMain - entered the era of 463rd generation.
2023-06-26 20:53:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 21 minutes 17 seconds
Variants: generated 400, build-succeeded 221, build-failed 114, syntax-invalid 47, redundant 18
Fitness: max 0.833(215), min 0.167(3), ave 0.822
Test execution time: sum 28263 ms, max 253 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 20:53:03 [main] [INFO]  KGenProgMain - entered the era of 464th generation.
2023-06-26 20:55:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 23 minutes 52 seconds
Variants: generated 400, build-succeeded 213, build-failed 121, syntax-invalid 48, redundant 18
Fitness: max 0.833(205), min 0.167(5), ave 0.815
Test execution time: sum 26309 ms, max 231 ms, min 83 ms
----------------------------------------------------------------

2023-06-26 20:55:38 [main] [INFO]  KGenProgMain - entered the era of 465th generation.
2023-06-26 20:58:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 26 minutes 33 seconds
Variants: generated 400, build-succeeded 219, build-failed 124, syntax-invalid 37, redundant 20
Fitness: max 0.833(209), min 0.167(6), ave 0.812
Test execution time: sum 27471 ms, max 198 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 20:58:19 [main] [INFO]  KGenProgMain - entered the era of 466th generation.
2023-06-26 21:01:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 29 minutes 20 seconds
Variants: generated 400, build-succeeded 224, build-failed 122, syntax-invalid 45, redundant 9
Fitness: max 0.833(217), min 0.167(5), ave 0.817
Test execution time: sum 29405 ms, max 246 ms, min 95 ms
----------------------------------------------------------------

2023-06-26 21:01:05 [main] [INFO]  KGenProgMain - entered the era of 467th generation.
2023-06-26 21:03:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 32 minutes 9 seconds
Variants: generated 400, build-succeeded 230, build-failed 104, syntax-invalid 35, redundant 31
Fitness: max 0.833(224), min 0.167(3), ave 0.822
Test execution time: sum 29507 ms, max 241 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 21:03:54 [main] [INFO]  KGenProgMain - entered the era of 468th generation.
2023-06-26 21:06:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 34 minutes 56 seconds
Variants: generated 400, build-succeeded 229, build-failed 117, syntax-invalid 39, redundant 15
Fitness: max 0.833(216), min 0.167(6), ave 0.809
Test execution time: sum 29318 ms, max 201 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 21:06:42 [main] [INFO]  KGenProgMain - entered the era of 469th generation.
2023-06-26 21:09:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 37 minutes 43 seconds
Variants: generated 400, build-succeeded 220, build-failed 122, syntax-invalid 42, redundant 16
Fitness: max 0.833(214), min 0.167(3), ave 0.822
Test execution time: sum 28228 ms, max 236 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 21:09:28 [main] [INFO]  KGenProgMain - entered the era of 470th generation.
2023-06-26 21:12:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 40 minutes 21 seconds
Variants: generated 400, build-succeeded 210, build-failed 122, syntax-invalid 52, redundant 16
Fitness: max 0.833(202), min 0.167(2), ave 0.821
Test execution time: sum 26314 ms, max 256 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 21:12:06 [main] [INFO]  KGenProgMain - entered the era of 471st generation.
2023-06-26 21:14:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 43 minutes 6 seconds
Variants: generated 400, build-succeeded 229, build-failed 114, syntax-invalid 38, redundant 19
Fitness: max 0.833(223), min 0.167(2), ave 0.825
Test execution time: sum 29151 ms, max 221 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 21:14:51 [main] [INFO]  KGenProgMain - entered the era of 472nd generation.
2023-06-26 21:17:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 45 minutes 37 seconds
Variants: generated 400, build-succeeded 203, build-failed 118, syntax-invalid 57, redundant 22
Fitness: max 0.833(193), min 0.167(3), ave 0.816
Test execution time: sum 25226 ms, max 236 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 21:17:22 [main] [INFO]  KGenProgMain - entered the era of 473rd generation.
2023-06-26 21:20:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 48 minutes 15 seconds
Variants: generated 400, build-succeeded 221, build-failed 113, syntax-invalid 46, redundant 20
Fitness: max 0.833(213), min 0.167(3), ave 0.821
Test execution time: sum 27889 ms, max 240 ms, min 83 ms
----------------------------------------------------------------

2023-06-26 21:20:00 [main] [INFO]  KGenProgMain - entered the era of 474th generation.
2023-06-26 21:22:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 50 minutes 51 seconds
Variants: generated 400, build-succeeded 212, build-failed 115, syntax-invalid 52, redundant 21
Fitness: max 0.833(202), min 0.167(5), ave 0.812
Test execution time: sum 26610 ms, max 199 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 21:22:37 [main] [INFO]  KGenProgMain - entered the era of 475th generation.
2023-06-26 21:25:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 53 minutes 36 seconds
Variants: generated 400, build-succeeded 230, build-failed 108, syntax-invalid 35, redundant 27
Fitness: max 0.833(223), min 0.167(3), ave 0.82
Test execution time: sum 28862 ms, max 203 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 21:25:21 [main] [INFO]  KGenProgMain - entered the era of 476th generation.
2023-06-26 21:28:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 56 minutes 16 seconds
Variants: generated 400, build-succeeded 218, build-failed 112, syntax-invalid 43, redundant 27
Fitness: max 0.833(214), min 0.167(2), ave 0.826
Test execution time: sum 27527 ms, max 213 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 21:28:01 [main] [INFO]  KGenProgMain - entered the era of 477th generation.
2023-06-26 21:30:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 58 minutes 54 seconds
Variants: generated 400, build-succeeded 216, build-failed 121, syntax-invalid 41, redundant 22
Fitness: max 0.833(208), min 0.167(6), ave 0.813
Test execution time: sum 27029 ms, max 187 ms, min 84 ms
----------------------------------------------------------------

2023-06-26 21:30:40 [main] [INFO]  KGenProgMain - entered the era of 478th generation.
2023-06-26 21:33:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 1 minutes 38 seconds
Variants: generated 400, build-succeeded 228, build-failed 115, syntax-invalid 40, redundant 17
Fitness: max 0.833(218), min 0.167(4), ave 0.816
Test execution time: sum 28688 ms, max 203 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 21:33:24 [main] [INFO]  KGenProgMain - entered the era of 479th generation.
2023-06-26 21:36:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 4 minutes 27 seconds
Variants: generated 400, build-succeeded 233, build-failed 118, syntax-invalid 32, redundant 17
Fitness: max 0.833(226), min 0.167(1), ave 0.826
Test execution time: sum 30028 ms, max 239 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 21:36:12 [main] [INFO]  KGenProgMain - entered the era of 480th generation.
2023-06-26 21:38:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 7 minutes 8 seconds
Variants: generated 400, build-succeeded 216, build-failed 119, syntax-invalid 46, redundant 19
Fitness: max 0.833(203), min 0.167(6), ave 0.809
Test execution time: sum 27270 ms, max 201 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 21:38:54 [main] [INFO]  KGenProgMain - entered the era of 481st generation.
2023-06-26 21:41:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 9 minutes 55 seconds
Variants: generated 400, build-succeeded 227, build-failed 125, syntax-invalid 33, redundant 15
Fitness: max 0.833(218), min 0.167(7), ave 0.811
Test execution time: sum 29124 ms, max 275 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 21:41:40 [main] [INFO]  KGenProgMain - entered the era of 482nd generation.
2023-06-26 21:44:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 12 minutes 34 seconds
Variants: generated 400, build-succeeded 215, build-failed 115, syntax-invalid 52, redundant 18
Fitness: max 0.833(207), min 0.167(3), ave 0.82
Test execution time: sum 27578 ms, max 266 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 21:44:20 [main] [INFO]  KGenProgMain - entered the era of 483rd generation.
2023-06-26 21:47:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 15 minutes 16 seconds
Variants: generated 400, build-succeeded 214, build-failed 116, syntax-invalid 45, redundant 25
Fitness: max 0.833(206), min 0.167(6), ave 0.812
Test execution time: sum 26899 ms, max 232 ms, min 83 ms
----------------------------------------------------------------

2023-06-26 21:47:02 [main] [INFO]  KGenProgMain - entered the era of 484th generation.
2023-06-26 21:49:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 18 minutes 3 seconds
Variants: generated 400, build-succeeded 225, build-failed 122, syntax-invalid 43, redundant 10
Fitness: max 0.833(222), min 0.167(3), ave 0.824
Test execution time: sum 28676 ms, max 226 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 21:49:48 [main] [INFO]  KGenProgMain - entered the era of 485th generation.
2023-06-26 21:52:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 20 minutes 45 seconds
Variants: generated 400, build-succeeded 207, build-failed 137, syntax-invalid 46, redundant 10
Fitness: max 0.833(197), min 0.167(5), ave 0.812
Test execution time: sum 26406 ms, max 237 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 21:52:30 [main] [INFO]  KGenProgMain - entered the era of 486th generation.
2023-06-26 21:55:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 23 minutes 30 seconds
Variants: generated 400, build-succeeded 221, build-failed 108, syntax-invalid 48, redundant 23
Fitness: max 0.833(213), min 0.167(5), ave 0.816
Test execution time: sum 28809 ms, max 278 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 21:55:15 [main] [INFO]  KGenProgMain - entered the era of 487th generation.
2023-06-26 21:57:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 26 minutes 9 seconds
Variants: generated 400, build-succeeded 215, build-failed 112, syntax-invalid 52, redundant 21
Fitness: max 0.833(211), min 0.167(4), ave 0.821
Test execution time: sum 27265 ms, max 240 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 21:57:54 [main] [INFO]  KGenProgMain - entered the era of 488th generation.
2023-06-26 22:00:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 28 minutes 56 seconds
Variants: generated 400, build-succeeded 221, build-failed 120, syntax-invalid 42, redundant 17
Fitness: max 0.833(215), min 0.167(2), ave 0.824
Test execution time: sum 28470 ms, max 225 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 22:00:41 [main] [INFO]  KGenProgMain - entered the era of 489th generation.
2023-06-26 22:03:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 31 minutes 41 seconds
Variants: generated 400, build-succeeded 216, build-failed 116, syntax-invalid 45, redundant 23
Fitness: max 0.833(210), min 0.167(3), ave 0.822
Test execution time: sum 27731 ms, max 218 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 22:03:26 [main] [INFO]  KGenProgMain - entered the era of 490th generation.
2023-06-26 22:06:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 34 minutes 25 seconds
Variants: generated 400, build-succeeded 215, build-failed 119, syntax-invalid 46, redundant 20
Fitness: max 0.833(209), min 0.167(1), ave 0.826
Test execution time: sum 27637 ms, max 223 ms, min 95 ms
----------------------------------------------------------------

2023-06-26 22:06:13 [main] [INFO]  KGenProgMain - entered the era of 491st generation.
2023-06-26 22:08:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 37 minutes 4 seconds
Variants: generated 400, build-succeeded 203, build-failed 122, syntax-invalid 55, redundant 20
Fitness: max 0.833(198), min 0.167(1), ave 0.825
Test execution time: sum 26107 ms, max 268 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 22:08:52 [main] [INFO]  KGenProgMain - entered the era of 492nd generation.
2023-06-26 22:11:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 39 minutes 52 seconds
Variants: generated 400, build-succeeded 242, build-failed 100, syntax-invalid 42, redundant 16
Fitness: max 0.833(232), min 0.167(7), ave 0.812
Test execution time: sum 30831 ms, max 258 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 22:11:40 [main] [INFO]  KGenProgMain - entered the era of 493rd generation.
2023-06-26 22:14:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 42 minutes 43 seconds
Variants: generated 400, build-succeeded 227, build-failed 109, syntax-invalid 43, redundant 21
Fitness: max 0.833(220), min 0.167(3), ave 0.821
Test execution time: sum 29517 ms, max 225 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 22:14:30 [main] [INFO]  KGenProgMain - entered the era of 494th generation.
2023-06-26 22:17:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 45 minutes 27 seconds
Variants: generated 400, build-succeeded 212, build-failed 118, syntax-invalid 53, redundant 17
Fitness: max 0.833(206), min 0.167(2), ave 0.822
Test execution time: sum 27630 ms, max 242 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 22:17:14 [main] [INFO]  KGenProgMain - entered the era of 495th generation.
2023-06-26 22:19:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 48 minutes 11 seconds
Variants: generated 400, build-succeeded 212, build-failed 127, syntax-invalid 48, redundant 13
Fitness: max 0.833(205), min 0.167(4), ave 0.818
Test execution time: sum 27692 ms, max 230 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 22:19:59 [main] [INFO]  KGenProgMain - entered the era of 496th generation.
2023-06-26 22:22:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 51 minutes 2 seconds
Variants: generated 400, build-succeeded 210, build-failed 131, syntax-invalid 42, redundant 17
Fitness: max 0.833(200), min 0.167(5), ave 0.813
Test execution time: sum 27355 ms, max 248 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 22:22:50 [main] [INFO]  KGenProgMain - entered the era of 497th generation.
2023-06-26 22:25:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 53 minutes 54 seconds
Variants: generated 400, build-succeeded 223, build-failed 118, syntax-invalid 39, redundant 20
Fitness: max 0.833(213), min 0.167(3), ave 0.818
Test execution time: sum 29272 ms, max 206 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 22:25:42 [main] [INFO]  KGenProgMain - entered the era of 498th generation.
2023-06-26 22:28:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 56 minutes 37 seconds
Variants: generated 400, build-succeeded 204, build-failed 121, syntax-invalid 51, redundant 24
Fitness: max 0.833(194), min 0.167(6), ave 0.809
Test execution time: sum 26328 ms, max 191 ms, min 89 ms
----------------------------------------------------------------

2023-06-26 22:28:24 [main] [INFO]  KGenProgMain - entered the era of 499th generation.
2023-06-26 22:46:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 14 minutes 26 seconds
Variants: generated 400, build-succeeded 206, build-failed 119, syntax-invalid 62, redundant 13
Fitness: max 0.833(196), min 0.167(4), ave 0.812
Test execution time: sum 927570 ms, max 900152 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 22:46:14 [main] [INFO]  KGenProgMain - entered the era of 500th generation.
2023-06-26 22:58:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 26 minutes 14 seconds
Variants: generated 400, build-succeeded 213, build-failed 111, syntax-invalid 54, redundant 22
Fitness: max 0.833(203), min 0.167(5), ave 0.813
Test execution time: sum 567895 ms, max 540145 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 22:58:01 [main] [INFO]  KGenProgMain - entered the era of 501st generation.
2023-06-26 23:00:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 29 minutes 0 seconds
Variants: generated 400, build-succeeded 206, build-failed 116, syntax-invalid 59, redundant 19
Fitness: max 0.833(196), min 0.167(4), ave 0.813
Test execution time: sum 27012 ms, max 276 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 23:00:47 [main] [INFO]  KGenProgMain - entered the era of 502nd generation.
2023-06-26 23:03:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 31 minutes 50 seconds
Variants: generated 400, build-succeeded 229, build-failed 104, syntax-invalid 51, redundant 16
Fitness: max 0.833(221), min 0.167(2), ave 0.822
Test execution time: sum 29955 ms, max 239 ms, min 85 ms
----------------------------------------------------------------

2023-06-26 23:03:37 [main] [INFO]  KGenProgMain - entered the era of 503rd generation.
2023-06-26 23:06:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 34 minutes 40 seconds
Variants: generated 400, build-succeeded 205, build-failed 128, syntax-invalid 49, redundant 18
Fitness: max 0.833(198), min 0.167(7), ave 0.811
Test execution time: sum 27229 ms, max 216 ms, min 86 ms
----------------------------------------------------------------

2023-06-26 23:06:28 [main] [INFO]  KGenProgMain - entered the era of 504th generation.
2023-06-26 23:09:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 37 minutes 31 seconds
Variants: generated 400, build-succeeded 212, build-failed 115, syntax-invalid 57, redundant 16
Fitness: max 0.833(200), min 0.167(7), ave 0.807
Test execution time: sum 28041 ms, max 269 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 23:09:19 [main] [INFO]  KGenProgMain - entered the era of 505th generation.
2023-06-26 23:12:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 40 minutes 28 seconds
Variants: generated 400, build-succeeded 234, build-failed 103, syntax-invalid 45, redundant 18
Fitness: max 0.833(225), min 0.167(7), ave 0.811
Test execution time: sum 31071 ms, max 226 ms, min 87 ms
----------------------------------------------------------------

2023-06-26 23:12:16 [main] [INFO]  KGenProgMain - entered the era of 506th generation.
2023-06-26 23:15:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 43 minutes 22 seconds
Variants: generated 400, build-succeeded 210, build-failed 122, syntax-invalid 52, redundant 16
Fitness: max 0.833(204), min 0.167(5), ave 0.817
Test execution time: sum 27931 ms, max 240 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 23:15:10 [main] [INFO]  KGenProgMain - entered the era of 507th generation.
2023-06-26 23:18:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 46 minutes 28 seconds
Variants: generated 400, build-succeeded 216, build-failed 114, syntax-invalid 49, redundant 21
Fitness: max 0.833(201), min 0.167(9), ave 0.799
Test execution time: sum 30330 ms, max 229 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 23:18:16 [main] [INFO]  KGenProgMain - entered the era of 508th generation.
2023-06-26 23:21:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 49 minutes 43 seconds
Variants: generated 400, build-succeeded 221, build-failed 113, syntax-invalid 46, redundant 20
Fitness: max 0.833(208), min 0.167(6), ave 0.808
Test execution time: sum 31645 ms, max 274 ms, min 96 ms
----------------------------------------------------------------

2023-06-26 23:21:30 [main] [INFO]  KGenProgMain - entered the era of 509th generation.
2023-06-26 23:24:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 52 minutes 47 seconds
Variants: generated 400, build-succeeded 216, build-failed 121, syntax-invalid 47, redundant 16
Fitness: max 0.833(207), min 0.167(5), ave 0.814
Test execution time: sum 29828 ms, max 274 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 23:24:35 [main] [INFO]  KGenProgMain - entered the era of 510th generation.
2023-06-26 23:27:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 55 minutes 42 seconds
Variants: generated 400, build-succeeded 210, build-failed 117, syntax-invalid 49, redundant 24
Fitness: max 0.833(200), min 0.167(8), ave 0.806
Test execution time: sum 27835 ms, max 208 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 23:27:29 [main] [INFO]  KGenProgMain - entered the era of 511th generation.
2023-06-26 23:30:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 58 minutes 35 seconds
Variants: generated 400, build-succeeded 221, build-failed 102, syntax-invalid 55, redundant 22
Fitness: max 0.833(211), min 0.167(6), ave 0.812
Test execution time: sum 29466 ms, max 242 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 23:30:22 [main] [INFO]  KGenProgMain - entered the era of 512th generation.
2023-06-26 23:33:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 1 minutes 32 seconds
Variants: generated 400, build-succeeded 212, build-failed 116, syntax-invalid 53, redundant 19
Fitness: max 0.833(207), min 0.167(2), ave 0.822
Test execution time: sum 28775 ms, max 237 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 23:33:20 [main] [INFO]  KGenProgMain - entered the era of 513th generation.
2023-06-26 23:36:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 4 minutes 36 seconds
Variants: generated 400, build-succeeded 220, build-failed 97, syntax-invalid 52, redundant 31
Fitness: max 0.833(210), min 0.167(6), ave 0.812
Test execution time: sum 30802 ms, max 270 ms, min 91 ms
----------------------------------------------------------------

2023-06-26 23:36:23 [main] [INFO]  KGenProgMain - entered the era of 514th generation.
2023-06-26 23:39:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 7 minutes 31 seconds
Variants: generated 400, build-succeeded 208, build-failed 103, syntax-invalid 66, redundant 23
Fitness: max 0.833(206), min 0.167(1), ave 0.829
Test execution time: sum 28524 ms, max 240 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 23:39:18 [main] [INFO]  KGenProgMain - entered the era of 515th generation.
2023-06-26 23:42:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 10 minutes 38 seconds
Variants: generated 400, build-succeeded 229, build-failed 112, syntax-invalid 40, redundant 19
Fitness: max 0.833(219), min 0.167(5), ave 0.815
Test execution time: sum 31416 ms, max 261 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 23:42:25 [main] [INFO]  KGenProgMain - entered the era of 516th generation.
2023-06-26 23:45:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 13 minutes 43 seconds
Variants: generated 400, build-succeeded 226, build-failed 106, syntax-invalid 44, redundant 24
Fitness: max 0.833(220), min 0.167(5), ave 0.817
Test execution time: sum 30920 ms, max 255 ms, min 94 ms
----------------------------------------------------------------

2023-06-26 23:45:31 [main] [INFO]  KGenProgMain - entered the era of 517th generation.
2023-06-26 23:48:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 16 minutes 42 seconds
Variants: generated 400, build-succeeded 212, build-failed 114, syntax-invalid 54, redundant 20
Fitness: max 0.833(206), min 0.167(4), ave 0.819
Test execution time: sum 28843 ms, max 231 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 23:48:30 [main] [INFO]  KGenProgMain - entered the era of 518th generation.
2023-06-26 23:51:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 19 minutes 45 seconds
Variants: generated 400, build-succeeded 240, build-failed 101, syntax-invalid 43, redundant 16
Fitness: max 0.833(229), min 0.167(5), ave 0.813
Test execution time: sum 32331 ms, max 243 ms, min 88 ms
----------------------------------------------------------------

2023-06-26 23:51:32 [main] [INFO]  KGenProgMain - entered the era of 519th generation.
2023-06-26 23:54:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 22 minutes 42 seconds
Variants: generated 400, build-succeeded 213, build-failed 126, syntax-invalid 46, redundant 15
Fitness: max 0.833(208), min 0.167(4), ave 0.82
Test execution time: sum 28698 ms, max 207 ms, min 92 ms
----------------------------------------------------------------

2023-06-26 23:54:29 [main] [INFO]  KGenProgMain - entered the era of 520th generation.
2023-06-26 23:57:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 25 minutes 34 seconds
Variants: generated 400, build-succeeded 221, build-failed 112, syntax-invalid 51, redundant 16
Fitness: max 0.833(213), min 0.167(2), ave 0.822
Test execution time: sum 29171 ms, max 204 ms, min 90 ms
----------------------------------------------------------------

2023-06-26 23:57:21 [main] [INFO]  KGenProgMain - entered the era of 521st generation.
2023-06-27 00:00:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 28 minutes 31 seconds
Variants: generated 400, build-succeeded 227, build-failed 117, syntax-invalid 36, redundant 20
Fitness: max 0.833(215), min 0.167(5), ave 0.814
Test execution time: sum 29803 ms, max 265 ms, min 86 ms
----------------------------------------------------------------

2023-06-27 00:00:18 [main] [INFO]  KGenProgMain - entered the era of 522nd generation.
2023-06-27 00:03:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 31 minutes 17 seconds
Variants: generated 400, build-succeeded 220, build-failed 107, syntax-invalid 59, redundant 14
Fitness: max 0.833(211), min 0.167(4), ave 0.817
Test execution time: sum 28482 ms, max 217 ms, min 86 ms
----------------------------------------------------------------

2023-06-27 00:03:04 [main] [INFO]  KGenProgMain - entered the era of 523rd generation.
2023-06-27 00:20:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 49 minutes 3 seconds
Variants: generated 400, build-succeeded 211, build-failed 99, syntax-invalid 64, redundant 26
Fitness: max 0.833(208), min 0.167(2), ave 0.826
Test execution time: sum 927772 ms, max 900157 ms, min 89 ms
----------------------------------------------------------------

2023-06-27 00:20:50 [main] [INFO]  KGenProgMain - entered the era of 524th generation.
2023-06-27 00:23:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 51 minutes 49 seconds
Variants: generated 400, build-succeeded 214, build-failed 111, syntax-invalid 58, redundant 17
Fitness: max 0.833(206), min 0.167(5), ave 0.814
Test execution time: sum 27748 ms, max 212 ms, min 85 ms
----------------------------------------------------------------

2023-06-27 00:23:36 [main] [INFO]  KGenProgMain - entered the era of 525th generation.
2023-06-27 00:26:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 54 minutes 45 seconds
Variants: generated 400, build-succeeded 218, build-failed 123, syntax-invalid 46, redundant 13
Fitness: max 0.833(209), min 0.167(5), ave 0.815
Test execution time: sum 28865 ms, max 209 ms, min 88 ms
----------------------------------------------------------------

2023-06-27 00:26:32 [main] [INFO]  KGenProgMain - entered the era of 526th generation.
2023-06-27 00:29:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 57 minutes 39 seconds
Variants: generated 400, build-succeeded 228, build-failed 113, syntax-invalid 42, redundant 17
Fitness: max 0.833(217), min 0.167(5), ave 0.814
Test execution time: sum 29865 ms, max 203 ms, min 88 ms
----------------------------------------------------------------

2023-06-27 00:29:26 [main] [INFO]  KGenProgMain - entered the era of 527th generation.
2023-06-27 00:32:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 30 seconds
Variants: generated 400, build-succeeded 221, build-failed 116, syntax-invalid 50, redundant 13
Fitness: max 0.833(213), min 0.167(5), ave 0.816
Test execution time: sum 28849 ms, max 244 ms, min 88 ms
----------------------------------------------------------------

2023-06-27 00:32:17 [main] [INFO]  KGenProgMain - entered the era of 528th generation.
2023-06-27 00:35:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 3 minutes 22 seconds
Variants: generated 400, build-succeeded 219, build-failed 117, syntax-invalid 44, redundant 20
Fitness: max 0.833(212), min 0.167(5), ave 0.816
Test execution time: sum 28750 ms, max 253 ms, min 89 ms
----------------------------------------------------------------

2023-06-27 00:35:09 [main] [INFO]  KGenProgMain - entered the era of 529th generation.
2023-06-27 00:37:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 6 minutes 9 seconds
Variants: generated 400, build-succeeded 206, build-failed 117, syntax-invalid 55, redundant 22
Fitness: max 0.833(201), min 0.167(3), ave 0.822
Test execution time: sum 27136 ms, max 231 ms, min 85 ms
----------------------------------------------------------------

2023-06-27 00:37:57 [main] [INFO]  KGenProgMain - entered the era of 530th generation.
2023-06-27 00:40:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 9 minutes 7 seconds
Variants: generated 400, build-succeeded 225, build-failed 113, syntax-invalid 49, redundant 13
Fitness: max 0.833(222), min 0.167(3), ave 0.824
Test execution time: sum 30575 ms, max 253 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 00:40:55 [main] [INFO]  KGenProgMain - entered the era of 531st generation.
2023-06-27 00:43:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 11 minutes 50 seconds
Variants: generated 400, build-succeeded 195, build-failed 124, syntax-invalid 63, redundant 18
Fitness: max 0.833(192), min 0.167(2), ave 0.826
Test execution time: sum 25737 ms, max 238 ms, min 86 ms
----------------------------------------------------------------

2023-06-27 00:43:38 [main] [INFO]  KGenProgMain - entered the era of 532nd generation.
2023-06-27 00:46:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 14 minutes 38 seconds
Variants: generated 400, build-succeeded 212, build-failed 115, syntax-invalid 57, redundant 16
Fitness: max 0.833(202), min 0.167(8), ave 0.806
Test execution time: sum 27596 ms, max 253 ms, min 88 ms
----------------------------------------------------------------

2023-06-27 00:46:26 [main] [INFO]  KGenProgMain - entered the era of 533rd generation.
2023-06-27 00:49:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 17 minutes 28 seconds
Variants: generated 400, build-succeeded 213, build-failed 118, syntax-invalid 52, redundant 17
Fitness: max 0.833(206), min 0.167(7), ave 0.811
Test execution time: sum 27861 ms, max 221 ms, min 85 ms
----------------------------------------------------------------

2023-06-27 00:49:16 [main] [INFO]  KGenProgMain - entered the era of 534th generation.
2023-06-27 00:52:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 20 minutes 16 seconds
Variants: generated 400, build-succeeded 211, build-failed 112, syntax-invalid 61, redundant 16
Fitness: max 0.833(208), min 0.167(3), ave 0.824
Test execution time: sum 27771 ms, max 223 ms, min 85 ms
----------------------------------------------------------------

2023-06-27 00:52:04 [main] [INFO]  KGenProgMain - entered the era of 535th generation.
2023-06-27 00:54:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 23 minutes 5 seconds
Variants: generated 400, build-succeeded 206, build-failed 121, syntax-invalid 55, redundant 18
Fitness: max 0.833(196), min 0(1), ave 0.811
Test execution time: sum 26991 ms, max 227 ms, min 91 ms
----------------------------------------------------------------

2023-06-27 00:54:52 [main] [INFO]  KGenProgMain - entered the era of 536th generation.
2023-06-27 00:57:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 25 minutes 54 seconds
Variants: generated 400, build-succeeded 204, build-failed 122, syntax-invalid 53, redundant 21
Fitness: max 0.833(201), min 0.167(1), ave 0.828
Test execution time: sum 27377 ms, max 225 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 00:57:42 [main] [INFO]  KGenProgMain - entered the era of 537th generation.
2023-06-27 01:00:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 28 minutes 41 seconds
Variants: generated 400, build-succeeded 207, build-failed 113, syntax-invalid 60, redundant 20
Fitness: max 0.833(201), min 0.167(3), ave 0.821
Test execution time: sum 27260 ms, max 224 ms, min 88 ms
----------------------------------------------------------------

2023-06-27 01:00:28 [main] [INFO]  KGenProgMain - entered the era of 538th generation.
2023-06-27 01:03:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 31 minutes 31 seconds
Variants: generated 400, build-succeeded 208, build-failed 127, syntax-invalid 54, redundant 11
Fitness: max 0.833(199), min 0(1), ave 0.811
Test execution time: sum 27294 ms, max 226 ms, min 85 ms
----------------------------------------------------------------

2023-06-27 01:03:19 [main] [INFO]  KGenProgMain - entered the era of 539th generation.
2023-06-27 01:06:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 34 minutes 24 seconds
Variants: generated 400, build-succeeded 223, build-failed 112, syntax-invalid 47, redundant 18
Fitness: max 0.833(218), min 0.167(3), ave 0.823
Test execution time: sum 29425 ms, max 348 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 01:06:12 [main] [INFO]  KGenProgMain - entered the era of 540th generation.
2023-06-27 01:08:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 37 minutes 7 seconds
Variants: generated 400, build-succeeded 192, build-failed 120, syntax-invalid 71, redundant 17
Fitness: max 0.833(185), min 0.167(6), ave 0.812
Test execution time: sum 25389 ms, max 273 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 01:08:55 [main] [INFO]  KGenProgMain - entered the era of 541st generation.
2023-06-27 01:11:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 39 minutes 50 seconds
Variants: generated 400, build-succeeded 195, build-failed 121, syntax-invalid 68, redundant 16
Fitness: max 0.833(192), min 0.167(2), ave 0.826
Test execution time: sum 25802 ms, max 233 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 01:11:38 [main] [INFO]  KGenProgMain - entered the era of 542nd generation.
2023-06-27 01:14:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 42 minutes 35 seconds
Variants: generated 400, build-succeeded 199, build-failed 118, syntax-invalid 66, redundant 17
Fitness: max 0.833(195), min 0.167(1), ave 0.827
Test execution time: sum 26488 ms, max 227 ms, min 91 ms
----------------------------------------------------------------

2023-06-27 01:14:22 [main] [INFO]  KGenProgMain - entered the era of 543rd generation.
2023-06-27 01:17:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 45 minutes 22 seconds
Variants: generated 400, build-succeeded 208, build-failed 110, syntax-invalid 69, redundant 13
Fitness: max 0.833(199), min 0.167(4), ave 0.817
Test execution time: sum 27498 ms, max 215 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 01:17:09 [main] [INFO]  KGenProgMain - entered the era of 544th generation.
2023-06-27 01:19:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 48 minutes 7 seconds
Variants: generated 400, build-succeeded 204, build-failed 110, syntax-invalid 68, redundant 18
Fitness: max 0.833(196), min 0.167(4), ave 0.817
Test execution time: sum 27030 ms, max 261 ms, min 91 ms
----------------------------------------------------------------

2023-06-27 01:19:55 [main] [INFO]  KGenProgMain - entered the era of 545th generation.
2023-06-27 01:22:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 51 minutes 0 seconds
Variants: generated 400, build-succeeded 218, build-failed 116, syntax-invalid 50, redundant 16
Fitness: max 0.833(212), min 0.167(5), ave 0.817
Test execution time: sum 28740 ms, max 216 ms, min 88 ms
----------------------------------------------------------------

2023-06-27 01:22:48 [main] [INFO]  KGenProgMain - entered the era of 546th generation.
2023-06-27 01:25:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 53 minutes 49 seconds
Variants: generated 400, build-succeeded 209, build-failed 107, syntax-invalid 65, redundant 19
Fitness: max 0.833(202), min 0.167(2), ave 0.822
Test execution time: sum 27822 ms, max 227 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 01:25:36 [main] [INFO]  KGenProgMain - entered the era of 547th generation.
2023-06-27 01:28:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 56 minutes 35 seconds
Variants: generated 400, build-succeeded 197, build-failed 113, syntax-invalid 71, redundant 19
Fitness: max 0.833(188), min 0.167(5), ave 0.813
Test execution time: sum 26058 ms, max 241 ms, min 88 ms
----------------------------------------------------------------

2023-06-27 01:28:22 [main] [INFO]  KGenProgMain - entered the era of 548th generation.
2023-06-27 01:31:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 59 minutes 32 seconds
Variants: generated 400, build-succeeded 225, build-failed 108, syntax-invalid 50, redundant 17
Fitness: max 0.833(216), min 0.167(5), ave 0.816
Test execution time: sum 30077 ms, max 227 ms, min 87 ms
----------------------------------------------------------------

2023-06-27 01:31:20 [main] [INFO]  KGenProgMain - entered the era of 549th generation.
2023-06-27 01:34:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 2 minutes 26 seconds
Variants: generated 400, build-succeeded 203, build-failed 107, syntax-invalid 61, redundant 29
Fitness: max 0.833(200), min 0.167(2), ave 0.826
Test execution time: sum 27529 ms, max 203 ms, min 110 ms
----------------------------------------------------------------

2023-06-27 01:34:14 [main] [INFO]  KGenProgMain - entered the era of 550th generation.
2023-06-27 01:37:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 5 minutes 21 seconds
Variants: generated 400, build-succeeded 205, build-failed 121, syntax-invalid 56, redundant 18
Fitness: max 0.833(199), min 0.167(5), ave 0.816
Test execution time: sum 27620 ms, max 274 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 01:37:09 [main] [INFO]  KGenProgMain - entered the era of 551st generation.
2023-06-27 01:39:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 8 minutes 8 seconds
Variants: generated 400, build-succeeded 200, build-failed 107, syntax-invalid 77, redundant 16
Fitness: max 0.833(189), min 0.167(5), ave 0.811
Test execution time: sum 27122 ms, max 227 ms, min 85 ms
----------------------------------------------------------------

2023-06-27 01:39:56 [main] [INFO]  KGenProgMain - entered the era of 552nd generation.
2023-06-27 01:57:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 26 minutes 6 seconds
Variants: generated 400, build-succeeded 216, build-failed 117, syntax-invalid 50, redundant 17
Fitness: max 0.833(210), min 0.167(1), ave 0.824
Test execution time: sum 929274 ms, max 900159 ms, min 100 ms
----------------------------------------------------------------

2023-06-27 01:57:54 [main] [INFO]  KGenProgMain - entered the era of 553rd generation.
2023-06-27 02:00:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 28 minutes 58 seconds
Variants: generated 400, build-succeeded 210, build-failed 104, syntax-invalid 62, redundant 24
Fitness: max 0.833(203), min 0.167(3), ave 0.821
Test execution time: sum 28331 ms, max 251 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 02:00:46 [main] [INFO]  KGenProgMain - entered the era of 554th generation.
2023-06-27 02:03:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 31 minutes 52 seconds
Variants: generated 400, build-succeeded 210, build-failed 113, syntax-invalid 60, redundant 17
Fitness: max 0.833(205), min 0.167(3), ave 0.822
Test execution time: sum 28445 ms, max 288 ms, min 91 ms
----------------------------------------------------------------

2023-06-27 02:03:39 [main] [INFO]  KGenProgMain - entered the era of 555th generation.
2023-06-27 02:06:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 34 minutes 40 seconds
Variants: generated 400, build-succeeded 192, build-failed 124, syntax-invalid 68, redundant 16
Fitness: max 0.833(186), min 0.167(4), ave 0.818
Test execution time: sum 25945 ms, max 207 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 02:06:28 [main] [INFO]  KGenProgMain - entered the era of 556th generation.
2023-06-27 02:09:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 37 minutes 34 seconds
Variants: generated 400, build-succeeded 212, build-failed 108, syntax-invalid 61, redundant 19
Fitness: max 0.833(209), min 0.167(1), ave 0.827
Test execution time: sum 28798 ms, max 260 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 02:09:21 [main] [INFO]  KGenProgMain - entered the era of 557th generation.
2023-06-27 02:12:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 40 minutes 31 seconds
Variants: generated 400, build-succeeded 202, build-failed 126, syntax-invalid 57, redundant 15
Fitness: max 0.833(197), min 0.167(4), ave 0.819
Test execution time: sum 27806 ms, max 236 ms, min 86 ms
----------------------------------------------------------------

2023-06-27 02:12:18 [main] [INFO]  KGenProgMain - entered the era of 558th generation.
2023-06-27 02:15:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 43 minutes 26 seconds
Variants: generated 400, build-succeeded 187, build-failed 114, syntax-invalid 72, redundant 27
Fitness: max 0.833(182), min 0.167(4), ave 0.818
Test execution time: sum 26491 ms, max 223 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 02:15:14 [main] [INFO]  KGenProgMain - entered the era of 559th generation.
2023-06-27 02:18:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 46 minutes 34 seconds
Variants: generated 400, build-succeeded 214, build-failed 110, syntax-invalid 52, redundant 24
Fitness: max 0.833(213), min 0.167(1), ave 0.83
Test execution time: sum 30311 ms, max 233 ms, min 122 ms
----------------------------------------------------------------

2023-06-27 02:18:22 [main] [INFO]  KGenProgMain - entered the era of 560th generation.
2023-06-27 02:21:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 49 minutes 31 seconds
Variants: generated 400, build-succeeded 196, build-failed 131, syntax-invalid 54, redundant 19
Fitness: max 0.833(194), min 0.167(2), ave 0.827
Test execution time: sum 26982 ms, max 332 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 02:21:18 [main] [INFO]  KGenProgMain - entered the era of 561st generation.
2023-06-27 02:24:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 52 minutes 30 seconds
Variants: generated 400, build-succeeded 213, build-failed 118, syntax-invalid 55, redundant 14
Fitness: max 0.833(201), min 0.167(6), ave 0.81
Test execution time: sum 29167 ms, max 220 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 02:24:17 [main] [INFO]  KGenProgMain - entered the era of 562nd generation.
2023-06-27 02:27:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 55 minutes 25 seconds
Variants: generated 400, build-succeeded 209, build-failed 117, syntax-invalid 60, redundant 14
Fitness: max 0.833(201), min 0.167(4), ave 0.817
Test execution time: sum 28327 ms, max 207 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 02:27:13 [main] [INFO]  KGenProgMain - entered the era of 563rd generation.
2023-06-27 02:30:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 hours 58 minutes 16 seconds
Variants: generated 400, build-succeeded 193, build-failed 120, syntax-invalid 68, redundant 19
Fitness: max 0.833(188), min 0.167(3), ave 0.821
Test execution time: sum 26491 ms, max 207 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 02:30:04 [main] [INFO]  KGenProgMain - entered the era of 564th generation.
2023-06-27 02:33:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 1 minutes 16 seconds
Variants: generated 400, build-succeeded 208, build-failed 123, syntax-invalid 53, redundant 16
Fitness: max 0.833(204), min 0.167(3), ave 0.823
Test execution time: sum 28670 ms, max 229 ms, min 89 ms
----------------------------------------------------------------

2023-06-27 02:33:04 [main] [INFO]  KGenProgMain - entered the era of 565th generation.
2023-06-27 02:35:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 4 minutes 10 seconds
Variants: generated 400, build-succeeded 198, build-failed 113, syntax-invalid 70, redundant 19
Fitness: max 0.833(192), min 0.167(3), ave 0.82
Test execution time: sum 27210 ms, max 213 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 02:35:57 [main] [INFO]  KGenProgMain - entered the era of 566th generation.
2023-06-27 02:38:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 7 minutes 2 seconds
Variants: generated 400, build-succeeded 197, build-failed 115, syntax-invalid 69, redundant 19
Fitness: max 0.833(186), min 0.167(8), ave 0.804
Test execution time: sum 26663 ms, max 231 ms, min 91 ms
----------------------------------------------------------------

2023-06-27 02:38:49 [main] [INFO]  KGenProgMain - entered the era of 567th generation.
2023-06-27 02:41:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 9 minutes 58 seconds
Variants: generated 400, build-succeeded 201, build-failed 119, syntax-invalid 59, redundant 21
Fitness: max 0.833(198), min 0.167(2), ave 0.826
Test execution time: sum 27663 ms, max 232 ms, min 96 ms
----------------------------------------------------------------

2023-06-27 02:41:46 [main] [INFO]  KGenProgMain - entered the era of 568th generation.
2023-06-27 02:44:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 12 minutes 57 seconds
Variants: generated 400, build-succeeded 211, build-failed 114, syntax-invalid 59, redundant 16
Fitness: max 0.833(208), min 0.167(2), ave 0.826
Test execution time: sum 29290 ms, max 261 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 02:44:45 [main] [INFO]  KGenProgMain - entered the era of 569th generation.
2023-06-27 02:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 15 minutes 54 seconds
Variants: generated 400, build-succeeded 211, build-failed 104, syntax-invalid 66, redundant 19
Fitness: max 0.833(208), min 0.667(3), ave 0.831
Test execution time: sum 29251 ms, max 267 ms, min 123 ms
----------------------------------------------------------------

2023-06-27 02:47:41 [main] [INFO]  KGenProgMain - entered the era of 570th generation.
2023-06-27 02:50:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 18 minutes 46 seconds
Variants: generated 400, build-succeeded 199, build-failed 116, syntax-invalid 69, redundant 16
Fitness: max 0.833(197), min 0.167(1), ave 0.829
Test execution time: sum 27458 ms, max 251 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 02:50:34 [main] [INFO]  KGenProgMain - entered the era of 571st generation.
2023-06-27 02:53:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 21 minutes 40 seconds
Variants: generated 400, build-succeeded 202, build-failed 110, syntax-invalid 72, redundant 16
Fitness: max 1(1), min 0.167(5), ave 0.817
Test execution time: sum 27615 ms, max 257 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 02:53:27 [main] [INFO]  KGenProgMain - entered the era of 572nd generation.
2023-06-27 02:56:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 24 minutes 32 seconds
Variants: generated 400, build-succeeded 186, build-failed 122, syntax-invalid 69, redundant 23
Fitness: max 0.833(181), min 0.167(3), ave 0.821
Test execution time: sum 25345 ms, max 269 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 02:56:19 [main] [INFO]  KGenProgMain - entered the era of 573rd generation.
2023-06-27 02:59:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 27 minutes 28 seconds
Variants: generated 400, build-succeeded 202, build-failed 120, syntax-invalid 60, redundant 18
Fitness: max 0.833(195), min 0.167(6), ave 0.813
Test execution time: sum 27932 ms, max 254 ms, min 89 ms
----------------------------------------------------------------

2023-06-27 02:59:16 [main] [INFO]  KGenProgMain - entered the era of 574th generation.
2023-06-27 03:02:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 30 minutes 30 seconds
Variants: generated 400, build-succeeded 211, build-failed 118, syntax-invalid 56, redundant 15
Fitness: max 0.833(198), min 0.167(7), ave 0.806
Test execution time: sum 28954 ms, max 278 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 03:02:18 [main] [INFO]  KGenProgMain - entered the era of 575th generation.
2023-06-27 03:05:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 33 minutes 34 seconds
Variants: generated 400, build-succeeded 225, build-failed 100, syntax-invalid 51, redundant 24
Fitness: max 0.833(217), min 0.167(3), ave 0.821
Test execution time: sum 31051 ms, max 270 ms, min 89 ms
----------------------------------------------------------------

2023-06-27 03:05:22 [main] [INFO]  KGenProgMain - entered the era of 576th generation.
2023-06-27 03:08:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 36 minutes 30 seconds
Variants: generated 400, build-succeeded 198, build-failed 119, syntax-invalid 65, redundant 18
Fitness: max 0.833(193), min 0.167(3), ave 0.822
Test execution time: sum 27177 ms, max 241 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 03:08:18 [main] [INFO]  KGenProgMain - entered the era of 577th generation.
2023-06-27 03:11:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 39 minutes 23 seconds
Variants: generated 400, build-succeeded 190, build-failed 125, syntax-invalid 68, redundant 17
Fitness: max 0.833(182), min 0.167(6), ave 0.811
Test execution time: sum 25885 ms, max 208 ms, min 91 ms
----------------------------------------------------------------

2023-06-27 03:11:10 [main] [INFO]  KGenProgMain - entered the era of 578th generation.
2023-06-27 03:14:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 42 minutes 26 seconds
Variants: generated 400, build-succeeded 208, build-failed 110, syntax-invalid 57, redundant 25
Fitness: max 0.833(204), min 0.167(1), ave 0.828
Test execution time: sum 29060 ms, max 260 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 03:14:14 [main] [INFO]  KGenProgMain - entered the era of 579th generation.
2023-06-27 03:17:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 45 minutes 20 seconds
Variants: generated 400, build-succeeded 197, build-failed 113, syntax-invalid 73, redundant 17
Fitness: max 0.833(191), min 0.167(5), ave 0.815
Test execution time: sum 27330 ms, max 264 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 03:17:08 [main] [INFO]  KGenProgMain - entered the era of 580th generation.
2023-06-27 03:20:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 48 minutes 18 seconds
Variants: generated 400, build-succeeded 197, build-failed 134, syntax-invalid 61, redundant 8
Fitness: max 0.833(191), min 0.167(5), ave 0.816
Test execution time: sum 27281 ms, max 273 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 03:20:06 [main] [INFO]  KGenProgMain - entered the era of 581st generation.
2023-06-27 03:23:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 51 minutes 23 seconds
Variants: generated 400, build-succeeded 222, build-failed 103, syntax-invalid 57, redundant 18
Fitness: max 0.833(215), min 0.167(2), ave 0.824
Test execution time: sum 30836 ms, max 252 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 03:23:11 [main] [INFO]  KGenProgMain - entered the era of 582nd generation.
2023-06-27 03:26:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 54 minutes 24 seconds
Variants: generated 400, build-succeeded 203, build-failed 118, syntax-invalid 58, redundant 21
Fitness: max 0.833(199), min 0.167(2), ave 0.825
Test execution time: sum 28371 ms, max 231 ms, min 111 ms
----------------------------------------------------------------

2023-06-27 03:26:12 [main] [INFO]  KGenProgMain - entered the era of 583rd generation.
2023-06-27 03:29:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 hours 57 minutes 17 seconds
Variants: generated 400, build-succeeded 198, build-failed 114, syntax-invalid 72, redundant 16
Fitness: max 0.833(197), min 0.167(1), ave 0.83
Test execution time: sum 27508 ms, max 232 ms, min 95 ms
----------------------------------------------------------------

2023-06-27 03:29:05 [main] [INFO]  KGenProgMain - entered the era of 584th generation.
2023-06-27 03:31:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 10 seconds
Variants: generated 400, build-succeeded 184, build-failed 127, syntax-invalid 70, redundant 19
Fitness: max 0.833(182), min 0.167(1), ave 0.829
Test execution time: sum 25709 ms, max 228 ms, min 100 ms
----------------------------------------------------------------

2023-06-27 03:31:57 [main] [INFO]  KGenProgMain - entered the era of 585th generation.
2023-06-27 03:35:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 3 minutes 13 seconds
Variants: generated 400, build-succeeded 203, build-failed 101, syntax-invalid 68, redundant 28
Fitness: max 0.833(199), min 0.167(1), ave 0.828
Test execution time: sum 29403 ms, max 286 ms, min 117 ms
----------------------------------------------------------------

2023-06-27 03:35:01 [main] [INFO]  KGenProgMain - entered the era of 586th generation.
2023-06-27 03:38:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 6 minutes 19 seconds
Variants: generated 400, build-succeeded 209, build-failed 102, syntax-invalid 69, redundant 20
Fitness: max 0.833(203), min 0.167(4), ave 0.819
Test execution time: sum 29943 ms, max 258 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 03:38:07 [main] [INFO]  KGenProgMain - entered the era of 587th generation.
2023-06-27 03:41:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 9 minutes 15 seconds
Variants: generated 400, build-succeeded 188, build-failed 116, syntax-invalid 76, redundant 20
Fitness: max 0.833(185), min 0.167(3), ave 0.823
Test execution time: sum 26395 ms, max 273 ms, min 89 ms
----------------------------------------------------------------

2023-06-27 03:41:02 [main] [INFO]  KGenProgMain - entered the era of 588th generation.
2023-06-27 03:44:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 12 minutes 14 seconds
Variants: generated 400, build-succeeded 194, build-failed 110, syntax-invalid 67, redundant 29
Fitness: max 0.833(189), min 0.167(4), ave 0.819
Test execution time: sum 26945 ms, max 226 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 03:44:02 [main] [INFO]  KGenProgMain - entered the era of 589th generation.
2023-06-27 03:47:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 15 minutes 24 seconds
Variants: generated 400, build-succeeded 218, build-failed 114, syntax-invalid 47, redundant 21
Fitness: max 0.833(211), min 0.167(3), ave 0.821
Test execution time: sum 30602 ms, max 265 ms, min 96 ms
----------------------------------------------------------------

2023-06-27 03:47:12 [main] [INFO]  KGenProgMain - entered the era of 590th generation.
2023-06-27 03:50:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 18 minutes 23 seconds
Variants: generated 400, build-succeeded 188, build-failed 124, syntax-invalid 67, redundant 21
Fitness: max 0.833(185), min 0.167(3), ave 0.823
Test execution time: sum 26518 ms, max 264 ms, min 96 ms
----------------------------------------------------------------

2023-06-27 03:50:10 [main] [INFO]  KGenProgMain - entered the era of 591st generation.
2023-06-27 03:53:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 21 minutes 27 seconds
Variants: generated 400, build-succeeded 213, build-failed 111, syntax-invalid 61, redundant 15
Fitness: max 0.833(207), min 0.167(5), ave 0.817
Test execution time: sum 29829 ms, max 263 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 03:53:15 [main] [INFO]  KGenProgMain - entered the era of 592nd generation.
2023-06-27 03:56:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 24 minutes 28 seconds
Variants: generated 400, build-succeeded 196, build-failed 121, syntax-invalid 64, redundant 19
Fitness: max 0.833(194), min 0.667(2), ave 0.832
Test execution time: sum 27534 ms, max 234 ms, min 126 ms
----------------------------------------------------------------

2023-06-27 03:56:15 [main] [INFO]  KGenProgMain - entered the era of 593rd generation.
2023-06-27 03:59:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 27 minutes 37 seconds
Variants: generated 400, build-succeeded 211, build-failed 112, syntax-invalid 56, redundant 21
Fitness: max 0.833(204), min 0.167(1), ave 0.824
Test execution time: sum 30381 ms, max 275 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 03:59:24 [main] [INFO]  KGenProgMain - entered the era of 594th generation.
2023-06-27 04:02:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 30 minutes 38 seconds
Variants: generated 400, build-succeeded 197, build-failed 118, syntax-invalid 65, redundant 20
Fitness: max 0.833(192), min 0.167(1), ave 0.826
Test execution time: sum 27747 ms, max 257 ms, min 95 ms
----------------------------------------------------------------

2023-06-27 04:02:26 [main] [INFO]  KGenProgMain - entered the era of 595th generation.
2023-06-27 04:05:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 33 minutes 36 seconds
Variants: generated 400, build-succeeded 192, build-failed 120, syntax-invalid 73, redundant 15
Fitness: max 0.833(188), min 0.167(4), ave 0.819
Test execution time: sum 26835 ms, max 213 ms, min 95 ms
----------------------------------------------------------------

2023-06-27 04:05:24 [main] [INFO]  KGenProgMain - entered the era of 596th generation.
2023-06-27 04:08:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 36 minutes 39 seconds
Variants: generated 400, build-succeeded 201, build-failed 111, syntax-invalid 63, redundant 25
Fitness: max 0.833(196), min 0.167(4), ave 0.819
Test execution time: sum 28470 ms, max 262 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 04:08:27 [main] [INFO]  KGenProgMain - entered the era of 597th generation.
2023-06-27 04:11:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 39 minutes 43 seconds
Variants: generated 400, build-succeeded 196, build-failed 119, syntax-invalid 63, redundant 22
Fitness: max 0.833(189), min 0.167(3), ave 0.82
Test execution time: sum 27534 ms, max 271 ms, min 95 ms
----------------------------------------------------------------

2023-06-27 04:11:31 [main] [INFO]  KGenProgMain - entered the era of 598th generation.
2023-06-27 04:14:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 42 minutes 46 seconds
Variants: generated 400, build-succeeded 193, build-failed 122, syntax-invalid 62, redundant 23
Fitness: max 0.833(187), min 0.167(4), ave 0.818
Test execution time: sum 27294 ms, max 257 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 04:14:34 [main] [INFO]  KGenProgMain - entered the era of 599th generation.
2023-06-27 04:17:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 45 minutes 52 seconds
Variants: generated 400, build-succeeded 210, build-failed 114, syntax-invalid 65, redundant 11
Fitness: max 0.833(204), min 0.167(3), ave 0.821
Test execution time: sum 29729 ms, max 245 ms, min 96 ms
----------------------------------------------------------------

2023-06-27 04:17:39 [main] [INFO]  KGenProgMain - entered the era of 600th generation.
2023-06-27 04:20:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 49 minutes 4 seconds
Variants: generated 400, build-succeeded 209, build-failed 109, syntax-invalid 61, redundant 21
Fitness: max 0.833(204), min 0.167(3), ave 0.822
Test execution time: sum 30963 ms, max 261 ms, min 96 ms
----------------------------------------------------------------

2023-06-27 04:20:51 [main] [INFO]  KGenProgMain - entered the era of 601st generation.
2023-06-27 04:24:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 52 minutes 12 seconds
Variants: generated 400, build-succeeded 190, build-failed 111, syntax-invalid 78, redundant 21
Fitness: max 0.833(184), min 0.167(2), ave 0.823
Test execution time: sum 28316 ms, max 263 ms, min 95 ms
----------------------------------------------------------------

2023-06-27 04:24:00 [main] [INFO]  KGenProgMain - entered the era of 602nd generation.
2023-06-27 04:27:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 55 minutes 16 seconds
Variants: generated 400, build-succeeded 201, build-failed 108, syntax-invalid 69, redundant 22
Fitness: max 0.833(197), min 0.167(2), ave 0.825
Test execution time: sum 28610 ms, max 242 ms, min 91 ms
----------------------------------------------------------------

2023-06-27 04:27:04 [main] [INFO]  KGenProgMain - entered the era of 603rd generation.
2023-06-27 04:30:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 hours 58 minutes 18 seconds
Variants: generated 400, build-succeeded 184, build-failed 130, syntax-invalid 66, redundant 20
Fitness: max 0.833(180), min 0.167(2), ave 0.824
Test execution time: sum 26208 ms, max 283 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 04:30:06 [main] [INFO]  KGenProgMain - entered the era of 604th generation.
2023-06-27 04:33:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 1 minutes 19 seconds
Variants: generated 400, build-succeeded 188, build-failed 125, syntax-invalid 73, redundant 14
Fitness: max 0.833(185), min 0.167(2), ave 0.825
Test execution time: sum 27000 ms, max 263 ms, min 96 ms
----------------------------------------------------------------

2023-06-27 04:33:06 [main] [INFO]  KGenProgMain - entered the era of 605th generation.
2023-06-27 04:36:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 4 minutes 25 seconds
Variants: generated 400, build-succeeded 203, build-failed 111, syntax-invalid 67, redundant 19
Fitness: max 0.833(200), min 0.167(2), ave 0.826
Test execution time: sum 28917 ms, max 239 ms, min 95 ms
----------------------------------------------------------------

2023-06-27 04:36:12 [main] [INFO]  KGenProgMain - entered the era of 606th generation.
2023-06-27 04:39:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 7 minutes 33 seconds
Variants: generated 400, build-succeeded 204, build-failed 112, syntax-invalid 68, redundant 16
Fitness: max 0.833(197), min 0.167(4), ave 0.818
Test execution time: sum 28883 ms, max 238 ms, min 91 ms
----------------------------------------------------------------

2023-06-27 04:39:20 [main] [INFO]  KGenProgMain - entered the era of 607th generation.
2023-06-27 04:42:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 10 minutes 32 seconds
Variants: generated 400, build-succeeded 175, build-failed 132, syntax-invalid 76, redundant 17
Fitness: max 0.833(166), min 0.167(8), ave 0.802
Test execution time: sum 24724 ms, max 270 ms, min 95 ms
----------------------------------------------------------------

2023-06-27 04:42:20 [main] [INFO]  KGenProgMain - entered the era of 608th generation.
2023-06-27 04:45:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 13 minutes 41 seconds
Variants: generated 400, build-succeeded 210, build-failed 101, syntax-invalid 72, redundant 17
Fitness: max 0.833(207), min 0.167(3), ave 0.824
Test execution time: sum 30619 ms, max 264 ms, min 90 ms
----------------------------------------------------------------

2023-06-27 04:45:28 [main] [INFO]  KGenProgMain - entered the era of 609th generation.
2023-06-27 04:48:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 16 minutes 51 seconds
Variants: generated 400, build-succeeded 210, build-failed 105, syntax-invalid 64, redundant 21
Fitness: max 0.833(205), min 0.167(4), ave 0.82
Test execution time: sum 30494 ms, max 263 ms, min 95 ms
----------------------------------------------------------------

2023-06-27 04:48:38 [main] [INFO]  KGenProgMain - entered the era of 610th generation.
2023-06-27 04:51:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 19 minutes 57 seconds
Variants: generated 400, build-succeeded 196, build-failed 118, syntax-invalid 70, redundant 16
Fitness: max 0.833(193), min 0.167(1), ave 0.828
Test execution time: sum 28402 ms, max 265 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 04:51:45 [main] [INFO]  KGenProgMain - entered the era of 611th generation.
2023-06-27 04:54:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 23 minutes 11 seconds
Variants: generated 400, build-succeeded 204, build-failed 127, syntax-invalid 61, redundant 8
Fitness: max 0.833(198), min 0.167(5), ave 0.816
Test execution time: sum 29259 ms, max 246 ms, min 96 ms
----------------------------------------------------------------

2023-06-27 04:54:58 [main] [INFO]  KGenProgMain - entered the era of 612th generation.
2023-06-27 04:58:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 26 minutes 13 seconds
Variants: generated 400, build-succeeded 190, build-failed 116, syntax-invalid 77, redundant 17
Fitness: max 1(1), min 0.167(3), ave 0.819
Test execution time: sum 27230 ms, max 215 ms, min 95 ms
----------------------------------------------------------------

2023-06-27 04:58:01 [main] [INFO]  KGenProgMain - entered the era of 613th generation.
2023-06-27 05:01:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 29 minutes 21 seconds
Variants: generated 400, build-succeeded 189, build-failed 128, syntax-invalid 61, redundant 22
Fitness: max 0.833(184), min 0(1), ave 0.82
Test execution time: sum 27394 ms, max 216 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 05:01:09 [main] [INFO]  KGenProgMain - entered the era of 614th generation.
2023-06-27 05:19:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 47 minutes 37 seconds
Variants: generated 400, build-succeeded 212, build-failed 114, syntax-invalid 57, redundant 17
Fitness: max 0.833(205), min 0.167(5), ave 0.815
Test execution time: sum 930678 ms, max 900159 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 05:19:25 [main] [INFO]  KGenProgMain - entered the era of 615th generation.
2023-06-27 05:22:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 50 minutes 45 seconds
Variants: generated 400, build-succeeded 189, build-failed 126, syntax-invalid 69, redundant 16
Fitness: max 0.833(180), min 0.167(7), ave 0.806
Test execution time: sum 27130 ms, max 253 ms, min 96 ms
----------------------------------------------------------------

2023-06-27 05:22:33 [main] [INFO]  KGenProgMain - entered the era of 616th generation.
2023-06-27 05:25:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 53 minutes 55 seconds
Variants: generated 400, build-succeeded 195, build-failed 122, syntax-invalid 67, redundant 16
Fitness: max 0.833(188), min 0.167(2), ave 0.821
Test execution time: sum 28259 ms, max 251 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 05:25:43 [main] [INFO]  KGenProgMain - entered the era of 617th generation.
2023-06-27 05:29:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 hours 57 minutes 17 seconds
Variants: generated 400, build-succeeded 213, build-failed 123, syntax-invalid 47, redundant 17
Fitness: max 0.833(206), min 0.167(3), ave 0.821
Test execution time: sum 31170 ms, max 285 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 05:29:04 [main] [INFO]  KGenProgMain - entered the era of 618th generation.
2023-06-27 05:32:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 32 seconds
Variants: generated 400, build-succeeded 207, build-failed 116, syntax-invalid 65, redundant 12
Fitness: max 0.833(204), min 0.167(1), ave 0.829
Test execution time: sum 30453 ms, max 243 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 05:32:20 [main] [INFO]  KGenProgMain - entered the era of 619th generation.
2023-06-27 05:35:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 3 minutes 36 seconds
Variants: generated 400, build-succeeded 178, build-failed 126, syntax-invalid 80, redundant 16
Fitness: max 0.833(171), min 0.167(3), ave 0.818
Test execution time: sum 26136 ms, max 247 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 05:35:24 [main] [INFO]  KGenProgMain - entered the era of 620th generation.
2023-06-27 05:38:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 6 minutes 46 seconds
Variants: generated 400, build-succeeded 192, build-failed 135, syntax-invalid 65, redundant 8
Fitness: max 1(1), min 0.167(4), ave 0.815
Test execution time: sum 27771 ms, max 240 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 05:38:34 [main] [INFO]  KGenProgMain - entered the era of 621st generation.
2023-06-27 05:41:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 9 minutes 48 seconds
Variants: generated 400, build-succeeded 182, build-failed 120, syntax-invalid 85, redundant 13
Fitness: max 1(1), min 0.167(4), ave 0.815
Test execution time: sum 26752 ms, max 277 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 05:41:35 [main] [INFO]  KGenProgMain - entered the era of 622nd generation.
2023-06-27 05:44:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 12 minutes 56 seconds
Variants: generated 400, build-succeeded 188, build-failed 132, syntax-invalid 67, redundant 13
Fitness: max 1(1), min 0.167(5), ave 0.815
Test execution time: sum 27373 ms, max 263 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 05:44:43 [main] [INFO]  KGenProgMain - entered the era of 623rd generation.
2023-06-27 05:47:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 16 minutes 1 seconds
Variants: generated 400, build-succeeded 190, build-failed 117, syntax-invalid 78, redundant 15
Fitness: max 1(2), min 0.167(2), ave 0.825
Test execution time: sum 27521 ms, max 217 ms, min 98 ms
----------------------------------------------------------------

2023-06-27 05:47:48 [main] [INFO]  KGenProgMain - entered the era of 624th generation.
2023-06-27 05:51:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 19 minutes 17 seconds
Variants: generated 400, build-succeeded 195, build-failed 119, syntax-invalid 71, redundant 15
Fitness: max 1(1), min 0.167(2), ave 0.826
Test execution time: sum 29206 ms, max 272 ms, min 91 ms
----------------------------------------------------------------

2023-06-27 05:51:05 [main] [INFO]  KGenProgMain - entered the era of 625th generation.
2023-06-27 05:54:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 22 minutes 27 seconds
Variants: generated 400, build-succeeded 195, build-failed 101, syntax-invalid 78, redundant 26
Fitness: max 1(1), min 0.167(2), ave 0.823
Test execution time: sum 28481 ms, max 264 ms, min 123 ms
----------------------------------------------------------------

2023-06-27 05:54:15 [main] [INFO]  KGenProgMain - entered the era of 626th generation.
2023-06-27 05:57:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 25 minutes 32 seconds
Variants: generated 400, build-succeeded 189, build-failed 108, syntax-invalid 90, redundant 13
Fitness: max 0.833(185), min 0.667(4), ave 0.83
Test execution time: sum 27888 ms, max 244 ms, min 131 ms
----------------------------------------------------------------

2023-06-27 05:57:19 [main] [INFO]  KGenProgMain - entered the era of 627th generation.
2023-06-27 06:15:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 43 minutes 48 seconds
Variants: generated 400, build-succeeded 188, build-failed 121, syntax-invalid 81, redundant 10
Fitness: max 1(2), min 0.167(6), ave 0.813
Test execution time: sum 928686 ms, max 900155 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 06:15:35 [main] [INFO]  KGenProgMain - entered the era of 628th generation.
2023-06-27 06:18:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 47 minutes 0 seconds
Variants: generated 400, build-succeeded 205, build-failed 105, syntax-invalid 79, redundant 11
Fitness: max 1(2), min 0.167(5), ave 0.813
Test execution time: sum 29945 ms, max 241 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 06:18:47 [main] [INFO]  KGenProgMain - entered the era of 629th generation.
2023-06-27 06:21:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 50 minutes 11 seconds
Variants: generated 400, build-succeeded 191, build-failed 116, syntax-invalid 71, redundant 22
Fitness: max 1(1), min 0.167(1), ave 0.828
Test execution time: sum 28295 ms, max 256 ms, min 111 ms
----------------------------------------------------------------

2023-06-27 06:21:59 [main] [INFO]  KGenProgMain - entered the era of 630th generation.
2023-06-27 06:25:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 53 minutes 29 seconds
Variants: generated 400, build-succeeded 191, build-failed 117, syntax-invalid 67, redundant 25
Fitness: max 1(1), min 0.167(5), ave 0.813
Test execution time: sum 28310 ms, max 275 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 06:25:17 [main] [INFO]  KGenProgMain - entered the era of 631st generation.
2023-06-27 06:28:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 hours 56 minutes 38 seconds
Variants: generated 400, build-succeeded 185, build-failed 111, syntax-invalid 79, redundant 25
Fitness: max 1(1), min 0.167(4), ave 0.816
Test execution time: sum 27434 ms, max 255 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 06:28:26 [main] [INFO]  KGenProgMain - entered the era of 632nd generation.
2023-06-27 06:31:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 6 seconds
Variants: generated 400, build-succeeded 206, build-failed 122, syntax-invalid 53, redundant 19
Fitness: max 0.833(196), min 0.167(6), ave 0.811
Test execution time: sum 30989 ms, max 254 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 06:31:53 [main] [INFO]  KGenProgMain - entered the era of 633rd generation.
2023-06-27 06:35:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 3 minutes 23 seconds
Variants: generated 400, build-succeeded 201, build-failed 116, syntax-invalid 63, redundant 20
Fitness: max 0.833(192), min 0.167(3), ave 0.817
Test execution time: sum 29729 ms, max 241 ms, min 92 ms
----------------------------------------------------------------

2023-06-27 06:35:11 [main] [INFO]  KGenProgMain - entered the era of 634th generation.
2023-06-27 06:38:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 6 minutes 43 seconds
Variants: generated 400, build-succeeded 199, build-failed 117, syntax-invalid 56, redundant 28
Fitness: max 0.833(193), min 0.167(3), ave 0.821
Test execution time: sum 29273 ms, max 277 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 06:38:31 [main] [INFO]  KGenProgMain - entered the era of 635th generation.
2023-06-27 06:42:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 10 minutes 15 seconds
Variants: generated 400, build-succeeded 200, build-failed 117, syntax-invalid 64, redundant 19
Fitness: max 0.833(189), min 0(1), ave 0.802
Test execution time: sum 31196 ms, max 251 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 06:42:03 [main] [INFO]  KGenProgMain - entered the era of 636th generation.
2023-06-27 06:45:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 13 minutes 32 seconds
Variants: generated 400, build-succeeded 199, build-failed 107, syntax-invalid 70, redundant 24
Fitness: max 0.833(194), min 0.167(3), ave 0.822
Test execution time: sum 30175 ms, max 316 ms, min 98 ms
----------------------------------------------------------------

2023-06-27 06:45:20 [main] [INFO]  KGenProgMain - entered the era of 637th generation.
2023-06-27 06:48:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 16 minutes 55 seconds
Variants: generated 400, build-succeeded 205, build-failed 110, syntax-invalid 59, redundant 26
Fitness: max 0.833(199), min 0.167(5), ave 0.816
Test execution time: sum 30541 ms, max 268 ms, min 93 ms
----------------------------------------------------------------

2023-06-27 06:48:42 [main] [INFO]  KGenProgMain - entered the era of 638th generation.
2023-06-27 06:51:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 20 minutes 9 seconds
Variants: generated 400, build-succeeded 197, build-failed 117, syntax-invalid 67, redundant 19
Fitness: max 1(1), min 0.167(1), ave 0.826
Test execution time: sum 29353 ms, max 239 ms, min 99 ms
----------------------------------------------------------------

2023-06-27 06:51:57 [main] [INFO]  KGenProgMain - entered the era of 639th generation.
2023-06-27 06:55:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 23 minutes 32 seconds
Variants: generated 400, build-succeeded 199, build-failed 125, syntax-invalid 56, redundant 20
Fitness: max 0.833(194), min 0.167(3), ave 0.822
Test execution time: sum 30102 ms, max 236 ms, min 99 ms
----------------------------------------------------------------

2023-06-27 06:55:20 [main] [INFO]  KGenProgMain - entered the era of 640th generation.
2023-06-27 06:58:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 26 minutes 56 seconds
Variants: generated 400, build-succeeded 204, build-failed 113, syntax-invalid 54, redundant 29
Fitness: max 0.833(201), min 0.167(1), ave 0.828
Test execution time: sum 30799 ms, max 254 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 06:58:44 [main] [INFO]  KGenProgMain - entered the era of 641st generation.
2023-06-27 07:02:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 30 minutes 24 seconds
Variants: generated 400, build-succeeded 222, build-failed 112, syntax-invalid 51, redundant 15
Fitness: max 0.833(219), min 0.167(1), ave 0.829
Test execution time: sum 33089 ms, max 267 ms, min 98 ms
----------------------------------------------------------------

2023-06-27 07:02:11 [main] [INFO]  KGenProgMain - entered the era of 642nd generation.
2023-06-27 07:05:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 33 minutes 48 seconds
Variants: generated 400, build-succeeded 207, build-failed 124, syntax-invalid 53, redundant 16
Fitness: max 0.833(202), min 0.167(3), ave 0.822
Test execution time: sum 30783 ms, max 246 ms, min 94 ms
----------------------------------------------------------------

2023-06-27 07:05:35 [main] [INFO]  KGenProgMain - entered the era of 643rd generation.
2023-06-27 07:09:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 37 minutes 17 seconds
Variants: generated 400, build-succeeded 223, build-failed 109, syntax-invalid 52, redundant 16
Fitness: max 1(1), min 0.167(4), ave 0.818
Test execution time: sum 33430 ms, max 284 ms, min 98 ms
----------------------------------------------------------------

2023-06-27 07:09:05 [main] [INFO]  KGenProgMain - entered the era of 644th generation.
2023-06-27 07:12:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 40 minutes 41 seconds
Variants: generated 400, build-succeeded 206, build-failed 125, syntax-invalid 56, redundant 13
Fitness: max 0.833(198), min 0.167(3), ave 0.82
Test execution time: sum 30753 ms, max 229 ms, min 97 ms
----------------------------------------------------------------

2023-06-27 07:12:29 [main] [INFO]  KGenProgMain - entered the era of 645th generation.
2023-06-27 07:15:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 43 minutes 53 seconds
Variants: generated 400, build-succeeded 173, build-failed 128, syntax-invalid 77, redundant 22
Fitness: max 0.833(169), min 0.167(3), ave 0.821
Test execution time: sum 25943 ms, max 291 ms, min 98 ms
----------------------------------------------------------------

2023-06-27 07:15:41 [main] [INFO]  KGenProgMain - entered the era of 646th generation.
2023-06-27 07:19:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 47 minutes 20 seconds
Variants: generated 400, build-succeeded 210, build-failed 115, syntax-invalid 53, redundant 22
Fitness: max 0.833(202), min 0.167(6), ave 0.813
Test execution time: sum 31182 ms, max 287 ms, min 91 ms
----------------------------------------------------------------

2023-06-27 07:19:07 [main] [INFO]  KGenProgMain - entered the era of 647th generation.
2023-06-27 07:19:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 hours 47 minutes 45 seconds
Variants: generated 43, build-succeeded 18, build-failed 22, syntax-invalid 1, redundant 2
Fitness: max 1(1), min 0.833(17), ave 0.843
Test execution time: sum 2880 ms, max 230 ms, min 134 ms
----------------------------------------------------------------

2023-06-27 07:19:33 [main] [INFO]  KGenProgMain - GA stopped
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v316)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v316)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v316)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v316)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v357)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v357)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v357)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v357)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v437)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v437)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v437)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v437)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double x1;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v842)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v842)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v842)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v842)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v842)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1271)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1271)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1271)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1271)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double x1;
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            setResult(max, 0);
             return result;
         }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1694)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1694)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1694)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1694)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +177,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1776)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1776)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1776)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v1776)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2044)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2044)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2044)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2044)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -101,6 +101,7 @@
 
         clearResult();
         verifySequence(min, initial, max);
+		final double denominator;
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
@@ -112,7 +113,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2124)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2124)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2124)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2124)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2124)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2452)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2452)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2452)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2452)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,8 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2452)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v2452)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4437)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4437)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4437)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4437)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            double x1;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -241,11 +240,7 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
+                oldDelta = delta;
             }
             double dx = x2 - x1;
             double tolerance =
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4438)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,8 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
+        resultComputed = true;
+		this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +140,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4438)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4438)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4438)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4438)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4870)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4870)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4870)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,7 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4870)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4870)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +236,7 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				resultComputed = true;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4921)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4921)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4921)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4921)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4921)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v4921)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            verifyInterval(min, max);
             return result;
         }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v6105)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v6105)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v6105)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v6105)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double x1;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +181,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				setResult(max, 0);
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +239,7 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v6165)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v6165)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v6165)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v6165)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v6165)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +235,7 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v9268)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v9268)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v9268)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,7 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v9268)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v9268)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,9 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +182,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v10004)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v10004)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v10004)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,7 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v10004)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v10004)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +237,7 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v10900)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v10900)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v10900)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v10900)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v10900)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,19 +112,19 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
-        if (yInitial * yMin < 0) {
+        if (Math.abs(yInitial) <= functionValueAccuracy) {
             return solve(f, min, yMin, initial, yInitial, min, yMin);
         }
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            clearResult();
             return result;
         }
 
@@ -238,6 +238,7 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v13202)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,8 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v13202)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v13202)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v13202)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v13202)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                int i = 0;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +236,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            clearResult();
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +235,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v15355)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v15355)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v15355)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v15355)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v15355)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,21 +99,21 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            clearResult();
             return result;
         }
 
@@ -165,7 +165,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,8 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -101,6 +101,7 @@
 
         clearResult();
         verifySequence(min, initial, max);
+		final double denominator;
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
@@ -112,7 +113,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x0 = min;
             return result;
         }
 
@@ -181,7 +181,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +237,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -260,7 +261,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                double ret = Double.NaN;
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v17782)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v17782)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v17782)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v17782)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v17782)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,10 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +120,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +176,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +232,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v18978)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v18978)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v18978)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v18978)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v18978)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,17 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double m;
+			double oldx = Double.POSITIVE_INFINITY;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +183,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +239,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				resultComputed = true;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -260,7 +263,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                double ret = Double.NaN;
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v19625)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,17 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double m;
+			double oldx = Double.POSITIVE_INFINITY;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +127,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            setResult(max, 0);
             return result;
         }
 
@@ -181,7 +184,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +240,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				resultComputed = true;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -260,7 +264,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                double ret = Double.NaN;
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v20062)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v20062)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v20062)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v20062)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:36 [main] [INFO]  PatchLogExporter - patch (v20062)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -101,19 +101,21 @@
 
         clearResult();
         verifySequence(min, initial, max);
+		final double denominator;
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double m;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +183,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +240,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v20482)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v20482)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v20482)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v20482)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v20482)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,20 +99,20 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double x;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +237,7 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -260,7 +260,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                double ret = Double.NaN;
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v21295)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v21295)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v21295)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v21295)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -101,6 +101,7 @@
 
         clearResult();
         verifySequence(min, initial, max);
+		final double denominator;
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
@@ -112,8 +113,9 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            double x1;
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +239,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				resultComputed = true;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -260,7 +264,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                double ret = Double.NaN;
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v24152)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v24152)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v24152)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v24152)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,11 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v24152)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v24152)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,20 +99,20 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            int i = 1;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +237,7 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				setResult(x1, i);
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -260,7 +260,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                double ret = Double.NaN;
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25243)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25243)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25243)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25243)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25243)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25243)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25243)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x2 = max;
             return result;
         }
 
@@ -181,7 +180,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                verifyInterval(min, max);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +237,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -245,7 +246,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                double fm;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double m;
+			int i = 1;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +182,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,7 +238,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y2 = y0;
+                double fa;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v26430)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v26430)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v26430)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -115,7 +115,6 @@
 
     /** {@inheritDoc} */
     public void resetRelativeAccuracy() {
-        relativeAccuracy = defaultRelativeAccuracy;
     }
 
 }
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v26430)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v26430)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,8 +111,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +237,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				setResult(x1, i);
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -260,7 +262,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                double ret = Double.NaN;
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v27341)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v27341)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v27341)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v27341)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -115,7 +115,6 @@
 
     /** {@inheritDoc} */
     public void resetRelativeAccuracy() {
-        relativeAccuracy = defaultRelativeAccuracy;
     }
 
 }
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v27341)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v27341)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,9 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,7 +238,10 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+                setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -260,7 +263,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                double ret = Double.NaN;
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v29334)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v29334)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v29334)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v29334)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v29334)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v29334)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,8 +111,9 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 1;
             return result;
         }
 
@@ -165,7 +165,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -238,6 +237,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v30921)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v30921)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v30921)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v30921)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,22 +99,20 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            int i = 1;
+			double m;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,7 +235,12 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
+				this.resultComputed = false;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v33710)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v33710)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v33710)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v33710)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,8 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v33710)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v33710)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            int i = 1;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            resultComputed = true;
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +183,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				setResult(max, 0);
                 ret = max;
+				double oldx = Double.POSITIVE_INFINITY;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -238,6 +241,7 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -260,7 +264,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                double ret = Double.NaN;
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34159)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -162,7 +161,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34159)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34159)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34159)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34159)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,10 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +239,12 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				this.resultComputed = false;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34594)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34594)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34594)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34594)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34594)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v34594)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,9 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +238,12 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				this.resultComputed = false;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v36128)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -162,7 +161,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v36128)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v36128)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v36128)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v36128)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v36128)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,18 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double m;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			int iterationCount = 0;
             return result;
         }
 
@@ -124,7 +129,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +242,10 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v37237)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v37237)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v37237)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v37237)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v37237)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v37237)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,17 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double m;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +240,10 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v41791)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v41791)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v41791)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v41791)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,18 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			double m;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +128,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +184,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +240,12 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v46965)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v46965)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v46965)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v46965)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v46965)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +181,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -227,6 +226,7 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
+		double fa;
         double oldDelta = delta;
 
         int i = 0;
@@ -238,10 +238,22 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                {
+					delta = (x0 - x1) / (1 - y0 / y1);
+					if (delta / oldDelta > 1) {
+						delta = 0.5 * oldDelta;
+					}
+				}
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
@@ -260,7 +272,8 @@
                 delta = 0.5 * dx;
                 oldDelta = delta;
             } else {
-                double r3 = y1 / y0;
+                double ret = Double.NaN;
+				double r3 = y1 / y0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v48985)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v48985)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v48985)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v48985)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v48985)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            int i = 1;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +182,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                resultComputed = true;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,10 +239,25 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                {
+					delta = (x0 - x1) / (1 - y0 / y1);
+					if (delta / oldDelta > 1) {
+						delta = 0.5 * oldDelta;
+					}
+				}
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v51213)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v51213)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v51213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v51213)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -100,7 +100,8 @@
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
         clearResult();
-        verifySequence(min, initial, max);
+        this.iterationCount = iterationCount;
+		verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
@@ -112,8 +113,11 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            double m;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +128,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +184,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                int i = 0;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,14 +241,26 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                {
+					delta = (x0 - x1) / (1 - y0 / y1);
+					if (delta / oldDelta > 1) {
+						delta = 0.5 * oldDelta;
+					}
+				}
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v58961)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v58961)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v58961)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v58961)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -100,19 +100,24 @@
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
         clearResult();
-        verifySequence(min, initial, max);
+        this.iterationCount = iterationCount;
+		this.iterationCount = iterationCount;
+		verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f == null) {
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +129,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -234,10 +238,17 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				oldDelta = delta;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v60174)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v60174)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v60174)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v60174)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -234,14 +230,30 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				oldDelta = delta;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				setResult(x1, i);
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                {
+					delta = (x0 - x1) / (1 - y0 / y1);
+					if (delta / oldDelta > 1) {
+						delta = 0.5 * oldDelta;
+					}
+				}
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v62034)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v62034)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v62034)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v62034)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v62034)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -100,7 +100,8 @@
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
         clearResult();
-        verifySequence(min, initial, max);
+        this.iterationCount = iterationCount;
+		verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
@@ -112,8 +113,12 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +129,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,12 +181,13 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f.value(min) == 0.0) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
+				setResult(max, 0);
+                ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -234,14 +239,31 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				oldDelta = delta;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                {
+					delta = (x0 - x1) / (1 - y0 / y1);
+					if (delta / oldDelta > 1) {
+						delta = 0.5 * oldDelta;
+					}
+				}
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v63732)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v63732)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v63732)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v63732)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v63732)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -100,19 +100,25 @@
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
         clearResult();
-        verifySequence(min, initial, max);
+        this.iterationCount = iterationCount;
+		this.iterationCount = iterationCount;
+		verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(max) == 0.0) {
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +130,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +186,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                double x0 = min;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -238,6 +243,17 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v64913)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v64913)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v64913)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v64913)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +178,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
+				setResult(max, 0);
+                ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -238,6 +236,16 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v65302)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v65302)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v65302)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v65302)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v65302)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,20 +99,28 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(max) == 0.0) {
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +132,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x2 = max;
             return result;
         }
 
@@ -181,7 +189,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +245,12 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				setResult(x1, i);
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -312,7 +325,7 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
+            x0 = x1;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v65735)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +152,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v65735)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v65735)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v65735)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v65735)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,22 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(max) == 0.0) {
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +133,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +189,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +245,11 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -312,7 +324,7 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
+            x0 = x1;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v66418)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,8 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v66418)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v66418)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v66418)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v66418)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,22 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(max) == 0.0) {
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +133,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +246,15 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				this.resultComputed = false;
+				setResult(x1, i);
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v76133)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v76133)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v76133)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v76133)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,17 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +133,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,11 +185,12 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f.value(min) == 0.0) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				this.f = f;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +247,15 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v77212)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v77212)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v77212)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v77212)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v77212)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,23 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			checkResultComputed();
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +133,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +246,19 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v77350)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v77350)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v77350)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v77350)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v77350)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,22 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			double p1;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +132,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +188,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,15 +244,22 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
-            }
+            if (Math.abs(y1) <= functionValueAccuracy)
+				this.defaultFunctionValueAccuracy = 1.0e-15;
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v82885)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v82885)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v82885)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v82885)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v82885)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			checkResultComputed();
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +237,21 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -312,7 +326,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v84109)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v84109)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v84109)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v84109)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v84109)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,20 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -123,10 +129,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
-        if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
-            return result;
-        }
+        if (Math.abs(yMax) <= functionValueAccuracy)
+			return solve(f, min, max);
 
         // reduce interval if initial and max bracket the root
         if (yInitial * yMax < 0) {
@@ -238,15 +242,25 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
-            }
+            if (Math.abs(y1) <= functionValueAccuracy)
+				this.defaultFunctionValueAccuracy = 1.0e-15;
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
@@ -312,7 +326,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v86962)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v86962)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v86962)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v86962)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v86962)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,21 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(min) == 0.0) {
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +132,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +245,18 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v88834)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v88834)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v88834)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v88834)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v88834)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +235,19 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -312,7 +322,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v89391)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v89391)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v89391)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v89391)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v89391)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,21 +99,27 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
-        verifySequence(min, initial, max);
+        this.iterationCount = iterationCount;
+		verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            clearResult();
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +130,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +186,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +242,19 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v89395)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v89395)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v89395)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v89395)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,22 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(min) == 0.0) {
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +133,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +190,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				this.f = f;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +247,20 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v90184)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v90184)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v90184)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v90184)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,21 +99,30 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
+        this.resultComputed = true;
+		clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            double x;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +133,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +246,19 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				x2 = x0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v91335)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v91335)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v91335)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v91335)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,26 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			clearResult();
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +136,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +249,17 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v91765)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v91765)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v91765)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v91765)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v91765)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,21 +99,29 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
+        this.resultComputed = true;
+		clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            checkResultComputed();
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            double p;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +132,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +245,22 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v106971)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v106971)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v106971)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v106971)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v106971)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,16 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +132,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +188,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +244,25 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v110127)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v110127)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v110127)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:37 [main] [INFO]  PatchLogExporter - patch (v110127)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,25 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +135,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +248,26 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				functionValueAccuracy = defaultFunctionValueAccuracy;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				functionValueAccuracy = defaultFunctionValueAccuracy;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v110817)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v110817)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v110817)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v110817)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v110817)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,21 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			this.iterationCount = 0;
             return result;
         }
 
@@ -124,7 +132,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +189,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                return result;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -238,6 +245,30 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				x2 = x0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v116095)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -139,7 +138,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v116095)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v116095)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v116095)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v116095)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,25 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +135,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +192,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -238,6 +250,25 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				x2 = x0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v118555)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v118555)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v118555)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v118555)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,21 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +137,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +193,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,7 +249,25 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				setResult(x1, i);
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+                setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v122095)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v122095)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v122095)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v122095)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,19 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +135,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +248,25 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v125606)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v125606)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v125606)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v125606)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,28 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +138,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 1;
             return result;
         }
 
@@ -181,7 +195,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +251,21 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v131646)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v131646)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v131646)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v131646)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,35 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(min) == 0.0) {
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +146,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +259,19 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				x2 = x0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v141611)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v141611)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v141611)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v141611)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,21 +99,32 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +135,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +191,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                verifyInterval(min, max);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +248,34 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				this.resultComputed = false;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v141683)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v141683)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v141683)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v141683)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,31 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(min) == 0.0) {
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +142,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,7 +255,28 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v146147)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v146147)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v146147)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v146147)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,22 +99,20 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			verifyBracketing(min, max, f);
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +235,27 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v146183)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v146183)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v146183)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v146183)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,32 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(min) == 0.0) {
+            this.defaultFunctionValueAccuracy = 1.0e-15;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +143,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +256,26 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				functionValueAccuracy = defaultFunctionValueAccuracy;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				functionValueAccuracy = defaultFunctionValueAccuracy;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				functionValueAccuracy = defaultFunctionValueAccuracy;
+				functionValueAccuracy = defaultFunctionValueAccuracy;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -309,7 +347,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v151615)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v151615)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v151615)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v151615)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,31 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			this.functionValueAccuracy = defaultFunctionValueAccuracy;
+			this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double oldx = Double.POSITIVE_INFINITY;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			double fm;
             return result;
         }
 
@@ -124,7 +142,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +198,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +254,26 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				functionValueAccuracy = defaultFunctionValueAccuracy;
+				y2 = y0;
+				functionValueAccuracy = defaultFunctionValueAccuracy;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v168183)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v168183)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v168183)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v168183)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,15 +106,15 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +236,35 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v169690)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v169690)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v169690)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v169690)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,40 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            double x0 = min;
+			this.functionValueAccuracy = defaultFunctionValueAccuracy;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +150,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +207,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				double fmin;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,7 +264,26 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+                functionValueAccuracy = defaultFunctionValueAccuracy;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v177306)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v177306)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v177306)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v177306)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,37 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifyBracketing(min, max, f);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +147,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            verifySequence(min, initial, max);
             return result;
         }
 
@@ -181,7 +204,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +260,36 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				functionValueAccuracy = defaultFunctionValueAccuracy;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v227626)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v227626)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v227626)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v227626)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,48 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.functionValueAccuracy = defaultFunctionValueAccuracy;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            iterationCount += this.iterationCount;
+			resultComputed = true;
+			clearResult();
+			this.functionValueAccuracy = defaultFunctionValueAccuracy;
+			resultComputed = true;
+			this.resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +159,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +201,8 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -238,6 +274,32 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v244012)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v244012)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v244012)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v244012)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,62 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            clearResult();
+			resultComputed = true;
+			resultComputed = true;
+			iterationCount += this.iterationCount;
+			clearResult();
+			double x;
+			verifySequence(min, initial, max);
+			iterationCount += this.iterationCount;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +173,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +215,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -238,6 +287,27 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v247294)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v247294)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v247294)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v247294)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v247294)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,62 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.functionValueAccuracy = defaultFunctionValueAccuracy;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			clearResult();
+			verifySequence(min, initial, max);
+			iterationCount += this.iterationCount;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +173,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double oldx = Double.POSITIVE_INFINITY;
             return result;
         }
 
@@ -238,6 +287,36 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v247707)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v247707)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v247707)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v247707)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v247707)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,59 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            clearResult();
+			this.resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			double x;
+			double x1 = max;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +170,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int iterationCount = 0;
             return result;
         }
 
@@ -238,6 +284,33 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248103)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248103)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248103)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248103)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,52 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            checkResultComputed();
+			resultComputed = true;
+			resultComputed = true;
+			this.resultComputed = true;
+			resultComputed = true;
+			double x;
+			this.resultComputed = true;
+			iterationCount += this.iterationCount;
+			resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +168,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +281,30 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				oldDelta = delta;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248526)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248526)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248526)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248526)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248526)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,63 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			iterationCount += this.iterationCount;
+			resultComputed = true;
+			double x;
+			checkResultComputed();
+			resultComputed = true;
+			checkResultComputed();
+			resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +174,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +216,8 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -238,7 +289,28 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248550)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248550)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248550)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248550)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248550)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,66 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			resultComputed = true;
+			verifyBracketing(min, max, f);
+			iterationCount += this.iterationCount;
+			checkResultComputed();
+			double yMax = f.value(max);
+			resultComputed = true;
+			resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +177,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +219,9 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -238,6 +293,28 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248960)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248960)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248960)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v248960)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,62 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.functionValueAccuracy = defaultFunctionValueAccuracy;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			verifyBracketing(min, max, f);
+			double yMax = f.value(max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +173,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,6 +286,32 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v249253)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v249253)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v249253)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v249253)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,64 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.functionValueAccuracy = defaultFunctionValueAccuracy;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			checkResultComputed();
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +175,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +217,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -238,6 +289,27 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250002)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250002)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250002)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250002)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,59 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			this.resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +175,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +231,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double p1;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -238,6 +288,23 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250073)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250073)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250073)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250073)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,58 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			checkResultComputed();
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +169,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +211,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -238,6 +283,34 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				oldDelta = delta;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250426)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250426)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250426)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250426)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,62 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            double x0 = min;
+			resultComputed = true;
+			double yMax = f.value(max);
+			resultComputed = true;
+			this.resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			resultComputed = true;
+			this.resultComputed = true;
+			resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +173,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,7 +286,29 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250529)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250529)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250529)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250529)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,55 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.functionValueAccuracy = defaultFunctionValueAccuracy;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            double x;
+			resultComputed = true;
+			functionValueAccuracy = defaultFunctionValueAccuracy;
+			resultComputed = true;
+			checkResultComputed();
+			resultComputed = true;
+			resultComputed = true;
+			verifyBracketing(min, max, f);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +166,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +208,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -238,6 +280,31 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250865)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250865)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250865)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v250865)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,55 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			iterationCount += this.iterationCount;
+			resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +166,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +208,9 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -238,6 +282,38 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				clearResult();
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				oldDelta = delta;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v251288)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v251288)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v251288)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v251288)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,52 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			resultComputed = true;
+			int i = 0;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +163,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +205,9 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -238,6 +279,32 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				oldDelta = delta;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v251626)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,6 +140,7 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
+		resultComputed = true;
         this.resultComputed = true;
     }
 
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v251626)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v251626)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v251626)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v251626)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,54 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			iterationCount += this.iterationCount;
+			resultComputed = true;
+			resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +165,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.functionValueAccuracy = defaultFunctionValueAccuracy;
             return result;
         }
 
@@ -182,7 +223,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                return max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -238,7 +279,39 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				oldDelta = delta;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				oldDelta = delta;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v254486)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v254486)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v254486)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v254486)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,54 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			checkResultComputed();
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +170,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +212,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
 
         double ret = Double.NaN;
 
@@ -238,6 +284,25 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v256514)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v256514)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v256514)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v256514)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,59 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.functionValueAccuracy = defaultFunctionValueAccuracy;
+			this.f = f;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			iterationCount += this.iterationCount;
+			resultComputed = true;
+			checkResultComputed();
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +170,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,7 +283,35 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v258043)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v258043)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v258043)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-27 07:19:38 [main] [INFO]  PatchLogExporter - patch (v258043)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,60 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            this.f = f;
+			this.functionValueAccuracy = defaultFunctionValueAccuracy;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(initial) == 0.0) {
+            checkResultComputed();
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			clearResult();
+			double yMax = f.value(max);
+			resultComputed = true;
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +171,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -238,7 +284,39 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				clearResult();
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-06-27 07:19:38 [main] [INFO]  KGenProgMain - Summary
Reached generation = 647
Generated variants = 258043
Syntax valid variants = 225373
Build succeeded variants = 138709
Time elapsed = 30 hours 47 minutes 51 seconds
Exit status = SUCCESS
