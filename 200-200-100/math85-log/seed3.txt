2023-06-26 12:48:04 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-06-26 12:48:04 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-06-26 12:48:04 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-06-26 12:48:04 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 1000 (set in config file)
timeLimit = PT277H46M40S (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 3 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-06-26 12:48:09 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-06-26 12:48:10 [main] [INFO]  KGenProgMain - GA started
2023-06-26 12:48:10 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-06-26 12:48:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 200, build-succeeded 13, build-failed 129, syntax-invalid 13, redundant 45
Fitness: max 1(1), min 0.846(3), ave 0.911
Test execution time: sum 1074 ms, max 121 ms, min 58 ms
----------------------------------------------------------------

2023-06-26 12:48:14 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-06-26 12:51:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 8 seconds
Variants: generated 200, build-succeeded 19, build-failed 127, syntax-invalid 19, redundant 35
Fitness: max 1(1), min 0.615(1), ave 0.887
Test execution time: sum 181298 ms, max 180055 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 12:51:18 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-06-26 13:27:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 17 seconds
Variants: generated 400, build-succeeded 90, build-failed 126, syntax-invalid 25, redundant 159
Fitness: max 0.923(41), min 0.615(7), ave 0.863
Test execution time: sum 2165096 ms, max 360058 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 13:27:27 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-06-26 13:53:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 58 seconds
Variants: generated 400, build-succeeded 82, build-failed 137, syntax-invalid 23, redundant 158
Fitness: max 1(1), min 0.462(1), ave 0.869
Test execution time: sum 1537430 ms, max 360054 ms, min 50 ms
----------------------------------------------------------------

2023-06-26 13:53:08 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-06-26 13:59:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 6 seconds
Variants: generated 400, build-succeeded 67, build-failed 136, syntax-invalid 31, redundant 166
Fitness: max 1(5), min 0.462(1), ave 0.914
Test execution time: sum 363869 ms, max 360062 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 13:59:16 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-06-26 14:08:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 13 seconds
Variants: generated 400, build-succeeded 66, build-failed 139, syntax-invalid 37, redundant 158
Fitness: max 0.923(58), min 0.846(8), ave 0.914
Test execution time: sum 543733 ms, max 360055 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 14:08:23 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-06-26 14:23:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 22 seconds
Variants: generated 400, build-succeeded 94, build-failed 135, syntax-invalid 42, redundant 129
Fitness: max 1(4), min 0.462(1), ave 0.917
Test execution time: sum 905293 ms, max 360071 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 14:23:32 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-06-26 14:32:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 31 seconds
Variants: generated 400, build-succeeded 98, build-failed 136, syntax-invalid 35, redundant 131
Fitness: max 1(1), min 0.846(9), ave 0.917
Test execution time: sum 545742 ms, max 180053 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 14:32:41 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-06-26 14:56:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 42 seconds
Variants: generated 400, build-succeeded 121, build-failed 142, syntax-invalid 41, redundant 96
Fitness: max 1(2), min 0.846(9), ave 0.919
Test execution time: sum 1446777 ms, max 360054 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 14:56:52 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-06-26 15:18:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 53 seconds
Variants: generated 400, build-succeeded 125, build-failed 137, syntax-invalid 58, redundant 80
Fitness: max 1(5), min 0.769(1), ave 0.922
Test execution time: sum 1267160 ms, max 360055 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 15:18:03 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-06-26 15:27:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 4 seconds
Variants: generated 400, build-succeeded 139, build-failed 124, syntax-invalid 44, redundant 93
Fitness: max 0.923(131), min 0.462(2), ave 0.913
Test execution time: sum 548037 ms, max 360054 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 15:27:15 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-06-26 15:42:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 18 seconds
Variants: generated 400, build-succeeded 148, build-failed 137, syntax-invalid 28, redundant 87
Fitness: max 1(6), min 0.462(1), ave 0.919
Test execution time: sum 909662 ms, max 360072 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 15:42:28 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-06-26 15:51:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 30 seconds
Variants: generated 400, build-succeeded 147, build-failed 129, syntax-invalid 46, redundant 78
Fitness: max 1(4), min 0.846(5), ave 0.923
Test execution time: sum 548296 ms, max 360132 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 15:51:41 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-06-26 16:00:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 44 seconds
Variants: generated 400, build-succeeded 166, build-failed 138, syntax-invalid 43, redundant 53
Fitness: max 1(2), min 0.846(3), ave 0.923
Test execution time: sum 549368 ms, max 360195 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 16:00:54 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-06-26 16:28:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 57 seconds
Variants: generated 400, build-succeeded 158, build-failed 128, syntax-invalid 56, redundant 58
Fitness: max 1(1), min 0.462(1), ave 0.917
Test execution time: sum 1629043 ms, max 540054 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 16:28:07 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-06-26 16:28:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 10 seconds
Variants: generated 400, build-succeeded 157, build-failed 128, syntax-invalid 69, redundant 46
Fitness: max 1(5), min 0.462(1), ave 0.922
Test execution time: sum 9035 ms, max 102 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 16:28:20 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-06-26 16:31:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 23 seconds
Variants: generated 400, build-succeeded 146, build-failed 145, syntax-invalid 53, redundant 56
Fitness: max 1(6), min 0.769(1), ave 0.924
Test execution time: sum 188237 ms, max 180054 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 16:31:33 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-06-26 16:46:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 35 seconds
Variants: generated 400, build-succeeded 147, build-failed 139, syntax-invalid 61, redundant 53
Fitness: max 1(2), min 0.846(5), ave 0.922
Test execution time: sum 908519 ms, max 360055 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 16:46:46 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-06-26 16:55:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 49 seconds
Variants: generated 400, build-succeeded 165, build-failed 141, syntax-invalid 53, redundant 41
Fitness: max 1(4), min 0.769(1), ave 0.922
Test execution time: sum 549336 ms, max 360113 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 16:55:59 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-06-26 17:14:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 4 seconds
Variants: generated 400, build-succeeded 176, build-failed 142, syntax-invalid 40, redundant 42
Fitness: max 1(5), min 0.462(1), ave 0.919
Test execution time: sum 1090160 ms, max 360053 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:14:14 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-06-26 17:44:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 56 minutes 17 seconds
Variants: generated 400, build-succeeded 154, build-failed 130, syntax-invalid 65, redundant 51
Fitness: max 1(6), min 0.385(1), ave 0.919
Test execution time: sum 1808963 ms, max 1440053 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 17:44:27 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-06-26 17:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 31 seconds
Variants: generated 400, build-succeeded 160, build-failed 144, syntax-invalid 52, redundant 44
Fitness: max 1(1), min 0.846(2), ave 0.923
Test execution time: sum 189287 ms, max 180054 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:47:41 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-06-26 17:53:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 45 seconds
Variants: generated 400, build-succeeded 165, build-failed 142, syntax-invalid 46, redundant 47
Fitness: max 1(4), min 0.846(2), ave 0.924
Test execution time: sum 369682 ms, max 360053 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 17:53:55 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-06-26 17:57:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 59 seconds
Variants: generated 400, build-succeeded 159, build-failed 145, syntax-invalid 49, redundant 47
Fitness: max 1(1), min 0.846(2), ave 0.923
Test execution time: sum 189649 ms, max 180056 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:57:10 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-06-26 18:03:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 15 minutes 13 seconds
Variants: generated 400, build-succeeded 156, build-failed 137, syntax-invalid 40, redundant 67
Fitness: max 1(1), min 0.846(5), ave 0.921
Test execution time: sum 369016 ms, max 360080 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 18:03:23 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-06-26 18:06:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 28 seconds
Variants: generated 400, build-succeeded 167, build-failed 144, syntax-invalid 46, redundant 43
Fitness: max 1(1), min 0.462(3), ave 0.913
Test execution time: sum 189943 ms, max 180056 ms, min 50 ms
----------------------------------------------------------------

2023-06-26 18:06:38 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-06-26 18:12:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 42 seconds
Variants: generated 400, build-succeeded 159, build-failed 141, syntax-invalid 55, redundant 45
Fitness: max 1(1), min 0.846(2), ave 0.923
Test execution time: sum 369740 ms, max 360055 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 18:12:52 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-06-26 18:26:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 32 seconds
Variants: generated 400, build-succeeded 180, build-failed 137, syntax-invalid 46, redundant 37
Fitness: max 1(2), min 0.846(7), ave 0.921
Test execution time: sum 824443 ms, max 360069 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 18:26:42 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-06-26 18:29:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 47 seconds
Variants: generated 400, build-succeeded 172, build-failed 127, syntax-invalid 54, redundant 47
Fitness: max 1(4), min 0.462(1), ave 0.92
Test execution time: sum 190991 ms, max 180078 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 18:29:57 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-06-26 19:00:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 3 seconds
Variants: generated 400, build-succeeded 174, build-failed 137, syntax-invalid 55, redundant 34
Fitness: max 1(6), min 0.385(1), ave 0.919
Test execution time: sum 1810356 ms, max 1440066 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 19:00:13 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-06-26 19:18:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 18 seconds
Variants: generated 400, build-succeeded 179, build-failed 135, syntax-invalid 45, redundant 41
Fitness: max 1(3), min 0.462(1), ave 0.919
Test execution time: sum 1090866 ms, max 360126 ms, min 50 ms
----------------------------------------------------------------

2023-06-26 19:18:28 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-06-26 19:42:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 54 minutes 34 seconds
Variants: generated 400, build-succeeded 174, build-failed 146, syntax-invalid 28, redundant 52
Fitness: max 1(2), min 0.385(1), ave 0.918
Test execution time: sum 1450541 ms, max 1440051 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 19:42:44 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-06-26 19:53:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 5 minutes 24 seconds
Variants: generated 400, build-succeeded 190, build-failed 131, syntax-invalid 48, redundant 31
Fitness: max 1(1), min 0.846(7), ave 0.921
Test execution time: sum 645008 ms, max 180069 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 19:53:34 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-06-26 20:14:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 40 seconds
Variants: generated 400, build-succeeded 178, build-failed 140, syntax-invalid 39, redundant 43
Fitness: max 1(3), min 0.846(5), ave 0.922
Test execution time: sum 1270641 ms, max 360069 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 20:14:50 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-06-26 20:21:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 32 minutes 55 seconds
Variants: generated 400, build-succeeded 173, build-failed 144, syntax-invalid 48, redundant 35
Fitness: max 0.923(169), min 0.538(1), ave 0.92
Test execution time: sum 370379 ms, max 360054 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 20:21:06 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-06-26 20:30:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 42 minutes 11 seconds
Variants: generated 400, build-succeeded 175, build-failed 137, syntax-invalid 46, redundant 42
Fitness: max 1(5), min 0.846(4), ave 0.924
Test execution time: sum 550679 ms, max 360058 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 20:30:21 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-06-26 20:33:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 45 minutes 27 seconds
Variants: generated 400, build-succeeded 180, build-failed 128, syntax-invalid 54, redundant 38
Fitness: max 1(2), min 0.538(1), ave 0.92
Test execution time: sum 191193 ms, max 180056 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 20:33:37 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-06-26 20:47:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 59 minutes 0 seconds
Variants: generated 400, build-succeeded 176, build-failed 134, syntax-invalid 48, redundant 42
Fitness: max 1(1), min 0.385(1), ave 0.918
Test execution time: sum 808306 ms, max 360055 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 20:47:10 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-06-26 20:47:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 59 minutes 1 seconds
Variants: generated 11, build-succeeded 2, build-failed 8, syntax-invalid 0, redundant 1
Fitness: max 1(1), min 0.923(1), ave 0.962
Test execution time: sum 115 ms, max 58 ms, min 57 ms
----------------------------------------------------------------

2023-06-26 20:47:11 [main] [INFO]  KGenProgMain - GA stopped
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v107)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v107)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v107)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v344)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v344)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v344)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v344)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v982)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v982)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v982)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v982)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v982)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1217)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1217)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1217)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1505)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1505)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1505)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1505)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1505)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1519)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1519)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1519)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1519)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1519)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1539)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1539)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1539)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1539)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1539)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1557)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1557)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1557)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1557)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v1557)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2001)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2001)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2001)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2001)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2001)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2126)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2126)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2126)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2126)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2126)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2186)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2186)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2186)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2186)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2214)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2214)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2214)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2786)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2786)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2786)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2786)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2929)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2929)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2929)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2929)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2929)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v2929)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3052)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3253)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3253)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3253)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3253)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3253)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3253)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3256)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3256)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3256)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3256)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3256)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3256)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3301)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3361)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3361)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3361)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3361)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3361)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3377)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3377)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3377)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3377)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3377)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3377)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v3377)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4014)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4014)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4014)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4014)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4014)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4014)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4014)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4110)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4110)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4110)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4110)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4110)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
@@ -156,8 +155,6 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
             q0 = q1;
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4110)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4117)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4117)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4117)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4117)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -141,7 +141,6 @@
             if (Double.isInfinite(p2) || Double.isInfinite(q2)) {
                 // need to scale
                 if (a != 0.0) {
-                    p2 = p1 + (b / a * p0);
                     q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4117)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4117)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4134)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4134)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4134)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,8 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
+			i++;
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4134)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4168)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4168)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4168)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4168)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4168)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4168)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,8 +156,6 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
             q0 = q1;
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4168)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4438)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4438)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4438)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4438)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4438)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4488)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4513)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4515)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4515)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4515)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4515)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4515)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4515)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4850)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v4971)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5217)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5217)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5217)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5217)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5217)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5621)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5735)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5735)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5735)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5735)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:11 [main] [INFO]  PatchLogExporter - patch (v5735)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -259,7 +258,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5769)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5769)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5769)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5769)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5769)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5769)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5886)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5886)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5886)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5886)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5886)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5925)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5925)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5925)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5925)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5925)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v5925)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6063)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6063)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6063)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6063)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6063)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6063)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6088)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6088)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6088)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6088)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6088)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6088)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6098)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6098)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6098)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6098)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6098)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -141,7 +141,6 @@
             if (Double.isInfinite(p2) || Double.isInfinite(q2)) {
                 // need to scale
                 if (a != 0.0) {
-                    p2 = p1 + (b / a * p0);
                     q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6098)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6162)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6162)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6162)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6162)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6162)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6162)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6188)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6188)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6188)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6188)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6188)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6188)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6188)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6335)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6335)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6335)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6335)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6335)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6335)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6335)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6546)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6546)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6546)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6546)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6546)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6546)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException, 
         FunctionEvaluationException {
         
-        clearResult();
         verifyInterval(min, max);
         
         double ret = Double.NaN;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6600)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6600)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6600)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6600)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6600)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6600)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6889)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6889)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6889)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6889)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6889)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6889)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6889)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6944)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6944)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6944)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6944)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6944)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6944)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6944)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6953)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6953)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6953)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6953)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6953)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v6953)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7087)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7087)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7087)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7087)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7087)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -259,7 +258,9 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7277)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7277)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7277)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7277)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,11 +156,8 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
-            q0 = q1;
             q1 = q2;
         }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7277)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7277)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7285)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7285)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7285)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7285)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7285)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7285)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,9 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7363)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7363)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7363)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7363)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7363)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7363)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7363)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7420)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7420)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7420)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7420)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7420)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7420)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7420)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7490)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7490)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7490)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7490)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7490)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7490)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7602)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7602)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7602)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7602)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7602)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7602)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7652)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -169,7 +168,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7652)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7652)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7652)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7652)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7652)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7664)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7664)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7664)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7664)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -159,7 +159,6 @@
             // prepare for next iteration
             c = p2 / q2;
             p0 = p1;
-            p1 = p2;
             q0 = q1;
             q1 = q2;
         }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7664)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7664)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7685)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7685)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7685)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -195,7 +195,7 @@
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if ((fa * fb > 0.0) && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)) ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7685)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,11 +156,8 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
-            q0 = q1;
             q1 = q2;
         }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7685)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7685)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7742)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7742)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7742)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7742)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7742)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v7742)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,8 +156,6 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
             q0 = q1;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8564)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8564)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8564)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8564)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8564)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8580)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8580)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8580)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8580)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8580)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected ContinuedFraction() {
-        super();
     }
 
     /**
@@ -159,7 +158,6 @@
             // prepare for next iteration
             c = p2 / q2;
             p0 = p1;
-            p1 = p2;
             q0 = q1;
             q1 = q2;
         }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8580)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8982)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8982)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8982)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8982)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8982)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -159,7 +159,6 @@
             // prepare for next iteration
             c = p2 / q2;
             p0 = p1;
-            p1 = p2;
             q0 = q1;
             q1 = q2;
         }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8982)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v8982)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9220)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9220)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9220)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9220)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9220)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9220)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9761)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9761)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9761)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p > .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9761)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9761)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v9761)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10186)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10186)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10186)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10186)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10186)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -159,7 +159,6 @@
             // prepare for next iteration
             c = p2 / q2;
             p0 = p1;
-            p1 = p2;
             q0 = q1;
             q1 = q2;
         }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10186)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10186)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException, 
         FunctionEvaluationException {
         
-        clearResult();
         verifyInterval(min, max);
         
         double ret = Double.NaN;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,11 +156,7 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
-            p1 = p2;
-            q0 = q1;
             q1 = q2;
         }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10462)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -159,7 +159,6 @@
             // prepare for next iteration
             c = p2 / q2;
             p0 = p1;
-            p1 = p2;
             q0 = q1;
             q1 = q2;
         }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10479)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10903)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10903)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10903)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10903)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10903)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10903)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -160,7 +160,6 @@
             c = p2 / q2;
             p0 = p1;
             p1 = p2;
-            q0 = q1;
             q1 = q2;
         }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10933)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10933)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10933)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int iterationCount = 0;
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10933)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10933)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -160,7 +160,6 @@
             c = p2 / q2;
             p0 = p1;
             p1 = p2;
-            q0 = q1;
             q1 = q2;
         }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v10933)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11159)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11159)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11159)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11159)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,9 +156,6 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
-            p0 = p1;
             p1 = p2;
             q0 = q1;
             q1 = q2;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11159)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11159)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException, 
         FunctionEvaluationException {
         
-        clearResult();
         verifyInterval(min, max);
         
         double ret = Double.NaN;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11214)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11214)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11214)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11214)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11214)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,8 +156,6 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
             q0 = q1;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11214)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11214)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11242)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11242)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11242)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11242)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                sum = sum + an;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11242)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11242)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11242)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException, 
         FunctionEvaluationException {
         
-        clearResult();
         verifyInterval(min, max);
         
         double ret = Double.NaN;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11335)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11335)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11335)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11335)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11335)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,11 +156,8 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
-            q0 = q1;
             q1 = q2;
         }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11335)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11370)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11370)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11370)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11370)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11370)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -141,7 +141,6 @@
             if (Double.isInfinite(p2) || Double.isInfinite(q2)) {
                 // need to scale
                 if (a != 0.0) {
-                    p2 = p1 + (b / a * p0);
                     q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11370)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11370)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11378)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11378)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11378)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11378)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11378)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11378)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -160,7 +160,6 @@
             c = p2 / q2;
             p0 = p1;
             p1 = p2;
-            q0 = q1;
             q1 = q2;
         }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11378)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -160,7 +160,6 @@
             c = p2 / q2;
             p0 = p1;
             p1 = p2;
-            q0 = q1;
             q1 = q2;
         }
 
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,8 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11712)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11712)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11712)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11712)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,10 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11712)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11786)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11786)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11786)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11786)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
@@ -156,8 +155,6 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
             q0 = q1;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11786)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v11786)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v12122)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v12122)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v12122)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v12122)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v12122)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v12122)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:12 [main] [INFO]  PatchLogExporter - patch (v12122)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12164)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12164)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12164)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12164)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
@@ -156,8 +155,6 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
             q0 = q1;
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12164)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12164)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12515)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12515)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12515)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12515)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12515)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -158,7 +158,6 @@
                 
             // prepare for next iteration
             c = p2 / q2;
-            p0 = p1;
             p1 = p2;
             q0 = q1;
             q1 = q2;
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12515)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12515)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12887)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12887)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12887)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12887)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12887)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -160,7 +160,6 @@
             c = p2 / q2;
             p0 = p1;
             p1 = p2;
-            q0 = q1;
             q1 = q2;
         }
 
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12887)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12887)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12900)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12900)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12900)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,13 +94,14 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double value = 0;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12900)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12900)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12900)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12900)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12963)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12963)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12963)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12963)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12963)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12963)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12963)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,8 +156,6 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
             q0 = q1;
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12963)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v12963)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13667)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,6 +189,7 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
+			pw.flush();
             printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13667)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13667)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13667)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13667)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13667)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13674)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13674)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13674)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.NEGATIVE_INFINITY;
         }
 
         // find root
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13674)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13674)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13674)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13674)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13718)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13718)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13718)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -158,7 +158,6 @@
                 
             // prepare for next iteration
             c = p2 / q2;
-            p0 = p1;
             p1 = p2;
             q0 = q1;
             q1 = q2;
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13718)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13718)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13718)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -259,7 +259,9 @@
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
                 if (x0 == x2) {
-                    // Linear interpolation.
+                    x0 = x1;
+					x0 = x1;
+					// Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
                 } else {
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -141,8 +141,7 @@
             if (Double.isInfinite(p2) || Double.isInfinite(q2)) {
                 // need to scale
                 if (a != 0.0) {
-                    p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
+                    int max = 0;
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13747)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13747)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13747)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13747)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13747)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,11 +156,8 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
-            q0 = q1;
             q1 = q2;
         }
 
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v13747)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14034)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14034)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14034)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14034)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,9 +156,6 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
-            p0 = p1;
             p1 = p2;
             q0 = q1;
             q1 = q2;
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14034)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14034)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Integer.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14170)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -169,7 +168,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14170)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14170)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14170)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14170)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -158,7 +158,6 @@
                 
             // prepare for next iteration
             c = p2 / q2;
-            p0 = p1;
             p1 = p2;
             q0 = q1;
             q1 = q2;
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14170)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14170)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14422)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14422)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14422)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14422)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -159,7 +159,6 @@
             // prepare for next iteration
             c = p2 / q2;
             p0 = p1;
-            p1 = p2;
             q0 = q1;
             q1 = q2;
         }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14422)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14422)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14422)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,9 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -156,8 +156,6 @@
             double r = p2 / q2;
             relativeError = Math.abs(r / c - 1.0);
                 
-            // prepare for next iteration
-            c = p2 / q2;
             p0 = p1;
             p1 = p2;
             q0 = q1;
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 20:47:13 [main] [INFO]  PatchLogExporter - patch (v14811)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 20:47:15 [main] [INFO]  KGenProgMain - Summary
Reached generation = 39
Generated variants = 14811
Syntax valid variants = 13130
Build succeeded variants = 5397
Time elapsed = 7 hours 59 minutes 5 seconds
Exit status = SUCCESS
