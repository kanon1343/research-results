2023-06-25 16:10:06 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-06-25 16:10:06 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-06-25 16:10:06 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-06-25 16:10:06 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 1000 (set in config file)
timeLimit = PT277H46M40S (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 0 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-06-25 16:10:12 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-06-25 16:10:12 [main] [INFO]  KGenProgMain - GA started
2023-06-25 16:10:12 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-06-25 16:27:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 25 seconds
Variants: generated 200, build-succeeded 14, build-failed 109, syntax-invalid 22, redundant 55
Fitness: max 1(1), min 0.462(1), ave 0.868
Test execution time: sum 1042469 ms, max 360074 ms, min 58 ms
----------------------------------------------------------------

2023-06-25 16:27:37 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-06-25 16:51:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 30 seconds
Variants: generated 200, build-succeeded 24, build-failed 131, syntax-invalid 17, redundant 28
Fitness: max 1(4), min 0.769(1), ave 0.897
Test execution time: sum 1441794 ms, max 360061 ms, min 55 ms
----------------------------------------------------------------

2023-06-25 16:51:42 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-06-25 19:00:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 39 seconds
Variants: generated 400, build-succeeded 105, build-failed 137, syntax-invalid 35, redundant 123
Fitness: max 0.923(30), min 0.462(2), ave 0.846
Test execution time: sum 7745796 ms, max 360058 ms, min 50 ms
----------------------------------------------------------------

2023-06-25 19:00:52 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-06-25 20:42:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 32 minutes 17 seconds
Variants: generated 400, build-succeeded 109, build-failed 137, syntax-invalid 23, redundant 131
Fitness: max 1(2), min 0.462(2), ave 0.859
Test execution time: sum 6094071 ms, max 360078 ms, min 50 ms
----------------------------------------------------------------

2023-06-25 20:42:30 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-06-25 20:54:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 44 minutes 26 seconds
Variants: generated 400, build-succeeded 80, build-failed 131, syntax-invalid 27, redundant 162
Fitness: max 1(1), min 0.462(3), ave 0.882
Test execution time: sum 724578 ms, max 360053 ms, min 48 ms
----------------------------------------------------------------

2023-06-25 20:54:38 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-06-25 21:00:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 34 seconds
Variants: generated 400, build-succeeded 90, build-failed 126, syntax-invalid 39, redundant 145
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 365083 ms, max 360052 ms, min 51 ms
----------------------------------------------------------------

2023-06-25 21:00:46 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-06-25 21:06:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 56 minutes 42 seconds
Variants: generated 400, build-succeeded 86, build-failed 129, syntax-invalid 38, redundant 147
Fitness: max 1(1), min 0.846(4), ave 0.92
Test execution time: sum 364886 ms, max 180088 ms, min 50 ms
----------------------------------------------------------------

2023-06-25 21:06:54 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-06-25 21:19:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 52 seconds
Variants: generated 400, build-succeeded 110, build-failed 132, syntax-invalid 42, redundant 116
Fitness: max 1(2), min 0.462(1), ave 0.916
Test execution time: sum 726311 ms, max 360051 ms, min 52 ms
----------------------------------------------------------------

2023-06-25 21:19:04 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-06-25 21:34:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 3 seconds
Variants: generated 400, build-succeeded 119, build-failed 140, syntax-invalid 28, redundant 113
Fitness: max 1(5), min 0.846(6), ave 0.922
Test execution time: sum 906754 ms, max 360059 ms, min 51 ms
----------------------------------------------------------------

2023-06-25 21:34:15 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-06-25 21:46:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 14 seconds
Variants: generated 400, build-succeeded 135, build-failed 140, syntax-invalid 39, redundant 86
Fitness: max 1(2), min 0.462(1), ave 0.918
Test execution time: sum 727715 ms, max 360053 ms, min 51 ms
----------------------------------------------------------------

2023-06-25 21:46:26 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-06-25 21:52:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 25 seconds
Variants: generated 400, build-succeeded 120, build-failed 134, syntax-invalid 43, redundant 103
Fitness: max 1(4), min 0.462(1), ave 0.915
Test execution time: sum 366819 ms, max 180061 ms, min 51 ms
----------------------------------------------------------------

2023-06-25 21:52:37 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-06-25 21:58:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 36 seconds
Variants: generated 400, build-succeeded 128, build-failed 136, syntax-invalid 35, redundant 101
Fitness: max 0.923(121), min 0.462(1), ave 0.916
Test execution time: sum 367289 ms, max 360096 ms, min 51 ms
----------------------------------------------------------------

2023-06-25 21:58:48 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-06-25 22:02:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 minutes 48 seconds
Variants: generated 400, build-succeeded 141, build-failed 134, syntax-invalid 40, redundant 85
Fitness: max 1(2), min 0.846(5), ave 0.921
Test execution time: sum 188160 ms, max 180053 ms, min 51 ms
----------------------------------------------------------------

2023-06-25 22:02:00 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-06-25 22:17:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 7 minutes 0 seconds
Variants: generated 400, build-succeeded 144, build-failed 136, syntax-invalid 33, redundant 87
Fitness: max 1(2), min 0.385(1), ave 0.913
Test execution time: sum 908168 ms, max 360055 ms, min 49 ms
----------------------------------------------------------------

2023-06-25 22:17:13 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-06-25 22:26:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 12 seconds
Variants: generated 400, build-succeeded 142, build-failed 130, syntax-invalid 63, redundant 65
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 547925 ms, max 360053 ms, min 52 ms
----------------------------------------------------------------

2023-06-25 22:26:24 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-06-25 22:32:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 22 minutes 26 seconds
Variants: generated 400, build-succeeded 170, build-failed 122, syntax-invalid 42, redundant 66
Fitness: max 1(5), min 0.846(5), ave 0.923
Test execution time: sum 369554 ms, max 180056 ms, min 52 ms
----------------------------------------------------------------

2023-06-25 22:32:38 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-06-25 22:35:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 39 seconds
Variants: generated 400, build-succeeded 161, build-failed 130, syntax-invalid 41, redundant 68
Fitness: max 1(3), min 0.462(1), ave 0.919
Test execution time: sum 189147 ms, max 180054 ms, min 49 ms
----------------------------------------------------------------

2023-06-25 22:35:51 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-06-25 22:48:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 52 seconds
Variants: generated 400, build-succeeded 153, build-failed 133, syntax-invalid 45, redundant 69
Fitness: max 1(2), min 0.846(3), ave 0.923
Test execution time: sum 728933 ms, max 360082 ms, min 53 ms
----------------------------------------------------------------

2023-06-25 22:48:04 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-06-25 22:51:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 5 seconds
Variants: generated 400, build-succeeded 150, build-failed 145, syntax-invalid 42, redundant 63
Fitness: max 1(4), min 0.846(4), ave 0.923
Test execution time: sum 188557 ms, max 180052 ms, min 52 ms
----------------------------------------------------------------

2023-06-25 22:51:17 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-06-25 22:51:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 18 seconds
Variants: generated 400, build-succeeded 157, build-failed 146, syntax-invalid 46, redundant 51
Fitness: max 1(2), min 0.846(1), ave 0.924
Test execution time: sum 9114 ms, max 170 ms, min 53 ms
----------------------------------------------------------------

2023-06-25 22:51:30 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-06-25 22:51:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 31 seconds
Variants: generated 400, build-succeeded 156, build-failed 142, syntax-invalid 51, redundant 51
Fitness: max 1(2), min 0.846(1), ave 0.924
Test execution time: sum 8861 ms, max 97 ms, min 51 ms
----------------------------------------------------------------

2023-06-25 22:51:43 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-06-25 23:00:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 44 seconds
Variants: generated 400, build-succeeded 167, build-failed 133, syntax-invalid 41, redundant 59
Fitness: max 1(4), min 0.846(4), ave 0.923
Test execution time: sum 549345 ms, max 360056 ms, min 53 ms
----------------------------------------------------------------

2023-06-25 23:00:56 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-06-25 23:11:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 minutes 15 seconds
Variants: generated 400, build-succeeded 171, build-failed 134, syntax-invalid 46, redundant 49
Fitness: max 1(1), min 0.846(5), ave 0.921
Test execution time: sum 627060 ms, max 180053 ms, min 53 ms
----------------------------------------------------------------

2023-06-25 23:11:27 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-06-25 23:35:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 25 minutes 29 seconds
Variants: generated 400, build-succeeded 174, build-failed 134, syntax-invalid 44, redundant 48
Fitness: max 1(1), min 0.385(1), ave 0.917
Test execution time: sum 1449913 ms, max 1440069 ms, min 53 ms
----------------------------------------------------------------

2023-06-25 23:35:41 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-06-25 23:37:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 27 minutes 17 seconds
Variants: generated 400, build-succeeded 163, build-failed 126, syntax-invalid 53, redundant 58
Fitness: max 1(4), min 0.462(1), ave 0.921
Test execution time: sum 103897 ms, max 94552 ms, min 53 ms
----------------------------------------------------------------

2023-06-25 23:37:29 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-06-25 23:43:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 33 minutes 31 seconds
Variants: generated 400, build-succeeded 164, build-failed 122, syntax-invalid 55, redundant 59
Fitness: max 1(4), min 0.846(4), ave 0.923
Test execution time: sum 369488 ms, max 180053 ms, min 52 ms
----------------------------------------------------------------

2023-06-25 23:43:43 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-06-25 23:46:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 36 minutes 44 seconds
Variants: generated 400, build-succeeded 154, build-failed 152, syntax-invalid 48, redundant 46
Fitness: max 1(1), min 0.462(1), ave 0.92
Test execution time: sum 189245 ms, max 180053 ms, min 52 ms
----------------------------------------------------------------

2023-06-25 23:46:57 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-06-25 23:53:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 42 minutes 58 seconds
Variants: generated 400, build-succeeded 163, build-failed 132, syntax-invalid 47, redundant 58
Fitness: max 1(1), min 0.462(1), ave 0.919
Test execution time: sum 369327 ms, max 360054 ms, min 50 ms
----------------------------------------------------------------

2023-06-25 23:53:10 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-06-26 00:23:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 13 minutes 13 seconds
Variants: generated 400, build-succeeded 177, build-failed 144, syntax-invalid 43, redundant 36
Fitness: max 1(4), min 0.385(1), ave 0.92
Test execution time: sum 1810191 ms, max 1440050 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 00:23:25 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-06-26 00:31:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 21 minutes 2 seconds
Variants: generated 400, build-succeeded 180, build-failed 131, syntax-invalid 53, redundant 36
Fitness: max 1(5), min 0.846(2), ave 0.924
Test execution time: sum 465043 ms, max 360054 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 00:31:14 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-06-26 00:40:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 30 minutes 17 seconds
Variants: generated 400, build-succeeded 176, build-failed 132, syntax-invalid 51, redundant 41
Fitness: max 1(6), min 0.615(1), ave 0.922
Test execution time: sum 550477 ms, max 360063 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 00:40:29 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-06-26 00:40:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 30 minutes 31 seconds
Variants: generated 400, build-succeeded 173, build-failed 145, syntax-invalid 47, redundant 35
Fitness: max 1(2), min 0.462(2), ave 0.918
Test execution time: sum 10006 ms, max 105 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 00:40:43 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-06-26 00:40:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 30 minutes 45 seconds
Variants: generated 400, build-succeeded 169, build-failed 137, syntax-invalid 55, redundant 39
Fitness: max 1(4), min 0.846(2), ave 0.924
Test execution time: sum 9798 ms, max 115 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 00:40:58 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-06-26 01:05:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 0 seconds
Variants: generated 400, build-succeeded 173, build-failed 132, syntax-invalid 46, redundant 49
Fitness: max 1(4), min 0.385(1), ave 0.92
Test execution time: sum 1450130 ms, max 1440064 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 01:05:12 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-06-26 01:11:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 1 minutes 14 seconds
Variants: generated 400, build-succeeded 171, build-failed 135, syntax-invalid 54, redundant 40
Fitness: max 1(4), min 0.385(1), ave 0.92
Test execution time: sum 370281 ms, max 360054 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 01:11:27 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-06-26 01:14:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 30 seconds
Variants: generated 400, build-succeeded 176, build-failed 133, syntax-invalid 58, redundant 33
Fitness: max 1(4), min 0.846(5), ave 0.923
Test execution time: sum 190844 ms, max 180055 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 01:14:42 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-06-26 01:14:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 31 seconds
Variants: generated 31, build-succeeded 4, build-failed 20, syntax-invalid 3, redundant 4
Fitness: max 1(2), min 0.846(1), ave 0.942
Test execution time: sum 225 ms, max 58 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 01:14:43 [main] [INFO]  KGenProgMain - GA stopped
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v202)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v202)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v202)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v202)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v236)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v236)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v236)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v236)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v286)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v286)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v286)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v286)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v395)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v395)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v395)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v395)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v876)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v882)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v882)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v882)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v882)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v882)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1275)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1275)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1275)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1275)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        double[] bracket = null;
+		return ret;
     }
 
     /**
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1630)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1634)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1634)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1634)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1634)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1634)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1634)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.POSITIVE_INFINITY;
             } else {
                 throw ex;
             }
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2187)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2187)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2187)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2187)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2187)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2507)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2507)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2507)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2507)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2507)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2507)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2592)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2592)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2592)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double fmin;
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2592)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                ret = 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2592)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2897)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2897)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2897)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2897)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2897)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2929)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -118,6 +118,7 @@
     public MathException(Throwable rootCause) {
         super(rootCause);
         this.pattern   = getMessage();
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.arguments = new Object[0];
     }
     
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2929)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2929)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2929)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2930)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2930)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2930)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2930)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2930)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2930)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2933)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2933)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2933)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2933)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2933)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2945)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -118,6 +117,7 @@
     public MathException(Throwable rootCause) {
         super(rootCause);
         this.pattern   = getMessage();
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.arguments = new Object[0];
     }
     
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2945)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2945)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2945)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v2945)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3235)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3235)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3235)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3235)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3364)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -118,6 +118,7 @@
     public MathException(Throwable rootCause) {
         super(rootCause);
         this.pattern   = getMessage();
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.arguments = new Object[0];
     }
     
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3364)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3364)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3364)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3364)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3364)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3639)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -118,6 +118,7 @@
     public MathException(Throwable rootCause) {
         super(rootCause);
         this.pattern   = getMessage();
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.arguments = new Object[0];
     }
     
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3639)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3639)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3639)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3639)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3639)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,10 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
-        return ret;
+        double[] bracket = null;
+		return ret;
     }
 
     /**
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3649)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -118,6 +118,7 @@
     public MathException(Throwable rootCause) {
         super(rootCause);
         this.pattern   = getMessage();
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.arguments = new Object[0];
     }
     
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3649)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3649)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3649)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3649)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3683)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -118,6 +118,7 @@
     public MathException(Throwable rootCause) {
         super(rootCause);
         this.pattern   = getMessage();
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.arguments = new Object[0];
     }
     
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3683)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3683)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3683)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3683)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.POSITIVE_INFINITY;
             } else {
                 throw ex;
             }
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3751)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3751)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3751)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3751)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v3751)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.POSITIVE_INFINITY;
             } else {
                 throw ex;
             }
@@ -181,7 +181,8 @@
             ret = getMean();
         }
         
-        return ret;
+        double[] bracket = null;
+		return ret;
     }
 
     /**
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4419)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,8 +116,9 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.arguments = new Object[0];
     }
     
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4419)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4419)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,8 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+        this.maximalIterationCount = defaultMaximalIterationCount;
+		this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4419)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4419)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4422)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4422)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4422)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4422)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4422)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4422)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.POSITIVE_INFINITY;
             } else {
                 throw ex;
             }
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4893)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4893)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4893)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,8 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4893)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4893)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4985)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4985)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4985)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v4985)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v5248)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v5248)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v5248)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v5248)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v5248)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:43 [main] [INFO]  PatchLogExporter - patch (v5248)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5311)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5311)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5311)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5311)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5647)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5647)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5647)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5647)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5647)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5647)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5647)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5653)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5653)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5653)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5653)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5653)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5653)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5653)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5663)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5663)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5663)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5663)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5663)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5663)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5705)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5705)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5705)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5705)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                ret = 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5705)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5705)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,8 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6057)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6057)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6057)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6057)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6057)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6153)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -169,7 +168,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6153)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6153)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6153)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6153)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6163)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6163)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,13 +94,14 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6163)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6163)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6413)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6413)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6413)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6413)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6413)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6578)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6578)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6578)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6578)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6578)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6578)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6806)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6806)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6806)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6806)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6806)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6806)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6876)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6876)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6876)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6876)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6876)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6876)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6950)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6950)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6950)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6950)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6950)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6959)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
+		this.arguments = new Object[0];
     }
     
     /**
@@ -169,7 +170,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6959)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6959)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6959)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v6959)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.POSITIVE_INFINITY;
             } else {
                 throw ex;
             }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7253)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7253)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7253)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7253)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7253)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7253)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7400)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7400)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7400)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7400)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7400)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7400)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7729)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7729)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7729)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7729)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (x > 0 && x <= S_LIMIT) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7729)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7780)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7780)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -195,7 +195,7 @@
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if ((fa * fb > 0.0) && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)) ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7780)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7780)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v7780)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8088)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8088)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8088)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8088)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8088)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8088)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8148)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8148)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,7 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
-        if (x < 0) {
+        if (Double.isNaN(x) || (x <= 0.0)) {
             ret = -ret;
         }
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8148)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8148)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8148)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8148)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8157)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8157)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8157)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8157)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,10 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {
+					double inv = 1 / (x * x);
+					return Math.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));
+				}
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8157)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8157)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8176)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8176)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8176)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8176)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8176)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8576)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8576)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8576)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8576)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8576)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8576)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8576)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8911)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -118,6 +118,7 @@
     public MathException(Throwable rootCause) {
         super(rootCause);
         this.pattern   = getMessage();
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.arguments = new Object[0];
     }
     
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8911)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,7 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
-        if (x < 0) {
+        if (Double.isNaN(x) || (x <= 0.0)) {
             ret = -ret;
         }
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8911)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8911)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8911)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v8911)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9225)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9225)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9225)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9225)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9225)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9267)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9267)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9267)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9267)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9267)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9267)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9299)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9299)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9299)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9299)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                ret = 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9299)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9299)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9348)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
+		this.arguments = new Object[0];
     }
     
     /**
@@ -118,6 +119,7 @@
     public MathException(Throwable rootCause) {
         super(rootCause);
         this.pattern   = getMessage();
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.arguments = new Object[0];
     }
     
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9348)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9348)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9348)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -195,7 +195,7 @@
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (function == null ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9348)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9348)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9651)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9651)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9651)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9651)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9651)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
@@ -220,10 +220,11 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			return ret;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9700)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9700)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9700)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9700)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,8 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9700)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9700)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9721)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9721)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9721)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9721)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9721)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9777)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9777)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9777)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9777)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9777)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9777)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v9777)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10097)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10097)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,7 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
-        if (x < 0) {
+        if (Double.isNaN(x) || (x <= 0.0)) {
             ret = -ret;
         }
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10097)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10097)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10097)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10097)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10429)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10429)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10429)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,8 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10429)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10429)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10822)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10822)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10822)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10822)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,10 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {
+					double inv = 1 / (x * x);
+					return Math.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));
+				}
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10822)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10863)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
+		this.arguments = new Object[0];
     }
     
     /**
@@ -163,7 +164,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10863)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10863)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10863)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10863)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10863)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10923)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10923)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10923)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10923)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10923)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10923)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
@@ -224,6 +224,7 @@
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			return ret;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10926)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10926)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10926)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10926)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v10926)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.POSITIVE_INFINITY;
             } else {
                 throw ex;
             }
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11338)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11338)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11338)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11338)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11338)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11338)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11353)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11353)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11353)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11353)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11353)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11353)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11380)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11380)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11380)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11380)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11380)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11380)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11396)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11396)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11396)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11396)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11396)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11396)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.POSITIVE_INFINITY;
             } else {
                 throw ex;
             }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11397)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11397)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11397)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,11 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if ((fa * fb > 0.0) && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)) ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11397)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,8 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11397)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11629)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
@@ -116,7 +117,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11629)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,7 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
-        if (x < 0) {
+        if (Double.isNaN(x) || (x <= 0.0)) {
             ret = -ret;
         }
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11629)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11629)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11629)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11663)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11663)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,7 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
-        if (x < 0) {
+        if (Double.isNaN(x) || (x <= 0.0)) {
             ret = -ret;
         }
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11663)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11663)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11663)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11663)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -224,6 +224,7 @@
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			return ret;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11686)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11686)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11686)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11686)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11686)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11686)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11718)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -169,7 +168,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11718)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11718)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11718)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11718)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11726)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11726)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11726)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11726)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11726)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11726)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11726)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return p;
         }
         
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11731)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
+		this.arguments = new Object[0];
     }
     
     /**
@@ -169,7 +170,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11731)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11731)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11731)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11731)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,10 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {
+					double inv = 1 / (x * x);
+					return Math.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));
+				}
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11731)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v11731)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12142)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12142)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12142)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12142)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12142)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12142)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12142)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12171)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12171)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12171)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12171)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,10 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {
+					double inv = 1 / (x * x);
+					return Math.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));
+				}
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12171)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12171)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,7 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
-        if (x < 0) {
+        if (Double.isNaN(x) || (x <= 0.0)) {
             ret = -ret;
         }
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12443)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12443)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12443)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12443)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            fa = function.value(a);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12443)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12443)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12443)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12485)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,13 +163,13 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12485)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,7 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
-        if (x < 0) {
+        if (Double.isNaN(x) || (x <= 0.0)) {
             ret = -ret;
         }
         return ret;
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12485)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12485)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12485)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:44 [main] [INFO]  PatchLogExporter - patch (v12485)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12536)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12536)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12536)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12536)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12536)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12536)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,9 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < .5) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12825)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12825)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,7 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
-        if (x < 0) {
+        if (Double.isNaN(x) || (x <= 0.0)) {
             ret = -ret;
         }
         return ret;
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12825)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12825)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12825)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12825)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12875)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12875)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,7 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
-        if (x < 0) {
+        if (Double.isNaN(x) || (x <= 0.0)) {
             ret = -ret;
         }
         return ret;
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12875)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12875)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12875)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12875)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12875)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12942)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12942)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12942)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12942)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v12942)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,10 +126,10 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.POSITIVE_INFINITY;
             } else {
                 throw ex;
             }
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = getMean() - getStandardDeviation();
         }
         
         return ret;
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13209)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13209)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -49,7 +49,7 @@
      */
     public static double erf(double x) throws MathException {
         double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
-        if (x < 0) {
+        if (Double.isNaN(x) || (x <= 0.0)) {
             ret = -ret;
         }
         return ret;
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13209)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13209)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13209)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13209)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -224,6 +224,7 @@
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			return ret;
         }
         
         return ret;
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13296)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,13 +163,13 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13296)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13296)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13296)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13296)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13296)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,10 +220,11 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			double[] bracket = null;
         }
         
         return ret;
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13375)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -106,6 +105,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13375)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13375)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13375)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13375)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13388)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13388)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13388)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13388)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13388)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13388)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13611)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13611)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13611)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13611)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13611)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13611)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13611)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13612)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13612)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13612)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13612)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13612)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13612)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.POSITIVE_INFINITY;
             } else {
                 throw ex;
             }
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13723)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13723)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13723)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,10 +97,11 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13723)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13723)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13723)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13768)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13768)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13768)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13768)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13768)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v13768)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,10 +220,11 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			return ret;
         }
         
         return ret;
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
@@ -116,7 +117,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        double x0, x1, x2, x, oldx, y0, y1, y2, y;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,6 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
+			ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
@@ -178,7 +179,10 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                {
+					double inv = 1 / (x * x);
+					return Math.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));
+				}
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14014)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14031)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -82,7 +82,8 @@
      * @return a message string
      */
     private static String buildMessage(Locale locale, String pattern, Object ... arguments) {
-        return (pattern == null) ? "" : new MessageFormat(translate(pattern, locale), locale).format(arguments);        
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
+		return (pattern == null) ? "" : new MessageFormat(translate(pattern, locale), locale).format(arguments);        
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14031)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14031)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14031)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14031)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14031)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 01:14:45 [main] [INFO]  PatchLogExporter - patch (v14031)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -224,6 +224,7 @@
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
+			return ret;
         }
         
         return ret;
2023-06-26 01:14:47 [main] [INFO]  KGenProgMain - Summary
Reached generation = 37
Generated variants = 14031
Syntax valid variants = 12496
Build succeeded variants = 5049
Time elapsed = 9 hours 4 minutes 34 seconds
Exit status = SUCCESS
