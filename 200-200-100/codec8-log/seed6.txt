2023-11-18 18:45:30 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-11-18 18:45:30 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-11-18 18:45:30 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-11-18 18:45:30 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 6 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-11-18 18:45:33 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-11-18 18:45:33 [main] [INFO]  KGenProgMain - GA started
2023-11-18 18:45:33 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-11-18 19:09:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 7 seconds
Variants: generated 200, build-succeeded 33, build-failed 101, syntax-invalid 12, redundant 54
Fitness: max 1(1), min 0.333(2), ave 0.795
Test execution time: sum 1443716 ms, max 1440032 ms, min 25 ms
----------------------------------------------------------------

2023-11-18 19:09:41 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-11-18 19:33:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 13 seconds
Variants: generated 200, build-succeeded 52, build-failed 100, syntax-invalid 19, redundant 29
Fitness: max 0.917(16), min 0.333(2), ave 0.787
Test execution time: sum 1442290 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-18 19:33:47 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-11-18 20:40:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 30 seconds
Variants: generated 400, build-succeeded 145, build-failed 113, syntax-invalid 31, redundant 111
Fitness: max 0.917(22), min 0.333(9), ave 0.747
Test execution time: sum 3969038 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-18 20:40:03 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-11-18 21:19:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 41 seconds
Variants: generated 400, build-succeeded 129, build-failed 112, syntax-invalid 25, redundant 134
Fitness: max 1(2), min 0.333(1), ave 0.801
Test execution time: sum 2344727 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-18 21:19:15 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-11-18 21:45:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 57 seconds
Variants: generated 400, build-succeeded 140, build-failed 107, syntax-invalid 25, redundant 128
Fitness: max 1(2), min 0.333(1), ave 0.849
Test execution time: sum 1568727 ms, max 1440021 ms, min 20 ms
----------------------------------------------------------------

2023-11-18 21:45:31 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-11-18 21:45:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 seconds
Variants: generated 400, build-succeeded 109, build-failed 107, syntax-invalid 40, redundant 144
Fitness: max 1(1), min 0.75(5), ave 0.908
Test execution time: sum 8602 ms, max 138 ms, min 21 ms
----------------------------------------------------------------

2023-11-18 21:45:46 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-11-18 22:34:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 28 seconds
Variants: generated 400, build-succeeded 111, build-failed 136, syntax-invalid 45, redundant 108
Fitness: max 1(1), min 0.333(3), ave 0.894
Test execution time: sum 2888887 ms, max 1440024 ms, min 20 ms
----------------------------------------------------------------

2023-11-18 22:34:02 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-11-18 23:22:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 minutes 44 seconds
Variants: generated 400, build-succeeded 114, build-failed 125, syntax-invalid 38, redundant 123
Fitness: max 1(2), min 0(2), ave 0.875
Test execution time: sum 2888467 ms, max 1440021 ms, min 20 ms
----------------------------------------------------------------

2023-11-18 23:22:18 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-11-18 23:37:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 0 seconds
Variants: generated 400, build-succeeded 113, build-failed 136, syntax-invalid 55, redundant 96
Fitness: max 0.917(102), min 0.5(2), ave 0.895
Test execution time: sum 908704 ms, max 900022 ms, min 18 ms
----------------------------------------------------------------

2023-11-18 23:37:34 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-11-19 00:01:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 17 seconds
Variants: generated 400, build-succeeded 110, build-failed 128, syntax-invalid 53, redundant 109
Fitness: max 1(1), min 0.333(2), ave 0.895
Test execution time: sum 1448511 ms, max 720022 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 00:01:50 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-11-19 00:02:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 34 seconds
Variants: generated 400, build-succeeded 126, build-failed 124, syntax-invalid 53, redundant 97
Fitness: max 0.917(116), min 0.333(1), ave 0.9
Test execution time: sum 9620 ms, max 147 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 00:02:08 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-11-19 00:17:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 54 seconds
Variants: generated 400, build-succeeded 140, build-failed 132, syntax-invalid 48, redundant 80
Fitness: max 1(2), min 0.583(1), ave 0.903
Test execution time: sum 910919 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 00:17:27 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-11-19 00:17:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 32 minutes 13 seconds
Variants: generated 400, build-succeeded 134, build-failed 121, syntax-invalid 63, redundant 82
Fitness: max 0.917(126), min 0.5(1), ave 0.904
Test execution time: sum 10729 ms, max 177 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 00:17:47 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-11-19 00:45:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 34 seconds
Variants: generated 400, build-succeeded 157, build-failed 131, syntax-invalid 45, redundant 67
Fitness: max 1(1), min 0.25(1), ave 0.887
Test execution time: sum 1631706 ms, max 900022 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 00:45:08 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-11-19 01:24:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 57 seconds
Variants: generated 400, build-succeeded 168, build-failed 142, syntax-invalid 40, redundant 50
Fitness: max 0.917(156), min 0.333(2), ave 0.897
Test execution time: sum 2352755 ms, max 720022 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 01:24:31 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-11-19 01:48:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 3 minutes 14 seconds
Variants: generated 400, build-succeeded 146, build-failed 136, syntax-invalid 61, redundant 57
Fitness: max 1(1), min 0.583(2), ave 0.904
Test execution time: sum 1447645 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 01:48:48 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-11-19 01:49:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 3 minutes 39 seconds
Variants: generated 400, build-succeeded 179, build-failed 119, syntax-invalid 58, redundant 44
Fitness: max 0.917(172), min 0.583(1), ave 0.909
Test execution time: sum 14136 ms, max 158 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 01:49:12 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-11-19 02:04:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 3 seconds
Variants: generated 400, build-succeeded 180, build-failed 109, syntax-invalid 72, redundant 39
Fitness: max 1(1), min 0.333(1), ave 0.904
Test execution time: sum 914064 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 02:04:37 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-11-19 02:44:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 58 minutes 28 seconds
Variants: generated 400, build-succeeded 177, build-failed 109, syntax-invalid 63, redundant 51
Fitness: max 0.917(164), min 0.333(1), ave 0.895
Test execution time: sum 2353680 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 02:44:01 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-11-19 02:44:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 58 minutes 53 seconds
Variants: generated 400, build-succeeded 181, build-failed 115, syntax-invalid 69, redundant 35
Fitness: max 1(1), min 0.5(2), ave 0.901
Test execution time: sum 14464 ms, max 160 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 02:44:27 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-11-19 02:59:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 14 minutes 18 seconds
Variants: generated 400, build-succeeded 176, build-failed 121, syntax-invalid 65, redundant 38
Fitness: max 0.917(165), min 0.5(2), ave 0.901
Test execution time: sum 913746 ms, max 900022 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 02:59:51 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-11-19 03:00:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 14 minutes 43 seconds
Variants: generated 400, build-succeeded 170, build-failed 116, syntax-invalid 82, redundant 32
Fitness: max 1(4), min 0.5(3), ave 0.905
Test execution time: sum 14038 ms, max 163 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 03:00:17 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-11-19 03:00:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 8 seconds
Variants: generated 400, build-succeeded 169, build-failed 115, syntax-invalid 82, redundant 34
Fitness: max 0.917(160), min 0.667(3), ave 0.906
Test execution time: sum 13500 ms, max 145 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 03:00:42 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-11-19 03:16:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 30 minutes 33 seconds
Variants: generated 400, build-succeeded 167, build-failed 121, syntax-invalid 75, redundant 37
Fitness: max 0.917(159), min 0.5(3), ave 0.903
Test execution time: sum 913392 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 03:16:06 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-11-19 03:16:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 30 minutes 58 seconds
Variants: generated 400, build-succeeded 168, build-failed 123, syntax-invalid 74, redundant 35
Fitness: max 1(2), min 0(1), ave 0.9
Test execution time: sum 13955 ms, max 157 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 03:16:32 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-11-19 03:41:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 27 seconds
Variants: generated 400, build-succeeded 202, build-failed 108, syntax-invalid 54, redundant 36
Fitness: max 1(1), min 0.333(1), ave 0.896
Test execution time: sum 1456232 ms, max 1440021 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 03:41:00 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-11-19 03:56:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 55 seconds
Variants: generated 400, build-succeeded 200, build-failed 106, syntax-invalid 65, redundant 29
Fitness: max 1(2), min 0.333(1), ave 0.892
Test execution time: sum 916003 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 03:56:29 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-11-19 04:44:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 59 minutes 21 seconds
Variants: generated 400, build-succeeded 176, build-failed 119, syntax-invalid 78, redundant 27
Fitness: max 1(2), min 0.333(2), ave 0.893
Test execution time: sum 2893908 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 04:44:55 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-11-19 04:47:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 1 minutes 49 seconds
Variants: generated 400, build-succeeded 196, build-failed 111, syntax-invalid 65, redundant 28
Fitness: max 1(2), min 0.5(5), ave 0.896
Test execution time: sum 134889 ms, max 119895 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 04:47:22 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-11-19 05:04:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 19 minutes 19 seconds
Variants: generated 400, build-succeeded 203, build-failed 125, syntax-invalid 53, redundant 19
Fitness: max 1(1), min 0.5(4), ave 0.894
Test execution time: sum 1036361 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 05:04:52 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-11-19 05:29:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 43 minutes 48 seconds
Variants: generated 400, build-succeeded 207, build-failed 104, syntax-invalid 64, redundant 25
Fitness: max 1(2), min 0.333(1), ave 0.895
Test execution time: sum 1456156 ms, max 1440021 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 05:29:21 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-11-19 05:29:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 44 minutes 17 seconds
Variants: generated 400, build-succeeded 196, build-failed 130, syntax-invalid 59, redundant 15
Fitness: max 0.917(183), min 0.5(4), ave 0.9
Test execution time: sum 15501 ms, max 174 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 05:29:51 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-11-19 05:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 44 minutes 45 seconds
Variants: generated 400, build-succeeded 186, build-failed 117, syntax-invalid 77, redundant 20
Fitness: max 0.917(170), min 0.5(5), ave 0.892
Test execution time: sum 14411 ms, max 170 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 05:30:18 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-11-19 05:54:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 15 seconds
Variants: generated 400, build-succeeded 198, build-failed 124, syntax-invalid 57, redundant 21
Fitness: max 1(1), min 0.333(1), ave 0.902
Test execution time: sum 1455951 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 05:54:49 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-11-19 05:55:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 46 seconds
Variants: generated 400, build-succeeded 199, build-failed 117, syntax-invalid 63, redundant 21
Fitness: max 1(1), min 0.5(2), ave 0.9
Test execution time: sum 16068 ms, max 195 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 05:55:19 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-11-19 06:19:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 34 minutes 15 seconds
Variants: generated 400, build-succeeded 188, build-failed 124, syntax-invalid 67, redundant 21
Fitness: max 1(1), min 0.333(1), ave 0.895
Test execution time: sum 1455101 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 06:19:48 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-11-19 06:20:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 34 minutes 45 seconds
Variants: generated 400, build-succeeded 188, build-failed 131, syntax-invalid 60, redundant 21
Fitness: max 0.917(174), min 0.5(4), ave 0.897
Test execution time: sum 15044 ms, max 171 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 06:20:18 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-11-19 06:20:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 35 minutes 13 seconds
Variants: generated 400, build-succeeded 176, build-failed 114, syntax-invalid 83, redundant 27
Fitness: max 0.917(166), min 0.5(6), ave 0.898
Test execution time: sum 14022 ms, max 156 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 06:20:47 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-11-19 06:36:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 50 minutes 43 seconds
Variants: generated 400, build-succeeded 189, build-failed 115, syntax-invalid 67, redundant 29
Fitness: max 0.917(180), min 0.333(1), ave 0.902
Test execution time: sum 915255 ms, max 900021 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 06:36:17 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-11-19 06:36:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 51 minutes 15 seconds
Variants: generated 400, build-succeeded 189, build-failed 116, syntax-invalid 68, redundant 27
Fitness: max 1(3), min 0.5(1), ave 0.909
Test execution time: sum 16171 ms, max 206 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 06:36:48 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-11-19 06:37:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 51 minutes 47 seconds
Variants: generated 400, build-succeeded 207, build-failed 105, syntax-invalid 61, redundant 27
Fitness: max 1(2), min 0.5(3), ave 0.909
Test execution time: sum 17078 ms, max 197 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 06:37:21 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-11-19 06:37:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 52 minutes 19 seconds
Variants: generated 400, build-succeeded 196, build-failed 127, syntax-invalid 54, redundant 23
Fitness: max 0.917(187), min 0.5(5), ave 0.903
Test execution time: sum 16383 ms, max 176 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 06:37:53 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-11-19 06:38:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 52 minutes 51 seconds
Variants: generated 400, build-succeeded 197, build-failed 122, syntax-invalid 62, redundant 19
Fitness: max 0.917(187), min 0.5(5), ave 0.902
Test execution time: sum 16373 ms, max 154 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 06:38:25 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-11-19 06:39:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 26 seconds
Variants: generated 400, build-succeeded 210, build-failed 122, syntax-invalid 53, redundant 15
Fitness: max 0.917(203), min 0.417(1), ave 0.91
Test execution time: sum 18416 ms, max 224 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 06:39:00 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-11-19 06:39:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 59 seconds
Variants: generated 400, build-succeeded 196, build-failed 120, syntax-invalid 66, redundant 18
Fitness: max 1(1), min 0.5(1), ave 0.914
Test execution time: sum 17143 ms, max 172 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 06:39:33 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-11-19 06:55:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 9 minutes 32 seconds
Variants: generated 400, build-succeeded 197, build-failed 127, syntax-invalid 61, redundant 15
Fitness: max 1(2), min 0.5(1), ave 0.91
Test execution time: sum 916433 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 06:55:05 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-11-19 06:55:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 10 minutes 8 seconds
Variants: generated 400, build-succeeded 223, build-failed 104, syntax-invalid 49, redundant 24
Fitness: max 0.917(219), min 0.75(4), ave 0.914
Test execution time: sum 19370 ms, max 180 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 06:55:41 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-11-19 06:56:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 10 minutes 42 seconds
Variants: generated 400, build-succeeded 203, build-failed 112, syntax-invalid 65, redundant 20
Fitness: max 1(1), min 0(1), ave 0.909
Test execution time: sum 17888 ms, max 235 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 06:56:16 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-11-19 07:05:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 20 minutes 16 seconds
Variants: generated 400, build-succeeded 198, build-failed 119, syntax-invalid 68, redundant 15
Fitness: max 0.917(195), min 0.583(1), ave 0.913
Test execution time: sum 556997 ms, max 540022 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 07:05:50 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-11-19 07:06:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 20 minutes 51 seconds
Variants: generated 400, build-succeeded 203, build-failed 108, syntax-invalid 63, redundant 26
Fitness: max 1(1), min 0.75(6), ave 0.912
Test execution time: sum 18120 ms, max 224 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 07:06:25 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-11-19 07:07:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 21 minutes 26 seconds
Variants: generated 400, build-succeeded 205, build-failed 101, syntax-invalid 75, redundant 19
Fitness: max 1(1), min 0.75(2), ave 0.915
Test execution time: sum 18220 ms, max 206 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 07:07:00 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-11-19 07:07:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 22 minutes 0 seconds
Variants: generated 400, build-succeeded 196, build-failed 111, syntax-invalid 68, redundant 25
Fitness: max 1(1), min 0.75(4), ave 0.914
Test execution time: sum 17196 ms, max 237 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 07:07:34 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-11-19 07:08:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 22 minutes 37 seconds
Variants: generated 400, build-succeeded 211, build-failed 117, syntax-invalid 52, redundant 20
Fitness: max 0.917(207), min 0.667(1), ave 0.914
Test execution time: sum 18702 ms, max 314 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 07:08:11 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-11-19 07:32:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 47 minutes 14 seconds
Variants: generated 400, build-succeeded 209, build-failed 114, syntax-invalid 61, redundant 16
Fitness: max 1(1), min 0.333(1), ave 0.913
Test execution time: sum 1458977 ms, max 1440021 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 07:32:48 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-11-19 07:57:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 11 minutes 52 seconds
Variants: generated 400, build-succeeded 211, build-failed 115, syntax-invalid 53, redundant 21
Fitness: max 0.917(206), min 0.333(1), ave 0.911
Test execution time: sum 1459473 ms, max 1440021 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 07:57:25 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-11-19 08:10:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 24 minutes 27 seconds
Variants: generated 400, build-succeeded 205, build-failed 101, syntax-invalid 66, redundant 28
Fitness: max 1(1), min 0.5(2), ave 0.91
Test execution time: sum 737843 ms, max 720022 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 08:10:01 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-11-19 08:10:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 25 minutes 5 seconds
Variants: generated 400, build-succeeded 217, build-failed 113, syntax-invalid 55, redundant 15
Fitness: max 1(2), min 0.75(3), ave 0.915
Test execution time: sum 19566 ms, max 175 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 08:10:39 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-11-19 08:11:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 25 minutes 43 seconds
Variants: generated 400, build-succeeded 215, build-failed 111, syntax-invalid 54, redundant 20
Fitness: max 0.917(211), min 0.75(4), ave 0.914
Test execution time: sum 19320 ms, max 240 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:11:17 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-11-19 08:11:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 26 minutes 23 seconds
Variants: generated 400, build-succeeded 221, build-failed 101, syntax-invalid 57, redundant 21
Fitness: max 1(2), min 0.75(2), ave 0.916
Test execution time: sum 20573 ms, max 216 ms, min 31 ms
----------------------------------------------------------------

2023-11-19 08:11:56 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-11-19 08:12:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 27 minutes 1 seconds
Variants: generated 400, build-succeeded 209, build-failed 104, syntax-invalid 69, redundant 18
Fitness: max 0.917(204), min 0.5(3), ave 0.909
Test execution time: sum 19336 ms, max 225 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:12:35 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-11-19 08:13:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 27 minutes 39 seconds
Variants: generated 400, build-succeeded 205, build-failed 114, syntax-invalid 67, redundant 14
Fitness: max 0.917(204), min 0.75(1), ave 0.916
Test execution time: sum 18936 ms, max 236 ms, min 24 ms
----------------------------------------------------------------

2023-11-19 08:13:13 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-11-19 08:13:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 28 minutes 18 seconds
Variants: generated 400, build-succeeded 214, build-failed 110, syntax-invalid 56, redundant 20
Fitness: max 0.917(210), min 0.333(1), ave 0.908
Test execution time: sum 19459 ms, max 326 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 08:13:52 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-11-19 08:14:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 28 minutes 57 seconds
Variants: generated 400, build-succeeded 213, build-failed 110, syntax-invalid 56, redundant 21
Fitness: max 0.917(213), min 0.917(213), ave 0.917
Test execution time: sum 19040 ms, max 192 ms, min 68 ms
----------------------------------------------------------------

2023-11-19 08:14:31 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-11-19 08:15:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 29 minutes 38 seconds
Variants: generated 400, build-succeeded 226, build-failed 106, syntax-invalid 45, redundant 23
Fitness: max 0.917(224), min 0.75(2), ave 0.915
Test execution time: sum 19761 ms, max 254 ms, min 31 ms
----------------------------------------------------------------

2023-11-19 08:15:11 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-11-19 08:15:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 30 minutes 17 seconds
Variants: generated 400, build-succeeded 216, build-failed 108, syntax-invalid 61, redundant 15
Fitness: max 0.917(215), min 0.75(1), ave 0.916
Test execution time: sum 18974 ms, max 153 ms, min 35 ms
----------------------------------------------------------------

2023-11-19 08:15:51 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-11-19 08:16:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 30 minutes 54 seconds
Variants: generated 400, build-succeeded 190, build-failed 123, syntax-invalid 68, redundant 19
Fitness: max 0.917(188), min 0.5(1), ave 0.914
Test execution time: sum 16384 ms, max 243 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:16:27 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-11-19 08:17:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 31 minutes 32 seconds
Variants: generated 400, build-succeeded 197, build-failed 117, syntax-invalid 63, redundant 23
Fitness: max 1(1), min 0.5(3), ave 0.911
Test execution time: sum 17789 ms, max 269 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:17:06 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-11-19 08:17:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 11 seconds
Variants: generated 400, build-succeeded 190, build-failed 127, syntax-invalid 62, redundant 21
Fitness: max 0.917(190), min 0.917(190), ave 0.917
Test execution time: sum 17377 ms, max 178 ms, min 71 ms
----------------------------------------------------------------

2023-11-19 08:17:44 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-11-19 08:18:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 52 seconds
Variants: generated 400, build-succeeded 216, build-failed 119, syntax-invalid 43, redundant 22
Fitness: max 0.917(214), min 0.75(2), ave 0.915
Test execution time: sum 19384 ms, max 222 ms, min 34 ms
----------------------------------------------------------------

2023-11-19 08:18:25 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-11-19 08:19:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 33 minutes 34 seconds
Variants: generated 400, build-succeeded 224, build-failed 124, syntax-invalid 34, redundant 18
Fitness: max 0.917(222), min 0.75(2), ave 0.915
Test execution time: sum 20234 ms, max 175 ms, min 29 ms
----------------------------------------------------------------

2023-11-19 08:19:08 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-11-19 08:19:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 34 minutes 15 seconds
Variants: generated 400, build-succeeded 206, build-failed 118, syntax-invalid 57, redundant 19
Fitness: max 0.917(205), min 0.75(1), ave 0.916
Test execution time: sum 18699 ms, max 222 ms, min 35 ms
----------------------------------------------------------------

2023-11-19 08:19:48 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-11-19 08:20:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 34 minutes 58 seconds
Variants: generated 400, build-succeeded 238, build-failed 102, syntax-invalid 45, redundant 15
Fitness: max 0.917(237), min 0.75(1), ave 0.916
Test execution time: sum 21351 ms, max 226 ms, min 34 ms
----------------------------------------------------------------

2023-11-19 08:20:32 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-11-19 08:21:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 35 minutes 42 seconds
Variants: generated 400, build-succeeded 237, build-failed 107, syntax-invalid 41, redundant 15
Fitness: max 0.917(234), min 0.75(3), ave 0.915
Test execution time: sum 21376 ms, max 253 ms, min 32 ms
----------------------------------------------------------------

2023-11-19 08:21:15 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-11-19 08:21:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 36 minutes 24 seconds
Variants: generated 400, build-succeeded 223, build-failed 110, syntax-invalid 44, redundant 23
Fitness: max 0.917(221), min 0.5(2), ave 0.913
Test execution time: sum 20135 ms, max 191 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 08:21:58 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-11-19 08:22:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 37 minutes 6 seconds
Variants: generated 400, build-succeeded 230, build-failed 99, syntax-invalid 51, redundant 20
Fitness: max 1(1), min 0.5(6), ave 0.904
Test execution time: sum 19747 ms, max 163 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 08:22:40 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-11-19 08:23:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 37 minutes 47 seconds
Variants: generated 400, build-succeeded 215, build-failed 108, syntax-invalid 53, redundant 24
Fitness: max 0.917(206), min 0.5(8), ave 0.9
Test execution time: sum 18152 ms, max 181 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 08:23:21 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-11-19 08:24:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 38 minutes 30 seconds
Variants: generated 400, build-succeeded 237, build-failed 101, syntax-invalid 49, redundant 13
Fitness: max 0.917(231), min 0.5(6), ave 0.906
Test execution time: sum 19694 ms, max 168 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 08:24:03 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-11-19 08:24:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 39 minutes 10 seconds
Variants: generated 400, build-succeeded 215, build-failed 118, syntax-invalid 51, redundant 16
Fitness: max 0.917(196), min 0.5(17), ave 0.882
Test execution time: sum 17621 ms, max 319 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 08:24:44 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-11-19 08:25:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 39 minutes 52 seconds
Variants: generated 400, build-succeeded 217, build-failed 121, syntax-invalid 49, redundant 13
Fitness: max 0.917(211), min 0.5(6), ave 0.905
Test execution time: sum 18584 ms, max 271 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 08:25:26 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-11-19 08:26:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 40 minutes 35 seconds
Variants: generated 400, build-succeeded 229, build-failed 110, syntax-invalid 41, redundant 20
Fitness: max 1(2), min 0.5(6), ave 0.904
Test execution time: sum 18714 ms, max 162 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 08:26:09 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-11-19 08:26:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 41 minutes 18 seconds
Variants: generated 400, build-succeeded 230, build-failed 110, syntax-invalid 40, redundant 20
Fitness: max 1(2), min 0.5(3), ave 0.911
Test execution time: sum 19347 ms, max 221 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:26:52 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-11-19 08:27:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 41 minutes 59 seconds
Variants: generated 400, build-succeeded 209, build-failed 112, syntax-invalid 58, redundant 21
Fitness: max 1(1), min 0.5(6), ave 0.903
Test execution time: sum 17259 ms, max 178 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:27:32 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-11-19 08:28:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 42 minutes 40 seconds
Variants: generated 400, build-succeeded 210, build-failed 119, syntax-invalid 57, redundant 14
Fitness: max 1(4), min 0.667(2), ave 0.916
Test execution time: sum 18021 ms, max 177 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:28:14 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-11-19 08:28:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 43 minutes 21 seconds
Variants: generated 400, build-succeeded 202, build-failed 124, syntax-invalid 53, redundant 21
Fitness: max 0.917(200), min 0.75(2), ave 0.915
Test execution time: sum 17269 ms, max 471 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:28:55 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-11-19 08:29:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 44 minutes 3 seconds
Variants: generated 400, build-succeeded 215, build-failed 117, syntax-invalid 47, redundant 21
Fitness: max 0.917(214), min 0.5(1), ave 0.915
Test execution time: sum 18115 ms, max 181 ms, min 24 ms
----------------------------------------------------------------

2023-11-19 08:29:37 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-11-19 08:30:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 44 minutes 46 seconds
Variants: generated 400, build-succeeded 218, build-failed 118, syntax-invalid 50, redundant 14
Fitness: max 1(1), min 0.917(217), ave 0.917
Test execution time: sum 18260 ms, max 149 ms, min 69 ms
----------------------------------------------------------------

2023-11-19 08:30:20 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-11-19 08:31:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 45 minutes 30 seconds
Variants: generated 400, build-succeeded 223, build-failed 120, syntax-invalid 40, redundant 17
Fitness: max 0.917(220), min 0.5(3), ave 0.911
Test execution time: sum 19044 ms, max 192 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:31:04 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-11-19 08:31:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 46 minutes 14 seconds
Variants: generated 400, build-succeeded 217, build-failed 118, syntax-invalid 43, redundant 22
Fitness: max 0.917(211), min 0.5(4), ave 0.907
Test execution time: sum 18930 ms, max 179 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:31:48 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-11-19 08:32:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 46 minutes 58 seconds
Variants: generated 400, build-succeeded 220, build-failed 121, syntax-invalid 39, redundant 20
Fitness: max 1(1), min 0.5(3), ave 0.911
Test execution time: sum 18196 ms, max 161 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:32:32 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-11-19 08:33:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 47 minutes 41 seconds
Variants: generated 400, build-succeeded 217, build-failed 115, syntax-invalid 53, redundant 15
Fitness: max 0.917(213), min 0.5(2), ave 0.912
Test execution time: sum 17737 ms, max 165 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:33:15 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-11-19 08:34:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 48 minutes 27 seconds
Variants: generated 400, build-succeeded 238, build-failed 105, syntax-invalid 42, redundant 15
Fitness: max 0.917(235), min 0.5(2), ave 0.912
Test execution time: sum 20020 ms, max 177 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:34:01 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-11-19 08:34:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 49 minutes 12 seconds
Variants: generated 400, build-succeeded 222, build-failed 118, syntax-invalid 44, redundant 16
Fitness: max 0.917(219), min 0.75(3), ave 0.914
Test execution time: sum 18649 ms, max 185 ms, min 35 ms
----------------------------------------------------------------

2023-11-19 08:34:46 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-11-19 08:35:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 49 minutes 56 seconds
Variants: generated 400, build-succeeded 211, build-failed 124, syntax-invalid 53, redundant 12
Fitness: max 1(1), min 0.5(5), ave 0.907
Test execution time: sum 18195 ms, max 181 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:35:30 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-11-19 08:36:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 50 minutes 41 seconds
Variants: generated 400, build-succeeded 220, build-failed 108, syntax-invalid 55, redundant 17
Fitness: max 0.917(217), min 0.5(2), ave 0.912
Test execution time: sum 18328 ms, max 142 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:36:14 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-11-19 08:36:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 51 minutes 26 seconds
Variants: generated 400, build-succeeded 226, build-failed 107, syntax-invalid 52, redundant 15
Fitness: max 0.917(223), min 0.583(1), ave 0.914
Test execution time: sum 18781 ms, max 163 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 08:36:59 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-11-19 08:37:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 52 minutes 10 seconds
Variants: generated 400, build-succeeded 214, build-failed 119, syntax-invalid 52, redundant 15
Fitness: max 0.917(213), min 0.75(1), ave 0.916
Test execution time: sum 18381 ms, max 164 ms, min 36 ms
----------------------------------------------------------------

2023-11-19 08:37:44 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-11-19 08:38:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 52 minutes 57 seconds
Variants: generated 400, build-succeeded 227, build-failed 109, syntax-invalid 41, redundant 23
Fitness: max 0.917(226), min 0.75(1), ave 0.916
Test execution time: sum 19569 ms, max 168 ms, min 36 ms
----------------------------------------------------------------

2023-11-19 08:38:31 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-11-19 09:03:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 17 minutes 43 seconds
Variants: generated 400, build-succeeded 220, build-failed 115, syntax-invalid 48, redundant 17
Fitness: max 0.917(218), min 0.333(1), ave 0.913
Test execution time: sum 1458191 ms, max 1440021 ms, min 36 ms
----------------------------------------------------------------

2023-11-19 09:03:16 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-11-19 09:04:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 18 minutes 28 seconds
Variants: generated 400, build-succeeded 217, build-failed 119, syntax-invalid 44, redundant 20
Fitness: max 0.917(216), min 0.75(1), ave 0.916
Test execution time: sum 18086 ms, max 183 ms, min 35 ms
----------------------------------------------------------------

2023-11-19 09:04:02 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-11-19 09:04:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 19 minutes 13 seconds
Variants: generated 400, build-succeeded 210, build-failed 117, syntax-invalid 56, redundant 17
Fitness: max 0.917(208), min 0.75(2), ave 0.915
Test execution time: sum 17420 ms, max 152 ms, min 24 ms
----------------------------------------------------------------

2023-11-19 09:04:46 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-11-19 09:05:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 19 minutes 58 seconds
Variants: generated 400, build-succeeded 211, build-failed 120, syntax-invalid 52, redundant 17
Fitness: max 0.917(208), min 0.5(1), ave 0.913
Test execution time: sum 17499 ms, max 180 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 09:05:31 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-11-19 09:06:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 20 minutes 46 seconds
Variants: generated 400, build-succeeded 232, build-failed 119, syntax-invalid 37, redundant 12
Fitness: max 0.917(227), min 0.5(1), ave 0.912
Test execution time: sum 19607 ms, max 178 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 09:06:19 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-11-19 09:07:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 21 minutes 34 seconds
Variants: generated 400, build-succeeded 224, build-failed 107, syntax-invalid 43, redundant 26
Fitness: max 0.917(224), min 0.917(224), ave 0.917
Test execution time: sum 19711 ms, max 199 ms, min 72 ms
----------------------------------------------------------------

2023-11-19 09:07:07 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-11-19 09:31:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 46 minutes 21 seconds
Variants: generated 400, build-succeeded 225, build-failed 106, syntax-invalid 45, redundant 24
Fitness: max 0.917(220), min 0.333(1), ave 0.909
Test execution time: sum 1459181 ms, max 1440022 ms, min 24 ms
----------------------------------------------------------------

2023-11-19 09:31:55 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-11-19 09:32:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 47 minutes 4 seconds
Variants: generated 400, build-succeeded 192, build-failed 113, syntax-invalid 74, redundant 21
Fitness: max 1(3), min 0.917(189), ave 0.918
Test execution time: sum 16476 ms, max 182 ms, min 69 ms
----------------------------------------------------------------

2023-11-19 09:32:38 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-11-19 10:09:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 23 minutes 48 seconds
Variants: generated 400, build-succeeded 201, build-failed 110, syntax-invalid 62, redundant 27
Fitness: max 0.917(197), min 0.583(4), ave 0.91
Test execution time: sum 2176557 ms, max 540024 ms, min 70 ms
----------------------------------------------------------------

2023-11-19 10:09:22 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-11-19 10:10:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 24 minutes 33 seconds
Variants: generated 400, build-succeeded 194, build-failed 118, syntax-invalid 60, redundant 28
Fitness: max 0.917(194), min 0.917(194), ave 0.917
Test execution time: sum 16757 ms, max 223 ms, min 70 ms
----------------------------------------------------------------

2023-11-19 10:10:07 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-11-19 10:19:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 34 minutes 17 seconds
Variants: generated 400, build-succeeded 220, build-failed 102, syntax-invalid 55, redundant 23
Fitness: max 0.917(219), min 0.583(1), ave 0.915
Test execution time: sum 556469 ms, max 537757 ms, min 70 ms
----------------------------------------------------------------

2023-11-19 10:19:51 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-11-19 10:29:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 44 minutes 4 seconds
Variants: generated 400, build-succeeded 230, build-failed 96, syntax-invalid 48, redundant 26
Fitness: max 0.917(226), min 0.583(1), ave 0.913
Test execution time: sum 557974 ms, max 538467 ms, min 24 ms
----------------------------------------------------------------

2023-11-19 10:29:37 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-11-19 10:39:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 53 minutes 48 seconds
Variants: generated 400, build-succeeded 215, build-failed 101, syntax-invalid 64, redundant 20
Fitness: max 0.917(212), min 0.583(1), ave 0.914
Test execution time: sum 556509 ms, max 537691 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 10:39:21 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-11-19 11:07:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 21 minutes 30 seconds
Variants: generated 400, build-succeeded 218, build-failed 99, syntax-invalid 66, redundant 17
Fitness: max 0.917(210), min 0.583(3), ave 0.909
Test execution time: sum 1634326 ms, max 539768 ms, min 24 ms
----------------------------------------------------------------

2023-11-19 11:07:04 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-11-19 11:16:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 31 minutes 14 seconds
Variants: generated 400, build-succeeded 195, build-failed 126, syntax-invalid 64, redundant 15
Fitness: max 0.917(192), min 0.583(1), ave 0.913
Test execution time: sum 554689 ms, max 536826 ms, min 36 ms
----------------------------------------------------------------

2023-11-19 11:16:47 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-11-19 11:26:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 40 minutes 54 seconds
Variants: generated 400, build-succeeded 162, build-failed 121, syntax-invalid 94, redundant 23
Fitness: max 0.917(160), min 0.583(1), ave 0.914
Test execution time: sum 554068 ms, max 539193 ms, min 36 ms
----------------------------------------------------------------

2023-11-19 11:26:27 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-11-19 11:36:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 50 minutes 40 seconds
Variants: generated 400, build-succeeded 196, build-failed 102, syntax-invalid 81, redundant 21
Fitness: max 0.917(194), min 0.583(1), ave 0.914
Test execution time: sum 559267 ms, max 540025 ms, min 24 ms
----------------------------------------------------------------

2023-11-19 11:36:14 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-11-19 11:37:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 51 minutes 28 seconds
Variants: generated 400, build-succeeded 202, build-failed 99, syntax-invalid 74, redundant 25
Fitness: max 0.917(201), min 0.75(1), ave 0.916
Test execution time: sum 19380 ms, max 482 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 11:37:01 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-11-19 11:37:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 52 minutes 14 seconds
Variants: generated 400, build-succeeded 191, build-failed 110, syntax-invalid 81, redundant 18
Fitness: max 1(1), min 0.75(3), ave 0.914
Test execution time: sum 18263 ms, max 491 ms, min 32 ms
----------------------------------------------------------------

2023-11-19 11:37:48 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-11-19 11:38:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 53 minutes 3 seconds
Variants: generated 400, build-succeeded 208, build-failed 103, syntax-invalid 74, redundant 15
Fitness: max 1(2), min 0.667(1), ave 0.915
Test execution time: sum 20821 ms, max 497 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 11:38:37 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-11-19 11:39:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 53 minutes 53 seconds
Variants: generated 400, build-succeeded 202, build-failed 107, syntax-invalid 75, redundant 16
Fitness: max 0.917(199), min 0.667(1), ave 0.914
Test execution time: sum 20104 ms, max 485 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 11:39:26 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-11-19 11:40:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 54 minutes 43 seconds
Variants: generated 400, build-succeeded 194, build-failed 116, syntax-invalid 72, redundant 18
Fitness: max 0.917(193), min 0.75(1), ave 0.916
Test execution time: sum 21207 ms, max 1035 ms, min 36 ms
----------------------------------------------------------------

2023-11-19 11:40:17 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-11-19 11:41:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 55 minutes 31 seconds
Variants: generated 400, build-succeeded 184, build-failed 119, syntax-invalid 85, redundant 12
Fitness: max 1(1), min 0.75(2), ave 0.915
Test execution time: sum 19052 ms, max 494 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 11:41:04 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-11-19 11:41:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 56 minutes 25 seconds
Variants: generated 400, build-succeeded 206, build-failed 115, syntax-invalid 57, redundant 22
Fitness: max 0.917(206), min 0.917(206), ave 0.917
Test execution time: sum 23589 ms, max 496 ms, min 70 ms
----------------------------------------------------------------

2023-11-19 11:41:58 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-11-19 12:27:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 42 minutes 14 seconds
Variants: generated 400, build-succeeded 196, build-failed 113, syntax-invalid 70, redundant 21
Fitness: max 0.917(189), min 0.583(5), ave 0.906
Test execution time: sum 2719709 ms, max 540025 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 12:27:48 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-11-19 12:37:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 52 minutes 4 seconds
Variants: generated 400, build-succeeded 203, build-failed 114, syntax-invalid 63, redundant 20
Fitness: max 0.917(202), min 0.583(1), ave 0.915
Test execution time: sum 558850 ms, max 535269 ms, min 73 ms
----------------------------------------------------------------

2023-11-19 12:37:37 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-11-19 12:38:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 52 minutes 58 seconds
Variants: generated 400, build-succeeded 208, build-failed 104, syntax-invalid 66, redundant 22
Fitness: max 0.917(205), min 0.667(2), ave 0.913
Test execution time: sum 23808 ms, max 878 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 12:38:32 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-11-19 12:39:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 53 minutes 53 seconds
Variants: generated 400, build-succeeded 214, build-failed 101, syntax-invalid 67, redundant 18
Fitness: max 0.917(212), min 0(1), ave 0.911
Test execution time: sum 24031 ms, max 920 ms, min 23 ms
----------------------------------------------------------------

2023-11-19 12:39:27 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-11-19 12:40:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 54 minutes 43 seconds
Variants: generated 400, build-succeeded 180, build-failed 122, syntax-invalid 86, redundant 12
Fitness: max 0.917(178), min 0.75(2), ave 0.915
Test execution time: sum 19530 ms, max 496 ms, min 37 ms
----------------------------------------------------------------

2023-11-19 12:40:16 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-11-19 12:56:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 10 minutes 39 seconds
Variants: generated 400, build-succeeded 219, build-failed 110, syntax-invalid 53, redundant 18
Fitness: max 0.917(216), min 0.583(1), ave 0.914
Test execution time: sum 924305 ms, max 900025 ms, min 28 ms
----------------------------------------------------------------

2023-11-19 12:56:13 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-11-19 13:06:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 20 minutes 30 seconds
Variants: generated 400, build-succeeded 202, build-failed 117, syntax-invalid 60, redundant 21
Fitness: max 0.917(197), min 0.583(1), ave 0.912
Test execution time: sum 558783 ms, max 536099 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 13:06:03 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-11-19 13:06:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 21 minutes 25 seconds
Variants: generated 400, build-succeeded 193, build-failed 123, syntax-invalid 68, redundant 16
Fitness: max 0.917(192), min 0.75(1), ave 0.916
Test execution time: sum 23259 ms, max 500 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 13:06:58 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-11-19 13:07:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 22 minutes 22 seconds
Variants: generated 400, build-succeeded 197, build-failed 123, syntax-invalid 62, redundant 18
Fitness: max 0.917(196), min 0.75(1), ave 0.916
Test execution time: sum 24197 ms, max 495 ms, min 74 ms
----------------------------------------------------------------

2023-11-19 13:07:55 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-11-19 13:08:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 23 minutes 19 seconds
Variants: generated 400, build-succeeded 214, build-failed 120, syntax-invalid 51, redundant 15
Fitness: max 0.917(211), min 0.75(3), ave 0.914
Test execution time: sum 24334 ms, max 490 ms, min 39 ms
----------------------------------------------------------------

2023-11-19 13:08:53 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-11-19 13:09:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 24 minutes 15 seconds
Variants: generated 400, build-succeeded 205, build-failed 117, syntax-invalid 60, redundant 18
Fitness: max 0.917(205), min 0.917(205), ave 0.917
Test execution time: sum 23122 ms, max 466 ms, min 71 ms
----------------------------------------------------------------

2023-11-19 13:09:48 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-11-19 13:10:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 25 minutes 10 seconds
Variants: generated 400, build-succeeded 195, build-failed 115, syntax-invalid 75, redundant 15
Fitness: max 0.917(195), min 0.917(195), ave 0.917
Test execution time: sum 23819 ms, max 496 ms, min 71 ms
----------------------------------------------------------------

2023-11-19 13:10:44 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-11-19 13:26:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 41 minutes 8 seconds
Variants: generated 400, build-succeeded 210, build-failed 101, syntax-invalid 71, redundant 18
Fitness: max 0.917(206), min 0.583(1), ave 0.913
Test execution time: sum 925943 ms, max 900026 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 13:26:42 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-11-19 13:27:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 42 minutes 10 seconds
Variants: generated 400, build-succeeded 211, build-failed 112, syntax-invalid 59, redundant 18
Fitness: max 1(1), min 0(1), ave 0.91
Test execution time: sum 28106 ms, max 858 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 13:27:43 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-11-19 13:28:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 43 minutes 10 seconds
Variants: generated 400, build-succeeded 219, build-failed 99, syntax-invalid 57, redundant 25
Fitness: max 0.917(214), min 0.75(4), ave 0.913
Test execution time: sum 26431 ms, max 947 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 13:28:43 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-11-19 13:29:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 44 minutes 6 seconds
Variants: generated 400, build-succeeded 200, build-failed 114, syntax-invalid 61, redundant 25
Fitness: max 1(2), min 0.667(3), ave 0.911
Test execution time: sum 23503 ms, max 943 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 13:29:40 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-11-19 13:30:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 45 minutes 8 seconds
Variants: generated 400, build-succeeded 218, build-failed 106, syntax-invalid 58, redundant 18
Fitness: max 0.917(212), min 0.667(4), ave 0.911
Test execution time: sum 27673 ms, max 929 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:30:41 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-11-19 13:31:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 46 minutes 10 seconds
Variants: generated 400, build-succeeded 195, build-failed 125, syntax-invalid 61, redundant 19
Fitness: max 0.917(192), min 0.75(3), ave 0.914
Test execution time: sum 28141 ms, max 1753 ms, min 37 ms
----------------------------------------------------------------

2023-11-19 13:31:43 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-11-19 13:32:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 47 minutes 12 seconds
Variants: generated 400, build-succeeded 209, build-failed 115, syntax-invalid 64, redundant 12
Fitness: max 0.917(205), min 0.75(4), ave 0.913
Test execution time: sum 27899 ms, max 907 ms, min 29 ms
----------------------------------------------------------------

2023-11-19 13:32:45 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-11-19 13:33:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 48 minutes 10 seconds
Variants: generated 400, build-succeeded 196, build-failed 112, syntax-invalid 73, redundant 19
Fitness: max 0.917(194), min 0.75(2), ave 0.915
Test execution time: sum 25747 ms, max 1869 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:33:44 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-11-19 13:34:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 49 minutes 20 seconds
Variants: generated 400, build-succeeded 211, build-failed 120, syntax-invalid 53, redundant 16
Fitness: max 1(1), min 0.75(2), ave 0.915
Test execution time: sum 34622 ms, max 8663 ms, min 37 ms
----------------------------------------------------------------

2023-11-19 13:34:54 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-11-19 13:35:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 50 minutes 23 seconds
Variants: generated 400, build-succeeded 199, build-failed 125, syntax-invalid 62, redundant 14
Fitness: max 0.917(199), min 0.917(199), ave 0.917
Test execution time: sum 27805 ms, max 1009 ms, min 72 ms
----------------------------------------------------------------

2023-11-19 13:35:56 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-11-19 13:36:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 51 minutes 24 seconds
Variants: generated 400, build-succeeded 200, build-failed 125, syntax-invalid 63, redundant 12
Fitness: max 0.917(198), min 0.75(1), ave 0.915
Test execution time: sum 26593 ms, max 940 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 13:36:58 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-11-19 13:37:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 52 minutes 26 seconds
Variants: generated 400, build-succeeded 185, build-failed 132, syntax-invalid 69, redundant 14
Fitness: max 1(1), min 0.75(1), ave 0.916
Test execution time: sum 26577 ms, max 983 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 13:37:59 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-11-19 13:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 53 minutes 30 seconds
Variants: generated 400, build-succeeded 193, build-failed 124, syntax-invalid 67, redundant 16
Fitness: max 0.917(193), min 0.917(193), ave 0.917
Test execution time: sum 29403 ms, max 1851 ms, min 70 ms
----------------------------------------------------------------

2023-11-19 13:39:03 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-11-19 13:40:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 54 minutes 30 seconds
Variants: generated 400, build-succeeded 196, build-failed 107, syntax-invalid 79, redundant 18
Fitness: max 0.917(194), min 0.75(2), ave 0.915
Test execution time: sum 26019 ms, max 907 ms, min 37 ms
----------------------------------------------------------------

2023-11-19 13:40:03 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-11-19 13:41:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 55 minutes 31 seconds
Variants: generated 400, build-succeeded 197, build-failed 100, syntax-invalid 82, redundant 21
Fitness: max 0.917(197), min 0.917(197), ave 0.917
Test execution time: sum 26441 ms, max 1707 ms, min 73 ms
----------------------------------------------------------------

2023-11-19 13:41:04 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-11-19 13:42:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 56 minutes 33 seconds
Variants: generated 400, build-succeeded 219, build-failed 94, syntax-invalid 67, redundant 20
Fitness: max 1(1), min 0.75(4), ave 0.914
Test execution time: sum 26726 ms, max 938 ms, min 31 ms
----------------------------------------------------------------

2023-11-19 13:42:06 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-11-19 13:43:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 57 minutes 31 seconds
Variants: generated 400, build-succeeded 201, build-failed 116, syntax-invalid 68, redundant 15
Fitness: max 1(1), min 0.75(2), ave 0.915
Test execution time: sum 23405 ms, max 499 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:43:05 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-11-19 13:44:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 58 minutes 32 seconds
Variants: generated 400, build-succeeded 212, build-failed 111, syntax-invalid 55, redundant 22
Fitness: max 0.917(208), min 0.75(3), ave 0.914
Test execution time: sum 23541 ms, max 497 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 13:44:06 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-11-19 13:45:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 59 minutes 34 seconds
Variants: generated 400, build-succeeded 224, build-failed 114, syntax-invalid 49, redundant 13
Fitness: max 0.917(222), min 0.75(2), ave 0.915
Test execution time: sum 23822 ms, max 313 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:45:07 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-11-19 13:46:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 34 seconds
Variants: generated 400, build-succeeded 210, build-failed 116, syntax-invalid 51, redundant 23
Fitness: max 0.917(207), min 0.75(3), ave 0.914
Test execution time: sum 22358 ms, max 506 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 13:46:07 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-11-19 13:47:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 1 minutes 37 seconds
Variants: generated 400, build-succeeded 222, build-failed 101, syntax-invalid 51, redundant 26
Fitness: max 0.917(221), min 0.75(1), ave 0.916
Test execution time: sum 26020 ms, max 891 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:47:11 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-11-19 13:48:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 2 minutes 35 seconds
Variants: generated 400, build-succeeded 193, build-failed 114, syntax-invalid 64, redundant 29
Fitness: max 0.917(193), min 0.917(193), ave 0.917
Test execution time: sum 21204 ms, max 510 ms, min 71 ms
----------------------------------------------------------------

2023-11-19 13:48:09 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-11-19 13:49:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 3 minutes 37 seconds
Variants: generated 400, build-succeeded 215, build-failed 108, syntax-invalid 57, redundant 20
Fitness: max 0.917(213), min 0.667(2), ave 0.914
Test execution time: sum 24517 ms, max 506 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 13:49:11 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-11-19 13:50:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 4 minutes 36 seconds
Variants: generated 400, build-succeeded 197, build-failed 116, syntax-invalid 67, redundant 20
Fitness: max 0.917(193), min 0.667(4), ave 0.912
Test execution time: sum 21673 ms, max 1021 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:50:09 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-11-19 13:51:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 5 minutes 35 seconds
Variants: generated 400, build-succeeded 197, build-failed 111, syntax-invalid 67, redundant 25
Fitness: max 0.917(192), min 0.667(4), ave 0.911
Test execution time: sum 22387 ms, max 915 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:51:09 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-11-19 13:52:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 6 minutes 35 seconds
Variants: generated 400, build-succeeded 196, build-failed 123, syntax-invalid 62, redundant 19
Fitness: max 0.917(188), min 0.667(5), ave 0.908
Test execution time: sum 21722 ms, max 515 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:52:08 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-11-19 13:53:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 7 minutes 36 seconds
Variants: generated 400, build-succeeded 201, build-failed 114, syntax-invalid 65, redundant 20
Fitness: max 1(1), min 0.667(2), ave 0.912
Test execution time: sum 23837 ms, max 912 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:53:10 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-11-19 13:54:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 8 minutes 36 seconds
Variants: generated 400, build-succeeded 200, build-failed 111, syntax-invalid 69, redundant 20
Fitness: max 0.917(193), min 0.667(4), ave 0.909
Test execution time: sum 22476 ms, max 313 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:54:10 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-11-19 13:55:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 9 minutes 37 seconds
Variants: generated 400, build-succeeded 196, build-failed 121, syntax-invalid 64, redundant 19
Fitness: max 0.917(194), min 0.667(1), ave 0.915
Test execution time: sum 22737 ms, max 997 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 13:55:11 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-11-19 13:56:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 10 minutes 39 seconds
Variants: generated 400, build-succeeded 221, build-failed 97, syntax-invalid 58, redundant 24
Fitness: max 0.917(218), min 0.75(3), ave 0.914
Test execution time: sum 22735 ms, max 312 ms, min 25 ms
----------------------------------------------------------------

2023-11-19 13:56:13 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-11-19 13:57:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 11 minutes 42 seconds
Variants: generated 400, build-succeeded 212, build-failed 119, syntax-invalid 56, redundant 13
Fitness: max 0.917(209), min 0(1), ave 0.911
Test execution time: sum 23277 ms, max 497 ms, min 24 ms
----------------------------------------------------------------

2023-11-19 13:57:15 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-11-19 13:58:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 12 minutes 43 seconds
Variants: generated 400, build-succeeded 199, build-failed 105, syntax-invalid 69, redundant 27
Fitness: max 0.917(197), min 0.75(2), ave 0.915
Test execution time: sum 22566 ms, max 494 ms, min 39 ms
----------------------------------------------------------------

2023-11-19 13:58:16 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-11-19 13:59:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 13 minutes 46 seconds
Variants: generated 400, build-succeeded 215, build-failed 104, syntax-invalid 65, redundant 16
Fitness: max 1(1), min 0.667(1), ave 0.914
Test execution time: sum 24130 ms, max 902 ms, min 28 ms
----------------------------------------------------------------

2023-11-19 13:59:19 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-11-19 14:12:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 26 minutes 47 seconds
Variants: generated 400, build-succeeded 201, build-failed 122, syntax-invalid 60, redundant 17
Fitness: max 0.917(197), min 0.583(1), ave 0.911
Test execution time: sum 742408 ms, max 720026 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 14:12:21 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-11-19 14:13:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 27 minutes 50 seconds
Variants: generated 400, build-succeeded 199, build-failed 116, syntax-invalid 61, redundant 24
Fitness: max 0.917(194), min 0.667(4), ave 0.911
Test execution time: sum 22955 ms, max 510 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 14:13:23 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-11-19 14:14:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 28 minutes 58 seconds
Variants: generated 400, build-succeeded 227, build-failed 103, syntax-invalid 50, redundant 20
Fitness: max 0.917(223), min 0.667(1), ave 0.914
Test execution time: sum 26559 ms, max 495 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 14:14:31 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-11-19 14:15:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 30 minutes 2 seconds
Variants: generated 400, build-succeeded 195, build-failed 121, syntax-invalid 63, redundant 21
Fitness: max 0.917(195), min 0.917(195), ave 0.917
Test execution time: sum 24409 ms, max 1894 ms, min 73 ms
----------------------------------------------------------------

2023-11-19 14:15:35 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-11-19 14:16:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 31 minutes 4 seconds
Variants: generated 400, build-succeeded 196, build-failed 103, syntax-invalid 75, redundant 26
Fitness: max 0.917(193), min 0.75(3), ave 0.914
Test execution time: sum 22575 ms, max 489 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 14:16:37 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-11-19 14:17:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 32 minutes 10 seconds
Variants: generated 400, build-succeeded 201, build-failed 116, syntax-invalid 60, redundant 23
Fitness: max 1(1), min 0.75(2), ave 0.915
Test execution time: sum 26183 ms, max 1006 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 14:17:43 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-11-19 14:18:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 33 minutes 19 seconds
Variants: generated 400, build-succeeded 215, build-failed 113, syntax-invalid 49, redundant 23
Fitness: max 0.917(215), min 0.917(215), ave 0.917
Test execution time: sum 27999 ms, max 888 ms, min 76 ms
----------------------------------------------------------------

2023-11-19 14:18:53 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-11-19 14:20:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 34 minutes 29 seconds
Variants: generated 400, build-succeeded 214, build-failed 102, syntax-invalid 60, redundant 24
Fitness: max 1(1), min 0.917(213), ave 0.917
Test execution time: sum 28323 ms, max 1746 ms, min 73 ms
----------------------------------------------------------------

2023-11-19 14:20:03 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-11-19 14:21:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 35 minutes 37 seconds
Variants: generated 400, build-succeeded 202, build-failed 122, syntax-invalid 62, redundant 14
Fitness: max 0.917(201), min 0.75(1), ave 0.916
Test execution time: sum 27398 ms, max 1730 ms, min 38 ms
----------------------------------------------------------------

2023-11-19 14:21:11 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-11-19 14:46:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 48 seconds
Variants: generated 400, build-succeeded 202, build-failed 117, syntax-invalid 65, redundant 16
Fitness: max 0.917(200), min 0.333(1), ave 0.913
Test execution time: sum 1470183 ms, max 1440021 ms, min 38 ms
----------------------------------------------------------------

2023-11-19 14:46:22 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-11-19 14:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 2 minutes 7 seconds
Variants: generated 400, build-succeeded 213, build-failed 110, syntax-invalid 60, redundant 17
Fitness: max 1(2), min 0.75(2), ave 0.915
Test execution time: sum 37179 ms, max 1944 ms, min 29 ms
----------------------------------------------------------------

2023-11-19 14:47:41 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-11-19 14:48:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 3 minutes 23 seconds
Variants: generated 400, build-succeeded 205, build-failed 115, syntax-invalid 64, redundant 16
Fitness: max 0.917(203), min 0.75(2), ave 0.915
Test execution time: sum 34014 ms, max 3779 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 14:48:56 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-11-19 14:50:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 4 minutes 39 seconds
Variants: generated 400, build-succeeded 218, build-failed 106, syntax-invalid 52, redundant 24
Fitness: max 0.917(215), min 0.75(3), ave 0.914
Test execution time: sum 34130 ms, max 1760 ms, min 28 ms
----------------------------------------------------------------

2023-11-19 14:50:13 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-11-19 14:52:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 7 minutes 0 seconds
Variants: generated 400, build-succeeded 195, build-failed 106, syntax-invalid 76, redundant 23
Fitness: max 1(1), min 0.5(1), ave 0.913
Test execution time: sum 99271 ms, max 71770 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 14:52:33 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-11-19 14:53:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 8 minutes 12 seconds
Variants: generated 400, build-succeeded 203, build-failed 112, syntax-invalid 64, redundant 21
Fitness: max 0.917(199), min 0.75(4), ave 0.913
Test execution time: sum 29808 ms, max 874 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 14:53:45 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-11-19 14:54:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 9 minutes 24 seconds
Variants: generated 400, build-succeeded 191, build-failed 119, syntax-invalid 62, redundant 28
Fitness: max 1(1), min 0.75(1), ave 0.916
Test execution time: sum 29782 ms, max 1797 ms, min 29 ms
----------------------------------------------------------------

2023-11-19 14:54:58 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-11-19 15:35:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 49 minutes 33 seconds
Variants: generated 400, build-succeeded 205, build-failed 112, syntax-invalid 64, redundant 19
Fitness: max 0.917(203), min 0.333(1), ave 0.912
Test execution time: sum 2366264 ms, max 1440022 ms, min 75 ms
----------------------------------------------------------------

2023-11-19 15:35:06 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-11-19 15:36:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 50 minutes 43 seconds
Variants: generated 400, build-succeeded 197, build-failed 109, syntax-invalid 70, redundant 24
Fitness: max 0.917(193), min 0.75(4), ave 0.913
Test execution time: sum 28279 ms, max 1761 ms, min 28 ms
----------------------------------------------------------------

2023-11-19 15:36:17 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-11-19 15:37:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 51 minutes 53 seconds
Variants: generated 400, build-succeeded 199, build-failed 120, syntax-invalid 55, redundant 26
Fitness: max 0.917(199), min 0.917(199), ave 0.917
Test execution time: sum 26220 ms, max 1754 ms, min 73 ms
----------------------------------------------------------------

2023-11-19 15:37:27 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-11-19 15:38:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 53 minutes 1 seconds
Variants: generated 400, build-succeeded 205, build-failed 110, syntax-invalid 63, redundant 22
Fitness: max 0.917(202), min 0.75(2), ave 0.915
Test execution time: sum 24423 ms, max 465 ms, min 28 ms
----------------------------------------------------------------

2023-11-19 15:38:35 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-11-19 15:51:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 6 minutes 13 seconds
Variants: generated 400, build-succeeded 204, build-failed 118, syntax-invalid 61, redundant 17
Fitness: max 0.917(202), min 0.583(1), ave 0.914
Test execution time: sum 747079 ms, max 720028 ms, min 36 ms
----------------------------------------------------------------

2023-11-19 15:51:47 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-11-19 15:52:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 7 minutes 24 seconds
Variants: generated 400, build-succeeded 215, build-failed 118, syntax-invalid 50, redundant 17
Fitness: max 1(3), min 0.75(2), ave 0.916
Test execution time: sum 26802 ms, max 1703 ms, min 26 ms
----------------------------------------------------------------

2023-11-19 15:52:58 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-11-19 16:09:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 23 minutes 38 seconds
Variants: generated 400, build-succeeded 205, build-failed 117, syntax-invalid 52, redundant 26
Fitness: max 1(1), min 0.583(1), ave 0.915
Test execution time: sum 929464 ms, max 900028 ms, min 28 ms
----------------------------------------------------------------

2023-11-19 16:09:12 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-11-19 16:10:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 24 minutes 52 seconds
Variants: generated 400, build-succeeded 221, build-failed 108, syntax-invalid 46, redundant 25
Fitness: max 0.917(216), min 0.667(4), ave 0.912
Test execution time: sum 27785 ms, max 870 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 16:10:25 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-11-19 16:11:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 26 minutes 8 seconds
Variants: generated 400, build-succeeded 230, build-failed 121, syntax-invalid 28, redundant 21
Fitness: max 1(1), min 0.5(2), ave 0.912
Test execution time: sum 28071 ms, max 880 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 16:11:41 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-11-19 16:12:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 27 minutes 25 seconds
Variants: generated 400, build-succeeded 221, build-failed 115, syntax-invalid 46, redundant 18
Fitness: max 0.917(221), min 0.917(221), ave 0.917
Test execution time: sum 30085 ms, max 926 ms, min 74 ms
----------------------------------------------------------------

2023-11-19 16:12:58 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-11-19 16:14:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 28 minutes 40 seconds
Variants: generated 400, build-succeeded 224, build-failed 113, syntax-invalid 50, redundant 13
Fitness: max 0.917(222), min 0.75(2), ave 0.915
Test execution time: sum 29360 ms, max 1783 ms, min 28 ms
----------------------------------------------------------------

2023-11-19 16:14:13 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-11-19 16:15:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 29 minutes 57 seconds
Variants: generated 400, build-succeeded 219, build-failed 109, syntax-invalid 42, redundant 30
Fitness: max 0.917(218), min 0.75(1), ave 0.916
Test execution time: sum 30418 ms, max 1736 ms, min 31 ms
----------------------------------------------------------------

2023-11-19 16:15:31 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-11-19 16:16:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 31 minutes 10 seconds
Variants: generated 400, build-succeeded 220, build-failed 103, syntax-invalid 55, redundant 22
Fitness: max 0.917(218), min 0.75(2), ave 0.915
Test execution time: sum 27235 ms, max 488 ms, min 28 ms
----------------------------------------------------------------

2023-11-19 16:16:43 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-11-19 16:17:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 32 minutes 24 seconds
Variants: generated 400, build-succeeded 211, build-failed 115, syntax-invalid 42, redundant 32
Fitness: max 0.917(208), min 0.5(1), ave 0.914
Test execution time: sum 27474 ms, max 1875 ms, min 28 ms
----------------------------------------------------------------

2023-11-19 16:17:57 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-11-19 16:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 33 minutes 37 seconds
Variants: generated 400, build-succeeded 222, build-failed 113, syntax-invalid 45, redundant 20
Fitness: max 1(1), min 0.75(5), ave 0.913
Test execution time: sum 27130 ms, max 880 ms, min 28 ms
----------------------------------------------------------------

2023-11-19 16:19:11 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-11-19 16:20:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 34 minutes 53 seconds
Variants: generated 400, build-succeeded 230, build-failed 101, syntax-invalid 51, redundant 18
Fitness: max 1(1), min 0.583(1), ave 0.915
Test execution time: sum 28974 ms, max 508 ms, min 29 ms
----------------------------------------------------------------

2023-11-19 16:20:27 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-11-19 16:21:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 36 minutes 12 seconds
Variants: generated 400, build-succeeded 244, build-failed 101, syntax-invalid 31, redundant 24
Fitness: max 0.917(239), min 0.75(4), ave 0.914
Test execution time: sum 29676 ms, max 998 ms, min 27 ms
----------------------------------------------------------------

2023-11-19 16:21:45 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-11-19 16:23:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 37 minutes 29 seconds
Variants: generated 400, build-succeeded 233, build-failed 108, syntax-invalid 43, redundant 16
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 30319 ms, max 1736 ms, min 35 ms
----------------------------------------------------------------

2023-11-19 16:23:03 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-11-19 16:24:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 38 minutes 48 seconds
Variants: generated 400, build-succeeded 226, build-failed 117, syntax-invalid 40, redundant 17
Fitness: max 0.917(226), min 0.917(226), ave 0.917
Test execution time: sum 30421 ms, max 895 ms, min 76 ms
----------------------------------------------------------------

2023-11-19 16:24:22 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-11-19 16:40:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 55 minutes 5 seconds
Variants: generated 400, build-succeeded 214, build-failed 117, syntax-invalid 46, redundant 23
Fitness: max 0.917(213), min 0.583(1), ave 0.915
Test execution time: sum 928424 ms, max 900028 ms, min 74 ms
----------------------------------------------------------------

2023-11-19 16:40:38 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-11-19 16:41:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 55 minutes 52 seconds
Variants: generated 239, build-succeeded 104, build-failed 110, syntax-invalid 5, redundant 20
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 15151 ms, max 498 ms, min 29 ms
----------------------------------------------------------------

2023-11-19 16:41:25 [main] [INFO]  KGenProgMain - GA stopped
2023-11-19 16:41:25 [main] [INFO]  PatchLogExporter - patch (v115)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:25 [main] [INFO]  PatchLogExporter - patch (v115)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:25 [main] [INFO]  PatchLogExporter - patch (v115)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:25 [main] [INFO]  PatchLogExporter - patch (v115)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:25 [main] [INFO]  PatchLogExporter - patch (v115)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:25 [main] [INFO]  PatchLogExporter - patch (v115)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:25 [main] [INFO]  PatchLogExporter - patch (v115)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v929)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v929)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v929)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v929)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +484,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v929)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v929)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v929)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1099)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1099)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1099)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1099)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +417,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1099)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1099)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1099)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -388,6 +388,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -1026,7 +1027,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1224)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1224)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1224)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1224)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,7 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			modulus = (++modulus) % 3;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -341,6 +342,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			byte[] result = new byte[pos];
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1224)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1224)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1224)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1628)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1628)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1628)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1628)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1628)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -341,6 +341,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			byte[] result = new byte[pos];
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1628)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1628)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v1628)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2144)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2144)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2144)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2144)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2144)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2144)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2144)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2423)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2423)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2423)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2423)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,8 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -545,7 +547,6 @@
             if (b == PAD) {
                 // We're done.
                 eof = true;
-                break;
             } else {
                 if (b >= 0 && b < DECODE_TABLE.length) {
                     int result = DECODE_TABLE[b];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2423)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2423)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2423)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2444)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2444)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2444)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2444)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -332,6 +333,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			readPos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,7 +419,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (eof) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
@@ -485,7 +487,8 @@
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
                 }
-                modulus = (++modulus) % 3;
+                int startSrc = 0;
+				modulus = (++modulus) % 3;
                 int b = in[inPos++];
                 if (b < 0) {
                     b += 256;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2444)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2444)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v2444)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v3385)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v3385)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v3385)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v3385)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,7 +332,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -484,6 +483,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v3385)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v3385)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v3385)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4012)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4012)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4012)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4012)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,22 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -341,6 +357,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			byte[] result = new byte[pos];
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4012)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4012)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4012)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -388,6 +389,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -485,7 +487,8 @@
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
                 }
-                modulus = (++modulus) % 3;
+                int startSrc = 0;
+				modulus = (++modulus) % 3;
                 int b = in[inPos++];
                 if (b < 0) {
                     b += 256;
@@ -545,7 +548,6 @@
             if (b == PAD) {
                 // We're done.
                 eof = true;
-                break;
             } else {
                 if (b >= 0 && b < DECODE_TABLE.length) {
                     int result = DECODE_TABLE[b];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4086)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4808)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4808)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4808)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4808)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,10 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			modulus = (++modulus) % 3;
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +391,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4808)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4808)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v4808)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v5714)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v5714)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v5714)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v5714)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+            x = x << 6;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -341,6 +342,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			byte[] result = new byte[pos];
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -388,6 +390,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -484,6 +487,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v5714)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v5714)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v5714)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v6701)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v6701)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v6701)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v6701)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,23 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v6701)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v6701)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v6701)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v7366)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v7366)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v7366)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v7366)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,34 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			readPos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v7366)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v7366)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v7366)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8237)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8237)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8237)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8237)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
+			modulus = (++modulus) % 3;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8237)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8237)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8237)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8254)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8254)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8254)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8254)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,23 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8254)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8254)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8254)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +333,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +391,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8266)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8348)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8348)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8348)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8348)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -333,6 +334,8 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +391,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8348)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8348)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v8348)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9298)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9298)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9298)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9298)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+            pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +391,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -418,8 +422,8 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
+            pos = outPos;
             readPos = outPos;
         }
     }
@@ -1026,7 +1030,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9298)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9298)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9298)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9467)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9467)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9467)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9467)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos += 4;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +391,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -485,8 +489,10 @@
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
                 }
-                modulus = (++modulus) % 3;
-                int b = in[inPos++];
+                int startSrc = 0;
+				modulus = (++modulus) % 3;
+                byte[] result = new byte[pos];
+				int b = in[inPos++];
                 if (b < 0) {
                     b += 256;
                 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9467)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9467)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9467)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9853)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9853)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9853)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9853)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +333,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            byte[] buf = new byte[pos - readPos];
+			lineLength = 0;  // disable chunk-separating
+            reset();
+			int bytesCopied = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +491,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9853)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9853)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v9853)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10152)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10152)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10152)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10152)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,15 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +395,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -419,6 +427,7 @@
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
             buffer = out;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = outPos;
             readPos = outPos;
         }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10152)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10152)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10152)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10182)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10182)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10182)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10182)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +413,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10182)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10182)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10182)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10583)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10583)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10583)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10583)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +333,10 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			modulus = (++modulus) % 3;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -341,6 +345,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			byte[] result = new byte[pos];
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -418,7 +423,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -486,7 +490,8 @@
                     resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
-                int b = in[inPos++];
+                byte[] result = new byte[pos];
+				int b = in[inPos++];
                 if (b < 0) {
                     b += 256;
                 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10583)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10583)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10583)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10591)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10591)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10591)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10591)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10591)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -341,6 +342,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			byte[] result = new byte[pos];
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -388,6 +390,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
@@ -1026,7 +1030,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10591)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10591)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10591)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10929)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10929)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10929)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10929)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,15 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+            int bytesCopied = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -486,7 +494,8 @@
                     resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
-                int b = in[inPos++];
+                byte[] result = new byte[pos];
+				int b = in[inPos++];
                 if (b < 0) {
                     b += 256;
                 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10929)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10929)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10929)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10947)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10947)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10947)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10947)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10947)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            x = x << 6;
+			lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -341,6 +344,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			byte[] result = new byte[pos];
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -388,6 +392,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
@@ -484,6 +490,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -545,7 +552,6 @@
             if (b == PAD) {
                 // We're done.
                 eof = true;
-                break;
             } else {
                 if (b >= 0 && b < DECODE_TABLE.length) {
                     int result = DECODE_TABLE[b];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10947)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10947)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v10947)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11449)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11449)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11449)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11449)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+			eof = true;
+			lineLength = 0;  // disable chunk-separating
+			readPos = 0;
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +392,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
@@ -1026,7 +1032,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11449)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11449)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11449)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11758)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11758)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11758)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -166,7 +166,7 @@
                 if (!base64.hasData()) {
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
-                    if (c > 0 && b.length == len) {
+                    if (b == null) {
                         base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11758)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11758)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11758)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11758)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11758)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11997)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11997)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11997)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11997)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			modulus = (++modulus) % 3;
+			lineLength = 0;  // disable chunk-separating
+			readPos = 0;
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11997)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11997)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11997)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v11997)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,23 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +404,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
@@ -484,6 +502,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13414)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13414)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13414)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13414)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,23 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				buffer[pos++] = (byte) (x & MASK_8BITS);
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1041,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13414)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13414)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13414)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13673)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13673)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13673)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13673)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +333,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			readPos = 0;
+            buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +424,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -486,7 +491,8 @@
                     resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
-                int b = in[inPos++];
+                byte[] result = new byte[pos];
+				int b = in[inPos++];
                 if (b < 0) {
                     b += 256;
                 }
@@ -1026,7 +1032,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13673)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13673)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v13673)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15274)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15274)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15274)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15274)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +333,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			readPos = 0;
+            buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +394,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -418,7 +425,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15274)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15274)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15274)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15442)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15442)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15442)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15442)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,23 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				buffer[pos++] = (byte) (x & MASK_8BITS);
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +403,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -484,9 +500,11 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
-                int b = in[inPos++];
+                byte[] result = new byte[pos];
+				int b = in[inPos++];
                 if (b < 0) {
                     b += 256;
                 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15442)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15442)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15442)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15542)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15542)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15542)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15542)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +392,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
@@ -484,6 +490,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -1026,7 +1033,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15542)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15542)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15542)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15667)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15667)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15667)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15667)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +333,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +392,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15667)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15667)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15667)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15721)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15721)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15721)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15721)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +333,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +391,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
@@ -418,7 +423,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15721)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15721)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v15721)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17380)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17380)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17380)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17380)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +334,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -341,6 +348,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			byte[] result = new byte[pos];
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17380)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17380)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17380)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +409,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -486,7 +508,8 @@
                     resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
-                int b = in[inPos++];
+                byte[] result = new byte[pos];
+				int b = in[inPos++];
                 if (b < 0) {
                     b += 256;
                 }
@@ -1026,7 +1049,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17799)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17799)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17799)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17799)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,34 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			{
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				pos += lineSeparator.length;
+				currentLinePos = 0;
+			}
+			modulus = (++modulus) % 3;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +511,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17799)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17799)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v17799)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v18509)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v18509)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v18509)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v18509)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v18509)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +334,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +393,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -1026,7 +1032,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v18509)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v18509)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v18509)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19297)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19297)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19297)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19297)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -341,6 +343,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			byte[] result = new byte[pos];
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -388,6 +391,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -486,7 +490,8 @@
                     resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
-                int b = in[inPos++];
+                byte[] result = new byte[pos];
+				int b = in[inPos++];
                 if (b < 0) {
                     b += 256;
                 }
@@ -1024,9 +1029,7 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19297)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19297)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19297)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19776)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19776)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19776)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19776)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19776)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +334,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			reset();
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +394,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -484,6 +491,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -1024,7 +1032,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19776)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19776)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v19776)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20168)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20168)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20168)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20168)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +335,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +493,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20168)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20168)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20168)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20869)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20869)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20869)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20869)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +333,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			readPos = 0;
+            buffer = null;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +396,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20869)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20869)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v20869)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v21699)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v21699)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v21699)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v21699)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +391,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
@@ -1024,9 +1029,8 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        String sep = StringUtils.newStringUtf8(lineSeparator);
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v21699)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v21699)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v21699)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22030)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22030)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22030)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22030)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +334,15 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			readPos = 0;
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +398,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22030)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22030)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22030)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22118)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22118)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22118)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22118)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1022,11 +1026,9 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        String sep = StringUtils.newStringUtf8(lineSeparator);
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22118)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22118)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22118)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22838)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22838)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22838)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22838)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +333,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -341,6 +347,7 @@
             this.encodeSize = 4 + lineSeparator.length;
         } else {
             this.encodeSize = 4;
+			byte[] result = new byte[pos];
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -388,6 +395,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
@@ -1026,7 +1035,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22838)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22838)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22838)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22947)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22947)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22947)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22947)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +334,23 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22947)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22947)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v22947)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v26291)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v26291)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v26291)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v26291)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v26291)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v26291)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v26291)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v29590)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v29590)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v29590)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v29590)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +334,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1035,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v29590)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v29590)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v29590)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31470)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31470)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31470)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31470)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +334,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31470)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31470)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31470)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31548)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31548)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31548)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31548)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +335,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1038,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31548)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31548)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31548)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31747)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31747)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31747)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31747)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +334,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1023,7 +1037,6 @@
     private void reset() {
         buffer = null;
         pos = 0;
-        readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31747)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31747)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31747)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31897)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31897)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31897)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31897)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +333,18 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1038,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31897)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31897)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v31897)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32317)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32317)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32317)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32317)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +333,26 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+            buffer = null;
+			buffer = null;
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1023,7 +1043,6 @@
     private void reset() {
         buffer = null;
         pos = 0;
-        readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32317)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32317)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32317)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32501)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32501)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32501)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32501)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32501)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +333,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 3;
+            buffer = null;
+			buffer = null;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1031,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32501)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32501)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32501)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32613)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32613)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32613)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32613)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			buffer = null;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32613)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32613)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32613)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32671)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32671)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32671)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32671)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +333,15 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1030,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32671)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32671)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32671)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32707)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32707)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32707)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32707)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +337,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1024,7 +1036,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32707)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32707)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v32707)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v33959)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v33959)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v33959)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v33959)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -333,6 +335,15 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +399,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v33959)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v33959)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v33959)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v35004)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v35004)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v35004)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v35004)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +333,15 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+            reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1035,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v35004)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v35004)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v35004)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v36577)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v36577)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v36577)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v36577)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +335,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v36577)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v36577)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v36577)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41482)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41482)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41482)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41482)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +333,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +403,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41482)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41482)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41482)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41513)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41513)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41513)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41513)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +335,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +402,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41513)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41513)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41513)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41541)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41541)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41541)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41541)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +335,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41541)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41541)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v41541)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v45845)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v45845)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v45845)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v45845)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +335,23 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +407,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v45845)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v45845)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v45845)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46043)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46043)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46043)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46043)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			byte[] buf = new byte[pos - readPos];
+			reset();
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +400,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -1022,7 +1035,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46043)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46043)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46043)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46294)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46294)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46294)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46294)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +335,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			eof = true;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1022,7 +1037,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46294)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46294)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v46294)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v47463)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v47463)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v47463)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v47463)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +336,23 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1022,7 +1042,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v47463)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v47463)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v47463)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v53261)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v53261)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v53261)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v53261)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +335,20 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			eof = true;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +404,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
@@ -1022,7 +1040,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v53261)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v53261)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v53261)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54177)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54177)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54177)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54177)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54177)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +337,20 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54177)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54177)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54177)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54198)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54198)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54198)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54198)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +335,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            int startSrc = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			eof = true;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54198)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54198)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v54198)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v56198)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v56198)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v56198)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v56198)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +338,24 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			resizeBuffer();
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +411,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -1022,10 +1046,8 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v56198)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v56198)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v56198)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v57330)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v57330)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v57330)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v57330)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +334,22 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +405,9 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v57330)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v57330)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v57330)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v58819)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v58819)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v58819)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v58819)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +335,22 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			eof = true;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +406,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v58819)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v58819)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v58819)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v59350)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v59350)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v59350)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v59350)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +335,27 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +411,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -1025,8 +1049,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v59350)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v59350)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v59350)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v63228)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v63228)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v63228)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v63228)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +337,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1025,7 +1042,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v63228)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v63228)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v63228)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v65751)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v65751)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v65751)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v65751)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +333,24 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			eof = true;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v65751)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v65751)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v65751)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68022)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68022)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68022)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68022)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +333,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			reset();
+			reset();
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +410,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68022)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68022)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68022)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68956)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68956)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68956)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68956)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +335,22 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			eof = true;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +406,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -1021,9 +1040,7 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
-        readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68956)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68956)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v68956)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70059)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70059)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70059)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70059)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +332,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +414,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -1026,7 +1053,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70059)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70059)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70059)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70184)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70184)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70184)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70184)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70184)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +334,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            int startSrc = 0;
+			readPos = 0;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +409,9 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70184)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70184)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v70184)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v71217)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v71217)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v71217)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v71217)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +336,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +410,9 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v71217)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v71217)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v71217)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v72269)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v72269)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v72269)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v72269)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +334,28 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +411,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v72269)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v72269)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v72269)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74698)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74698)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74698)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74698)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +339,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +409,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -1025,7 +1047,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74698)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74698)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74698)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74708)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74708)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74708)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74708)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +338,29 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			reset();
+			reset();
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1049,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74708)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74708)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74708)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74712)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74712)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74712)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74712)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +335,35 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +419,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74712)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74712)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74712)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74812)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74812)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74812)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74812)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +333,32 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			reset();
+			reset();
+			buffer = null;
+			reset();
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +414,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -418,7 +445,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -1022,7 +1048,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74812)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74812)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v74812)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v75885)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v75885)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v75885)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v75885)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -331,8 +334,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			reset();
+			reset();
+			buffer = null;
+			buffer = null;
+			reset();
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +410,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -1024,8 +1047,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v75885)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v75885)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v75885)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78317)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78317)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78317)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78317)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +338,30 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			resizeBuffer();
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +417,8 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78317)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78317)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78317)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78759)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78759)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78759)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78759)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +334,30 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			reset();
+			reset();
+			reset();
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +413,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
@@ -1026,7 +1052,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78759)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78759)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v78759)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79391)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79391)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79391)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79391)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79391)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +336,36 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +421,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79391)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79391)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79391)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79480)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79480)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79480)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79480)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +335,33 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			reset();
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +417,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79480)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79480)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v79480)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80500)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80500)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80500)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80500)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80500)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +336,33 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			reset();
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -388,6 +418,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			readPos = 0;
         }
     }
 
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80500)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80500)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80500)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80639)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80639)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80639)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80639)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -302,6 +302,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator) {
         this(lineLength, lineSeparator, false);
+		resizeBuffer();
+		resizeBuffer();
     }
 
     /**
@@ -332,7 +334,33 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			reset();
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80639)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80639)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  PatchLogExporter - patch (v80639)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-19 16:41:26 [main] [INFO]  KGenProgMain - Summary
Reached generation = 203
Generated variants = 80639
Syntax valid variants = 68956
Build succeeded variants = 40443
Time elapsed = 21 hours 55 minutes 53 seconds
Exit status = SUCCESS
