2023-11-19 16:41:29 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-11-19 16:41:29 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-11-19 16:41:29 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-11-19 16:41:29 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 7 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-11-19 16:41:32 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-11-19 16:41:32 [main] [INFO]  KGenProgMain - GA started
2023-11-19 16:41:32 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-11-19 17:40:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 49 seconds
Variants: generated 200, build-succeeded 33, build-failed 109, syntax-invalid 14, redundant 44
Fitness: max 1(2), min 0.333(2), ave 0.78
Test execution time: sum 3525594 ms, max 1440026 ms, min 24 ms
----------------------------------------------------------------

2023-11-19 17:40:22 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-11-19 18:13:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 54 seconds
Variants: generated 200, build-succeeded 41, build-failed 104, syntax-invalid 26, redundant 29
Fitness: max 0.917(8), min 0.167(1), ave 0.75
Test execution time: sum 1981904 ms, max 1440023 ms, min 22 ms
----------------------------------------------------------------

2023-11-19 18:13:27 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-11-19 21:33:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 48 seconds
Variants: generated 400, build-succeeded 127, build-failed 116, syntax-invalid 39, redundant 118
Fitness: max 1(3), min 0.25(3), ave 0.714
Test execution time: sum 11987593 ms, max 1440022 ms, min 19 ms
----------------------------------------------------------------

2023-11-19 21:33:21 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-11-19 22:30:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 49 minutes 1 seconds
Variants: generated 400, build-succeeded 148, build-failed 107, syntax-invalid 43, redundant 102
Fitness: max 1(6), min 0(2), ave 0.78
Test execution time: sum 3426191 ms, max 1440022 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 22:30:34 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-11-19 22:54:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 15 seconds
Variants: generated 400, build-succeeded 128, build-failed 124, syntax-invalid 46, redundant 102
Fitness: max 1(4), min 0.333(1), ave 0.818
Test execution time: sum 1447523 ms, max 1440022 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 22:54:48 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-11-19 23:10:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 28 minutes 29 seconds
Variants: generated 400, build-succeeded 109, build-failed 117, syntax-invalid 67, redundant 107
Fitness: max 1(1), min 0.333(1), ave 0.871
Test execution time: sum 907202 ms, max 900022 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 23:10:02 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-11-19 23:10:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 28 minutes 44 seconds
Variants: generated 400, build-succeeded 108, build-failed 138, syntax-invalid 61, redundant 93
Fitness: max 1(4), min 0.5(3), ave 0.886
Test execution time: sum 7972 ms, max 141 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 23:10:17 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-11-19 23:22:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 59 seconds
Variants: generated 400, build-succeeded 114, build-failed 126, syntax-invalid 60, redundant 100
Fitness: max 1(4), min 0.333(1), ave 0.89
Test execution time: sum 728695 ms, max 720022 ms, min 20 ms
----------------------------------------------------------------

2023-11-19 23:22:32 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-11-19 23:58:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 15 seconds
Variants: generated 400, build-succeeded 114, build-failed 130, syntax-invalid 67, redundant 89
Fitness: max 1(2), min 0.333(4), ave 0.87
Test execution time: sum 2168434 ms, max 720022 ms, min 21 ms
----------------------------------------------------------------

2023-11-19 23:58:48 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-11-20 00:38:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 56 minutes 34 seconds
Variants: generated 400, build-succeeded 149, build-failed 121, syntax-invalid 48, redundant 82
Fitness: max 1(4), min 0.333(2), ave 0.883
Test execution time: sum 2351508 ms, max 900023 ms, min 20 ms
----------------------------------------------------------------

2023-11-20 00:38:07 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-11-20 00:38:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 56 minutes 54 seconds
Variants: generated 400, build-succeeded 143, build-failed 123, syntax-invalid 66, redundant 68
Fitness: max 1(1), min 0.667(8), ave 0.889
Test execution time: sum 11098 ms, max 155 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 00:38:27 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-11-20 00:38:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 57 minutes 14 seconds
Variants: generated 400, build-succeeded 141, build-failed 142, syntax-invalid 53, redundant 64
Fitness: max 1(3), min 0.333(1), ave 0.891
Test execution time: sum 11381 ms, max 182 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 00:38:46 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-11-20 00:39:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 57 minutes 34 seconds
Variants: generated 400, build-succeeded 153, build-failed 127, syntax-invalid 49, redundant 71
Fitness: max 0.917(139), min 0.5(5), ave 0.89
Test execution time: sum 12209 ms, max 188 ms, min 20 ms
----------------------------------------------------------------

2023-11-20 00:39:07 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-11-20 01:00:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 18 minutes 54 seconds
Variants: generated 400, build-succeeded 149, build-failed 135, syntax-invalid 58, redundant 58
Fitness: max 1(3), min 0.333(1), ave 0.889
Test execution time: sum 1271585 ms, max 1260022 ms, min 20 ms
----------------------------------------------------------------

2023-11-20 01:00:27 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-11-20 01:00:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 19 minutes 16 seconds
Variants: generated 400, build-succeeded 149, build-failed 140, syntax-invalid 57, redundant 54
Fitness: max 0.917(129), min 0.333(1), ave 0.883
Test execution time: sum 11901 ms, max 179 ms, min 20 ms
----------------------------------------------------------------

2023-11-20 01:00:48 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-11-20 01:01:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 19 minutes 38 seconds
Variants: generated 400, build-succeeded 158, build-failed 124, syntax-invalid 63, redundant 55
Fitness: max 1(1), min 0.667(8), ave 0.901
Test execution time: sum 13177 ms, max 212 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 01:01:11 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-11-20 01:01:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 20 minutes 1 seconds
Variants: generated 400, build-succeeded 150, build-failed 115, syntax-invalid 84, redundant 51
Fitness: max 1(1), min 0.333(1), ave 0.892
Test execution time: sum 12883 ms, max 169 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 01:01:33 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-11-20 01:13:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 32 minutes 25 seconds
Variants: generated 400, build-succeeded 184, build-failed 106, syntax-invalid 67, redundant 43
Fitness: max 1(3), min 0.333(1), ave 0.888
Test execution time: sum 734747 ms, max 720021 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 01:13:58 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-11-20 01:29:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 47 minutes 50 seconds
Variants: generated 400, build-succeeded 174, build-failed 125, syntax-invalid 52, redundant 49
Fitness: max 0.917(156), min 0.5(4), ave 0.89
Test execution time: sum 914549 ms, max 900022 ms, min 20 ms
----------------------------------------------------------------

2023-11-20 01:29:23 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-11-20 01:29:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 48 minutes 16 seconds
Variants: generated 400, build-succeeded 181, build-failed 126, syntax-invalid 51, redundant 42
Fitness: max 0.917(163), min 0.333(1), ave 0.887
Test execution time: sum 15557 ms, max 168 ms, min 20 ms
----------------------------------------------------------------

2023-11-20 01:29:49 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-11-20 01:30:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 48 minutes 41 seconds
Variants: generated 400, build-succeeded 162, build-failed 135, syntax-invalid 71, redundant 32
Fitness: max 0.917(144), min 0.5(3), ave 0.889
Test execution time: sum 13836 ms, max 176 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 01:30:14 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-11-20 01:54:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 9 seconds
Variants: generated 400, build-succeeded 190, build-failed 112, syntax-invalid 58, redundant 40
Fitness: max 0.917(172), min 0.333(1), ave 0.893
Test execution time: sum 1456867 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 01:54:42 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-11-20 02:07:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 minutes 35 seconds
Variants: generated 400, build-succeeded 170, build-failed 134, syntax-invalid 61, redundant 35
Fitness: max 1(2), min 0.333(1), ave 0.896
Test execution time: sum 735224 ms, max 720022 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 02:07:08 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-11-20 03:28:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 46 minutes 59 seconds
Variants: generated 400, build-succeeded 178, build-failed 120, syntax-invalid 70, redundant 32
Fitness: max 0.917(150), min 0.333(3), ave 0.869
Test execution time: sum 4873019 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 03:28:32 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-11-20 03:43:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 2 minutes 24 seconds
Variants: generated 400, build-succeeded 158, build-failed 124, syntax-invalid 78, redundant 40
Fitness: max 1(1), min 0.333(1), ave 0.896
Test execution time: sum 914184 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 03:43:57 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-11-20 03:59:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 17 minutes 52 seconds
Variants: generated 400, build-succeeded 194, build-failed 114, syntax-invalid 48, redundant 44
Fitness: max 1(1), min 0.333(3), ave 0.882
Test execution time: sum 916231 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 03:59:25 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-11-20 04:14:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 33 minutes 23 seconds
Variants: generated 400, build-succeeded 199, build-failed 122, syntax-invalid 41, redundant 38
Fitness: max 0.917(182), min 0(1), ave 0.892
Test execution time: sum 918633 ms, max 900021 ms, min 20 ms
----------------------------------------------------------------

2023-11-20 04:14:56 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-11-20 05:33:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 51 minutes 52 seconds
Variants: generated 400, build-succeeded 191, build-failed 110, syntax-invalid 55, redundant 44
Fitness: max 0.917(166), min 0.333(5), ave 0.879
Test execution time: sum 4696387 ms, max 1440023 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 05:33:25 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-11-20 05:45:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 4 minutes 22 seconds
Variants: generated 400, build-succeeded 202, build-failed 108, syntax-invalid 54, redundant 36
Fitness: max 1(1), min 0.5(1), ave 0.896
Test execution time: sum 737715 ms, max 720021 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 05:45:55 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-11-20 06:35:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 54 minutes 2 seconds
Variants: generated 400, build-succeeded 194, build-failed 119, syntax-invalid 49, redundant 38
Fitness: max 0.917(179), min 0.333(5), ave 0.888
Test execution time: sum 2967303 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 06:35:35 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-11-20 06:36:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 54 minutes 32 seconds
Variants: generated 400, build-succeeded 186, build-failed 121, syntax-invalid 51, redundant 42
Fitness: max 1(1), min 0.333(1), ave 0.889
Test execution time: sum 16905 ms, max 260 ms, min 20 ms
----------------------------------------------------------------

2023-11-20 06:36:04 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-11-20 06:36:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 55 minutes 0 seconds
Variants: generated 400, build-succeeded 179, build-failed 121, syntax-invalid 65, redundant 35
Fitness: max 0.917(164), min 0.333(1), ave 0.893
Test execution time: sum 16152 ms, max 176 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 06:36:33 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-11-20 07:01:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 19 minutes 30 seconds
Variants: generated 400, build-succeeded 194, build-failed 122, syntax-invalid 55, redundant 29
Fitness: max 0.917(168), min 0.333(4), ave 0.877
Test execution time: sum 1457040 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 07:01:03 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-11-20 07:01:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 20 minutes 1 seconds
Variants: generated 400, build-succeeded 193, build-failed 116, syntax-invalid 66, redundant 25
Fitness: max 0.917(178), min 0.5(2), ave 0.899
Test execution time: sum 17695 ms, max 213 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 07:01:34 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-11-20 07:03:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 21 minutes 40 seconds
Variants: generated 400, build-succeeded 178, build-failed 130, syntax-invalid 74, redundant 18
Fitness: max 0.917(165), min 0.5(2), ave 0.899
Test execution time: sum 85977 ms, max 69497 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 07:03:13 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-11-20 07:03:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 22 minutes 10 seconds
Variants: generated 400, build-succeeded 176, build-failed 115, syntax-invalid 83, redundant 26
Fitness: max 1(2), min 0.5(3), ave 0.899
Test execution time: sum 15914 ms, max 212 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 07:03:43 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-11-20 07:43:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 1 minutes 38 seconds
Variants: generated 400, build-succeeded 170, build-failed 122, syntax-invalid 79, redundant 29
Fitness: max 1(1), min 0.333(1), ave 0.896
Test execution time: sum 2355363 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 07:43:11 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-11-20 08:13:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 32 minutes 8 seconds
Variants: generated 400, build-succeeded 177, build-failed 107, syntax-invalid 90, redundant 26
Fitness: max 1(1), min 0.333(1), ave 0.907
Test execution time: sum 1815917 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 08:13:41 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-11-20 08:26:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 44 minutes 37 seconds
Variants: generated 400, build-succeeded 176, build-failed 116, syntax-invalid 84, redundant 24
Fitness: max 1(1), min 0.333(1), ave 0.898
Test execution time: sum 735509 ms, max 720023 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 08:26:10 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-11-20 08:26:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 45 minutes 6 seconds
Variants: generated 400, build-succeeded 172, build-failed 117, syntax-invalid 82, redundant 29
Fitness: max 0.917(158), min 0.333(1), ave 0.897
Test execution time: sum 16194 ms, max 210 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 08:26:39 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-11-20 08:27:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 45 minutes 37 seconds
Variants: generated 400, build-succeeded 181, build-failed 113, syntax-invalid 77, redundant 29
Fitness: max 0.917(165), min 0.667(6), ave 0.9
Test execution time: sum 16400 ms, max 216 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 08:27:10 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-11-20 08:39:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 58 minutes 8 seconds
Variants: generated 400, build-succeeded 186, build-failed 123, syntax-invalid 65, redundant 26
Fitness: max 1(1), min 0.583(1), ave 0.909
Test execution time: sum 737146 ms, max 720022 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 08:39:41 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-11-20 08:40:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 58 minutes 41 seconds
Variants: generated 400, build-succeeded 186, build-failed 129, syntax-invalid 64, redundant 21
Fitness: max 0.917(177), min 0(1), ave 0.902
Test execution time: sum 17608 ms, max 302 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 08:40:14 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-11-20 08:40:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 59 minutes 14 seconds
Variants: generated 400, build-succeeded 204, build-failed 107, syntax-invalid 65, redundant 24
Fitness: max 0.917(186), min 0.5(1), ave 0.896
Test execution time: sum 18430 ms, max 225 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 08:40:47 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-11-20 08:41:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 59 minutes 47 seconds
Variants: generated 400, build-succeeded 179, build-failed 135, syntax-invalid 64, redundant 22
Fitness: max 1(1), min 0.5(2), ave 0.905
Test execution time: sum 18150 ms, max 257 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 08:41:19 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-11-20 09:05:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 24 minutes 21 seconds
Variants: generated 400, build-succeeded 203, build-failed 115, syntax-invalid 66, redundant 16
Fitness: max 1(1), min 0.333(2), ave 0.897
Test execution time: sum 1459301 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 09:05:54 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-11-20 09:06:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 24 minutes 58 seconds
Variants: generated 400, build-succeeded 210, build-failed 102, syntax-invalid 63, redundant 25
Fitness: max 1(3), min 0.333(2), ave 0.902
Test execution time: sum 20492 ms, max 586 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 09:06:30 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-11-20 09:07:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 25 minutes 35 seconds
Variants: generated 400, build-succeeded 214, build-failed 112, syntax-invalid 54, redundant 20
Fitness: max 1(1), min 0.333(1), ave 0.904
Test execution time: sum 21276 ms, max 254 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 09:07:08 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-11-20 09:07:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 26 minutes 10 seconds
Variants: generated 400, build-succeeded 192, build-failed 111, syntax-invalid 60, redundant 37
Fitness: max 0.917(185), min 0.667(1), ave 0.91
Test execution time: sum 19350 ms, max 255 ms, min 23 ms
----------------------------------------------------------------

2023-11-20 09:07:43 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-11-20 09:08:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 26 minutes 43 seconds
Variants: generated 400, build-succeeded 184, build-failed 111, syntax-invalid 72, redundant 33
Fitness: max 0.917(176), min 0.333(1), ave 0.906
Test execution time: sum 17854 ms, max 186 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 09:08:16 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-11-20 09:32:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 51 minutes 18 seconds
Variants: generated 400, build-succeeded 193, build-failed 120, syntax-invalid 72, redundant 15
Fitness: max 1(1), min 0.333(2), ave 0.897
Test execution time: sum 1458999 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 09:32:51 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-11-20 09:48:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 6 minutes 53 seconds
Variants: generated 400, build-succeeded 191, build-failed 111, syntax-invalid 70, redundant 28
Fitness: max 0.917(181), min 0.5(1), ave 0.903
Test execution time: sum 919008 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 09:48:26 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-11-20 10:52:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 10 minutes 31 seconds
Variants: generated 400, build-succeeded 200, build-failed 107, syntax-invalid 73, redundant 20
Fitness: max 0.917(184), min 0.333(4), ave 0.892
Test execution time: sum 3801297 ms, max 1440022 ms, min 23 ms
----------------------------------------------------------------

2023-11-20 10:52:03 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-11-20 10:52:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 11 minutes 6 seconds
Variants: generated 400, build-succeeded 185, build-failed 119, syntax-invalid 78, redundant 18
Fitness: max 0.917(177), min 0.333(1), ave 0.907
Test execution time: sum 19601 ms, max 295 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 10:52:39 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-11-20 10:53:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 11 minutes 42 seconds
Variants: generated 400, build-succeeded 185, build-failed 114, syntax-invalid 75, redundant 26
Fitness: max 1(1), min 0.333(5), ave 0.897
Test execution time: sum 19109 ms, max 229 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 10:53:14 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-11-20 11:17:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 36 minutes 18 seconds
Variants: generated 400, build-succeeded 200, build-failed 114, syntax-invalid 63, redundant 23
Fitness: max 0.917(188), min 0.333(2), ave 0.897
Test execution time: sum 1460345 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 11:17:51 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-11-20 11:18:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 36 minutes 54 seconds
Variants: generated 400, build-succeeded 189, build-failed 116, syntax-invalid 70, redundant 25
Fitness: max 0.917(176), min 0.333(1), ave 0.903
Test execution time: sum 18782 ms, max 355 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 11:18:27 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-11-20 11:19:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 37 minutes 31 seconds
Variants: generated 400, build-succeeded 191, build-failed 113, syntax-invalid 72, redundant 24
Fitness: max 0.917(184), min 0(1), ave 0.904
Test execution time: sum 19734 ms, max 352 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 11:19:04 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-11-20 11:19:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 38 minutes 6 seconds
Variants: generated 400, build-succeeded 187, build-failed 116, syntax-invalid 76, redundant 21
Fitness: max 0.917(172), min 0.333(1), ave 0.898
Test execution time: sum 18540 ms, max 260 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 11:19:39 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-11-20 11:44:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 2 minutes 45 seconds
Variants: generated 400, build-succeeded 205, build-failed 119, syntax-invalid 61, redundant 15
Fitness: max 0.917(197), min 0.333(2), ave 0.904
Test execution time: sum 1460847 ms, max 900021 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 11:44:18 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-11-20 12:08:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 27 minutes 22 seconds
Variants: generated 400, build-succeeded 196, build-failed 121, syntax-invalid 61, redundant 22
Fitness: max 1(1), min 0.333(1), ave 0.908
Test execution time: sum 1460197 ms, max 900021 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 12:08:55 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-11-20 12:09:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 27 minutes 58 seconds
Variants: generated 400, build-succeeded 179, build-failed 126, syntax-invalid 71, redundant 24
Fitness: max 0.917(168), min 0.333(2), ave 0.898
Test execution time: sum 18349 ms, max 241 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 12:09:31 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-11-20 13:26:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 44 minutes 46 seconds
Variants: generated 400, build-succeeded 213, build-failed 111, syntax-invalid 63, redundant 13
Fitness: max 1(1), min 0.333(8), ave 0.883
Test execution time: sum 4590059 ms, max 900021 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 13:26:19 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-11-20 13:50:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 9 minutes 23 seconds
Variants: generated 400, build-succeeded 192, build-failed 109, syntax-invalid 76, redundant 23
Fitness: max 0.917(181), min 0.333(2), ave 0.896
Test execution time: sum 1458858 ms, max 900024 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 13:50:55 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-11-20 14:00:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 19 minutes 1 seconds
Variants: generated 400, build-succeeded 213, build-failed 105, syntax-invalid 57, redundant 25
Fitness: max 1(1), min 0(1), ave 0.889
Test execution time: sum 560357 ms, max 540023 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 14:00:34 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-11-20 14:01:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 19 minutes 41 seconds
Variants: generated 400, build-succeeded 211, build-failed 117, syntax-invalid 48, redundant 24
Fitness: max 0.917(201), min 0.333(1), ave 0.904
Test execution time: sum 20940 ms, max 243 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 14:01:14 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-11-20 14:01:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 20 minutes 24 seconds
Variants: generated 400, build-succeeded 228, build-failed 117, syntax-invalid 38, redundant 17
Fitness: max 0.917(222), min 0.333(1), ave 0.908
Test execution time: sum 23208 ms, max 221 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 14:01:57 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-11-20 14:02:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 21 minutes 6 seconds
Variants: generated 400, build-succeeded 216, build-failed 117, syntax-invalid 48, redundant 19
Fitness: max 0.917(210), min 0.5(1), ave 0.91
Test execution time: sum 23194 ms, max 556 ms, min 23 ms
----------------------------------------------------------------

2023-11-20 14:02:39 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-11-20 14:04:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 22 minutes 57 seconds
Variants: generated 400, build-succeeded 215, build-failed 111, syntax-invalid 59, redundant 15
Fitness: max 0.917(204), min 0(1), ave 0.898
Test execution time: sum 91057 ms, max 69364 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 14:04:30 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-11-20 14:05:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 23 minutes 39 seconds
Variants: generated 400, build-succeeded 210, build-failed 119, syntax-invalid 53, redundant 18
Fitness: max 0.917(203), min 0.333(1), ave 0.906
Test execution time: sum 22659 ms, max 340 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 14:05:12 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-11-20 14:05:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 24 minutes 22 seconds
Variants: generated 400, build-succeeded 221, build-failed 106, syntax-invalid 54, redundant 19
Fitness: max 1(1), min 0.333(3), ave 0.9
Test execution time: sum 22705 ms, max 342 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 14:05:55 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-11-20 14:06:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 25 minutes 2 seconds
Variants: generated 400, build-succeeded 208, build-failed 114, syntax-invalid 56, redundant 22
Fitness: max 0.917(194), min 0.333(2), ave 0.898
Test execution time: sum 20638 ms, max 215 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 14:06:35 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-11-20 14:07:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 25 minutes 41 seconds
Variants: generated 400, build-succeeded 199, build-failed 127, syntax-invalid 58, redundant 16
Fitness: max 1(1), min 0.333(2), ave 0.905
Test execution time: sum 19664 ms, max 210 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 14:07:14 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-11-20 14:19:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 38 minutes 24 seconds
Variants: generated 400, build-succeeded 228, build-failed 115, syntax-invalid 49, redundant 8
Fitness: max 0.917(217), min 0.333(1), ave 0.903
Test execution time: sum 742015 ms, max 720023 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 14:19:57 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-11-20 14:20:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 39 minutes 5 seconds
Variants: generated 400, build-succeeded 202, build-failed 119, syntax-invalid 58, redundant 21
Fitness: max 1(1), min 0.333(2), ave 0.903
Test execution time: sum 20383 ms, max 353 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 14:20:37 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-11-20 14:24:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 42 minutes 48 seconds
Variants: generated 400, build-succeeded 221, build-failed 110, syntax-invalid 46, redundant 23
Fitness: max 0.917(209), min 0.333(1), ave 0.903
Test execution time: sum 203055 ms, max 180135 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 14:24:21 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-11-20 14:34:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 52 minutes 31 seconds
Variants: generated 400, build-succeeded 206, build-failed 121, syntax-invalid 56, redundant 17
Fitness: max 0.917(198), min 0.333(2), ave 0.903
Test execution time: sum 561354 ms, max 540021 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 14:34:03 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-11-20 14:34:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 53 minutes 13 seconds
Variants: generated 400, build-succeeded 211, build-failed 112, syntax-invalid 56, redundant 21
Fitness: max 0.917(203), min 0.5(1), ave 0.908
Test execution time: sum 21305 ms, max 242 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 14:34:46 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-11-20 14:35:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 53 minutes 55 seconds
Variants: generated 400, build-succeeded 202, build-failed 111, syntax-invalid 70, redundant 17
Fitness: max 0.917(200), min 0.667(1), ave 0.915
Test execution time: sum 21371 ms, max 343 ms, min 23 ms
----------------------------------------------------------------

2023-11-20 14:35:28 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-11-20 14:36:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 54 minutes 36 seconds
Variants: generated 400, build-succeeded 192, build-failed 125, syntax-invalid 66, redundant 17
Fitness: max 0.917(185), min 0.333(1), ave 0.905
Test execution time: sum 20065 ms, max 352 ms, min 23 ms
----------------------------------------------------------------

2023-11-20 14:36:09 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-11-20 15:00:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 19 minutes 18 seconds
Variants: generated 400, build-succeeded 207, build-failed 105, syntax-invalid 68, redundant 20
Fitness: max 1(2), min 0(1), ave 0.897
Test execution time: sum 1461339 ms, max 1440021 ms, min 13 ms
----------------------------------------------------------------

2023-11-20 15:00:51 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-11-20 15:01:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 20 minutes 2 seconds
Variants: generated 400, build-succeeded 213, build-failed 112, syntax-invalid 53, redundant 22
Fitness: max 0.917(204), min 0.5(2), ave 0.906
Test execution time: sum 21684 ms, max 354 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 15:01:35 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-11-20 15:02:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 20 minutes 47 seconds
Variants: generated 400, build-succeeded 216, build-failed 119, syntax-invalid 50, redundant 15
Fitness: max 0.917(212), min 0.333(2), ave 0.909
Test execution time: sum 22635 ms, max 361 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 15:02:20 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-11-20 15:21:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 39 minutes 32 seconds
Variants: generated 400, build-succeeded 228, build-failed 116, syntax-invalid 46, redundant 10
Fitness: max 1(1), min 0.417(2), ave 0.905
Test execution time: sum 1102378 ms, max 540024 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 15:21:05 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-11-20 15:45:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 4 minutes 17 seconds
Variants: generated 400, build-succeeded 221, build-failed 110, syntax-invalid 50, redundant 19
Fitness: max 1(2), min 0.333(2), ave 0.898
Test execution time: sum 1462637 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-20 15:45:50 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-11-20 15:46:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 5 minutes 0 seconds
Variants: generated 400, build-succeeded 206, build-failed 121, syntax-invalid 55, redundant 18
Fitness: max 1(1), min 0.5(4), ave 0.902
Test execution time: sum 21070 ms, max 281 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 15:46:33 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-11-20 16:27:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 45 minutes 53 seconds
Variants: generated 400, build-succeeded 218, build-failed 113, syntax-invalid 55, redundant 14
Fitness: max 0.917(203), min 0.333(3), ave 0.893
Test execution time: sum 2430425 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 16:27:26 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-11-20 16:28:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 46 minutes 38 seconds
Variants: generated 400, build-succeeded 216, build-failed 115, syntax-invalid 49, redundant 20
Fitness: max 0.917(208), min 0.333(1), ave 0.905
Test execution time: sum 22200 ms, max 362 ms, min 23 ms
----------------------------------------------------------------

2023-11-20 16:28:11 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-11-20 16:29:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 47 minutes 28 seconds
Variants: generated 400, build-succeeded 221, build-failed 106, syntax-invalid 60, redundant 13
Fitness: max 0.917(209), min 0.333(1), ave 0.901
Test execution time: sum 27017 ms, max 4367 ms, min 22 ms
----------------------------------------------------------------

2023-11-20 16:29:01 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-11-20 16:53:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 12 minutes 13 seconds
Variants: generated 400, build-succeeded 231, build-failed 99, syntax-invalid 58, redundant 12
Fitness: max 0.917(219), min 0.333(1), ave 0.904
Test execution time: sum 1462787 ms, max 1440022 ms, min 23 ms
----------------------------------------------------------------

2023-11-20 16:53:46 [main] [INFO]  KGenProgMain - GA stopped
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v83)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v83)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v83)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v83)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v83)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v83)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v83)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v84)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v84)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v84)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v84)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v84)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v84)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v84)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v603)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v603)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v603)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v603)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v603)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -420,7 +420,6 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
-            readPos = outPos;
         }
     }
     /**
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v603)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v603)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v603)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v606)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v606)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v606)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v606)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v606)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,8 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            String sep = StringUtils.newStringUtf8(lineSeparator);
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v606)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v606)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v606)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -387,7 +387,7 @@
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
-            buffer = b;
+            throw new NullPointerException();
         }
     }
 
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -388,6 +387,7 @@
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
+			eof = true;
         }
     }
 
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v986)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v986)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v986)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v986)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v986)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -387,7 +386,6 @@
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
-            buffer = b;
         }
     }
 
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v986)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v986)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v986)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -420,7 +420,11 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
-            readPos = outPos;
+            {
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
         }
     }
     /**
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1019)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1029)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1029)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1029)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1029)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1029)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -417,7 +417,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1029)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1029)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1029)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1112)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1112)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1112)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1112)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1112)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1112)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1112)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1112)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1116)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1116)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1116)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,7 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
+                        long mod = len % 4;
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1116)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1116)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,7 +416,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1116)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1116)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1116)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1477)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1477)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1477)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1477)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1477)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,7 +418,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1477)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1477)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1477)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1520)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1520)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1520)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1520)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1520)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,7 +426,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1520)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1520)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1520)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1527)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1527)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1527)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1527)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1527)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -419,7 +419,6 @@
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
             buffer = out;
-            pos = outPos;
             readPos = outPos;
         }
     }
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1527)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1527)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1527)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -455,7 +454,8 @@
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+			case '\t':
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1544)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1826)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1826)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1826)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1826)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1826)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1826)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1826)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v1826)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2258)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2258)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2258)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,7 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
+                        long mod = len % 4;
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2258)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2258)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2258)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2258)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2258)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2281)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2281)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2281)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2281)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2281)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,8 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            String sep = StringUtils.newStringUtf8(lineSeparator);
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2281)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2281)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2281)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2281)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2292)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2292)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2292)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2292)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2292)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -417,7 +417,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
@@ -981,7 +981,6 @@
      */
     public static byte[] encodeInteger(BigInteger bigInt) {
         if (bigInt == null) {
-            throw new NullPointerException("encodeInteger called with null parameter");
         }
         return encodeBase64(toIntegerBytes(bigInt), false);
     }
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2292)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2292)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2292)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2343)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2343)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2343)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2343)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2343)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -384,6 +385,7 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2343)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2343)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2343)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2582)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2582)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2582)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2582)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -417,7 +417,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (readPos >= pos) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2582)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2582)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2582)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2761)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2761)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2761)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,7 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
+                        long mod = len % 4;
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2761)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2761)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2761)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2761)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2761)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2777)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2777)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2777)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2777)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2777)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -417,7 +417,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (readPos >= pos) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2777)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2777)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2777)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v2777)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3040)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3040)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3040)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,7 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
+                        long mod = len % 4;
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3040)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3040)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,7 +416,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (readPos >= pos) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3040)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3040)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3040)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			int bytesCopied = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -384,6 +385,7 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3156)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3365)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3365)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3365)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3365)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,9 +416,10 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             buffer = out;
-            pos = outPos;
+            resizeBuffer();
+			pos = outPos;
             readPos = outPos;
         }
     }
@@ -455,7 +455,8 @@
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+			case '\t':
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3365)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3365)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3365)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3380)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3380)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3380)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3380)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3380)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,7 +416,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
@@ -455,7 +454,8 @@
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+			case '\t':
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3380)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3380)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3380)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3445)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3445)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3445)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3445)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3445)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3445)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3445)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3445)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3464)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3464)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3464)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3464)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3464)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            String sep = StringUtils.newStringUtf8(lineSeparator);
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3464)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3464)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3464)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3626)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3626)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3626)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3626)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3626)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			int readLen = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +386,7 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3626)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3626)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v3626)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4156)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4156)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4156)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4156)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4156)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -384,6 +384,7 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -455,7 +456,8 @@
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+			case '\t':
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4156)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4156)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4156)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4156)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -417,7 +417,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
@@ -981,7 +981,6 @@
      */
     public static byte[] encodeInteger(BigInteger bigInt) {
         if (bigInt == null) {
-            throw new NullPointerException("encodeInteger called with null parameter");
         }
         return encodeBase64(toIntegerBytes(bigInt), false);
     }
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4158)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+			int readLen = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,8 +427,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
-            buffer = out;
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             pos = outPos;
             readPos = outPos;
         }
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -384,6 +385,7 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -417,7 +419,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
@@ -455,7 +457,8 @@
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+			case '\t':
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4931)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4931)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4931)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4931)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			int bytesCopied = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,8 +418,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
-            buffer = out;
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             pos = outPos;
             readPos = outPos;
         }
@@ -455,7 +455,8 @@
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+			case '\t':
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4931)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4931)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4931)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v5602)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v5602)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v5602)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v5602)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +385,8 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v5602)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v5602)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v5602)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6108)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6108)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6108)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6108)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            int readLen = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +386,8 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -421,6 +425,7 @@
             buffer = out;
             pos = outPos;
             readPos = outPos;
+			resizeBuffer();
         }
     }
     /**
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6108)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6108)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6108)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6108)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6509)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6509)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6509)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6509)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			lineLength = 0;
+			lineLength = 0;  // disable chunk-separating
+            String sep = StringUtils.newStringUtf8(lineSeparator);
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +387,7 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -417,7 +421,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (eof) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6509)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6509)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6509)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6537)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6537)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6537)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6537)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            int readLen = 0;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +421,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6537)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6537)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6537)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6544)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6544)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6544)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6544)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            int readLen = 0;
+			lineLength = 0;  // disable chunk-separating
+			int bytesCopied = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6544)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6544)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:46 [main] [INFO]  PatchLogExporter - patch (v6544)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -455,7 +456,8 @@
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+			case '\t':
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8515)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8515)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8515)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8515)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +386,10 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -418,7 +424,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8515)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8515)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v8515)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9322)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9322)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9322)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9322)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			eof = true;
+			currentLinePos += 4;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -455,7 +459,8 @@
             switch (modulus) {
                 case 1 :
                     buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
-                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
+			case '\t':
+				buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
                     // URL-SAFE skips the padding to further reduce size.
                     if (encodeTable == STANDARD_ENCODE_TABLE) {
                         buffer[pos++] = PAD;
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9322)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9322)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9322)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9632)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9632)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9632)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9632)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			pos = 0;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +385,9 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
             readPos = 0;
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9632)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9632)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v9632)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v10946)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v10946)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v10946)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v10946)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +382,12 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -418,7 +422,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v10946)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v10946)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v10946)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v11607)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v11607)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v11607)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v11607)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			currentLinePos += 4;
+			eof = true;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +386,10 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
             readPos = 0;
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -417,7 +423,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v11607)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v11607)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v11607)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13730)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13730)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13730)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13730)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			int readLen = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -384,6 +388,8 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -421,6 +427,7 @@
             buffer = out;
             pos = outPos;
             readPos = outPos;
+			buffer = null;
         }
     }
     /**
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13730)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13730)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13730)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13796)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13796)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13796)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13796)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +386,11 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -418,7 +425,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13796)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13796)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v13796)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14336)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14336)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14336)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14336)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			pos = 0;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -384,6 +390,8 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14336)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14336)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14336)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14582)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14582)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14582)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14582)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -981,7 +987,6 @@
      */
     public static byte[] encodeInteger(BigInteger bigInt) {
         if (bigInt == null) {
-            throw new NullPointerException("encodeInteger called with null parameter");
         }
         return encodeBase64(toIntegerBytes(bigInt), false);
     }
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14582)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14582)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v14582)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v15015)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v15015)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v15015)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v15015)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			currentLinePos += 4;
+			pos = 0;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -384,6 +389,8 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v15015)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v15015)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v15015)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v16098)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v16098)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v16098)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v16098)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			currentLinePos += 4;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
+			int bytesCopied = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +387,9 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v16098)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v16098)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v16098)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v16098)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17595)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17595)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17595)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17595)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            int readLen = 0;
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -383,7 +386,13 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
             readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17595)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17595)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17595)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17992)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17992)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17992)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17992)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +383,12 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			readPos = 0;
+			resizeBuffer();
             readPos = 0;
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17992)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17992)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17992)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v17992)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18050)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18050)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18050)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18050)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            int readLen = 0;
+			eof = true;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +387,10 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
             readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18050)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18050)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18050)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18237)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18237)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18237)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18237)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +384,14 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
             readPos = 0;
+			resizeBuffer();
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
+			resizeBuffer();
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18237)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18237)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18237)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18365)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18365)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18365)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18365)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,13 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			lineLength = 0;  // disable chunk-separating
+			eof = true;
+			int bytesCopied = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -384,6 +390,8 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18365)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18365)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18365)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18539)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18539)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18539)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18539)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			currentLinePos += 4;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
+            reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +388,10 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -417,8 +425,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
-            buffer = out;
+        if (encodeTable == STANDARD_ENCODE_TABLE) {
             pos = outPos;
             readPos = outPos;
         }
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18539)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18539)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v18539)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v19960)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v19960)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v19960)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v19960)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -384,6 +389,9 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v19960)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v19960)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v19960)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v21237)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v21237)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v21237)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v21237)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            int readLen = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -383,7 +383,15 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -417,7 +425,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (lineLength > 0) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v21237)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v21237)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v21237)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,6 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
         }
         try {
             return string.getBytes(charsetName);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v21237)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v23713)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v23713)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v23713)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v23713)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            int readLen = 0;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +384,15 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
+			resizeBuffer();
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v23713)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v23713)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v23713)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v24723)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v24723)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v24723)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v24723)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			currentLinePos += 4;
+			pos = 0;
+			eof = true;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +387,15 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+            System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v24723)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v24723)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v24723)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v25555)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v25555)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v25555)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v25555)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			readPos = 0;
+			eof = true;
+			lineLength = 0;  // disable chunk-separating
+			readPos = 0;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +390,8 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v25555)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v25555)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v25555)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v27710)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v27710)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v27710)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v27710)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,15 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			modulus = (++modulus) % 4;
+			int readLen = 0;
+			modulus = (++modulus) % 4;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -383,7 +390,9 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v27710)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v27710)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v27710)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v28529)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v28529)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v28529)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v28529)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            modulus = (++modulus) % 4;
+			resizeBuffer();
+			eof = true;
+			pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -383,6 +391,10 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v28529)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v28529)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v28529)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v29321)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v29321)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v29321)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v29321)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -383,7 +391,10 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
             readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v29321)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v29321)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v29321)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31602)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31602)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31602)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31602)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			pos = 0;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
+			readPos = 0;
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -383,7 +393,11 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
             readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31602)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31602)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31602)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31768)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31768)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31768)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31768)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos += 4;
+			currentLinePos += 4;
+			eof = true;
+			pos = 0;
+			pos = 0;
+			pos = 0;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,7 +390,12 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
             readPos = 0;
+			resizeBuffer();
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -581,6 +593,7 @@
                     buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                     break;
             }
+			modulus = (++modulus) % 3;
         }
     }
 
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31768)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31768)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v31768)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v32907)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v32907)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v32907)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v32907)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -383,7 +389,14 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			resizeBuffer();
+			currentLinePos += 4;
+			currentLinePos += 4;
             readPos = 0;
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v32907)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v32907)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v32907)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33400)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33400)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33400)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33400)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,22 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			pos = 0;
+			pos = 0;
+			pos = 0;
+			lineLength = 0;  // disable chunk-separating
+			readPos = 0;
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -581,6 +595,7 @@
                     buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                     break;
             }
+			modulus = (++modulus) % 3;
         }
     }
 
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33400)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33400)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33400)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33435)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33435)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33435)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33435)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			eof = true;
+			currentLinePos += 4;
+			pos = 0;
+			pos = 0;
+			pos = 0;
+			resizeBuffer();
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -384,6 +393,8 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -581,6 +592,7 @@
                     buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                     break;
             }
+			modulus = (++modulus) % 3;
         }
     }
 
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33435)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33435)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33435)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33736)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33736)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33736)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33736)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			currentLinePos += 4;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -384,6 +389,11 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+			resizeBuffer();
+			System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -418,7 +428,7 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
+            modulus = 0;
             pos = outPos;
             readPos = outPos;
         }
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33736)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33736)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  PatchLogExporter - patch (v33736)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-20 16:53:47 [main] [INFO]  KGenProgMain - Summary
Reached generation = 90
Generated variants = 35600
Syntax valid variants = 30168
Build succeeded variants = 16497
Time elapsed = 24 hours 12 minutes 14 seconds
Exit status = FAILURE (time limit)
