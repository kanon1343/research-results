2023-11-14 01:02:10 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-11-14 01:02:10 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-11-14 01:02:10 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-11-14 01:02:10 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 1 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-11-14 01:02:13 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-11-14 01:02:13 [main] [INFO]  KGenProgMain - GA started
2023-11-14 01:02:13 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-11-14 02:14:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 6 seconds
Variants: generated 200, build-succeeded 25, build-failed 105, syntax-invalid 15, redundant 55
Fitness: max 1(1), min 0.333(3), ave 0.763
Test execution time: sum 4322890 ms, max 1440037 ms, min 26 ms
----------------------------------------------------------------

2023-11-14 02:14:19 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-11-14 03:34:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 53 seconds
Variants: generated 200, build-succeeded 44, build-failed 102, syntax-invalid 28, redundant 26
Fitness: max 0.917(12), min 0.333(2), ave 0.773
Test execution time: sum 4783660 ms, max 1440023 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 03:34:07 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-11-14 07:40:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 3 seconds
Variants: generated 400, build-succeeded 132, build-failed 109, syntax-invalid 46, redundant 113
Fitness: max 1(4), min 0.333(4), ave 0.766
Test execution time: sum 14762993 ms, max 1440023 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 07:40:16 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-11-14 09:04:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 2 minutes 14 seconds
Variants: generated 400, build-succeeded 126, build-failed 106, syntax-invalid 36, redundant 132
Fitness: max 1(6), min 0.333(2), ave 0.798
Test execution time: sum 5043888 ms, max 1440022 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 09:04:27 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-11-14 10:27:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 minutes 10 seconds
Variants: generated 400, build-succeeded 143, build-failed 117, syntax-invalid 33, redundant 107
Fitness: max 1(2), min 0.333(1), ave 0.811
Test execution time: sum 4969180 ms, max 1260021 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 10:27:23 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-11-14 11:00:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 58 minutes 16 seconds
Variants: generated 400, build-succeeded 109, build-failed 110, syntax-invalid 54, redundant 127
Fitness: max 1(3), min 0.5(1), ave 0.877
Test execution time: sum 1980435 ms, max 539565 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 11:00:30 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-11-14 11:27:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 25 minutes 22 seconds
Variants: generated 400, build-succeeded 111, build-failed 127, syntax-invalid 43, redundant 119
Fitness: max 1(2), min 0.167(1), ave 0.87
Test execution time: sum 1618866 ms, max 539260 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 11:27:35 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-11-14 12:00:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 58 minutes 39 seconds
Variants: generated 400, build-succeeded 135, build-failed 127, syntax-invalid 49, redundant 89
Fitness: max 1(2), min 0.333(1), ave 0.888
Test execution time: sum 1990055 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 12:00:53 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-11-14 12:02:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 39 seconds
Variants: generated 400, build-succeeded 114, build-failed 134, syntax-invalid 48, redundant 104
Fitness: max 1(3), min 0.5(2), ave 0.906
Test execution time: sum 113124 ms, max 103871 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 12:02:53 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-11-14 12:03:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 58 seconds
Variants: generated 400, build-succeeded 145, build-failed 115, syntax-invalid 48, redundant 92
Fitness: max 1(2), min 0.667(3), ave 0.903
Test execution time: sum 11255 ms, max 121 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 12:03:11 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-11-14 12:27:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 17 seconds
Variants: generated 400, build-succeeded 136, build-failed 150, syntax-invalid 43, redundant 71
Fitness: max 1(4), min 0.333(1), ave 0.896
Test execution time: sum 1450789 ms, max 1440021 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 12:27:30 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-11-14 12:27:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 38 seconds
Variants: generated 400, build-succeeded 162, build-failed 135, syntax-invalid 45, redundant 58
Fitness: max 1(1), min 0.5(1), ave 0.908
Test execution time: sum 13153 ms, max 136 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 12:27:51 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-11-14 12:43:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 41 minutes 0 seconds
Variants: generated 400, build-succeeded 167, build-failed 124, syntax-invalid 39, redundant 70
Fitness: max 0.917(156), min 0.5(2), ave 0.902
Test execution time: sum 913154 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 12:43:13 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-11-14 13:22:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 20 minutes 23 seconds
Variants: generated 400, build-succeeded 178, build-failed 129, syntax-invalid 52, redundant 41
Fitness: max 1(2), min 0.333(1), ave 0.893
Test execution time: sum 2354082 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 13:22:37 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-11-14 13:23:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 20 minutes 48 seconds
Variants: generated 400, build-succeeded 175, build-failed 132, syntax-invalid 39, redundant 54
Fitness: max 0.917(166), min 0.667(3), ave 0.907
Test execution time: sum 14542 ms, max 171 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 13:23:01 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-11-14 13:23:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 21 minutes 12 seconds
Variants: generated 400, build-succeeded 170, build-failed 135, syntax-invalid 55, redundant 40
Fitness: max 1(1), min 0.417(1), ave 0.904
Test execution time: sum 14230 ms, max 195 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 13:23:25 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-11-14 13:47:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 45 minutes 37 seconds
Variants: generated 400, build-succeeded 191, build-failed 129, syntax-invalid 45, redundant 35
Fitness: max 1(1), min 0.333(2), ave 0.904
Test execution time: sum 1455720 ms, max 1440021 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 13:47:51 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-11-14 14:06:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 4 minutes 2 seconds
Variants: generated 400, build-succeeded 174, build-failed 127, syntax-invalid 56, redundant 43
Fitness: max 1(1), min 0.333(1), ave 0.903
Test execution time: sum 1094403 ms, max 1080020 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 14:06:15 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-11-14 14:06:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 4 minutes 27 seconds
Variants: generated 400, build-succeeded 179, build-failed 122, syntax-invalid 56, redundant 43
Fitness: max 1(1), min 0.333(1), ave 0.905
Test execution time: sum 15018 ms, max 161 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 14:06:40 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-11-14 14:55:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 52 minutes 52 seconds
Variants: generated 400, build-succeeded 187, build-failed 113, syntax-invalid 58, redundant 42
Fitness: max 1(1), min 0.333(2), ave 0.899
Test execution time: sum 2894870 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 14:55:06 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-11-14 14:55:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 53 minutes 17 seconds
Variants: generated 400, build-succeeded 179, build-failed 130, syntax-invalid 54, redundant 37
Fitness: max 0.917(161), min 0.417(1), ave 0.892
Test execution time: sum 14564 ms, max 605 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 14:55:31 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-11-14 14:55:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 53 minutes 42 seconds
Variants: generated 400, build-succeeded 173, build-failed 136, syntax-invalid 64, redundant 27
Fitness: max 1(5), min 0.667(7), ave 0.906
Test execution time: sum 14185 ms, max 137 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 14:55:56 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-11-14 14:56:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 54 minutes 9 seconds
Variants: generated 400, build-succeeded 197, build-failed 125, syntax-invalid 46, redundant 32
Fitness: max 1(2), min 0.333(1), ave 0.898
Test execution time: sum 15879 ms, max 132 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 14:56:22 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-11-14 14:58:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 55 minutes 48 seconds
Variants: generated 400, build-succeeded 211, build-failed 134, syntax-invalid 32, redundant 23
Fitness: max 0.917(194), min 0.5(1), ave 0.9
Test execution time: sum 87733 ms, max 69897 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 14:58:01 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-11-14 14:59:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 57 minutes 30 seconds
Variants: generated 400, build-succeeded 206, build-failed 136, syntax-invalid 33, redundant 25
Fitness: max 1(1), min 0.333(1), ave 0.898
Test execution time: sum 90421 ms, max 73329 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 14:59:43 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-11-14 15:24:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 21 minutes 59 seconds
Variants: generated 400, build-succeeded 211, build-failed 132, syntax-invalid 30, redundant 27
Fitness: max 0.917(197), min 0.333(2), ave 0.9
Test execution time: sum 1457644 ms, max 1440021 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 15:24:13 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-11-14 15:24:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 22 minutes 29 seconds
Variants: generated 400, build-succeeded 218, build-failed 124, syntax-invalid 33, redundant 25
Fitness: max 1(2), min 0.667(7), ave 0.905
Test execution time: sum 18196 ms, max 138 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 15:24:43 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-11-14 16:19:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 16 minutes 59 seconds
Variants: generated 400, build-succeeded 216, build-failed 119, syntax-invalid 34, redundant 31
Fitness: max 0.917(201), min 0.333(2), ave 0.898
Test execution time: sum 3257981 ms, max 1440021 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 16:19:12 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-11-14 16:58:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 56 minutes 30 seconds
Variants: generated 400, build-succeeded 219, build-failed 129, syntax-invalid 35, redundant 17
Fitness: max 1(1), min 0.333(1), ave 0.898
Test execution time: sum 2358334 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 16:58:43 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-11-14 16:59:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 56 minutes 59 seconds
Variants: generated 400, build-succeeded 210, build-failed 116, syntax-invalid 50, redundant 24
Fitness: max 1(1), min 0.5(1), ave 0.902
Test execution time: sum 17736 ms, max 188 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 16:59:13 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-11-14 17:14:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 12 minutes 30 seconds
Variants: generated 400, build-succeeded 218, build-failed 107, syntax-invalid 47, redundant 28
Fitness: max 0.917(211), min 0.583(1), ave 0.91
Test execution time: sum 918521 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 17:14:43 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-11-14 17:51:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 48 minutes 59 seconds
Variants: generated 400, build-succeeded 199, build-failed 125, syntax-invalid 61, redundant 15
Fitness: max 0.917(186), min 0.333(1), ave 0.901
Test execution time: sum 2177254 ms, max 1080021 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 17:51:13 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-11-14 18:15:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 13 minutes 28 seconds
Variants: generated 400, build-succeeded 189, build-failed 120, syntax-invalid 64, redundant 27
Fitness: max 1(1), min 0.333(1), ave 0.903
Test execution time: sum 1456281 ms, max 1440021 ms, min 20 ms
----------------------------------------------------------------

2023-11-14 18:15:42 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-11-14 18:58:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 55 minutes 58 seconds
Variants: generated 400, build-succeeded 205, build-failed 116, syntax-invalid 53, redundant 26
Fitness: max 1(1), min 0.333(1), ave 0.899
Test execution time: sum 2537268 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 18:58:11 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-11-14 19:13:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 11 minutes 28 seconds
Variants: generated 400, build-succeeded 203, build-failed 110, syntax-invalid 62, redundant 25
Fitness: max 1(1), min 0.5(1), ave 0.9
Test execution time: sum 916935 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 19:13:41 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-11-14 19:14:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 11 minutes 58 seconds
Variants: generated 400, build-succeeded 200, build-failed 119, syntax-invalid 58, redundant 23
Fitness: max 0.917(189), min 0.333(1), ave 0.903
Test execution time: sum 17243 ms, max 184 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 19:14:11 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-11-14 19:29:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 27 minutes 28 seconds
Variants: generated 400, build-succeeded 195, build-failed 119, syntax-invalid 74, redundant 12
Fitness: max 0.917(186), min 0.417(1), ave 0.906
Test execution time: sum 916479 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 19:29:41 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-11-14 19:30:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 27 minutes 58 seconds
Variants: generated 400, build-succeeded 196, build-failed 135, syntax-invalid 52, redundant 17
Fitness: max 1(1), min 0.333(1), ave 0.909
Test execution time: sum 17335 ms, max 178 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 19:30:12 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-11-14 19:45:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 43 minutes 29 seconds
Variants: generated 400, build-succeeded 201, build-failed 127, syntax-invalid 58, redundant 14
Fitness: max 0.917(190), min 0.583(1), ave 0.905
Test execution time: sum 917161 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 19:45:42 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-11-14 21:01:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 58 minutes 59 seconds
Variants: generated 400, build-succeeded 209, build-failed 111, syntax-invalid 58, redundant 22
Fitness: max 1(1), min 0.25(1), ave 0.894
Test execution time: sum 4517436 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 21:01:13 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-11-14 21:01:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 59 minutes 31 seconds
Variants: generated 400, build-succeeded 212, build-failed 106, syntax-invalid 61, redundant 21
Fitness: max 0.917(196), min 0.25(1), ave 0.896
Test execution time: sum 17724 ms, max 160 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 21:01:44 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-11-14 21:02:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 3 seconds
Variants: generated 400, build-succeeded 212, build-failed 116, syntax-invalid 55, redundant 17
Fitness: max 0.917(197), min 0.5(2), ave 0.902
Test execution time: sum 17861 ms, max 157 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 21:02:16 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-11-14 21:17:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 15 minutes 34 seconds
Variants: generated 400, build-succeeded 210, build-failed 120, syntax-invalid 54, redundant 16
Fitness: max 1(2), min 0.583(1), ave 0.904
Test execution time: sum 917471 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 21:17:47 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-11-14 21:42:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 40 minutes 7 seconds
Variants: generated 400, build-succeeded 216, build-failed 130, syntax-invalid 44, redundant 10
Fitness: max 1(2), min 0.333(1), ave 0.9
Test execution time: sum 1458397 ms, max 1440021 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 21:42:20 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-11-14 22:06:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 4 minutes 39 seconds
Variants: generated 400, build-succeeded 207, build-failed 115, syntax-invalid 59, redundant 19
Fitness: max 1(2), min 0.333(1), ave 0.899
Test execution time: sum 1457406 ms, max 1440021 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 22:06:52 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-11-14 22:07:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 5 minutes 12 seconds
Variants: generated 400, build-succeeded 221, build-failed 116, syntax-invalid 48, redundant 15
Fitness: max 0.917(203), min 0.667(8), ave 0.902
Test execution time: sum 18450 ms, max 159 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 22:07:25 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-11-14 22:31:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 29 minutes 45 seconds
Variants: generated 400, build-succeeded 216, build-failed 121, syntax-invalid 46, redundant 17
Fitness: max 0.917(199), min 0.333(1), ave 0.898
Test execution time: sum 1457861 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 22:31:58 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-11-14 23:02:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 22 seconds
Variants: generated 400, build-succeeded 220, build-failed 113, syntax-invalid 48, redundant 19
Fitness: max 0.917(200), min 0.333(1), ave 0.893
Test execution time: sum 1822755 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 23:02:35 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-11-14 23:18:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 15 minutes 55 seconds
Variants: generated 400, build-succeeded 213, build-failed 111, syntax-invalid 54, redundant 22
Fitness: max 0.917(200), min 0.333(1), ave 0.9
Test execution time: sum 917970 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 23:18:08 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-11-14 23:33:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 31 minutes 27 seconds
Variants: generated 400, build-succeeded 217, build-failed 109, syntax-invalid 61, redundant 13
Fitness: max 1(1), min 0.333(1), ave 0.898
Test execution time: sum 917839 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-14 23:33:40 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-11-14 23:34:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 32 minutes 1 seconds
Variants: generated 400, build-succeeded 213, build-failed 118, syntax-invalid 48, redundant 21
Fitness: max 1(1), min 0.5(1), ave 0.906
Test execution time: sum 18213 ms, max 172 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 23:34:14 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-11-14 23:49:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 47 minutes 32 seconds
Variants: generated 400, build-succeeded 194, build-failed 122, syntax-invalid 62, redundant 22
Fitness: max 0.917(181), min 0.583(1), ave 0.902
Test execution time: sum 916743 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 23:49:45 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-11-14 23:52:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 50 minutes 10 seconds
Variants: generated 400, build-succeeded 198, build-failed 116, syntax-invalid 74, redundant 12
Fitness: max 1(1), min 0.5(1), ave 0.904
Test execution time: sum 143857 ms, max 127144 ms, min 22 ms
----------------------------------------------------------------

2023-11-14 23:52:24 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-11-15 00:27:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 25 minutes 0 seconds
Variants: generated 400, build-succeeded 221, build-failed 122, syntax-invalid 43, redundant 14
Fitness: max 0.917(201), min 0.333(1), ave 0.894
Test execution time: sum 2073979 ms, max 1080021 ms, min 21 ms
----------------------------------------------------------------

2023-11-15 00:27:14 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-11-15 00:57:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 55 minutes 35 seconds
Variants: generated 400, build-succeeded 222, build-failed 123, syntax-invalid 41, redundant 14
Fitness: max 1(1), min 0.333(1), ave 0.893
Test execution time: sum 1818583 ms, max 1080021 ms, min 22 ms
----------------------------------------------------------------

2023-11-15 00:57:48 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-11-15 01:28:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 26 minutes 9 seconds
Variants: generated 400, build-succeeded 218, build-failed 114, syntax-invalid 56, redundant 12
Fitness: max 1(1), min 0.5(1), ave 0.901
Test execution time: sum 1817986 ms, max 1080021 ms, min 22 ms
----------------------------------------------------------------

2023-11-15 01:28:22 [main] [INFO]  KGenProgMain - GA stopped
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v192)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v639)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v639)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v639)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v639)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v639)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -386,7 +386,6 @@
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
-            System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
         }
     }
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v639)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v639)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v639)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v640)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v640)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v640)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v640)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v640)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -484,6 +484,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					readPos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v640)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v640)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v640)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v719)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v719)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v719)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v719)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v719)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,7 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v719)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v719)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v719)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v790)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v790)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v790)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v790)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v790)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,7 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v790)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v790)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v790)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -419,7 +419,6 @@
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
             buffer = out;
-            pos = outPos;
             readPos = outPos;
         }
     }
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1062)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1062)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1062)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1062)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1062)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1062)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1062)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1062)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1135)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1135)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1135)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1135)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1135)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -420,7 +420,6 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
-            readPos = outPos;
         }
     }
     /**
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1135)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1135)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1135)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1142)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1142)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1142)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1142)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1142)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,7 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1142)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1142)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1142)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -387,6 +387,7 @@
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
+			buffer[pos++] = encodeTable[x & MASK_6BITS];
             buffer = b;
         }
     }
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1162)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1193)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1193)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1193)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1193)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,7 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1193)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1193)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1193)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1440)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1440)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1440)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1440)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,7 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1440)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1440)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1440)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:22 [main] [INFO]  PatchLogExporter - patch (v1502)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -484,6 +483,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					readPos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1819)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1819)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1819)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1819)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1819)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,7 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1819)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1819)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1819)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1948)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1948)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1948)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1948)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1948)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,7 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +419,8 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
+            eof = false;
+			buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1948)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1948)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v1948)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2293)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2293)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2293)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2293)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2293)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
+			reset();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2293)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2293)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2293)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2307)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2307)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2307)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2307)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2307)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2307)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2307)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2307)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2677)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2677)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2677)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2677)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2677)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,8 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2677)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2677)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2677)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v2698)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3065)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3065)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3065)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3065)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3065)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,7 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1027,6 +1028,7 @@
         currentLinePos = 0;
         modulus = 0;
         eof = false;
+		int readLen = 0;
     }
 
 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3065)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3065)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3065)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3085)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3085)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3085)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3085)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3085)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3085)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3085)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3085)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,9 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3130)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3544)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3544)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3544)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3544)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3544)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,8 +333,10 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3544)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3544)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3544)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3547)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3547)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3547)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3547)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3547)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -556,6 +557,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3547)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3547)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3547)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,15 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3849)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3849)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3849)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3849)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3849)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,8 +333,10 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3849)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3849)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3849)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3941)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3941)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3941)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3941)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3941)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,8 +333,10 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3941)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3941)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3941)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3956)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3956)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3956)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3956)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3956)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            int bytesCopied = 0;
+			pos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3956)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3956)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v3956)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			resizeBuffer();
+			pos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v4179)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5111)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5111)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5111)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5111)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5111)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,9 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
@@ -383,6 +385,7 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -418,7 +421,8 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
+            eof = false;
+			buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5111)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5111)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5111)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +494,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					readPos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5763)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5763)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5763)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5763)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,10 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,7 +385,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+            {
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5763)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5763)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v5763)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6182)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6182)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6182)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6182)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,9 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -417,11 +420,8 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
-            buffer = out;
-            pos = outPos;
-            readPos = outPos;
-        }
+        if (out != null && out.length == outAvail)
+			readPos = outPos;
     }
     /**
      * <p>
@@ -556,6 +556,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6182)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6182)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6182)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6557)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6557)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6557)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6557)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,9 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
@@ -383,6 +386,7 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
@@ -570,7 +574,8 @@
                 resizeBuffer();
             }
             
-            x = x << 6;
+            byte b = lineSeparator[lineSeparator.length - 1];
+			x = x << 6;
             switch (modulus) {
                 case 2 :
                     x = x << 6;
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6557)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6557)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6557)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6954)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6954)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6954)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6954)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6954)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,8 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			readPos = 0;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -382,7 +384,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+            {
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6954)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6954)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v6954)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			readPos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			pos = 0;
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,9 +422,11 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
+            eof = false;
+			buffer = out;
             pos = outPos;
-            readPos = outPos;
+            resizeBuffer();
+			readPos = outPos;
         }
     }
     /**
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8001)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8001)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8001)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8001)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1022,7 +1025,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8001)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8001)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8001)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
+			currentLinePos = 0;
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -417,11 +421,8 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
-            buffer = out;
-            pos = outPos;
-            readPos = outPos;
-        }
+        if (out != null && out.length == outAvail)
+			resizeBuffer();
     }
     /**
      * <p>
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8164)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8164)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8164)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8164)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			eof = true;
+			buffer[pos++] = (byte) (x & MASK_8BITS);
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -383,6 +385,7 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8164)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8164)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8164)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8339)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8339)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8339)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8339)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			eof = true;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1022,7 +1026,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8339)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8339)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8339)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8384)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8384)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8384)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int startSrc = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8384)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8384)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			currentLinePos = 0;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8384)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8384)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8384)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            pos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +420,7 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
+            System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
             pos = outPos;
             readPos = outPos;
         }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8423)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8423)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8423)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8423)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8423)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,7 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -556,6 +557,8 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
+							x = x << 6;
                         }
                     }
                 }
@@ -1022,7 +1025,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8423)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8423)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v8423)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v9509)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v9509)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v9509)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int startSrc = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v9509)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v9509)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			readPos = 0;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -556,6 +559,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v9509)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v9509)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v9509)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10105)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10105)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10105)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10105)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,9 +332,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			readPos = 0;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10105)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10105)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10105)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10151)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10151)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10151)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int startSrc = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10151)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10151)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,9 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10151)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10151)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10151)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10821)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10821)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10821)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10821)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,9 +332,16 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			pos = 0;
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10821)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10821)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v10821)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v11247)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v11247)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v11247)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v11247)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v11247)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,10 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			x = x << 6;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -556,6 +559,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
@@ -1022,7 +1026,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v11247)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v11247)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v11247)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v12406)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v12406)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v12406)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v12406)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v12406)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			pos = 0;
+			readPos = 0;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v12406)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v12406)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v12406)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13106)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13106)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13106)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13106)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
+			resizeBuffer();
+            buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13106)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13106)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13106)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13324)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13324)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13324)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13324)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
+			reset();
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -420,7 +425,7 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
-            readPos = outPos;
+            buffer = null;
         }
     }
     /**
@@ -449,6 +454,7 @@
         // encoding.
         if (inAvail < 0) {
             eof = true;
+			currentLinePos = 0;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13324)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13324)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v13324)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v14590)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v14590)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v14590)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v14590)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,9 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			currentLinePos = 0;
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
@@ -449,6 +453,7 @@
         // encoding.
         if (inAvail < 0) {
             eof = true;
+			currentLinePos = 0;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -556,6 +561,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v14590)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v14590)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v14590)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v15327)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v15327)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v15327)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v15327)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v15327)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			pos = 0;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v15327)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v15327)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v15327)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16410)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16410)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16410)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16410)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			eof = true;
+			pos = 0;
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -449,6 +454,7 @@
         // encoding.
         if (inAvail < 0) {
             eof = true;
+			currentLinePos = 0;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -556,6 +562,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16410)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16410)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16410)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16445)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16445)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16445)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16445)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -449,6 +453,7 @@
         // encoding.
         if (inAvail < 0) {
             eof = true;
+			currentLinePos = 0;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -556,6 +561,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16445)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16445)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16445)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16826)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16826)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16826)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16826)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,15 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			pos = 0;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			currentLinePos = 0;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			currentLinePos = 0;
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +426,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16826)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16826)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16826)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16853)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16853)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16853)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16853)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16853)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,9 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
         }
-        this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
+        readPos = 0;
+		this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
         if (lineLength > 0) {
@@ -418,7 +421,8 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
+            eof = false;
+			buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -556,6 +560,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
@@ -1022,7 +1027,6 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16853)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16853)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v16853)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17217)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17217)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17217)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17217)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,15 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			resizeBuffer();
+			pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -556,6 +564,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17217)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17217)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17217)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17263)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17263)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17263)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int startSrc = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17263)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17263)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			resizeBuffer();
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			pos = 0;
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17263)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17263)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v17263)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19218)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19218)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19218)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19218)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			currentLinePos = 0;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -449,6 +455,7 @@
         // encoding.
         if (inAvail < 0) {
             eof = true;
+			currentLinePos = 0;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -556,6 +563,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19218)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19218)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19218)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19665)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19665)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19665)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19665)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			pos = 0;
+			pos = 0;
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +490,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					readPos = 0;
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
@@ -556,6 +563,8 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19665)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19665)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v19665)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v20499)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v20499)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v20499)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v20499)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			x = x << 6;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -383,7 +387,7 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
-            readPos = 0;
+			readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -418,7 +422,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -449,6 +452,7 @@
         // encoding.
         if (inAvail < 0) {
             eof = true;
+			currentLinePos = 0;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -556,6 +560,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v20499)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v20499)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v20499)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21305)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21305)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21305)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21305)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,22 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			currentLinePos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -449,6 +463,8 @@
         // encoding.
         if (inAvail < 0) {
             eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
             if (buffer == null || buffer.length - pos < encodeSize) {
                 resizeBuffer();
             }
@@ -556,6 +572,7 @@
                             buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                             buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                             buffer[pos++] = (byte) (x & MASK_8BITS);
+							x = x << 6;
                         }
                     }
                 }
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21305)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21305)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21305)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21681)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21681)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21681)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int startSrc = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
@@ -167,7 +168,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21681)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21681)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			readPos = 0;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -383,6 +387,7 @@
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
+			currentLinePos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21681)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21681)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  PatchLogExporter - patch (v21681)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-15 01:28:23 [main] [INFO]  KGenProgMain - Summary
Reached generation = 56
Generated variants = 22000
Syntax valid variants = 19260
Build succeeded variants = 10268
Time elapsed = 24 hours 26 minutes 10 seconds
Exit status = FAILURE (time limit)
