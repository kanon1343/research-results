2023-07-01 19:10:24 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-07-01 19:10:24 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-07-01 19:10:24 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-07-01 19:10:25 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/kgenprog-82.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/src/main] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.optimization.linear.SimplexSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 1000 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 5 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-07-01 19:10:30 [main] [INFO]  KGenProgMain - initial failed tests (1/14)
org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288: expected:<10.0> but was:<11.5>

2023-07-01 19:10:30 [main] [INFO]  KGenProgMain - GA started
2023-07-01 19:10:30 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-07-01 19:10:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 200, build-succeeded 26, build-failed 131, syntax-invalid 15, redundant 28
Fitness: max 0.929(12), min 0(5), ave 0.569
Test execution time: sum 3825 ms, max 280 ms, min 67 ms
----------------------------------------------------------------

2023-07-01 19:10:38 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-07-01 19:10:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 200, build-succeeded 31, build-failed 144, syntax-invalid 13, redundant 12
Fitness: max 0.929(5), min 0(5), ave 0.551
Test execution time: sum 3632 ms, max 161 ms, min 83 ms
----------------------------------------------------------------

2023-07-01 19:10:46 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-07-01 19:44:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 36 seconds
Variants: generated 400, build-succeeded 128, build-failed 144, syntax-invalid 17, redundant 111
Fitness: max 0.929(21), min 0(26), ave 0.503
Test execution time: sum 1993827 ms, max 1980133 ms, min 64 ms
----------------------------------------------------------------

2023-07-01 19:44:06 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-07-01 19:44:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 53 seconds
Variants: generated 400, build-succeeded 94, build-failed 150, syntax-invalid 19, redundant 137
Fitness: max 0.929(32), min 0(3), ave 0.72
Test execution time: sum 10630 ms, max 158 ms, min 75 ms
----------------------------------------------------------------

2023-07-01 19:44:24 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-07-01 19:44:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 9 seconds
Variants: generated 400, build-succeeded 81, build-failed 152, syntax-invalid 20, redundant 147
Fitness: max 0.929(49), min 0(5), ave 0.824
Test execution time: sum 9095 ms, max 163 ms, min 81 ms
----------------------------------------------------------------

2023-07-01 19:44:39 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-07-01 19:44:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 26 seconds
Variants: generated 400, build-succeeded 99, build-failed 139, syntax-invalid 25, redundant 137
Fitness: max 0.929(79), min 0(5), ave 0.824
Test execution time: sum 11375 ms, max 146 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 19:44:57 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-07-01 20:18:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 47 seconds
Variants: generated 400, build-succeeded 121, build-failed 135, syntax-invalid 19, redundant 125
Fitness: max 0.929(88), min 0(8), ave 0.8
Test execution time: sum 1993965 ms, max 1980100 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 20:18:17 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-07-01 21:24:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 7 seconds
Variants: generated 400, build-succeeded 121, build-failed 146, syntax-invalid 19, redundant 114
Fitness: max 0.929(97), min 0(7), ave 0.816
Test execution time: sum 3973996 ms, max 1980097 ms, min 80 ms
----------------------------------------------------------------

2023-07-01 21:24:37 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-07-01 21:25:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 29 seconds
Variants: generated 400, build-succeeded 130, build-failed 151, syntax-invalid 17, redundant 102
Fitness: max 0.929(102), min 0(5), ave 0.841
Test execution time: sum 15421 ms, max 166 ms, min 68 ms
----------------------------------------------------------------

2023-07-01 21:25:00 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-07-01 21:25:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 53 seconds
Variants: generated 400, build-succeeded 141, build-failed 141, syntax-invalid 28, redundant 90
Fitness: max 0.929(118), min 0(7), ave 0.839
Test execution time: sum 16434 ms, max 170 ms, min 80 ms
----------------------------------------------------------------

2023-07-01 21:25:23 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-07-01 21:25:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 18 seconds
Variants: generated 400, build-succeeded 156, build-failed 135, syntax-invalid 32, redundant 77
Fitness: max 0.929(131), min 0(3), ave 0.875
Test execution time: sum 18193 ms, max 155 ms, min 89 ms
----------------------------------------------------------------

2023-07-01 21:25:48 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-07-01 21:59:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 44 seconds
Variants: generated 400, build-succeeded 165, build-failed 140, syntax-invalid 27, redundant 68
Fitness: max 0.929(140), min 0(4), ave 0.849
Test execution time: sum 1999140 ms, max 1980107 ms, min 75 ms
----------------------------------------------------------------

2023-07-01 21:59:14 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-07-01 21:59:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 10 seconds
Variants: generated 400, build-succeeded 166, build-failed 133, syntax-invalid 30, redundant 71
Fitness: max 0.929(139), min 0(6), ave 0.847
Test execution time: sum 19165 ms, max 147 ms, min 71 ms
----------------------------------------------------------------

2023-07-01 21:59:41 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-07-01 22:00:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 38 seconds
Variants: generated 400, build-succeeded 182, build-failed 133, syntax-invalid 25, redundant 60
Fitness: max 0.929(151), min 0(7), ave 0.839
Test execution time: sum 21220 ms, max 189 ms, min 67 ms
----------------------------------------------------------------

2023-07-01 22:00:09 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-07-01 22:33:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 5 seconds
Variants: generated 400, build-succeeded 164, build-failed 152, syntax-invalid 29, redundant 55
Fitness: max 0.929(139), min 0(4), ave 0.858
Test execution time: sum 1999120 ms, max 1980101 ms, min 73 ms
----------------------------------------------------------------

2023-07-01 22:33:36 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-07-01 23:07:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 32 seconds
Variants: generated 400, build-succeeded 165, build-failed 148, syntax-invalid 25, redundant 62
Fitness: max 0.929(140), min 0(10), ave 0.834
Test execution time: sum 1999037 ms, max 1980100 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 23:07:02 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-07-01 23:40:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 1 seconds
Variants: generated 400, build-succeeded 181, build-failed 148, syntax-invalid 22, redundant 49
Fitness: max 0.929(159), min 0(2), ave 0.872
Test execution time: sum 2001115 ms, max 1980096 ms, min 65 ms
----------------------------------------------------------------

2023-07-01 23:40:31 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-07-02 00:13:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 3 minutes 28 seconds
Variants: generated 400, build-succeeded 168, build-failed 149, syntax-invalid 18, redundant 65
Fitness: max 0.929(142), min 0(10), ave 0.829
Test execution time: sum 1999527 ms, max 1980099 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 00:13:59 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-07-02 00:47:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 56 seconds
Variants: generated 400, build-succeeded 168, build-failed 139, syntax-invalid 29, redundant 64
Fitness: max 0.929(141), min 0(4), ave 0.864
Test execution time: sum 1999722 ms, max 1980095 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 00:47:26 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-07-02 01:53:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 26 seconds
Variants: generated 400, build-succeeded 192, build-failed 133, syntax-invalid 19, redundant 56
Fitness: max 0.929(161), min 0(12), ave 0.818
Test execution time: sum 3982229 ms, max 1980099 ms, min 65 ms
----------------------------------------------------------------

2023-07-02 01:53:56 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-07-02 02:27:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 16 minutes 56 seconds
Variants: generated 400, build-succeeded 187, build-failed 139, syntax-invalid 27, redundant 47
Fitness: max 0.929(170), min 0(8), ave 0.869
Test execution time: sum 2001981 ms, max 1980096 ms, min 65 ms
----------------------------------------------------------------

2023-07-02 02:27:27 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-07-02 03:00:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 50 minutes 28 seconds
Variants: generated 400, build-succeeded 199, build-failed 150, syntax-invalid 15, redundant 36
Fitness: max 0.929(171), min 0(7), ave 0.861
Test execution time: sum 2003137 ms, max 1980129 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 03:00:58 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-07-02 03:01:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 50 minutes 59 seconds
Variants: generated 400, build-succeeded 190, build-failed 155, syntax-invalid 13, redundant 42
Fitness: max 0.929(168), min 0(5), ave 0.881
Test execution time: sum 22209 ms, max 172 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 03:01:29 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-07-02 03:34:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 24 minutes 29 seconds
Variants: generated 400, build-succeeded 184, build-failed 149, syntax-invalid 29, redundant 38
Fitness: max 1(1), min 0(12), ave 0.829
Test execution time: sum 2001366 ms, max 1980094 ms, min 65 ms
----------------------------------------------------------------

2023-07-02 03:34:59 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-07-02 03:35:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 24 minutes 59 seconds
Variants: generated 400, build-succeeded 185, build-failed 147, syntax-invalid 22, redundant 46
Fitness: max 1(1), min 0(3), ave 0.882
Test execution time: sum 22014 ms, max 198 ms, min 91 ms
----------------------------------------------------------------

2023-07-02 03:35:30 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-07-02 04:41:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 29 seconds
Variants: generated 400, build-succeeded 181, build-failed 157, syntax-invalid 16, redundant 46
Fitness: max 1(1), min 0(5), ave 0.878
Test execution time: sum 3981339 ms, max 1980100 ms, min 60 ms
----------------------------------------------------------------

2023-07-02 04:41:59 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-07-02 04:42:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 1 seconds
Variants: generated 400, build-succeeded 196, build-failed 140, syntax-invalid 23, redundant 41
Fitness: max 1(1), min 0(6), ave 0.856
Test execution time: sum 23350 ms, max 156 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 04:42:32 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-07-02 04:43:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 32 seconds
Variants: generated 400, build-succeeded 186, build-failed 144, syntax-invalid 26, redundant 44
Fitness: max 0.929(157), min 0(12), ave 0.836
Test execution time: sum 22162 ms, max 148 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 04:43:03 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-07-02 05:16:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 6 minutes 3 seconds
Variants: generated 400, build-succeeded 183, build-failed 151, syntax-invalid 23, redundant 43
Fitness: max 1(2), min 0(6), ave 0.876
Test execution time: sum 2001982 ms, max 1980107 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 05:16:34 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-07-02 05:50:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 39 minutes 34 seconds
Variants: generated 400, build-succeeded 181, build-failed 145, syntax-invalid 18, redundant 56
Fitness: max 0.929(147), min 0(5), ave 0.843
Test execution time: sum 2002165 ms, max 1980102 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 05:50:05 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-07-02 05:50:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 40 minutes 6 seconds
Variants: generated 400, build-succeeded 188, build-failed 159, syntax-invalid 22, redundant 31
Fitness: max 0.929(172), min 0(4), ave 0.882
Test execution time: sum 22459 ms, max 165 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 05:50:37 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-07-02 05:51:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 40 minutes 39 seconds
Variants: generated 400, build-succeeded 201, build-failed 145, syntax-invalid 17, redundant 37
Fitness: max 0.929(178), min 0(5), ave 0.871
Test execution time: sum 23511 ms, max 181 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 05:51:10 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-07-02 06:24:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 10 seconds
Variants: generated 400, build-succeeded 179, build-failed 159, syntax-invalid 23, redundant 39
Fitness: max 0.929(157), min 0(7), ave 0.86
Test execution time: sum 2001085 ms, max 1980096 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 06:24:40 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-07-02 06:58:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 47 minutes 41 seconds
Variants: generated 400, build-succeeded 191, build-failed 151, syntax-invalid 24, redundant 34
Fitness: max 0.929(170), min 0(2), ave 0.877
Test execution time: sum 2002420 ms, max 1980095 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 06:58:12 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-07-02 07:31:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 21 minutes 13 seconds
Variants: generated 400, build-succeeded 190, build-failed 143, syntax-invalid 31, redundant 36
Fitness: max 0.929(169), min 0(6), ave 0.865
Test execution time: sum 2002563 ms, max 1980097 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 07:31:44 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-07-02 08:05:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 54 minutes 44 seconds
Variants: generated 400, build-succeeded 188, build-failed 146, syntax-invalid 33, redundant 33
Fitness: max 0.929(161), min 0(7), ave 0.847
Test execution time: sum 2002060 ms, max 1980093 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 08:05:15 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-07-02 09:11:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 1 minutes 18 seconds
Variants: generated 400, build-succeeded 197, build-failed 167, syntax-invalid 15, redundant 21
Fitness: max 0.929(171), min 0(3), ave 0.861
Test execution time: sum 3983502 ms, max 1980112 ms, min 68 ms
----------------------------------------------------------------

2023-07-02 09:11:48 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-07-02 09:12:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 1 minutes 48 seconds
Variants: generated 400, build-succeeded 170, build-failed 176, syntax-invalid 24, redundant 30
Fitness: max 0.929(148), min 0(6), ave 0.867
Test execution time: sum 20262 ms, max 219 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 09:12:19 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-07-02 09:45:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 35 minutes 20 seconds
Variants: generated 400, build-succeeded 184, build-failed 173, syntax-invalid 16, redundant 27
Fitness: max 0.929(164), min 0(3), ave 0.887
Test execution time: sum 2001932 ms, max 1980096 ms, min 83 ms
----------------------------------------------------------------

2023-07-02 09:45:50 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-07-02 10:19:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 8 minutes 52 seconds
Variants: generated 400, build-succeeded 189, build-failed 156, syntax-invalid 27, redundant 28
Fitness: max 1(1), min 0(6), ave 0.875
Test execution time: sum 2002595 ms, max 1980109 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 10:19:22 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-07-02 10:52:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 42 minutes 24 seconds
Variants: generated 400, build-succeeded 180, build-failed 167, syntax-invalid 29, redundant 24
Fitness: max 0.929(158), min 0(5), ave 0.865
Test execution time: sum 2001728 ms, max 1980095 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 10:52:54 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-07-02 10:53:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 42 minutes 58 seconds
Variants: generated 400, build-succeeded 203, build-failed 148, syntax-invalid 25, redundant 24
Fitness: max 0.929(175), min 0(5), ave 0.86
Test execution time: sum 24584 ms, max 166 ms, min 78 ms
----------------------------------------------------------------

2023-07-02 10:53:28 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-07-02 11:30:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 19 minutes 33 seconds
Variants: generated 400, build-succeeded 196, build-failed 152, syntax-invalid 27, redundant 25
Fitness: max 0.929(174), min 0(5), ave 0.864
Test execution time: sum 2185105 ms, max 2160102 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 11:30:04 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-07-02 12:45:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 35 minutes 10 seconds
Variants: generated 400, build-succeeded 203, build-failed 152, syntax-invalid 28, redundant 17
Fitness: max 0.929(179), min 0(7), ave 0.866
Test execution time: sum 4526152 ms, max 2520108 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 12:45:40 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-07-02 13:22:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 11 minutes 43 seconds
Variants: generated 400, build-succeeded 185, build-failed 164, syntax-invalid 26, redundant 25
Fitness: max 1(1), min 0(9), ave 0.861
Test execution time: sum 2182368 ms, max 2160104 ms, min 66 ms
----------------------------------------------------------------

2023-07-02 13:22:13 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-07-02 13:55:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 45 minutes 17 seconds
Variants: generated 400, build-succeeded 205, build-failed 148, syntax-invalid 23, redundant 24
Fitness: max 0.929(180), min 0(11), ave 0.841
Test execution time: sum 2004431 ms, max 1980099 ms, min 68 ms
----------------------------------------------------------------

2023-07-02 13:55:48 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-07-02 13:56:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 45 minutes 50 seconds
Variants: generated 400, build-succeeded 186, build-failed 157, syntax-invalid 31, redundant 26
Fitness: max 0.929(165), min 0(11), ave 0.856
Test execution time: sum 21980 ms, max 174 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 13:56:20 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-07-02 13:56:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 hours 46 minutes 23 seconds
Variants: generated 400, build-succeeded 188, build-failed 168, syntax-invalid 24, redundant 20
Fitness: max 0.929(164), min 0(11), ave 0.853
Test execution time: sum 22548 ms, max 162 ms, min 68 ms
----------------------------------------------------------------

2023-07-02 13:56:54 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-07-02 14:30:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 19 minutes 55 seconds
Variants: generated 400, build-succeeded 179, build-failed 170, syntax-invalid 33, redundant 18
Fitness: max 0.929(161), min 0(5), ave 0.881
Test execution time: sum 2001626 ms, max 1980092 ms, min 68 ms
----------------------------------------------------------------

2023-07-02 14:30:26 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-07-02 14:30:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 hours 20 minutes 28 seconds
Variants: generated 400, build-succeeded 184, build-failed 159, syntax-invalid 32, redundant 25
Fitness: max 1(1), min 0(3), ave 0.891
Test execution time: sum 22770 ms, max 174 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 14:30:59 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-07-02 15:10:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 7 seconds
Variants: generated 400, build-succeeded 208, build-failed 155, syntax-invalid 21, redundant 16
Fitness: max 0.929(177), min 0(10), ave 0.853
Test execution time: sum 2367592 ms, max 2160109 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 15:10:38 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-07-02 16:17:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 6 minutes 42 seconds
Variants: generated 400, build-succeeded 188, build-failed 166, syntax-invalid 37, redundant 9
Fitness: max 1(1), min 0(7), ave 0.861
Test execution time: sum 3983655 ms, max 1980116 ms, min 69 ms
----------------------------------------------------------------

2023-07-02 16:17:13 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-07-02 16:17:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 7 minutes 16 seconds
Variants: generated 400, build-succeeded 191, build-failed 157, syntax-invalid 35, redundant 17
Fitness: max 0.929(165), min 0(6), ave 0.864
Test execution time: sum 23262 ms, max 241 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 16:17:47 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-07-02 16:18:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 7 minutes 49 seconds
Variants: generated 400, build-succeeded 179, build-failed 172, syntax-invalid 38, redundant 11
Fitness: max 0.929(155), min 0(4), ave 0.871
Test execution time: sum 22086 ms, max 252 ms, min 83 ms
----------------------------------------------------------------

2023-07-02 16:18:20 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-07-02 17:27:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 17 minutes 24 seconds
Variants: generated 400, build-succeeded 195, build-failed 165, syntax-invalid 19, redundant 21
Fitness: max 1(1), min 0(6), ave 0.875
Test execution time: sum 4163438 ms, max 2160103 ms, min 67 ms
----------------------------------------------------------------

2023-07-02 17:27:55 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-07-02 18:01:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 50 minutes 58 seconds
Variants: generated 400, build-succeeded 192, build-failed 158, syntax-invalid 36, redundant 14
Fitness: max 0.929(162), min 0(5), ave 0.851
Test execution time: sum 2003417 ms, max 1980188 ms, min 79 ms
----------------------------------------------------------------

2023-07-02 18:01:29 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-07-02 18:02:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 51 minutes 34 seconds
Variants: generated 400, build-succeeded 200, build-failed 164, syntax-invalid 18, redundant 18
Fitness: max 0.929(178), min 0(11), ave 0.859
Test execution time: sum 24523 ms, max 191 ms, min 68 ms
----------------------------------------------------------------

2023-07-02 18:02:04 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-07-02 19:08:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 58 minutes 8 seconds
Variants: generated 400, build-succeeded 191, build-failed 162, syntax-invalid 31, redundant 16
Fitness: max 1(1), min 0(7), ave 0.859
Test execution time: sum 3983063 ms, max 1980092 ms, min 68 ms
----------------------------------------------------------------

2023-07-02 19:08:38 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-07-02 19:42:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 31 minutes 44 seconds
Variants: generated 400, build-succeeded 209, build-failed 166, syntax-invalid 14, redundant 11
Fitness: max 0.929(194), min 0(1), ave 0.895
Test execution time: sum 2005518 ms, max 1980091 ms, min 101 ms
----------------------------------------------------------------

2023-07-02 19:42:15 [main] [INFO]  KGenProgMain - GA stopped
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v8847)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v8847)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -57,10 +57,11 @@
      */
     private Integer getPivotColumn(SimplexTableau tableau) {
         double minValue = 0;
+		this.restrictToNonNegative = restrictToNonNegative;
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
+                Integer minRatioPos = null;
                 minPos = i;
             }
         }
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v8847)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -305,7 +304,8 @@
      */
     protected void discardArtificialVariables() {
         if (numArtificialVariables == 0) {
-            return;
+            int width = getWidth() - numArtificialVariables - 1;
+			return;
         }
         int width = getWidth() - numArtificialVariables - 1;
         int height = getHeight() - 1;
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v8847)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v8847)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v9275)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v9275)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v9275)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -140,6 +140,7 @@
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
             matrix[zIndex][width - 1] =
                 maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
+			double minRatio = Double.MAX_VALUE;
 
                 if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
@@ -294,7 +295,9 @@
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                return null;
+                row = i;
+				row = i;
+				return null;
             }
         }
         return row;
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v9275)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v9275)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v9727)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v9727)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v9727)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -134,7 +134,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -294,7 +293,10 @@
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                return null;
+                row = i;
+				row = i;
+				row = i;
+				return null;
             }
         }
         return row;
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v9727)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10197)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10197)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -111,6 +110,7 @@
         // set the pivot element to 1
         double pivotVal = tableau.getEntry(pivotRow, pivotCol);
         tableau.divideRow(pivotRow, pivotVal);
+		this.f = f;
 
         // set the rest of the pivot column to 0
         for (int i = 0; i < tableau.getHeight(); i++) {
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10197)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -294,7 +294,9 @@
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                return null;
+                row = i;
+				row = i;
+				return null;
             }
         }
         return row;
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10197)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10197)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -112,7 +112,8 @@
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.tableau = new Array2DRowRealMatrix(createTableau(goalType == GoalType.MAXIMIZE));
-        initialize();
+        int height = getHeight() - 1;
+		initialize();
     }
 
     /**
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.optimization.linear.LinearObjectiveFunction
+++ org.apache.commons.math.optimization.linear.LinearObjectiveFunction
@@ -80,7 +80,8 @@
      * @return constant of the linear equation being optimized
      */
     public double getConstantTerm() {
-        return constantTerm;
+        double minValue = 0;
+		return constantTerm;
     }
 
     /**
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10893)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10893)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10893)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -112,7 +112,8 @@
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.tableau = new Array2DRowRealMatrix(createTableau(goalType == GoalType.MAXIMIZE));
-        initialize();
+        int height = getHeight() - 1;
+		initialize();
     }
 
     /**
@@ -134,7 +135,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
@@ -294,7 +294,8 @@
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                return null;
+                row = i;
+				return null;
             }
         }
         return row;
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10893)
--- org.apache.commons.math.optimization.linear.LinearObjectiveFunction
+++ org.apache.commons.math.optimization.linear.LinearObjectiveFunction
@@ -80,7 +80,8 @@
      * @return constant of the linear equation being optimized
      */
     public double getConstantTerm() {
-        return constantTerm;
+        double minValue = 0;
+		return constantTerm;
     }
 
     /**
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v10893)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v15268)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v15268)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v15268)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -294,7 +294,9 @@
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                return null;
+                row = i;
+				row = i;
+				return null;
             }
         }
         return row;
@@ -339,8 +341,10 @@
     protected RealPointValuePair getSolution() {
       double[] coefficients = new double[getOriginalNumDecisionVariables()];
       Integer negativeVarBasicRow = getBasicRowForSolution(getNegativeDecisionVariableOffset());
-      double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
+      List<LinearConstraint> constraints=getNormalizedConstraints();
+	double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
       Set<Integer> basicRows = new HashSet<Integer>();
+	int height = getHeight() - 1;
       for (int i = 0; i < coefficients.length; i++) {
           Integer basicRow = getBasicRowForSolution(getNumObjectiveFunctions() + i);
           if (basicRows.contains(basicRow)) {
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v15268)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -97,7 +97,8 @@
         // store linear problem characteristics
         this.f                     = f;
         this.constraints           = constraints;
-        this.goalType              = goalType;
+        iterations = 0;
+		this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
         iterations  = 0;
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v15268)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v17293)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v17293)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -111,6 +110,7 @@
         // set the pivot element to 1
         double pivotVal = tableau.getEntry(pivotRow, pivotCol);
         tableau.divideRow(pivotRow, pivotVal);
+		this.f = f;
 
         // set the rest of the pivot column to 0
         for (int i = 0; i < tableau.getHeight(); i++) {
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v17293)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -107,6 +107,7 @@
         this.restrictToNonNegative  = restrictToNonNegative;
         this.epsilon                = epsilon;
         this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
+		Integer row = null;
         this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
@@ -305,7 +306,9 @@
      */
     protected void discardArtificialVariables() {
         if (numArtificialVariables == 0) {
-            return;
+            int count = 0;
+			int width = getWidth() - numArtificialVariables - 1;
+			return;
         }
         int width = getWidth() - numArtificialVariables - 1;
         int height = getHeight() - 1;
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v17293)
--- org.apache.commons.math.util.MathUtils
+++ org.apache.commons.math.util.MathUtils
@@ -289,7 +289,6 @@
     public static double binomialCoefficientLog(final int n, final int k) {
         checkBinomial(n, k);
         if ((n == k) || (k == 0)) {
-            return 0;
         }
         if ((k == 1) || (k == n - 1)) {
             return Math.log(n);
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v17293)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -154,7 +154,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v17293)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v19303)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v19303)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -111,6 +110,7 @@
         // set the pivot element to 1
         double pivotVal = tableau.getEntry(pivotRow, pivotCol);
         tableau.divideRow(pivotRow, pivotVal);
+		this.f = f;
 
         // set the rest of the pivot column to 0
         for (int i = 0; i < tableau.getHeight(); i++) {
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v19303)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -112,6 +112,7 @@
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.tableau = new Array2DRowRealMatrix(createTableau(goalType == GoalType.MAXIMIZE));
+		Integer negativeVarBasicRow = getBasicRowForSolution(getNegativeDecisionVariableOffset());
         initialize();
     }
 
@@ -140,6 +141,7 @@
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
             matrix[zIndex][width - 1] =
                 maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
+			double minRatio = Double.MAX_VALUE;
 
                 if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
@@ -164,6 +166,7 @@
 
                     // RHS
                     matrix[row][width - 1] = constraint.getValue();
+					int count = 0;
 
                     // slack variables
                     if (constraint.getRelationship() == Relationship.LEQ) {
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v19303)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v19303)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v20010)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v20010)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,7 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
+                this.restrictToNonNegative = restrictToNonNegative;
                 minPos = i;
             }
         }
@@ -111,6 +111,8 @@
         // set the pivot element to 1
         double pivotVal = tableau.getEntry(pivotRow, pivotCol);
         tableau.divideRow(pivotRow, pivotVal);
+		this.f = f;
+		this.f = f;
 
         // set the rest of the pivot column to 0
         for (int i = 0; i < tableau.getHeight(); i++) {
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v20010)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -140,6 +140,7 @@
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
             matrix[zIndex][width - 1] =
                 maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
+			double minRatio = Double.MAX_VALUE;
 
                 if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
@@ -294,7 +295,8 @@
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                return null;
+                row = i;
+				return null;
             }
         }
         return row;
@@ -305,7 +307,8 @@
      */
     protected void discardArtificialVariables() {
         if (numArtificialVariables == 0) {
-            return;
+            int count = 0;
+			return;
         }
         int width = getWidth() - numArtificialVariables - 1;
         int height = getHeight() - 1;
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v20010)
--- org.apache.commons.math.util.MathUtils
+++ org.apache.commons.math.util.MathUtils
@@ -289,7 +289,8 @@
     public static double binomialCoefficientLog(final int n, final int k) {
         checkBinomial(n, k);
         if ((n == k) || (k == 0)) {
-            return 0;
+            ResizableDoubleArray result = new ResizableDoubleArray();
+			return 0;
         }
         if ((k == 1) || (k == n - 1)) {
             return Math.log(n);
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v20010)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -154,7 +154,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v20010)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v21249)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v21249)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -87,7 +86,8 @@
                 }
             }
         }
-        return minRatioPos;
+        setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		return minRatioPos;
     }
 
 
@@ -111,6 +111,7 @@
         // set the pivot element to 1
         double pivotVal = tableau.getEntry(pivotRow, pivotCol);
         tableau.divideRow(pivotRow, pivotVal);
+		this.f = f;
 
         // set the rest of the pivot column to 0
         for (int i = 0; i < tableau.getHeight(); i++) {
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v21249)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -112,7 +112,8 @@
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.tableau = new Array2DRowRealMatrix(createTableau(goalType == GoalType.MAXIMIZE));
-        initialize();
+        int height = getHeight() - 1;
+		initialize();
     }
 
     /**
@@ -305,7 +306,8 @@
      */
     protected void discardArtificialVariables() {
         if (numArtificialVariables == 0) {
-            return;
+            int count = 0;
+			return;
         }
         int width = getWidth() - numArtificialVariables - 1;
         int height = getHeight() - 1;
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v21249)
--- org.apache.commons.math.optimization.linear.LinearObjectiveFunction
+++ org.apache.commons.math.optimization.linear.LinearObjectiveFunction
@@ -80,7 +80,8 @@
      * @return constant of the linear equation being optimized
      */
     public double getConstantTerm() {
-        return constantTerm;
+        double minValue = 0;
+		return constantTerm;
     }
 
     /**
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v21249)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -65,6 +65,7 @@
     /** {@inheritDoc} */
     public void setMaxIterations(int maxIterations) {
         this.maxIterations = maxIterations;
+		this.restrictToNonNegative = restrictToNonNegative;
     }
 
     /** {@inheritDoc} */
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v21249)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v22579)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v22579)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -111,6 +110,7 @@
         // set the pivot element to 1
         double pivotVal = tableau.getEntry(pivotRow, pivotCol);
         tableau.divideRow(pivotRow, pivotVal);
+		this.f = f;
 
         // set the rest of the pivot column to 0
         for (int i = 0; i < tableau.getHeight(); i++) {
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v22579)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -113,6 +113,7 @@
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.tableau = new Array2DRowRealMatrix(createTableau(goalType == GoalType.MAXIMIZE));
         initialize();
+		int count = 0;
     }
 
     /**
@@ -164,10 +165,12 @@
 
                     // RHS
                     matrix[row][width - 1] = constraint.getValue();
+					int count = 0;
 
                     // slack variables
                     if (constraint.getRelationship() == Relationship.LEQ) {
                         matrix[row][getSlackVariableOffset() + slackVar++] = 1;  // slack
+						matrix[zIndex][width - 1] = maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
                     } else if (constraint.getRelationship() == Relationship.GEQ) {
                         matrix[row][getSlackVariableOffset() + slackVar++] = -1; // excess
                     }
@@ -294,7 +297,9 @@
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                return null;
+                row = i;
+				row = i;
+				return null;
             }
         }
         return row;
2023-07-02 19:42:15 [main] [INFO]  PatchLogExporter - patch (v22579)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-02 19:42:15 [main] [INFO]  KGenProgMain - Summary
Reached generation = 59
Generated variants = 23200
Syntax valid variants = 21781
Build succeeded variants = 10090
Time elapsed = 24 hours 31 minutes 45 seconds
Exit status = FAILURE (time limit)
