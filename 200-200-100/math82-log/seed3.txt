2023-06-30 16:43:57 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-06-30 16:43:57 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-06-30 16:43:57 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-06-30 16:43:57 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/kgenprog-82.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/src/main] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math82_FOSE/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.optimization.linear.SimplexSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 1000 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 3 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-06-30 16:44:03 [main] [INFO]  KGenProgMain - initial failed tests (1/14)
org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288: expected:<10.0> but was:<11.5>

2023-06-30 16:44:03 [main] [INFO]  KGenProgMain - GA started
2023-06-30 16:44:03 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-06-30 16:44:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 200, build-succeeded 31, build-failed 120, syntax-invalid 18, redundant 31
Fitness: max 0.929(11), min 0(9), ave 0.488
Test execution time: sum 4428 ms, max 234 ms, min 83 ms
----------------------------------------------------------------

2023-06-30 16:44:12 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-06-30 16:44:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 200, build-succeeded 35, build-failed 125, syntax-invalid 14, redundant 26
Fitness: max 0.929(6), min 0(4), ave 0.563
Test execution time: sum 4118 ms, max 182 ms, min 67 ms
----------------------------------------------------------------

2023-06-30 16:44:20 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-06-30 16:44:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 seconds
Variants: generated 400, build-succeeded 123, build-failed 149, syntax-invalid 17, redundant 111
Fitness: max 0.929(29), min 0(23), ave 0.513
Test execution time: sum 13032 ms, max 135 ms, min 65 ms
----------------------------------------------------------------

2023-06-30 16:44:39 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-06-30 16:45:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 seconds
Variants: generated 400, build-succeeded 121, build-failed 133, syntax-invalid 25, redundant 121
Fitness: max 0.929(48), min 0(7), ave 0.746
Test execution time: sum 13819 ms, max 151 ms, min 65 ms
----------------------------------------------------------------

2023-06-30 16:45:00 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-06-30 16:45:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 14 seconds
Variants: generated 400, build-succeeded 101, build-failed 141, syntax-invalid 17, redundant 141
Fitness: max 0.929(74), min 0(5), ave 0.816
Test execution time: sum 11605 ms, max 143 ms, min 64 ms
----------------------------------------------------------------

2023-06-30 16:45:18 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-06-30 16:45:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 34 seconds
Variants: generated 400, build-succeeded 119, build-failed 128, syntax-invalid 22, redundant 131
Fitness: max 0.929(83), min 0(8), ave 0.788
Test execution time: sum 13826 ms, max 179 ms, min 65 ms
----------------------------------------------------------------

2023-06-30 16:45:38 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-06-30 17:19:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 57 seconds
Variants: generated 400, build-succeeded 136, build-failed 142, syntax-invalid 14, redundant 108
Fitness: max 0.929(110), min 0(5), ave 0.816
Test execution time: sum 1995834 ms, max 1980092 ms, min 74 ms
----------------------------------------------------------------

2023-06-30 17:19:00 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-06-30 17:52:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 19 seconds
Variants: generated 400, build-succeeded 138, build-failed 145, syntax-invalid 15, redundant 102
Fitness: max 0.929(109), min 0(11), ave 0.797
Test execution time: sum 1995980 ms, max 1980091 ms, min 65 ms
----------------------------------------------------------------

2023-06-30 17:52:22 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-06-30 17:52:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 41 seconds
Variants: generated 400, build-succeeded 131, build-failed 146, syntax-invalid 27, redundant 96
Fitness: max 0.929(109), min 0(6), ave 0.848
Test execution time: sum 15159 ms, max 149 ms, min 75 ms
----------------------------------------------------------------

2023-06-30 17:52:44 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-06-30 18:26:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 2 seconds
Variants: generated 400, build-succeeded 129, build-failed 147, syntax-invalid 31, redundant 93
Fitness: max 0.929(105), min 0(7), ave 0.838
Test execution time: sum 1994969 ms, max 1980112 ms, min 65 ms
----------------------------------------------------------------

2023-06-30 18:26:06 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-06-30 19:32:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 26 seconds
Variants: generated 400, build-succeeded 142, build-failed 141, syntax-invalid 28, redundant 89
Fitness: max 0.929(114), min 0(6), ave 0.832
Test execution time: sum 3976551 ms, max 1980100 ms, min 65 ms
----------------------------------------------------------------

2023-06-30 19:32:29 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-06-30 19:32:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 48 seconds
Variants: generated 400, build-succeeded 134, build-failed 144, syntax-invalid 31, redundant 91
Fitness: max 1(1), min 0(6), ave 0.845
Test execution time: sum 15429 ms, max 196 ms, min 80 ms
----------------------------------------------------------------

2023-06-30 19:32:51 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-06-30 20:06:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 15 seconds
Variants: generated 400, build-succeeded 176, build-failed 137, syntax-invalid 24, redundant 63
Fitness: max 0.929(152), min 0(10), ave 0.843
Test execution time: sum 2000119 ms, max 1980091 ms, min 65 ms
----------------------------------------------------------------

2023-06-30 20:06:18 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-06-30 20:06:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 42 seconds
Variants: generated 400, build-succeeded 162, build-failed 157, syntax-invalid 23, redundant 58
Fitness: max 0.929(144), min 0(5), ave 0.871
Test execution time: sum 18737 ms, max 153 ms, min 75 ms
----------------------------------------------------------------

2023-06-30 20:06:45 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-06-30 20:40:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 10 seconds
Variants: generated 400, build-succeeded 178, build-failed 145, syntax-invalid 23, redundant 54
Fitness: max 0.929(155), min 0(6), ave 0.865
Test execution time: sum 2000489 ms, max 1980091 ms, min 65 ms
----------------------------------------------------------------

2023-06-30 20:40:13 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-06-30 21:46:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 36 seconds
Variants: generated 400, build-succeeded 157, build-failed 145, syntax-invalid 34, redundant 64
Fitness: max 0.929(135), min 0(5), ave 0.845
Test execution time: sum 3978333 ms, max 1980093 ms, min 85 ms
----------------------------------------------------------------

2023-06-30 21:46:39 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-06-30 22:20:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 5 seconds
Variants: generated 400, build-succeeded 191, build-failed 139, syntax-invalid 26, redundant 44
Fitness: max 0.929(158), min 0(8), ave 0.838
Test execution time: sum 2002017 ms, max 1980091 ms, min 65 ms
----------------------------------------------------------------

2023-06-30 22:20:08 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-06-30 22:53:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 33 seconds
Variants: generated 400, build-succeeded 180, build-failed 152, syntax-invalid 32, redundant 36
Fitness: max 1(2), min 0(8), ave 0.858
Test execution time: sum 2000698 ms, max 1980092 ms, min 65 ms
----------------------------------------------------------------

2023-06-30 22:53:36 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-06-30 23:27:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 0 seconds
Variants: generated 400, build-succeeded 172, build-failed 148, syntax-invalid 23, redundant 57
Fitness: max 0.929(147), min 0(11), ave 0.838
Test execution time: sum 1999797 ms, max 1980121 ms, min 66 ms
----------------------------------------------------------------

2023-06-30 23:27:04 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-07-01 00:33:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 49 minutes 30 seconds
Variants: generated 400, build-succeeded 185, build-failed 153, syntax-invalid 24, redundant 38
Fitness: max 0.929(152), min 0(8), ave 0.836
Test execution time: sum 3981613 ms, max 1980092 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 00:33:33 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-07-01 00:34:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 49 minutes 58 seconds
Variants: generated 400, build-succeeded 183, build-failed 149, syntax-invalid 17, redundant 51
Fitness: max 0.929(157), min 0(6), ave 0.854
Test execution time: sum 21185 ms, max 180 ms, min 63 ms
----------------------------------------------------------------

2023-07-01 00:34:02 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-07-01 00:34:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 50 minutes 29 seconds
Variants: generated 400, build-succeeded 193, build-failed 145, syntax-invalid 16, redundant 46
Fitness: max 0.929(170), min 0(5), ave 0.875
Test execution time: sum 22576 ms, max 181 ms, min 84 ms
----------------------------------------------------------------

2023-07-01 00:34:32 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-07-01 01:08:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 59 seconds
Variants: generated 400, build-succeeded 188, build-failed 144, syntax-invalid 31, redundant 37
Fitness: max 0.929(165), min 0(4), ave 0.883
Test execution time: sum 2002177 ms, max 1980091 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 01:08:02 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-07-01 01:41:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 57 minutes 29 seconds
Variants: generated 400, build-succeeded 194, build-failed 149, syntax-invalid 21, redundant 36
Fitness: max 0.929(168), min 0(2), ave 0.863
Test execution time: sum 2002663 ms, max 1980156 ms, min 81 ms
----------------------------------------------------------------

2023-07-01 01:41:33 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-07-01 02:15:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 30 minutes 57 seconds
Variants: generated 400, build-succeeded 174, build-failed 151, syntax-invalid 29, redundant 46
Fitness: max 0.929(149), min 0(8), ave 0.851
Test execution time: sum 2000186 ms, max 1980092 ms, min 68 ms
----------------------------------------------------------------

2023-07-01 02:15:01 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-07-01 02:15:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 27 seconds
Variants: generated 400, build-succeeded 183, build-failed 156, syntax-invalid 23, redundant 38
Fitness: max 0.929(159), min 0(9), ave 0.854
Test execution time: sum 21350 ms, max 175 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 02:15:30 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-07-01 02:48:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 4 minutes 56 seconds
Variants: generated 400, build-succeeded 179, build-failed 150, syntax-invalid 24, redundant 47
Fitness: max 1(1), min 0(6), ave 0.858
Test execution time: sum 2000859 ms, max 1980091 ms, min 76 ms
----------------------------------------------------------------

2023-07-01 02:48:59 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-07-01 02:49:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 5 minutes 26 seconds
Variants: generated 400, build-succeeded 193, build-failed 140, syntax-invalid 34, redundant 33
Fitness: max 0.929(165), min 0(8), ave 0.849
Test execution time: sum 22483 ms, max 211 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 02:49:29 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-07-01 03:22:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 38 minutes 56 seconds
Variants: generated 400, build-succeeded 183, build-failed 149, syntax-invalid 31, redundant 37
Fitness: max 1(1), min 0(9), ave 0.863
Test execution time: sum 2001653 ms, max 1980091 ms, min 67 ms
----------------------------------------------------------------

2023-07-01 03:22:59 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-07-01 03:23:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 39 minutes 28 seconds
Variants: generated 400, build-succeeded 195, build-failed 161, syntax-invalid 19, redundant 25
Fitness: max 1(1), min 0(8), ave 0.863
Test execution time: sum 23226 ms, max 251 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 03:23:32 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-07-01 03:57:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 12 minutes 59 seconds
Variants: generated 400, build-succeeded 185, build-failed 148, syntax-invalid 30, redundant 37
Fitness: max 0.929(161), min 0(10), ave 0.846
Test execution time: sum 2001902 ms, max 1980091 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 03:57:02 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-07-01 03:57:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 13 minutes 30 seconds
Variants: generated 400, build-succeeded 189, build-failed 144, syntax-invalid 33, redundant 34
Fitness: max 0.929(168), min 0(2), ave 0.883
Test execution time: sum 22598 ms, max 253 ms, min 89 ms
----------------------------------------------------------------

2023-07-01 03:57:33 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-07-01 03:58:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 1 seconds
Variants: generated 400, build-succeeded 189, build-failed 153, syntax-invalid 25, redundant 33
Fitness: max 0.929(177), min 0(6), ave 0.89
Test execution time: sum 22694 ms, max 191 ms, min 67 ms
----------------------------------------------------------------

2023-07-01 03:58:05 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-07-01 03:58:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 33 seconds
Variants: generated 400, build-succeeded 191, build-failed 158, syntax-invalid 21, redundant 30
Fitness: max 1(1), min 0(14), ave 0.832
Test execution time: sum 22803 ms, max 474 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 03:58:37 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-07-01 03:59:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 15 minutes 4 seconds
Variants: generated 400, build-succeeded 186, build-failed 151, syntax-invalid 29, redundant 34
Fitness: max 0.929(170), min 0(1), ave 0.901
Test execution time: sum 22463 ms, max 199 ms, min 77 ms
----------------------------------------------------------------

2023-07-01 03:59:08 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-07-01 04:32:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 39 seconds
Variants: generated 400, build-succeeded 212, build-failed 143, syntax-invalid 23, redundant 22
Fitness: max 0.929(183), min 0(7), ave 0.858
Test execution time: sum 2006058 ms, max 1980093 ms, min 66 ms
----------------------------------------------------------------

2023-07-01 04:32:43 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-07-01 05:06:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 22 minutes 14 seconds
Variants: generated 400, build-succeeded 202, build-failed 147, syntax-invalid 28, redundant 23
Fitness: max 0.929(177), min 0(5), ave 0.853
Test execution time: sum 2005017 ms, max 1980102 ms, min 68 ms
----------------------------------------------------------------

2023-07-01 05:06:17 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-07-01 05:06:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 22 minutes 48 seconds
Variants: generated 400, build-succeeded 201, build-failed 141, syntax-invalid 26, redundant 32
Fitness: max 0.929(174), min 0(11), ave 0.851
Test execution time: sum 24608 ms, max 192 ms, min 67 ms
----------------------------------------------------------------

2023-07-01 05:06:52 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-07-01 05:40:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 56 minutes 22 seconds
Variants: generated 400, build-succeeded 189, build-failed 160, syntax-invalid 31, redundant 20
Fitness: max 0.929(161), min 0(7), ave 0.849
Test execution time: sum 2003457 ms, max 1980097 ms, min 84 ms
----------------------------------------------------------------

2023-07-01 05:40:25 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-07-01 06:14:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 29 minutes 58 seconds
Variants: generated 400, build-succeeded 208, build-failed 155, syntax-invalid 17, redundant 20
Fitness: max 1(1), min 0(8), ave 0.844
Test execution time: sum 2005686 ms, max 1980096 ms, min 68 ms
----------------------------------------------------------------

2023-07-01 06:14:01 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-07-01 06:14:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 30 minutes 31 seconds
Variants: generated 400, build-succeeded 194, build-failed 148, syntax-invalid 34, redundant 24
Fitness: max 0.929(172), min 0(7), ave 0.871
Test execution time: sum 23698 ms, max 195 ms, min 67 ms
----------------------------------------------------------------

2023-07-01 06:14:35 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-07-01 08:27:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 43 minutes 7 seconds
Variants: generated 400, build-succeeded 207, build-failed 153, syntax-invalid 23, redundant 17
Fitness: max 1(1), min 0(7), ave 0.847
Test execution time: sum 7945537 ms, max 1980103 ms, min 89 ms
----------------------------------------------------------------

2023-07-01 08:27:10 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-07-01 08:27:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 43 minutes 42 seconds
Variants: generated 400, build-succeeded 196, build-failed 154, syntax-invalid 36, redundant 14
Fitness: max 0.929(170), min 0(9), ave 0.861
Test execution time: sum 24531 ms, max 196 ms, min 68 ms
----------------------------------------------------------------

2023-07-01 08:27:45 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-07-01 09:01:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 17 minutes 18 seconds
Variants: generated 400, build-succeeded 209, build-failed 150, syntax-invalid 26, redundant 15
Fitness: max 1(1), min 0(10), ave 0.855
Test execution time: sum 2006019 ms, max 1980093 ms, min 78 ms
----------------------------------------------------------------

2023-07-01 09:01:21 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-07-01 10:07:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 23 minutes 53 seconds
Variants: generated 400, build-succeeded 213, build-failed 157, syntax-invalid 22, redundant 8
Fitness: max 1(1), min 0(3), ave 0.871
Test execution time: sum 3985454 ms, max 1980096 ms, min 74 ms
----------------------------------------------------------------

2023-07-01 10:07:56 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-07-01 10:41:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 57 minutes 26 seconds
Variants: generated 400, build-succeeded 194, build-failed 157, syntax-invalid 33, redundant 16
Fitness: max 1(2), min 0(3), ave 0.877
Test execution time: sum 2003245 ms, max 1980092 ms, min 77 ms
----------------------------------------------------------------

2023-07-01 10:41:29 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-07-01 12:54:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 9 minutes 58 seconds
Variants: generated 400, build-succeeded 189, build-failed 162, syntax-invalid 35, redundant 14
Fitness: max 0.929(164), min 0(8), ave 0.849
Test execution time: sum 7942933 ms, max 1980092 ms, min 67 ms
----------------------------------------------------------------

2023-07-01 12:54:02 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-07-01 12:54:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 10 minutes 30 seconds
Variants: generated 400, build-succeeded 177, build-failed 168, syntax-invalid 32, redundant 23
Fitness: max 0.929(167), min 0(2), ave 0.901
Test execution time: sum 21909 ms, max 191 ms, min 88 ms
----------------------------------------------------------------

2023-07-01 12:54:33 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-07-01 12:55:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 11 minutes 5 seconds
Variants: generated 400, build-succeeded 204, build-failed 152, syntax-invalid 29, redundant 15
Fitness: max 0.929(176), min 0(5), ave 0.859
Test execution time: sum 25479 ms, max 199 ms, min 67 ms
----------------------------------------------------------------

2023-07-01 12:55:08 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-07-01 13:28:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 hours 44 minutes 38 seconds
Variants: generated 400, build-succeeded 191, build-failed 158, syntax-invalid 35, redundant 16
Fitness: max 0.929(171), min 0(4), ave 0.879
Test execution time: sum 2003204 ms, max 1980092 ms, min 67 ms
----------------------------------------------------------------

2023-07-01 13:28:41 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-07-01 14:35:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 hours 51 minutes 10 seconds
Variants: generated 400, build-succeeded 192, build-failed 159, syntax-invalid 31, redundant 18
Fitness: max 0.929(164), min 0(9), ave 0.846
Test execution time: sum 3983135 ms, max 1980148 ms, min 77 ms
----------------------------------------------------------------

2023-07-01 14:35:14 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-07-01 15:08:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 hours 24 minutes 44 seconds
Variants: generated 400, build-succeeded 199, build-failed 145, syntax-invalid 25, redundant 31
Fitness: max 1(1), min 0(6), ave 0.865
Test execution time: sum 2004207 ms, max 1980092 ms, min 83 ms
----------------------------------------------------------------

2023-07-01 15:08:48 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-07-01 16:15:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 31 minutes 16 seconds
Variants: generated 400, build-succeeded 179, build-failed 164, syntax-invalid 35, redundant 22
Fitness: max 0.929(157), min 0(6), ave 0.863
Test execution time: sum 3981760 ms, max 1980092 ms, min 69 ms
----------------------------------------------------------------

2023-07-01 16:15:19 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-07-01 16:15:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 hours 31 minutes 48 seconds
Variants: generated 400, build-succeeded 182, build-failed 159, syntax-invalid 37, redundant 22
Fitness: max 0.929(154), min 0(10), ave 0.844
Test execution time: sum 21801 ms, max 176 ms, min 68 ms
----------------------------------------------------------------

2023-07-01 16:15:51 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-07-01 16:49:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 hours 5 minutes 21 seconds
Variants: generated 400, build-succeeded 191, build-failed 155, syntax-invalid 34, redundant 20
Fitness: max 0.929(162), min 0(6), ave 0.847
Test execution time: sum 2003278 ms, max 1980091 ms, min 91 ms
----------------------------------------------------------------

2023-07-01 16:49:24 [main] [INFO]  KGenProgMain - GA stopped
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -59,7 +59,7 @@
         double minValue = 0;
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
-            if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
+            if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
                 minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
@@ -166,7 +166,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -180,7 +180,8 @@
                     }
                 }
 
-                return matrix;
+                copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
+				return matrix;
     }
 
     /** Get the number of variables.
@@ -339,6 +340,7 @@
     protected RealPointValuePair getSolution() {
       double[] coefficients = new double[getOriginalNumDecisionVariables()];
       Integer negativeVarBasicRow = getBasicRowForSolution(getNegativeDecisionVariableOffset());
+	List<LinearConstraint> constraints=getNormalizedConstraints();
       double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
       Set<Integer> basicRows = new HashSet<Integer>();
       for (int i = 0; i < coefficients.length; i++) {
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v4152)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6506)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6506)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -78,6 +77,7 @@
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
+			int count = 0;
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6506)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -140,6 +140,7 @@
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
             matrix[zIndex][width - 1] =
                 maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
+			matrix[zIndex][width - 1] = maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
 
                 if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
@@ -213,7 +214,8 @@
                                         constraint.getRelationship().oppositeRelationship(),
                                         -1 * constraint.getValue());
         }
-        return new LinearConstraint(constraint.getCoefficients(), 
+        Integer minPos = null;
+		return new LinearConstraint(constraint.getCoefficients(), 
                                     constraint.getRelationship(), constraint.getValue());
     }
 
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6506)
--- org.apache.commons.math.util.MathUtils
+++ org.apache.commons.math.util.MathUtils
@@ -289,7 +289,6 @@
     public static double binomialCoefficientLog(final int n, final int k) {
         checkBinomial(n, k);
         if ((n == k) || (k == 0)) {
-            return 0;
         }
         if ((k == 1) || (k == n - 1)) {
             return Math.log(n);
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6506)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6596)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6596)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6596)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -78,6 +77,7 @@
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
+			int count = 0;
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6596)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -105,6 +105,7 @@
         this.f                      = f;
         this.constraints            = constraints;
         this.restrictToNonNegative  = restrictToNonNegative;
+		Integer minRatioPos = null;
         this.epsilon                = epsilon;
         this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
         this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6596)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -96,12 +96,11 @@
 
         // store linear problem characteristics
         this.f                     = f;
-        this.constraints           = constraints;
+        int slackVar = 0;
+		this.constraints           = constraints;
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v6596)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v10100)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v10100)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -105,7 +104,8 @@
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
         if (pivotRow == null) {
-            throw new UnboundedSolutionException();
+            int slackVar = 0;
+			throw new UnboundedSolutionException();
         }
 
         // set the pivot element to 1
@@ -166,7 +166,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v10100)
--- org.apache.commons.math.util.MathUtils
+++ org.apache.commons.math.util.MathUtils
@@ -289,7 +289,6 @@
     public static double binomialCoefficientLog(final int n, final int k) {
         checkBinomial(n, k);
         if ((n == k) || (k == 0)) {
-            return 0;
         }
         if ((k == 1) || (k == n - 1)) {
             return Math.log(n);
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v10100)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v10100)
--- org.apache.commons.math.linear.RealVectorFormat
+++ org.apache.commons.math.linear.RealVectorFormat
@@ -121,7 +121,6 @@
         trimmedPrefix    = prefix.trim();
         trimmedSuffix    = suffix.trim();
         trimmedSeparator = separator.trim();
-        this.format      = format;
     }
 
     /**
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v10100)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v10870)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v10870)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -78,6 +77,7 @@
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
+			int count = 0;
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
@@ -105,7 +105,8 @@
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
         if (pivotRow == null) {
-            throw new UnboundedSolutionException();
+            int slackVar = 0;
+			throw new UnboundedSolutionException();
         }
 
         // set the pivot element to 1
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v10870)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -140,6 +140,7 @@
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
             matrix[zIndex][width - 1] =
                 maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
+			matrix[zIndex][width - 1] = maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
 
                 if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
@@ -213,7 +214,8 @@
                                         constraint.getRelationship().oppositeRelationship(),
                                         -1 * constraint.getValue());
         }
-        return new LinearConstraint(constraint.getCoefficients(), 
+        Integer minPos = null;
+		return new LinearConstraint(constraint.getCoefficients(), 
                                     constraint.getRelationship(), constraint.getValue());
     }
 
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v10870)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v11359)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v11359)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v11359)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -140,6 +140,7 @@
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
             matrix[zIndex][width - 1] =
                 maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
+			matrix[zIndex][width - 1] = maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();
 
                 if (!restrictToNonNegative) {
                     matrix[zIndex][getSlackVariableOffset() - 1] =
@@ -213,7 +214,8 @@
                                         constraint.getRelationship().oppositeRelationship(),
                                         -1 * constraint.getValue());
         }
-        return new LinearConstraint(constraint.getCoefficients(), 
+        Integer minPos = null;
+		return new LinearConstraint(constraint.getCoefficients(), 
                                     constraint.getRelationship(), constraint.getValue());
     }
 
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v11359)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -154,7 +154,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v11359)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,8 +100,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v11359)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v12925)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v12925)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -78,6 +77,7 @@
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
+			int count = 0;
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
@@ -128,7 +128,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            Integer minRatioPos = null;
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v12925)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -305,7 +305,9 @@
      */
     protected void discardArtificialVariables() {
         if (numArtificialVariables == 0) {
-            return;
+            int width = numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions()
+					+ 1;
+			return;
         }
         int width = getWidth() - numArtificialVariables - 1;
         int height = getHeight() - 1;
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v12925)
--- org.apache.commons.math.optimization.OptimizationException
+++ org.apache.commons.math.optimization.OptimizationException
@@ -39,7 +39,6 @@
      * @param parts to insert in the format (no translation)
      */
     public OptimizationException(String specifier, Object ... parts) {
-        super(specifier, parts);
     }
 
     /**
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v12925)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -154,7 +154,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v12925)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v15341)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v15341)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v15341)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -111,6 +111,7 @@
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
+		double minValue = 0;
         this.tableau = new Array2DRowRealMatrix(createTableau(goalType == GoalType.MAXIMIZE));
         initialize();
     }
@@ -305,7 +306,9 @@
      */
     protected void discardArtificialVariables() {
         if (numArtificialVariables == 0) {
-            return;
+            int width = numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions()
+					+ 1;
+			return;
         }
         int width = getWidth() - numArtificialVariables - 1;
         int height = getHeight() - 1;
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v15341)
--- org.apache.commons.math.util.MathUtils
+++ org.apache.commons.math.util.MathUtils
@@ -369,7 +369,7 @@
         } else if (x < y) {
           return -1;
         }
-        return 1;
+        return 0;
     }
     
     /**
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v15341)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
@@ -280,7 +279,6 @@
     /** {@inheritDoc} */
     public RealVector subtract(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] - v[i];
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v15341)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,7 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
+                this.constraints = constraints;
                 minPos = i;
             }
         }
@@ -128,7 +128,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
@@ -166,7 +167,6 @@
         throws OptimizationException {
         // make sure we're in Phase 1
         if (tableau.getNumArtificialVariables() == 0) {
-            return;
         }
 
         while (!isPhase1Solved(tableau)) {
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -111,6 +111,7 @@
                                       getConstraintTypeCounts(Relationship.GEQ);
         this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                       getConstraintTypeCounts(Relationship.GEQ);
+		double minValue = 0;
         this.tableau = new Array2DRowRealMatrix(createTableau(goalType == GoalType.MAXIMIZE));
         initialize();
     }
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,6 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
     }
 
     /**
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -105,7 +104,8 @@
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
         if (pivotRow == null) {
-            throw new UnboundedSolutionException();
+            int slackVar = 0;
+			throw new UnboundedSolutionException();
         }
 
         // set the pivot element to 1
@@ -128,7 +128,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -337,7 +337,8 @@
      * @return current solution
      */
     protected RealPointValuePair getSolution() {
-      double[] coefficients = new double[getOriginalNumDecisionVariables()];
+      int width = numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;
+	double[] coefficients = new double[getOriginalNumDecisionVariables()];
       Integer negativeVarBasicRow = getBasicRowForSolution(getNegativeDecisionVariableOffset());
       double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
       Set<Integer> basicRows = new HashSet<Integer>();
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.math.util.MathUtils
+++ org.apache.commons.math.util.MathUtils
@@ -369,7 +369,7 @@
         } else if (x < y) {
           return -1;
         }
-        return 1;
+        return 0;
     }
     
     /**
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -154,7 +154,7 @@
      */
     public ArrayRealVector(RealVector v) {
         data = new double[v.getDimension()];
-        for (int i = 0; i < data.length; ++i) {
+        for (int i = 0;; ++i) {
             data[i] = v.getEntry(i);
         }
     }
2023-07-01 16:49:24 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17347)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17347)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -100,12 +99,14 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        int artificialVar = 0;
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
         if (pivotRow == null) {
-            throw new UnboundedSolutionException();
+            int slackVar = 0;
+			throw new UnboundedSolutionException();
         }
 
         // set the pivot element to 1
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17347)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -146,7 +146,8 @@
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
 
-                // initialize the constraint rows
+                double minValue = 0;
+				// initialize the constraint rows
                 int slackVar = 0;
                 int artificialVar = 0;
                 for (int i = 0; i < constraints.size(); i++) {
@@ -279,7 +280,8 @@
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRowForSolution(final int col) {
-        return getBasicRow(col, false);
+        Integer row = null;
+		return getBasicRow(col, false);
     }
     
     /**
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17347)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17347)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17649)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17649)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17649)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -146,7 +146,8 @@
                         getInvertedCoeffiecientSum(objectiveCoefficients);
                 }
 
-                // initialize the constraint rows
+                double minValue = 0;
+				// initialize the constraint rows
                 int slackVar = 0;
                 int artificialVar = 0;
                 for (int i = 0; i < constraints.size(); i++) {
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17649)
--- org.apache.commons.math.util.MathUtils
+++ org.apache.commons.math.util.MathUtils
@@ -289,7 +289,6 @@
     public static double binomialCoefficientLog(final int n, final int k) {
         checkBinomial(n, k);
         if ((n == k) || (k == 0)) {
-            return 0;
         }
         if ((k == 1) || (k == n - 1)) {
             return Math.log(n);
@@ -365,7 +364,6 @@
      */
     public static int compareTo(double x, double y, double eps) {
         if (equals(x, y, eps)) {
-            return 0;
         } else if (x < y) {
           return -1;
         }
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17649)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17649)
--- org.apache.commons.math.linear.ArrayRealVector
+++ org.apache.commons.math.linear.ArrayRealVector
@@ -243,7 +243,6 @@
     /** {@inheritDoc} */
     public RealVector add(double[] v)
     throws IllegalArgumentException {
-        checkVectorDimensions(v.length);
         double[] out = new double[data.length];
         for (int i = 0; i < data.length; i++) {
             out[i] = data[i] + v[i];
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17649)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17666)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17666)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -100,7 +99,8 @@
     protected void doIteration(final SimplexTableau tableau)
         throws OptimizationException {
 
-        incrementIterationsCounter();
+        int artificialVar = 0;
+		incrementIterationsCounter();
 
         Integer pivotCol = getPivotColumn(tableau);
         Integer pivotRow = getPivotRow(pivotCol, tableau);
@@ -128,7 +128,8 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17666)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -105,6 +105,7 @@
         this.f                      = f;
         this.constraints            = constraints;
         this.restrictToNonNegative  = restrictToNonNegative;
+		Integer minRatioPos = null;
         this.epsilon                = epsilon;
         this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
         this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
@@ -180,7 +181,8 @@
                     }
                 }
 
-                return matrix;
+                copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
+				return matrix;
     }
 
     /** Get the number of variables.
@@ -279,7 +281,8 @@
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRowForSolution(final int col) {
-        return getBasicRow(col, false);
+        Integer row = null;
+		return getBasicRow(col, false);
     }
     
     /**
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v17666)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v20071)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v20071)
--- org.apache.commons.math.optimization.linear.SimplexSolver
+++ org.apache.commons.math.optimization.linear.SimplexSolver
@@ -60,7 +60,6 @@
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }
@@ -128,7 +127,9 @@
      */
     private boolean isPhase1Solved(final SimplexTableau tableau) {
         if (tableau.getNumArtificialVariables() == 0) {
-            return true;
+            setMaxIterations(DEFAULT_MAX_ITERATIONS);
+			Integer minRatioPos = null;
+			return true;
         }
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v20071)
--- org.apache.commons.math.optimization.linear.SimplexTableau
+++ org.apache.commons.math.optimization.linear.SimplexTableau
@@ -105,6 +105,7 @@
         this.f                      = f;
         this.constraints            = constraints;
         this.restrictToNonNegative  = restrictToNonNegative;
+		Integer minRatioPos = null;
         this.epsilon                = epsilon;
         this.numDecisionVariables   = getNumVariables() + (restrictToNonNegative ? 0 : 1);
         this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
@@ -134,7 +135,6 @@
             matrix[0][0] = -1;
         }
         int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;
-        matrix[zIndex][zIndex] = maximize ? 1 : -1;
         RealVector objectiveCoefficients =
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
             copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v20071)
--- org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
+++ org.apache.commons.math.optimization.linear.AbstractLinearOptimizer
@@ -100,8 +100,6 @@
         this.goalType              = goalType;
         this.restrictToNonNegative = restrictToNonNegative;
 
-        iterations  = 0;
-
         // solve the problem
         return doOptimize();
 
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v20071)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-07-01 16:49:25 [main] [INFO]  PatchLogExporter - patch (v20071)
--- org.apache.commons.math.linear.AbstractRealMatrix
+++ org.apache.commons.math.linear.AbstractRealMatrix
@@ -41,7 +41,6 @@
      * Creates a matrix with no data
      */
     protected AbstractRealMatrix() {
-        lu = null;
     }
 
     /**
2023-07-01 16:49:25 [main] [INFO]  KGenProgMain - Summary
Reached generation = 55
Generated variants = 21600
Syntax valid variants = 20157
Build succeeded variants = 9475
Time elapsed = 24 hours 5 minutes 22 seconds
Exit status = FAILURE (time limit)
