2023-04-17 01:23:08 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-04-17 01:23:08 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-04-17 01:23:08 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-04-17 01:23:08 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/fse/Downloads/kGenProg/example/math46/kgenprog-46.toml (set by command line)
rootDir = /Users/fse/Downloads/kGenProg/example/math46 (set in config file)
productPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/main] (set in config file)
testPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.complex.ComplexTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 1000 (set in config file)
timeLimit = PT277H46M40S (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 4 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/fse/Desktop/research
version = 1.8.2
================================================================
2023-04-17 01:23:31 [main] [INFO]  KGenProgMain - initial failed tests (2/116)
org.apache.commons.math.complex.ComplexTest.testDivideZero: expected:<(Infinity, Infinity)> but was:<(NaN, NaN)>
org.apache.commons.math.complex.ComplexTest.testAtanI: null

2023-04-17 01:23:32 [main] [INFO]  KGenProgMain - GA started
2023-04-17 01:23:32 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-04-17 01:23:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 200, build-succeeded 11, build-failed 104, syntax-invalid 4, redundant 81
Fitness: max 0.991(2), min 0.922(1), ave 0.969
Test execution time: sum 9636 ms, max 1456 ms, min 559 ms
----------------------------------------------------------------

2023-04-17 01:23:54 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-04-17 01:24:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 seconds
Variants: generated 200, build-succeeded 25, build-failed 109, syntax-invalid 14, redundant 52
Fitness: max 1(1), min 0.836(1), ave 0.967
Test execution time: sum 14697 ms, max 792 ms, min 408 ms
----------------------------------------------------------------

2023-04-17 01:24:21 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-04-17 01:25:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 9 seconds
Variants: generated 400, build-succeeded 112, build-failed 113, syntax-invalid 24, redundant 151
Fitness: max 1(1), min 0.793(1), ave 0.964
Test execution time: sum 60268 ms, max 889 ms, min 376 ms
----------------------------------------------------------------

2023-04-17 01:25:42 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-04-17 01:27:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 29 seconds
Variants: generated 400, build-succeeded 97, build-failed 131, syntax-invalid 30, redundant 142
Fitness: max 1(1), min 0.871(1), ave 0.976
Test execution time: sum 53892 ms, max 920 ms, min 401 ms
----------------------------------------------------------------

2023-04-17 01:27:01 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-04-17 01:28:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 59 seconds
Variants: generated 400, build-succeeded 100, build-failed 115, syntax-invalid 41, redundant 144
Fitness: max 1(4), min 0.957(1), ave 0.986
Test execution time: sum 63534 ms, max 911 ms, min 404 ms
----------------------------------------------------------------

2023-04-17 01:28:31 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-04-17 01:30:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 44 seconds
Variants: generated 400, build-succeeded 99, build-failed 120, syntax-invalid 50, redundant 131
Fitness: max 1(2), min 0.957(1), ave 0.986
Test execution time: sum 78097 ms, max 1246 ms, min 412 ms
----------------------------------------------------------------

2023-04-17 01:30:17 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-04-17 01:31:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 26 seconds
Variants: generated 400, build-succeeded 110, build-failed 110, syntax-invalid 71, redundant 109
Fitness: max 1(2), min 0.957(2), ave 0.986
Test execution time: sum 75422 ms, max 1029 ms, min 432 ms
----------------------------------------------------------------

2023-04-17 01:31:58 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-04-17 01:33:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 49 seconds
Variants: generated 400, build-succeeded 117, build-failed 106, syntax-invalid 62, redundant 115
Fitness: max 1(6), min 0.922(1), ave 0.988
Test execution time: sum 62645 ms, max 1046 ms, min 393 ms
----------------------------------------------------------------

2023-04-17 01:33:22 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-04-17 01:35:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 36 seconds
Variants: generated 400, build-succeeded 134, build-failed 123, syntax-invalid 70, redundant 73
Fitness: max 1(5), min 0.931(1), ave 0.986
Test execution time: sum 82667 ms, max 951 ms, min 388 ms
----------------------------------------------------------------

2023-04-17 01:35:09 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-04-17 01:36:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 22 seconds
Variants: generated 400, build-succeeded 116, build-failed 110, syntax-invalid 76, redundant 98
Fitness: max 1(5), min 0.957(5), ave 0.988
Test execution time: sum 77759 ms, max 973 ms, min 422 ms
----------------------------------------------------------------

2023-04-17 01:36:54 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-04-17 01:38:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 12 seconds
Variants: generated 400, build-succeeded 114, build-failed 113, syntax-invalid 68, redundant 105
Fitness: max 1(1), min 0.957(1), ave 0.987
Test execution time: sum 82697 ms, max 1056 ms, min 406 ms
----------------------------------------------------------------

2023-04-17 01:38:45 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-04-17 01:40:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 20 seconds
Variants: generated 400, build-succeeded 143, build-failed 114, syntax-invalid 76, redundant 67
Fitness: max 1(4), min 0.845(1), ave 0.987
Test execution time: sum 99453 ms, max 2890 ms, min 397 ms
----------------------------------------------------------------

2023-04-17 01:40:52 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-04-17 01:42:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 8 seconds
Variants: generated 400, build-succeeded 138, build-failed 114, syntax-invalid 66, redundant 82
Fitness: max 1(4), min 0.957(2), ave 0.988
Test execution time: sum 84418 ms, max 918 ms, min 395 ms
----------------------------------------------------------------

2023-04-17 01:42:41 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-04-17 01:44:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 4 seconds
Variants: generated 400, build-succeeded 131, build-failed 109, syntax-invalid 83, redundant 77
Fitness: max 1(5), min 0.922(1), ave 0.987
Test execution time: sum 87767 ms, max 1006 ms, min 405 ms
----------------------------------------------------------------

2023-04-17 01:44:37 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-04-17 01:46:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 11 seconds
Variants: generated 400, build-succeeded 130, build-failed 108, syntax-invalid 92, redundant 70
Fitness: max 1(3), min 0.966(10), ave 0.988
Test execution time: sum 96682 ms, max 994 ms, min 428 ms
----------------------------------------------------------------

2023-04-17 01:46:43 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-04-17 01:48:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 12 seconds
Variants: generated 400, build-succeeded 129, build-failed 103, syntax-invalid 86, redundant 82
Fitness: max 1(2), min 0.957(1), ave 0.989
Test execution time: sum 89014 ms, max 1041 ms, min 419 ms
----------------------------------------------------------------

2023-04-17 01:48:44 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-04-17 01:51:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 29 seconds
Variants: generated 400, build-succeeded 148, build-failed 101, syntax-invalid 78, redundant 73
Fitness: max 1(5), min 0.957(2), ave 0.988
Test execution time: sum 106370 ms, max 3564 ms, min 392 ms
----------------------------------------------------------------

2023-04-17 01:51:02 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-04-17 01:52:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 12 seconds
Variants: generated 400, build-succeeded 124, build-failed 105, syntax-invalid 103, redundant 68
Fitness: max 1(2), min 0.888(1), ave 0.988
Test execution time: sum 75307 ms, max 941 ms, min 408 ms
----------------------------------------------------------------

2023-04-17 01:52:45 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-04-17 01:54:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 19 seconds
Variants: generated 400, build-succeeded 144, build-failed 114, syntax-invalid 80, redundant 62
Fitness: max 1(1), min 0.966(7), ave 0.989
Test execution time: sum 95784 ms, max 1055 ms, min 410 ms
----------------------------------------------------------------

2023-04-17 01:54:51 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-04-17 01:57:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 30 seconds
Variants: generated 400, build-succeeded 137, build-failed 103, syntax-invalid 100, redundant 60
Fitness: max 0.991(122), min 0.966(5), ave 0.99
Test execution time: sum 100634 ms, max 998 ms, min 466 ms
----------------------------------------------------------------

2023-04-17 01:57:03 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-04-17 01:59:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 49 seconds
Variants: generated 400, build-succeeded 146, build-failed 119, syntax-invalid 94, redundant 41
Fitness: max 1(3), min 0.966(6), ave 0.99
Test execution time: sum 107189 ms, max 979 ms, min 398 ms
----------------------------------------------------------------

2023-04-17 01:59:21 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-04-17 02:00:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 19 seconds
Variants: generated 400, build-succeeded 119, build-failed 113, syntax-invalid 112, redundant 56
Fitness: max 1(3), min 0.966(3), ave 0.991
Test execution time: sum 62137 ms, max 978 ms, min 392 ms
----------------------------------------------------------------

2023-04-17 02:00:52 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-04-17 02:02:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 13 seconds
Variants: generated 400, build-succeeded 136, build-failed 98, syntax-invalid 122, redundant 44
Fitness: max 1(3), min 0.966(8), ave 0.989
Test execution time: sum 86268 ms, max 1040 ms, min 404 ms
----------------------------------------------------------------

2023-04-17 02:02:46 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-04-17 02:04:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 20 seconds
Variants: generated 400, build-succeeded 138, build-failed 115, syntax-invalid 98, redundant 49
Fitness: max 1(5), min 0.966(8), ave 0.989
Test execution time: sum 93822 ms, max 946 ms, min 407 ms
----------------------------------------------------------------

2023-04-17 02:04:53 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-04-17 02:06:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 21 seconds
Variants: generated 400, build-succeeded 120, build-failed 117, syntax-invalid 106, redundant 57
Fitness: max 1(6), min 0.957(1), ave 0.99
Test execution time: sum 89586 ms, max 1003 ms, min 424 ms
----------------------------------------------------------------

2023-04-17 02:06:54 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-04-17 02:08:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 14 seconds
Variants: generated 400, build-succeeded 127, build-failed 112, syntax-invalid 97, redundant 64
Fitness: max 1(4), min 0.966(3), ave 0.99
Test execution time: sum 82347 ms, max 1332 ms, min 400 ms
----------------------------------------------------------------

2023-04-17 02:08:47 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-04-17 02:10:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 9 seconds
Variants: generated 400, build-succeeded 132, build-failed 109, syntax-invalid 88, redundant 71
Fitness: max 1(2), min 0.914(1), ave 0.99
Test execution time: sum 84083 ms, max 1046 ms, min 384 ms
----------------------------------------------------------------

2023-04-17 02:10:42 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-04-17 02:13:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 30 seconds
Variants: generated 400, build-succeeded 151, build-failed 107, syntax-invalid 91, redundant 51
Fitness: max 1(3), min 0.966(2), ave 0.99
Test execution time: sum 107113 ms, max 971 ms, min 407 ms
----------------------------------------------------------------

2023-04-17 02:13:02 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-04-17 02:15:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 5 seconds
Variants: generated 400, build-succeeded 164, build-failed 96, syntax-invalid 84, redundant 56
Fitness: max 1(6), min 0.957(2), ave 0.99
Test execution time: sum 119667 ms, max 1185 ms, min 449 ms
----------------------------------------------------------------

2023-04-17 02:15:37 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-04-17 02:17:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 22 seconds
Variants: generated 400, build-succeeded 161, build-failed 115, syntax-invalid 81, redundant 43
Fitness: max 0.991(139), min 0.966(4), ave 0.99
Test execution time: sum 101578 ms, max 1105 ms, min 406 ms
----------------------------------------------------------------

2023-04-17 02:17:55 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-04-17 02:20:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 38 seconds
Variants: generated 400, build-succeeded 146, build-failed 123, syntax-invalid 87, redundant 44
Fitness: max 0.991(132), min 0.966(4), ave 0.99
Test execution time: sum 100338 ms, max 1196 ms, min 400 ms
----------------------------------------------------------------

2023-04-17 02:20:11 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-04-17 02:22:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 15 seconds
Variants: generated 400, build-succeeded 152, build-failed 115, syntax-invalid 90, redundant 43
Fitness: max 1(3), min 0.966(1), ave 0.991
Test execution time: sum 119964 ms, max 1157 ms, min 421 ms
----------------------------------------------------------------

2023-04-17 02:22:48 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-04-17 02:24:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 1 minutes 25 seconds
Variants: generated 400, build-succeeded 167, build-failed 113, syntax-invalid 78, redundant 42
Fitness: max 1(3), min 0.966(1), ave 0.991
Test execution time: sum 99386 ms, max 928 ms, min 403 ms
----------------------------------------------------------------

2023-04-17 02:24:58 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-04-17 02:27:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 32 seconds
Variants: generated 400, build-succeeded 148, build-failed 118, syntax-invalid 86, redundant 48
Fitness: max 1(3), min 0.966(2), ave 0.99
Test execution time: sum 97473 ms, max 1073 ms, min 403 ms
----------------------------------------------------------------

2023-04-17 02:27:05 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-04-17 02:29:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 56 seconds
Variants: generated 400, build-succeeded 146, build-failed 115, syntax-invalid 92, redundant 47
Fitness: max 0.991(126), min 0.914(1), ave 0.989
Test execution time: sum 110434 ms, max 1025 ms, min 417 ms
----------------------------------------------------------------

2023-04-17 02:29:29 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-04-17 02:30:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 33 seconds
Variants: generated 153, build-succeeded 24, build-failed 85, syntax-invalid 23, redundant 21
Fitness: max 1(2), min 0.983(1), ave 0.992
Test execution time: sum 16270 ms, max 1122 ms, min 416 ms
----------------------------------------------------------------

2023-04-17 02:30:06 [main] [INFO]  KGenProgMain - GA stopped
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v289)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v592)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v592)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v592)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v592)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v592)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v592)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v956)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v956)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v956)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v956)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v956)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v956)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v956)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1259)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1259)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1259)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1259)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1259)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final double c = divisor.getReal();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1259)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1265)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1265)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1265)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1265)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1265)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,12 +256,11 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
-            return ZERO;
+            return !isInfinite() ? ZERO : NaN;
         }
 
         final double c = divisor.getReal();
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1265)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1299)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1299)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1299)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1299)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1299)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1299)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1374)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1674)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1674)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1674)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1674)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1674)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:15 [main] [INFO]  PatchLogExporter - patch (v1674)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v1769)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v1769)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v1769)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v1769)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v1769)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v1769)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2050)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2107)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2107)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2107)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2107)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,7 +152,8 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+            context=new HashMap<String, Object>();
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2107)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2107)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2107)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2475)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2475)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2475)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2475)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2475)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2475)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2475)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2485)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2485)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2485)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2485)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2485)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double d = divisor.getImaginary();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2485)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2570)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2644)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2644)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2644)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2644)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2644)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2644)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2650)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2680)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2680)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2680)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2680)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2680)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,12 +256,10 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
-            return ZERO;
+            return !isInfinite() ? ZERO : NaN;
         }
 
         final double c = divisor.getReal();
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2680)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2919)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2919)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2919)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2919)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2919)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            throw new NullArgumentException(LocalizedFormats.REAL_FORMAT);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v2919)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(MathUtils.sinh(real) * FastMath.cos(imaginary),
+					MathUtils.cosh(real) * FastMath.sin(imaginary));
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3039)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3039)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3039)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3039)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3039)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3039)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
@@ -58,7 +57,7 @@
     /** {@inheritDoc} */
     @Override
     public String getMessage() {
-        return context.getMessage();
+        return context.getLocalizedMessage();
     }
 
     /** {@inheritDoc} */
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3039)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
+					-FastMath.sin(real) * MathUtils.sinh(imaginary));
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3098)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3098)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3098)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3098)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3098)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3098)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3259)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3259)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3259)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3259)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3259)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(0.0, 0.0);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3259)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3294)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3337)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3337)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3337)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3337)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3337)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3337)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3390)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3390)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3390)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3390)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3390)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3390)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3597)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3597)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3597)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3597)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3597)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3597)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3597)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3634)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3634)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3634)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3634)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -153,7 +153,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3634)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3634)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return ZERO;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:16 [main] [INFO]  PatchLogExporter - patch (v3634)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4050)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4056)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4056)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4056)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4056)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4056)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4056)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4056)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4189)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4189)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4189)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4189)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        int count = 0;
+		return getMessage(Locale.US);
     }
 
     /**
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4189)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4189)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            throw new NullArgumentException(LocalizedFormats.IMAGINARY_FORMAT);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4189)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4217)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4217)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4217)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4217)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4217)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4421)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4421)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4421)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4421)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4421)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4421)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4421)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4440)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4440)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4440)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4440)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4440)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4440)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4441)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4441)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4441)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4441)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4441)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4441)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4672)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4823)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4823)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4823)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4823)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4823)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4823)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,13 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(MathUtils.sinh(real) * FastMath.cos(imaginary),
+					MathUtils.cosh(real) * FastMath.sin(imaginary));
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4823)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4908)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4908)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4908)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4908)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4908)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4908)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4908)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4977)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4977)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4977)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4977)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -153,7 +153,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4977)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4977)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return ZERO;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v4977)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5014)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5014)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5014)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5014)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5014)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5014)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5014)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5222)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5329)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5329)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5329)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5329)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5329)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5329)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5761)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5761)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5761)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5761)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5761)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5761)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5776)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5776)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5776)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5776)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5776)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        int count = 0;
+		return getMessage(Locale.US);
     }
 
     /**
@@ -153,7 +154,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5776)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5776)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v5776)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6007)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6007)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6007)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6007)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6007)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6007)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6069)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6069)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6069)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6069)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6069)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,17 +251,16 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
-            return ZERO;
+            return !isInfinite() ? ZERO : NaN;
         }
 
         final double c = divisor.getReal();
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:17 [main] [INFO]  PatchLogExporter - patch (v6069)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6121)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6121)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6121)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6121)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,7 +152,8 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+            context=new HashMap<String, Object>();
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6121)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6121)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6121)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6147)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6147)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6147)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6147)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6147)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6147)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6186)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6186)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6186)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6186)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -153,7 +153,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6186)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6186)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return ZERO;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6186)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6502)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6502)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6502)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6502)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -152,7 +151,8 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+            context=new HashMap<String, Object>();
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6502)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6502)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6502)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6598)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6598)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6598)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6598)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6598)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -153,7 +153,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6598)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6598)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6598)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6964)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6964)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6964)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6964)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6964)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6964)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v6964)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7673)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7673)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7673)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7673)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7673)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7673)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
+					-FastMath.sin(real) * MathUtils.sinh(imaginary));
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7673)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7787)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7787)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7787)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7787)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7787)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7787)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v7787)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            throw new NullArgumentException(LocalizedFormats.IMAGINARY_FORMAT);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -153,7 +153,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8287)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8359)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8359)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8359)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8359)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8359)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8359)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8359)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8439)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8439)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8439)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8439)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8439)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8439)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8439)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8579)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8579)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8579)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8579)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8579)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8579)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8619)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8619)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8619)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8619)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,7 +152,8 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+            context=new HashMap<String, Object>();
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8619)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8619)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,17 +251,16 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
-            return ZERO;
+            final List<Complex> result=new ArrayList<Complex>();
+			return ZERO;
         }
 
         final double c = divisor.getReal();
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8619)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8821)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8821)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8821)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8821)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8821)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8821)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8821)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8831)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8865)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8865)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8865)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8865)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        int count = 0;
+		return getMessage(Locale.US);
     }
 
     /**
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8865)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8865)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return sqrt1z().add(this.multiply(I)).log().multiply(I.negate());
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:18 [main] [INFO]  PatchLogExporter - patch (v8865)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8894)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8894)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8894)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8894)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8894)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8894)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8894)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8894)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8915)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8915)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8915)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8915)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8915)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
+			double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v8915)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9255)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9255)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9255)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9255)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9255)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9255)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9255)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9272)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9272)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9272)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9272)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9272)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        int count = 0;
+		return getMessage(Locale.US);
     }
 
     /**
@@ -153,7 +154,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9272)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9272)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9272)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9375)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9375)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9375)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9375)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9375)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -153,7 +153,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9375)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9375)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9375)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9379)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9379)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9379)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9379)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -153,7 +153,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9379)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9379)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,12 +256,12 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
-            return ZERO;
+            final List<Complex> result=new ArrayList<Complex>();
+			return ZERO;
         }
 
         final double c = divisor.getReal();
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9379)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9379)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9382)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9382)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9382)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9382)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9382)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9382)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9382)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9387)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9387)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9387)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9387)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9387)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9387)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9387)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9607)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9607)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9607)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9607)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9607)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        int count = 0;
+		return getMessage(Locale.US);
     }
 
     /**
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9607)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9607)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9607)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9641)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9641)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9641)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9641)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9641)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9641)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,7 +288,7 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
         if (divisor == 0d) {
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9641)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9671)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9671)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9671)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9671)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -153,7 +153,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9671)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9671)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(FastMath.log(abs()), FastMath.atan2(imaginary, real));
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9671)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9681)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9681)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9681)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9681)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9681)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v9681)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10086)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10086)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10086)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10086)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10086)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10086)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            MathUtils.checkNotNull(divisor);
+			return createComplex(FastMath.log(abs()), FastMath.atan2(imaginary, real));
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10086)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10130)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10130)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10130)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10130)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10130)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10130)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10130)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10130)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10460)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10460)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10460)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10460)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10460)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10460)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            MathUtils.checkNotNull(divisor);
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1179,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10460)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10534)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10534)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10534)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10534)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -153,7 +153,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10534)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10534)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10534)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10749)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10749)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10749)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10749)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10749)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -152,7 +151,8 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+            context=new HashMap<String, Object>();
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10749)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10749)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,12 +256,12 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
-            return ZERO;
+            final List<Complex> result=new ArrayList<Complex>();
+			return ZERO;
         }
 
         final double c = divisor.getReal();
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:19 [main] [INFO]  PatchLogExporter - patch (v10749)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10803)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10803)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10803)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10803)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10803)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10803)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10828)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10828)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10828)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10828)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10828)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10828)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,10 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10828)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10828)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -152,7 +151,8 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+            context=new HashMap<String, Object>();
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10833)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,7 +152,8 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+            context=new HashMap<String, Object>();
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10841)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10860)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10860)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10860)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10860)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10860)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10860)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10860)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10927)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10927)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10927)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10927)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10927)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        int count = 0;
+		return getMessage(Locale.US);
     }
 
     /**
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10927)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10927)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v10927)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12059)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12059)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12059)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12059)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        int count = 0;
+		return getMessage(Locale.US);
     }
 
     /**
@@ -153,7 +154,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12059)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12059)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,12 +256,11 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
-            return ZERO;
+            final List<Complex> result=new ArrayList<Complex>();
+			return ZERO;
         }
 
         final double c = divisor.getReal();
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12059)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12075)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12075)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12075)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12075)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12075)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -1180,6 +1179,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12075)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12175)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12175)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12175)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12175)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        int count = 0;
+		return getMessage(Locale.US);
     }
 
     /**
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12175)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12175)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12175)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12401)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12590)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12590)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12590)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12590)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        int count = 0;
+		return getMessage(Locale.US);
     }
 
     /**
@@ -152,7 +153,8 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+            context=new HashMap<String, Object>();
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12590)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12590)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12590)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12594)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12594)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12594)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12594)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12594)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12594)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12594)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,17 +251,17 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
-            return ZERO;
+            final List<Complex> result=new ArrayList<Complex>();
+			return ZERO;
         }
 
         final double c = divisor.getReal();
@@ -293,8 +293,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12594)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12859)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12859)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12859)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12859)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,7 +152,8 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+            context=new HashMap<String, Object>();
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12859)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12859)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12859)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12898)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12898)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12898)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12898)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12898)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12898)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,14 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			MathUtils.checkNotNull(divisor);
+			MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +290,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12898)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12975)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12975)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12975)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12975)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12975)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -153,7 +152,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12975)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12975)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v12975)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v13609)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v13609)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v13609)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v13609)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v13609)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,8 +152,10 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            context=new HashMap<String, Object>();
+			final Object[] args = msgArguments.get(i);
+            final int aLen = args.length;
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v13609)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v13609)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-04-17 02:30:20 [main] [INFO]  PatchLogExporter - patch (v13609)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:21 [main] [INFO]  PatchLogExporter - patch (v13753)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-04-17 02:30:21 [main] [INFO]  PatchLogExporter - patch (v13753)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-04-17 02:30:21 [main] [INFO]  PatchLogExporter - patch (v13753)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-04-17 02:30:21 [main] [INFO]  PatchLogExporter - patch (v13753)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-04-17 02:30:21 [main] [INFO]  PatchLogExporter - patch (v13753)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-04-17 02:30:21 [main] [INFO]  PatchLogExporter - patch (v13753)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,12 +256,12 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
-            return ZERO;
+            final List<Complex> result=new ArrayList<Complex>();
+			return ZERO;
         }
 
         final double c = divisor.getReal();
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-04-17 02:30:21 [main] [INFO]  PatchLogExporter - patch (v13753)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-04-17 02:30:21 [main] [INFO]  PatchLogExporter - patch (v13753)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-04-17 02:30:21 [main] [INFO]  KGenProgMain - Summary
Reached generation = 36
Generated variants = 13753
Syntax valid variants = 11050
Build succeeded variants = 4436
Time elapsed = 1 hours 6 minutes 48 seconds
Exit status = SUCCESS
